package logic

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/azure/go-autorest/autorest"
	"github.com/azure/go-autorest/autorest/date"
)

type KeyType string

const (
	KeyTypeNotSpecified KeyType = "NotSpecified"
	KeyTypePrimary      KeyType = "Primary"
	KeyTypeSecondary    KeyType = "Secondary"
)

type ParameterType string

const (
	ParameterTypeArray        ParameterType = "Array"
	ParameterTypeBool         ParameterType = "Bool"
	ParameterTypeFloat        ParameterType = "Float"
	ParameterTypeInt          ParameterType = "Int"
	ParameterTypeNotSpecified ParameterType = "NotSpecified"
	ParameterTypeObject       ParameterType = "Object"
	ParameterTypeSecureObject ParameterType = "SecureObject"
	ParameterTypeSecureString ParameterType = "SecureString"
	ParameterTypeString       ParameterType = "String"
)

type RecurrenceFrequency string

const (
	Day    RecurrenceFrequency = "Day"
	Hour   RecurrenceFrequency = "Hour"
	Minute RecurrenceFrequency = "Minute"
	Month  RecurrenceFrequency = "Month"
	Second RecurrenceFrequency = "Second"
	Week   RecurrenceFrequency = "Week"
	Year   RecurrenceFrequency = "Year"
)

type SkuName string

const (
	SkuNameBasic        SkuName = "Basic"
	SkuNameFree         SkuName = "Free"
	SkuNameNotSpecified SkuName = "NotSpecified"
	SkuNamePremium      SkuName = "Premium"
	SkuNameShared       SkuName = "Shared"
	SkuNameStandard     SkuName = "Standard"
)

type WorkflowState string

const (
	WorkflowStateDeleted      WorkflowState = "Deleted"
	WorkflowStateDisabled     WorkflowState = "Disabled"
	WorkflowStateEnabled      WorkflowState = "Enabled"
	WorkflowStateNotSpecified WorkflowState = "NotSpecified"
	WorkflowStateSuspended    WorkflowState = "Suspended"
)

type WorkflowStatus string

const (
	WorkflowStatusCancelled    WorkflowStatus = "Cancelled"
	WorkflowStatusFailed       WorkflowStatus = "Failed"
	WorkflowStatusNotSpecified WorkflowStatus = "NotSpecified"
	WorkflowStatusPaused       WorkflowStatus = "Paused"
	WorkflowStatusRunning      WorkflowStatus = "Running"
	WorkflowStatusSkipped      WorkflowStatus = "Skipped"
	WorkflowStatusSucceeded    WorkflowStatus = "Succeeded"
	WorkflowStatusSuspended    WorkflowStatus = "Suspended"
	WorkflowStatusWaiting      WorkflowStatus = "Waiting"
)

type RegenerateSecretKeyParameters struct {
	KeyType KeyType `json:"keyType,omitempty"`
}

type RunWorkflowParameters struct {
	Name    string            `json:"name,omitempty"`
	Outputs map[string]string `json:"outputs,omitempty"`
}

type Workflow struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		CreatedTime    date.Time     `json:"createdTime,omitempty"`
		ChangedTime    date.Time     `json:"changedTime,omitempty"`
		State          WorkflowState `json:"state,omitempty"`
		Version        string        `json:"version,omitempty"`
		AccessEndpoint string        `json:"accessEndpoint,omitempty"`
		Sku            struct {
			Name SkuName `json:"name,omitempty"`
			Plan struct {
				Id   string `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Type string `json:"type,omitempty"`
			} `json:"plan,omitempty"`
		} `json:"sku,omitempty"`
		DefinitionLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"definitionLink,omitempty"`
		Definition     map[string]string `json:"definition,omitempty"`
		ParametersLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"parametersLink,omitempty"`
		Parameters map[string]WorkflowParameter `json:"parameters,omitempty"`
	} `json:"properties,omitempty"`
}

type WorkflowAccessKey struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Properties        struct {
		NotBefore date.Time `json:"notBefore,omitempty"`
		NotAfter  date.Time `json:"notAfter,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Type string `json:"type,omitempty"`
}

type WorkflowAccessKeyListResult struct {
	autorest.Response `json:"-"`
	Value             []WorkflowAccessKey `json:"value,omitempty"`
	NextLink          string              `json:"nextLink,omitempty"`
}

type WorkflowListResult struct {
	autorest.Response `json:"-"`
	Value             []Workflow `json:"value,omitempty"`
	NextLink          string     `json:"nextLink,omitempty"`
}

type WorkflowParameter struct {
	Type     ParameterType     `json:"type,omitempty"`
	Value    map[string]string `json:"value,omitempty"`
	Metadata map[string]string `json:"metadata,omitempty"`
}

type WorkflowRun struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Properties        struct {
		StartTime     date.Time      `json:"startTime,omitempty"`
		EndTime       date.Time      `json:"endTime,omitempty"`
		Status        WorkflowStatus `json:"status,omitempty"`
		CorrelationId string         `json:"correlationId,omitempty"`
		Workflow      struct {
			Id   string `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
			Type string `json:"type,omitempty"`
		} `json:"workflow,omitempty"`
		Trigger struct {
			Name       string            `json:"name,omitempty"`
			Inputs     map[string]string `json:"inputs,omitempty"`
			InputsLink struct {
				Uri            string `json:"uri,omitempty"`
				ContentVersion string `json:"contentVersion,omitempty"`
				ContentSize    int32  `json:"contentSize,omitempty"`
				ContentHash    struct {
					Algorithm string `json:"algorithm,omitempty"`
					Value     string `json:"value,omitempty"`
				} `json:"contentHash,omitempty"`
				Metadata map[string]string `json:"metadata,omitempty"`
			} `json:"inputsLink,omitempty"`
			Outputs     map[string]string `json:"outputs,omitempty"`
			OutputsLink struct {
				Uri            string `json:"uri,omitempty"`
				ContentVersion string `json:"contentVersion,omitempty"`
				ContentSize    int32  `json:"contentSize,omitempty"`
				ContentHash    struct {
					Algorithm string `json:"algorithm,omitempty"`
					Value     string `json:"value,omitempty"`
				} `json:"contentHash,omitempty"`
				Metadata map[string]string `json:"metadata,omitempty"`
			} `json:"outputsLink,omitempty"`
			StartTime  date.Time         `json:"startTime,omitempty"`
			EndTime    date.Time         `json:"endTime,omitempty"`
			TrackingId string            `json:"trackingId,omitempty"`
			Code       string            `json:"code,omitempty"`
			Status     WorkflowStatus    `json:"status,omitempty"`
			Error      map[string]string `json:"error,omitempty"`
		} `json:"trigger,omitempty"`
		Outputs map[string]WorkflowParameter `json:"outputs,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Type string `json:"type,omitempty"`
}

type WorkflowRunAction struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Properties        struct {
		StartTime  date.Time         `json:"startTime,omitempty"`
		EndTime    date.Time         `json:"endTime,omitempty"`
		Status     WorkflowStatus    `json:"status,omitempty"`
		Code       string            `json:"code,omitempty"`
		Error      map[string]string `json:"error,omitempty"`
		TrackingId string            `json:"trackingId,omitempty"`
		InputsLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"inputsLink,omitempty"`
		OutputsLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"outputsLink,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Type string `json:"type,omitempty"`
}

type WorkflowRunActionListResult struct {
	autorest.Response `json:"-"`
	Value             []WorkflowRunAction `json:"value,omitempty"`
	NextLink          string              `json:"nextLink,omitempty"`
}

type WorkflowRunListResult struct {
	autorest.Response `json:"-"`
	Value             []WorkflowRun `json:"value,omitempty"`
	NextLink          string        `json:"nextLink,omitempty"`
}

type WorkflowSecretKeys struct {
	autorest.Response  `json:"-"`
	PrimarySecretKey   string `json:"primarySecretKey,omitempty"`
	SecondarySecretKey string `json:"secondarySecretKey,omitempty"`
}

type WorkflowTrigger struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Properties        struct {
		CreatedTime       date.Time      `json:"createdTime,omitempty"`
		ChangedTime       date.Time      `json:"changedTime,omitempty"`
		State             WorkflowState  `json:"state,omitempty"`
		Status            WorkflowStatus `json:"status,omitempty"`
		LastExecutionTime date.Time      `json:"lastExecutionTime,omitempty"`
		NextExecutionTime date.Time      `json:"nextExecutionTime,omitempty"`
		Recurrence        struct {
			Frequency RecurrenceFrequency `json:"frequency,omitempty"`
			Interval  int                 `json:"interval,omitempty"`
			StartTime date.Time           `json:"startTime,omitempty"`
			TimeZone  string              `json:"timeZone,omitempty"`
		} `json:"recurrence,omitempty"`
		Workflow struct {
			Id   string `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
			Type string `json:"type,omitempty"`
		} `json:"workflow,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Type string `json:"type,omitempty"`
}

type WorkflowTriggerHistory struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Properties        struct {
		StartTime  date.Time         `json:"startTime,omitempty"`
		EndTime    date.Time         `json:"endTime,omitempty"`
		Status     WorkflowStatus    `json:"status,omitempty"`
		Code       string            `json:"code,omitempty"`
		Error      map[string]string `json:"error,omitempty"`
		TrackingId string            `json:"trackingId,omitempty"`
		InputsLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"inputsLink,omitempty"`
		OutputsLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"outputsLink,omitempty"`
		Fired bool `json:"fired,omitempty"`
		Run   struct {
			Id   string `json:"id,omitempty"`
			Name string `json:"name,omitempty"`
			Type string `json:"type,omitempty"`
		} `json:"run,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Type string `json:"type,omitempty"`
}

type WorkflowTriggerHistoryListResult struct {
	autorest.Response `json:"-"`
	Value             []WorkflowTriggerHistory `json:"value,omitempty"`
	NextLink          string                   `json:"nextLink,omitempty"`
}

type WorkflowTriggerListResult struct {
	autorest.Response `json:"-"`
	Value             []WorkflowTrigger `json:"value,omitempty"`
	NextLink          string            `json:"nextLink,omitempty"`
}

type WorkflowVersion struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		CreatedTime    date.Time     `json:"createdTime,omitempty"`
		ChangedTime    date.Time     `json:"changedTime,omitempty"`
		State          WorkflowState `json:"state,omitempty"`
		Version        string        `json:"version,omitempty"`
		AccessEndpoint string        `json:"accessEndpoint,omitempty"`
		Sku            struct {
			Name SkuName `json:"name,omitempty"`
			Plan struct {
				Id   string `json:"id,omitempty"`
				Name string `json:"name,omitempty"`
				Type string `json:"type,omitempty"`
			} `json:"plan,omitempty"`
		} `json:"sku,omitempty"`
		DefinitionLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"definitionLink,omitempty"`
		Definition     map[string]string `json:"definition,omitempty"`
		ParametersLink struct {
			Uri            string `json:"uri,omitempty"`
			ContentVersion string `json:"contentVersion,omitempty"`
			ContentSize    int32  `json:"contentSize,omitempty"`
			ContentHash    struct {
				Algorithm string `json:"algorithm,omitempty"`
				Value     string `json:"value,omitempty"`
			} `json:"contentHash,omitempty"`
			Metadata map[string]string `json:"metadata,omitempty"`
		} `json:"parametersLink,omitempty"`
		Parameters map[string]WorkflowParameter `json:"parameters,omitempty"`
	} `json:"properties,omitempty"`
}
