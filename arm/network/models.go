package network

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/azure/go-autorest/autorest"
)

type ApplicationGatewayCookieBasedAffinity string

const (
	Disabled ApplicationGatewayCookieBasedAffinity = "Disabled"
	Enabled  ApplicationGatewayCookieBasedAffinity = "Enabled"
)

type ApplicationGatewayOperationalState string

const (
	Running  ApplicationGatewayOperationalState = "Running"
	Starting ApplicationGatewayOperationalState = "Starting"
	Stopped  ApplicationGatewayOperationalState = "Stopped"
	Stopping ApplicationGatewayOperationalState = "Stopping"
)

type ApplicationGatewayProtocol string

const (
	ApplicationGatewayProtocolHttp  ApplicationGatewayProtocol = "Http"
	ApplicationGatewayProtocolHttps ApplicationGatewayProtocol = "Https"
)

type ApplicationGatewayRequestRoutingRuleType string

const (
	Basic ApplicationGatewayRequestRoutingRuleType = "Basic"
)

type ApplicationGatewaySkuName string

const (
	StandardLarge  ApplicationGatewaySkuName = "Standard_Large"
	StandardMedium ApplicationGatewaySkuName = "Standard_Medium"
	StandardSmall  ApplicationGatewaySkuName = "Standard_Small"
)

type ApplicationGatewayTier string

const (
	Standard ApplicationGatewayTier = "Standard"
)

type IpAllocationMethod string

const (
	Dynamic IpAllocationMethod = "Dynamic"
	Static  IpAllocationMethod = "Static"
)

type LoadDistribution string

const (
	Default          LoadDistribution = "Default"
	SourceIP         LoadDistribution = "SourceIP"
	SourceIPProtocol LoadDistribution = "SourceIPProtocol"
)

type OperationStatus string

const (
	Failed     OperationStatus = "Failed"
	InProgress OperationStatus = "InProgress"
	Succeeded  OperationStatus = "Succeeded"
)

type ProbeProtocol string

const (
	ProbeProtocolHttp ProbeProtocol = "Http"
	ProbeProtocolTcp  ProbeProtocol = "Tcp"
)

type SecurityRuleAccess string

const (
	Allow SecurityRuleAccess = "Allow"
	Deny  SecurityRuleAccess = "Deny"
)

type SecurityRuleDirection string

const (
	Inbound  SecurityRuleDirection = "Inbound"
	Outbound SecurityRuleDirection = "Outbound"
)

type SecurityRuleProtocol string

const (
	SecurityRuleProtocolAsterisk SecurityRuleProtocol = "*"
	SecurityRuleProtocolTcp      SecurityRuleProtocol = "Tcp"
	SecurityRuleProtocolUdp      SecurityRuleProtocol = "Udp"
)

type TransportProtocol string

const (
	TransportProtocolTcp TransportProtocol = "Tcp"
	TransportProtocolUdp TransportProtocol = "Udp"
)

type UsageUnit string

const (
	Count UsageUnit = "Count"
)

type VirtualNetworkGatewayConnectionType string

const (
	ExpressRoute VirtualNetworkGatewayConnectionType = "ExpressRoute"
	IPsec        VirtualNetworkGatewayConnectionType = "IPsec"
	Vnet2Vnet    VirtualNetworkGatewayConnectionType = "Vnet2Vnet"
	VPNClient    VirtualNetworkGatewayConnectionType = "VPNClient"
)

type VirtualNetworkGatewayType string

const (
	Vpn VirtualNetworkGatewayType = "Vpn"
)

type VpnType string

const (
	PolicyBased VpnType = "PolicyBased"
	RouteBased  VpnType = "RouteBased"
)

// ApplicationGateways resource
type ApplicationGateway struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		Sku struct {
			Name     ApplicationGatewaySkuName `json:"name,omitempty"`
			Tier     ApplicationGatewayTier    `json:"tier,omitempty"`
			Capacity int                       `json:"capacity,omitempty"`
		} `json:"sku,omitempty"`
		OperationalState              ApplicationGatewayOperationalState          `json:"operationalState,omitempty"`
		GatewayIpConfigurations       []ApplicationGatewayIpConfiguration         `json:"gatewayIpConfigurations,omitempty"`
		SslCertificates               []ApplicationGatewaySslCertificate          `json:"sslCertificates,omitempty"`
		FrontendIpConfigurations      []ApplicationGatewayFrontendIpConfiguration `json:"frontendIpConfigurations,omitempty"`
		FrontendPorts                 []ApplicationGatewayFrontendPort            `json:"frontendPorts,omitempty"`
		BackendAddressPools           []ApplicationGatewayBackendAddressPool      `json:"backendAddressPools,omitempty"`
		BackendHttpSettingsCollection []ApplicationGatewayBackendHttpSettings     `json:"backendHttpSettingsCollection,omitempty"`
		HttpListeners                 []ApplicationGatewayHttpListener            `json:"httpListeners,omitempty"`
		RequestRoutingRules           []ApplicationGatewayRequestRoutingRule      `json:"requestRoutingRules,omitempty"`
		ProvisioningState             string                                      `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Backend Address of application gateway
type ApplicationGatewayBackendAddress struct {
	Fqdn      string `json:"fqdn,omitempty"`
	IpAddress string `json:"ipAddress,omitempty"`
}

// Backend Address Pool of application gateway
type ApplicationGatewayBackendAddressPool struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		BackendIpConfigurations []SubResource                      `json:"backendIpConfigurations,omitempty"`
		BackendAddresses        []ApplicationGatewayBackendAddress `json:"backendAddresses,omitempty"`
		ProvisioningState       string                             `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Backend address pool settings of application gateway
type ApplicationGatewayBackendHttpSettings struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		Port                int                                   `json:"port,omitempty"`
		Protocol            ApplicationGatewayProtocol            `json:"protocol,omitempty"`
		CookieBasedAffinity ApplicationGatewayCookieBasedAffinity `json:"cookieBasedAffinity,omitempty"`
		ProvisioningState   string                                `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Frontend IP configuration of application gateway
type ApplicationGatewayFrontendIpConfiguration struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		PrivateIPAddress          string             `json:"privateIPAddress,omitempty"`
		PrivateIPAllocationMethod IpAllocationMethod `json:"privateIPAllocationMethod,omitempty"`
		Subnet                    struct {
			Id string `json:"id,omitempty"`
		} `json:"subnet,omitempty"`
		PublicIPAddress struct {
			Id string `json:"id,omitempty"`
		} `json:"publicIPAddress,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Frontend Port of application gateway
type ApplicationGatewayFrontendPort struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		Port              int    `json:"port,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Http listener of application gateway
type ApplicationGatewayHttpListener struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		FrontendIpConfiguration struct {
			Id string `json:"id,omitempty"`
		} `json:"frontendIpConfiguration,omitempty"`
		FrontendPort struct {
			Id string `json:"id,omitempty"`
		} `json:"frontendPort,omitempty"`
		Protocol       ApplicationGatewayProtocol `json:"protocol,omitempty"`
		SslCertificate struct {
			Id string `json:"id,omitempty"`
		} `json:"sslCertificate,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// IP configuration of application gateway
type ApplicationGatewayIpConfiguration struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		Subnet struct {
			Id string `json:"id,omitempty"`
		} `json:"subnet,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListLoadBalancers Api service call
type ApplicationGatewayListResult struct {
	autorest.Response `json:"-"`
	Value             []ApplicationGateway `json:"value,omitempty"`
	NextLink          string               `json:"nextLink,omitempty"`
}

// Request routing rule of application gateway
type ApplicationGatewayRequestRoutingRule struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		RuleType           ApplicationGatewayRequestRoutingRuleType `json:"ruleType,omitempty"`
		BackendAddressPool struct {
			Id string `json:"id,omitempty"`
		} `json:"backendAddressPool,omitempty"`
		BackendHttpSettings struct {
			Id string `json:"id,omitempty"`
		} `json:"backendHttpSettings,omitempty"`
		HttpListener struct {
			Id string `json:"id,omitempty"`
		} `json:"httpListener,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// SSL certificates of application gateway
type ApplicationGatewaySslCertificate struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		Data              string `json:"data,omitempty"`
		Password          string `json:"password,omitempty"`
		PublicCertData    string `json:"publicCertData,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Pool of backend IP addresseses
type BackendAddressPool struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		BackendIPConfigurations []SubResource `json:"backendIPConfigurations,omitempty"`
		LoadBalancingRules      []SubResource `json:"loadBalancingRules,omitempty"`
		ProvisioningState       string        `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

type ConnectionResetSharedKey struct {
	autorest.Response `json:"-"`
	Properties        struct {
		KeyLength int32 `json:"keyLength,omitempty"`
	} `json:"properties,omitempty"`
}

// Response for GetConnectionSharedKey Api servive call
type ConnectionSharedKey struct {
	autorest.Response `json:"-"`
	Value             string `json:"value,omitempty"`
}

// Response for CheckDnsNameAvailability Api servive call
type DnsNameAvailabilityResult struct {
	autorest.Response `json:"-"`
	Available         bool `json:"available,omitempty"`
}

// Frontend IP address of the load balancer
type FrontendIpConfiguration struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		PrivateIPAddress          string             `json:"privateIPAddress,omitempty"`
		PrivateIPAllocationMethod IpAllocationMethod `json:"privateIPAllocationMethod,omitempty"`
		Subnet                    struct {
			Id string `json:"id,omitempty"`
		} `json:"subnet,omitempty"`
		PublicIPAddress struct {
			Id string `json:"id,omitempty"`
		} `json:"publicIPAddress,omitempty"`
		InboundNatRules    []SubResource `json:"inboundNatRules,omitempty"`
		LoadBalancingRules []SubResource `json:"loadBalancingRules,omitempty"`
		ProvisioningState  string        `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Inbound NAT rule of the loadbalancer
type InboundNatRule struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		FrontendIPConfiguration struct {
			Id string `json:"id,omitempty"`
		} `json:"frontendIPConfiguration,omitempty"`
		BackendIPConfiguration struct {
			Id string `json:"id,omitempty"`
		} `json:"backendIPConfiguration,omitempty"`
		Protocol             TransportProtocol `json:"protocol,omitempty"`
		FrontendPort         int               `json:"frontendPort,omitempty"`
		BackendPort          int               `json:"backendPort,omitempty"`
		IdleTimeoutInMinutes int               `json:"idleTimeoutInMinutes,omitempty"`
		EnableFloatingIP     bool              `json:"enableFloatingIP,omitempty"`
		ProvisioningState    string            `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// LoadBalancer resource
type LoadBalancer struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		FrontendIPConfigurations []FrontendIpConfiguration `json:"frontendIPConfigurations,omitempty"`
		BackendAddressPools      []BackendAddressPool      `json:"backendAddressPools,omitempty"`
		LoadBalancingRules       []LoadBalancingRule       `json:"loadBalancingRules,omitempty"`
		Probes                   []Probe                   `json:"probes,omitempty"`
		InboundNatRules          []InboundNatRule          `json:"inboundNatRules,omitempty"`
		ProvisioningState        string                    `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListLoadBalancers Api service call
type LoadBalancerListResult struct {
	autorest.Response `json:"-"`
	Value             []LoadBalancer `json:"value,omitempty"`
	NextLink          string         `json:"nextLink,omitempty"`
}

// Rules of the load balancer
type LoadBalancingRule struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		FrontendIPConfiguration struct {
			Id string `json:"id,omitempty"`
		} `json:"frontendIPConfiguration,omitempty"`
		BackendAddressPool struct {
			Id string `json:"id,omitempty"`
		} `json:"backendAddressPool,omitempty"`
		Probe struct {
			Id string `json:"id,omitempty"`
		} `json:"probe,omitempty"`
		Protocol             TransportProtocol `json:"protocol,omitempty"`
		LoadDistribution     LoadDistribution  `json:"loadDistribution,omitempty"`
		FrontendPort         int               `json:"frontendPort,omitempty"`
		BackendPort          int               `json:"backendPort,omitempty"`
		IdleTimeoutInMinutes int               `json:"idleTimeoutInMinutes,omitempty"`
		EnableFloatingIP     bool              `json:"enableFloatingIP,omitempty"`
		ProvisioningState    string            `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// A common class for general resource information
type LocalNetworkGateway struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		LocalNetworkAddressSpace struct {
			AddressPrefixes []string `json:"addressPrefixes,omitempty"`
		} `json:"localNetworkAddressSpace,omitempty"`
		GatewayIpAddress  string `json:"gatewayIpAddress,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListLocalNetworkGateways Api service call
type LocalNetworkGatewayListResult struct {
	autorest.Response `json:"-"`
	Value             []LocalNetworkGateway `json:"value,omitempty"`
	NextLink          string                `json:"nextLink,omitempty"`
}

// A NetworkInterface in a resource group
type NetworkInterface struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		VirtualMachine struct {
			Id string `json:"id,omitempty"`
		} `json:"virtualMachine,omitempty"`
		NetworkSecurityGroup struct {
			Id string `json:"id,omitempty"`
		} `json:"networkSecurityGroup,omitempty"`
		IpConfigurations []NetworkInterfaceIpConfiguration `json:"ipConfigurations,omitempty"`
		DnsSettings      struct {
			DnsServers           []string `json:"dnsServers,omitempty"`
			AppliedDnsServers    []string `json:"appliedDnsServers,omitempty"`
			InternalDnsNameLabel string   `json:"internalDnsNameLabel,omitempty"`
			InternalFqdn         string   `json:"internalFqdn,omitempty"`
		} `json:"dnsSettings,omitempty"`
		MacAddress        string `json:"macAddress,omitempty"`
		Primary           bool   `json:"primary,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// IPConfiguration in a NetworkInterface
type NetworkInterfaceIpConfiguration struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		PrivateIPAddress          string             `json:"privateIPAddress,omitempty"`
		PrivateIPAllocationMethod IpAllocationMethod `json:"privateIPAllocationMethod,omitempty"`
		Subnet                    struct {
			Id string `json:"id,omitempty"`
		} `json:"subnet,omitempty"`
		PublicIPAddress struct {
			Id string `json:"id,omitempty"`
		} `json:"publicIPAddress,omitempty"`
		LoadBalancerBackendAddressPools []SubResource `json:"loadBalancerBackendAddressPools,omitempty"`
		LoadBalancerInboundNatRules     []SubResource `json:"loadBalancerInboundNatRules,omitempty"`
		ProvisioningState               string        `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListNetworkInterface Api service call
type NetworkInterfaceListResult struct {
	autorest.Response `json:"-"`
	Value             []NetworkInterface `json:"value,omitempty"`
	NextLink          string             `json:"nextLink,omitempty"`
}

// NetworkSecurityGroup resource
type NetworkSecurityGroup struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		SecurityRules        []SecurityRule `json:"securityRules,omitempty"`
		DefaultSecurityRules []SecurityRule `json:"defaultSecurityRules,omitempty"`
		NetworkInterfaces    []SubResource  `json:"networkInterfaces,omitempty"`
		Subnets              []SubResource  `json:"subnets,omitempty"`
		ProvisioningState    string         `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListNetworkSecurityGroups Api servive call
type NetworkSecurityGroupListResult struct {
	autorest.Response `json:"-"`
	Value             []NetworkSecurityGroup `json:"value,omitempty"`
	NextLink          string                 `json:"nextLink,omitempty"`
}

// Load balancer Probe
type Probe struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		LoadBalancingRules []SubResource `json:"loadBalancingRules,omitempty"`
		Protocol           ProbeProtocol `json:"protocol,omitempty"`
		Port               int           `json:"port,omitempty"`
		IntervalInSeconds  int           `json:"intervalInSeconds,omitempty"`
		NumberOfProbes     int           `json:"numberOfProbes,omitempty"`
		RequestPath        string        `json:"requestPath,omitempty"`
		ProvisioningState  string        `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// PublicIPAddress resource
type PublicIpAddress struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		PublicIPAllocationMethod IpAllocationMethod `json:"publicIPAllocationMethod,omitempty"`
		IpConfiguration          struct {
			Id string `json:"id,omitempty"`
		} `json:"ipConfiguration,omitempty"`
		DnsSettings struct {
			DomainNameLabel string `json:"domainNameLabel,omitempty"`
			Fqdn            string `json:"fqdn,omitempty"`
			ReverseFqdn     string `json:"reverseFqdn,omitempty"`
		} `json:"dnsSettings,omitempty"`
		IpAddress            string `json:"ipAddress,omitempty"`
		IdleTimeoutInMinutes int    `json:"idleTimeoutInMinutes,omitempty"`
		ProvisioningState    string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListPublicIpAddresses Api service call
type PublicIpAddressListResult struct {
	autorest.Response `json:"-"`
	Value             []PublicIpAddress `json:"value,omitempty"`
	NextLink          string            `json:"nextLink,omitempty"`
}

// Network security rule
type SecurityRule struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Properties        struct {
		Description              string                `json:"description,omitempty"`
		Protocol                 SecurityRuleProtocol  `json:"protocol,omitempty"`
		SourcePortRange          string                `json:"sourcePortRange,omitempty"`
		DestinationPortRange     string                `json:"destinationPortRange,omitempty"`
		SourceAddressPrefix      string                `json:"sourceAddressPrefix,omitempty"`
		DestinationAddressPrefix string                `json:"destinationAddressPrefix,omitempty"`
		Access                   SecurityRuleAccess    `json:"access,omitempty"`
		Priority                 int                   `json:"priority,omitempty"`
		Direction                SecurityRuleDirection `json:"direction,omitempty"`
		ProvisioningState        string                `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListSecurityRule Api service callRetrieves all security rules
// that belongs to a network security group
type SecurityRuleListResult struct {
	autorest.Response `json:"-"`
	Value             []SecurityRule `json:"value,omitempty"`
	NextLink          string         `json:"nextLink,omitempty"`
}

// Subnet in a VirtualNework resource
type Subnet struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Properties        struct {
		AddressPrefix        string `json:"addressPrefix,omitempty"`
		NetworkSecurityGroup struct {
			Id string `json:"id,omitempty"`
		} `json:"networkSecurityGroup,omitempty"`
		IpConfigurations  []SubResource `json:"ipConfigurations,omitempty"`
		ProvisioningState string        `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListSubnets Api service callRetrieves all subnet that belongs
// to a virtual network
type SubnetListResult struct {
	autorest.Response `json:"-"`
	Value             []Subnet `json:"value,omitempty"`
	NextLink          string   `json:"nextLink,omitempty"`
}

type SubResource struct {
	Id string `json:"id,omitempty"`
}

// Describes Network Resource Usage.
type Usage struct {
	Unit         UsageUnit `json:"unit,omitempty"`
	CurrentValue int       `json:"currentValue,omitempty"`
	Limit        int32     `json:"limit,omitempty"`
	Name         struct {
		Value          string `json:"value,omitempty"`
		LocalizedValue string `json:"localizedValue,omitempty"`
	} `json:"name,omitempty"`
}

// The List Usages operation response.
type UsagesListResult struct {
	autorest.Response `json:"-"`
	Value             []Usage `json:"value,omitempty"`
}

// Virtual Network resource
type VirtualNetwork struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		AddressSpace struct {
			AddressPrefixes []string `json:"addressPrefixes,omitempty"`
		} `json:"addressSpace,omitempty"`
		DhcpOptions struct {
			DnsServers []string `json:"dnsServers,omitempty"`
		} `json:"dhcpOptions,omitempty"`
		Subnets           []Subnet `json:"subnets,omitempty"`
		ProvisioningState string   `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// A common class for general resource information
type VirtualNetworkGateway struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		IpConfigurations  []VirtualNetworkGatewayIpConfiguration `json:"ipConfigurations,omitempty"`
		GatewayType       VirtualNetworkGatewayType              `json:"gatewayType,omitempty"`
		VpnType           VpnType                                `json:"vpnType,omitempty"`
		EnableBgp         bool                                   `json:"enableBgp,omitempty"`
		ProvisioningState string                                 `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// A common class for general resource information
type VirtualNetworkGatewayConnection struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Name              string            `json:"name,omitempty"`
	Type              string            `json:"type,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		VirtualNetworkGateway1 struct {
			Id         string            `json:"id,omitempty"`
			Name       string            `json:"name,omitempty"`
			Type       string            `json:"type,omitempty"`
			Location   string            `json:"location,omitempty"`
			Tags       map[string]string `json:"tags,omitempty"`
			Properties struct {
				IpConfigurations  []VirtualNetworkGatewayIpConfiguration `json:"ipConfigurations,omitempty"`
				GatewayType       VirtualNetworkGatewayType              `json:"gatewayType,omitempty"`
				VpnType           VpnType                                `json:"vpnType,omitempty"`
				EnableBgp         bool                                   `json:"enableBgp,omitempty"`
				ProvisioningState string                                 `json:"provisioningState,omitempty"`
			} `json:"properties,omitempty"`
			Etag string `json:"etag,omitempty"`
		} `json:"virtualNetworkGateway1,omitempty"`
		VirtualNetworkGateway2 struct {
			Id         string            `json:"id,omitempty"`
			Name       string            `json:"name,omitempty"`
			Type       string            `json:"type,omitempty"`
			Location   string            `json:"location,omitempty"`
			Tags       map[string]string `json:"tags,omitempty"`
			Properties struct {
				IpConfigurations  []VirtualNetworkGatewayIpConfiguration `json:"ipConfigurations,omitempty"`
				GatewayType       VirtualNetworkGatewayType              `json:"gatewayType,omitempty"`
				VpnType           VpnType                                `json:"vpnType,omitempty"`
				EnableBgp         bool                                   `json:"enableBgp,omitempty"`
				ProvisioningState string                                 `json:"provisioningState,omitempty"`
			} `json:"properties,omitempty"`
			Etag string `json:"etag,omitempty"`
		} `json:"virtualNetworkGateway2,omitempty"`
		LocalNetworkGateway2 struct {
			Id         string            `json:"id,omitempty"`
			Name       string            `json:"name,omitempty"`
			Type       string            `json:"type,omitempty"`
			Location   string            `json:"location,omitempty"`
			Tags       map[string]string `json:"tags,omitempty"`
			Properties struct {
				LocalNetworkAddressSpace struct {
					AddressPrefixes []string `json:"addressPrefixes,omitempty"`
				} `json:"localNetworkAddressSpace,omitempty"`
				GatewayIpAddress  string `json:"gatewayIpAddress,omitempty"`
				ProvisioningState string `json:"provisioningState,omitempty"`
			} `json:"properties,omitempty"`
			Etag string `json:"etag,omitempty"`
		} `json:"localNetworkGateway2,omitempty"`
		ConnectionType    VirtualNetworkGatewayConnectionType `json:"connectionType,omitempty"`
		RoutingWeight     int                                 `json:"routingWeight,omitempty"`
		SharedKey         string                              `json:"sharedKey,omitempty"`
		ProvisioningState string                              `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListVirtualNetworkGatewayConnections Api service call
type VirtualNetworkGatewayConnectionListResult struct {
	autorest.Response `json:"-"`
	Value             []VirtualNetworkGatewayConnection `json:"value,omitempty"`
	NextLink          string                            `json:"nextLink,omitempty"`
}

// IpConfiguration for Virtual network gateway
type VirtualNetworkGatewayIpConfiguration struct {
	Id         string `json:"id,omitempty"`
	Properties struct {
		PrivateIPAddress          string             `json:"privateIPAddress,omitempty"`
		PrivateIPAllocationMethod IpAllocationMethod `json:"privateIPAllocationMethod,omitempty"`
		Subnet                    struct {
			Id string `json:"id,omitempty"`
		} `json:"subnet,omitempty"`
		PublicIPAddress struct {
			Id string `json:"id,omitempty"`
		} `json:"publicIPAddress,omitempty"`
		ProvisioningState string `json:"provisioningState,omitempty"`
	} `json:"properties,omitempty"`
	Name string `json:"name,omitempty"`
	Etag string `json:"etag,omitempty"`
}

// Response for ListVirtualNetworkGateways Api service call
type VirtualNetworkGatewayListResult struct {
	autorest.Response `json:"-"`
	Value             []VirtualNetworkGateway `json:"value,omitempty"`
	NextLink          string                  `json:"nextLink,omitempty"`
}

// Response for ListVirtualNetworks Api servive call
type VirtualNetworkListResult struct {
	autorest.Response `json:"-"`
	Value             []VirtualNetwork `json:"value,omitempty"`
	NextLink          string           `json:"nextLink,omitempty"`
}
