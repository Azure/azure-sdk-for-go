package scheduler

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/azure/go-autorest/autorest"
	"github.com/azure/go-autorest/autorest/date"
)

type DayOfWeek string

const (
	DayOfWeekFriday    DayOfWeek = "Friday"
	DayOfWeekMonday    DayOfWeek = "Monday"
	DayOfWeekSaturday  DayOfWeek = "Saturday"
	DayOfWeekSunday    DayOfWeek = "Sunday"
	DayOfWeekThursday  DayOfWeek = "Thursday"
	DayOfWeekTuesday   DayOfWeek = "Tuesday"
	DayOfWeekWednesday DayOfWeek = "Wednesday"
)

type HttpAuthenticationType string

const (
	ActiveDirectoryOAuth HttpAuthenticationType = "ActiveDirectoryOAuth"
	Basic                HttpAuthenticationType = "Basic"
	ClientCertificate    HttpAuthenticationType = "ClientCertificate"
	NotSpecified         HttpAuthenticationType = "NotSpecified"
)

type JobActionType string

const (
	Http         JobActionType = "Http"
	Https        JobActionType = "Https"
	StorageQueue JobActionType = "StorageQueue"
)

type JobCollectionState string

const (
	JobCollectionStateDeleted   JobCollectionState = "Deleted"
	JobCollectionStateDisabled  JobCollectionState = "Disabled"
	JobCollectionStateEnabled   JobCollectionState = "Enabled"
	JobCollectionStateSuspended JobCollectionState = "Suspended"
)

type JobExecutionStatus string

const (
	JobExecutionStatusCallbackNotFound JobExecutionStatus = "CallbackNotFound"
	JobExecutionStatusCancelled        JobExecutionStatus = "Cancelled"
	JobExecutionStatusCompleted        JobExecutionStatus = "Completed"
	JobExecutionStatusFailed           JobExecutionStatus = "Failed"
	JobExecutionStatusPostponed        JobExecutionStatus = "Postponed"
)

type JobHistoryActionName string

const (
	ErrorAction JobHistoryActionName = "ErrorAction"
	MainAction  JobHistoryActionName = "MainAction"
)

type JobScheduleDay string

const (
	JobScheduleDayFriday    JobScheduleDay = "Friday"
	JobScheduleDayMonday    JobScheduleDay = "Monday"
	JobScheduleDaySaturday  JobScheduleDay = "Saturday"
	JobScheduleDaySunday    JobScheduleDay = "Sunday"
	JobScheduleDayThursday  JobScheduleDay = "Thursday"
	JobScheduleDayTuesday   JobScheduleDay = "Tuesday"
	JobScheduleDayWednesday JobScheduleDay = "Wednesday"
)

type JobState string

const (
	JobStateCompleted JobState = "Completed"
	JobStateDisabled  JobState = "Disabled"
	JobStateEnabled   JobState = "Enabled"
	JobStateFaulted   JobState = "Faulted"
)

type RecurrenceFrequency string

const (
	Day    RecurrenceFrequency = "Day"
	Hour   RecurrenceFrequency = "Hour"
	Minute RecurrenceFrequency = "Minute"
	Month  RecurrenceFrequency = "Month"
	Week   RecurrenceFrequency = "Week"
)

type RetryType string

const (
	Fixed RetryType = "Fixed"
	None  RetryType = "None"
)

type SkuDefinition string

const (
	Free     SkuDefinition = "Free"
	Premium  SkuDefinition = "Premium"
	Standard SkuDefinition = "Standard"
)

type JobCollectionDefinition struct {
	autorest.Response `json:"-"`
	Id                string            `json:"id,omitempty"`
	Type              string            `json:"type,omitempty"`
	Name              string            `json:"name,omitempty"`
	Location          string            `json:"location,omitempty"`
	Tags              map[string]string `json:"tags,omitempty"`
	Properties        struct {
		Sku struct {
			Name SkuDefinition `json:"name,omitempty"`
		} `json:"sku,omitempty"`
		State JobCollectionState `json:"state,omitempty"`
		Quota struct {
			MaxJobCount      int `json:"maxJobCount,omitempty"`
			MaxJobOccurrence int `json:"maxJobOccurrence,omitempty"`
			MaxRecurrence    struct {
				Frequency RecurrenceFrequency `json:"frequency,omitempty"`
				Interval  int                 `json:"interval,omitempty"`
			} `json:"maxRecurrence,omitempty"`
		} `json:"quota,omitempty"`
	} `json:"properties,omitempty"`
}

type JobCollectionListResult struct {
	autorest.Response `json:"-"`
	Value             []JobCollectionDefinition `json:"value,omitempty"`
	NextLink          string                    `json:"nextLink,omitempty"`
}

type JobDefinition struct {
	autorest.Response `json:"-"`
	Id                string `json:"id,omitempty"`
	Type              string `json:"type,omitempty"`
	Name              string `json:"name,omitempty"`
	Properties        struct {
		StartTime date.Time `json:"startTime,omitempty"`
		Action    struct {
			Type    JobActionType `json:"type,omitempty"`
			Request struct {
				HttpAuthentication struct {
					Type HttpAuthenticationType `json:"type,omitempty"`
				} `json:"httpAuthentication,omitempty"`
				Uri     string            `json:"uri,omitempty"`
				Method  string            `json:"method,omitempty"`
				Body    string            `json:"body,omitempty"`
				Headers map[string]string `json:"headers,omitempty"`
			} `json:"request,omitempty"`
			QueueMessage struct {
				StorageAccount string `json:"storageAccount,omitempty"`
				QueueName      string `json:"queueName,omitempty"`
				SasToken       string `json:"sasToken,omitempty"`
				Message        string `json:"message,omitempty"`
			} `json:"queueMessage,omitempty"`
			RetryPolicy struct {
				RetryType     RetryType `json:"retryType,omitempty"`
				RetryInterval int       `json:"retryInterval,omitempty"`
				RetryCount    int       `json:"retryCount,omitempty"`
			} `json:"retryPolicy,omitempty"`
			ErrorAction struct {
				Type    JobActionType `json:"type,omitempty"`
				Request struct {
					HttpAuthentication struct {
						Type HttpAuthenticationType `json:"type,omitempty"`
					} `json:"httpAuthentication,omitempty"`
					Uri     string            `json:"uri,omitempty"`
					Method  string            `json:"method,omitempty"`
					Body    string            `json:"body,omitempty"`
					Headers map[string]string `json:"headers,omitempty"`
				} `json:"request,omitempty"`
				QueueMessage struct {
					StorageAccount string `json:"storageAccount,omitempty"`
					QueueName      string `json:"queueName,omitempty"`
					SasToken       string `json:"sasToken,omitempty"`
					Message        string `json:"message,omitempty"`
				} `json:"queueMessage,omitempty"`
				RetryPolicy struct {
					RetryType     RetryType `json:"retryType,omitempty"`
					RetryInterval int       `json:"retryInterval,omitempty"`
					RetryCount    int       `json:"retryCount,omitempty"`
				} `json:"retryPolicy,omitempty"`
			} `json:"errorAction,omitempty"`
		} `json:"action,omitempty"`
		Recurrence struct {
			Frequency RecurrenceFrequency `json:"frequency,omitempty"`
			Interval  int                 `json:"interval,omitempty"`
			Count     int                 `json:"count,omitempty"`
			EndTime   date.Time           `json:"endTime,omitempty"`
			Schedule  struct {
				WeekDays           []DayOfWeek                              `json:"weekDays,omitempty"`
				Hours              []int                                    `json:"hours,omitempty"`
				Minutes            []int                                    `json:"minutes,omitempty"`
				MonthDays          []int                                    `json:"monthDays,omitempty"`
				MonthlyOccurrences []JobRecurrenceScheduleMonthlyOccurrence `json:"monthlyOccurrences,omitempty"`
			} `json:"schedule,omitempty"`
		} `json:"recurrence,omitempty"`
		State  JobState `json:"state,omitempty"`
		Status struct {
			ExecutionCount    int       `json:"executionCount,omitempty"`
			FailureCount      int       `json:"failureCount,omitempty"`
			FaultedCount      int       `json:"faultedCount,omitempty"`
			LastExecutionTime date.Time `json:"lastExecutionTime,omitempty"`
			NextExecutionTime date.Time `json:"nextExecutionTime,omitempty"`
		} `json:"status,omitempty"`
	} `json:"properties,omitempty"`
}

type JobHistoryDefinition struct {
	Id         string `json:"id,omitempty"`
	Type       string `json:"type,omitempty"`
	Name       string `json:"name,omitempty"`
	Properties struct {
		StartTime             date.Time            `json:"startTime,omitempty"`
		EndTime               date.Time            `json:"endTime,omitempty"`
		ExpectedExecutionTime date.Time            `json:"expectedExecutionTime,omitempty"`
		ActionName            JobHistoryActionName `json:"actionName,omitempty"`
		Status                JobExecutionStatus   `json:"status,omitempty"`
		Message               string               `json:"message,omitempty"`
		RetryCount            int                  `json:"retryCount,omitempty"`
		RepeatCount           int                  `json:"repeatCount,omitempty"`
	} `json:"properties,omitempty"`
}

type JobHistoryListResult struct {
	autorest.Response `json:"-"`
	Value             []JobHistoryDefinition `json:"value,omitempty"`
	NextLink          string                 `json:"nextLink,omitempty"`
}

type JobListResult struct {
	autorest.Response `json:"-"`
	Value             []JobDefinition `json:"value,omitempty"`
	NextLink          string          `json:"nextLink,omitempty"`
}

type JobRecurrenceScheduleMonthlyOccurrence struct {
	Day        JobScheduleDay `json:"day,omitempty"`
	Occurrence int            `json:"Occurrence,omitempty"`
}
