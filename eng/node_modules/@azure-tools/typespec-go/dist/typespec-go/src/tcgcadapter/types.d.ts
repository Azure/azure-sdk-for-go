import * as tcgc from '@azure-tools/typespec-client-generator-core';
import * as go from '../../../codemodel.go/src/index.js';
export declare class typeAdapter {
    readonly codeModel: go.CodeModel;
    private types;
    private constValues;
    constructor(codeModel: go.CodeModel);
    adaptTypes(sdkContext: tcgc.SdkContext): void;
    private getPagedResponses;
    getPossibleType(type: tcgc.SdkType, elementTypeByValue: boolean, substituteDiscriminator: boolean): go.PossibleType;
    private getTimeType;
    getReadSeekCloser(sliceOf: boolean): go.PossibleType;
    getMultipartContent(sliceOf: boolean): go.PossibleType;
    private getBuiltInType;
    private getConstantType;
    private getInterfaceType;
    private getModel;
    private getDiscriminatorLiteral;
    private getModelField;
    private getConstantValues;
    private adaptBytesType;
    private getLiteralValue;
}
export declare function getEndpointType(param: tcgc.SdkEndpointParameter): tcgc.SdkEndpointType;
export declare function isTypePassedByValue(type: tcgc.SdkType): boolean;
export declare function adaptXMLInfo(decorators: Array<tcgc.DecoratorInfo>, field?: go.ModelField): go.XMLInfo | undefined;
//# sourceMappingURL=types.d.ts.map