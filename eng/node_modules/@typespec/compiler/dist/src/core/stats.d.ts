export interface Stats {
    complexity: ComplexityStats;
    runtime: RuntimeStats;
}
export interface ComplexityStats {
    createdTypes: number;
    finishedTypes: number;
}
export interface RuntimeStats {
    total: number;
    loader: number;
    resolver: number;
    checker: number;
    validation: {
        total: number;
        validators: {
            [validator: string]: number;
        };
    };
    linter: {
        total: number;
        rules: {
            [rule: string]: number;
        };
    };
    emit: {
        total: number;
        emitters: {
            [rule: string]: number;
        };
    };
}
export interface Timer {
    end: () => number;
}
export declare function startTimer(): Timer;
export declare function time(fn: () => void): number;
export declare function timeAsync(fn: () => Promise<void>): Promise<number>;
//# sourceMappingURL=stats.d.ts.map