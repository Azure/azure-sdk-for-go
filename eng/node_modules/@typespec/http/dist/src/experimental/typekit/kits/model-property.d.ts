import { ModelProperty } from "@typespec/compiler";
import { HeaderFieldOptions, PathParameterOptions, QueryParameterOptions } from "../../../types.js";
/**
 * Utilities for working with model properties in the context of Http.
 * @typekit modelProperty
 * @experimental
 */
export interface HttpModelProperty {
    /**
     * Get the Http parameter options for a model property.
     * @param prop a TypeSpec ModelProperty
     */
    getHttpParamOptions(prop: ModelProperty): HeaderFieldOptions | PathParameterOptions | QueryParameterOptions | undefined;
    /**
     * Get the Http header options for a model property.
     * @param prop a TypeSpec ModelProperty
     */
    getHttpHeaderOptions(prop: ModelProperty): HeaderFieldOptions | undefined;
    /**
     * Get the Http path options for a model property.
     * @param prop a TypeSpec ModelProperty
     */
    getHttpPathOptions(prop: ModelProperty): PathParameterOptions | undefined;
    /**
     * Get the Http query options for a model property.
     * @param prop a TypeSpec ModelProperty
     */
    getHttpQueryOptions(prop: ModelProperty): QueryParameterOptions | undefined;
    /**
     * Check if a model property is an Http header.
     * @param prop a TypeSpec ModelProperty
     */
    isHttpHeader(prop: ModelProperty): boolean;
    /**
     * Check if a model property is an Http path parameter.
     * @param prop a TypeSpec ModelProperty
     */
    isHttpPathParam(prop: ModelProperty): boolean;
    /**
     * Check if a model property is an Http query parameter.
     * @param prop a TypeSpec ModelProperty
     */
    isHttpQueryParam(prop: ModelProperty): boolean;
    /**
     * Check if a model property is an Http multipart body.
     * @param prop a TypeSpec ModelProperty
     */
    isHttpMultipartBody(prop: ModelProperty): boolean;
}
declare module "@typespec/compiler/typekit" {
    interface ModelPropertyKit extends HttpModelProperty {
    }
}
//# sourceMappingURL=model-property.d.ts.map