import { DiagnosticResult, Program, Type } from "@typespec/compiler";
import { GetHttpPropertyOptions, HttpProperty } from "./http-property.js";
import { Visibility } from "./metadata.js";
import { HttpPayloadBody } from "./types.js";
export interface HttpPayload {
    readonly body?: HttpPayloadBody;
    readonly metadata: HttpProperty[];
}
export interface ExtractBodyAndMetadataOptions extends GetHttpPropertyOptions {
}
/**
 * The disposition of a payload in an HTTP operation.
 */
export declare enum HttpPayloadDisposition {
    /**
     * The payload appears in a request.
     */
    Request = 0,
    /**
     * The payload appears in a response.
     */
    Response = 1,
    /**
     * The payload appears in a multipart part.
     */
    Multipart = 2
}
export declare function resolveHttpPayload(program: Program, type: Type, visibility: Visibility, disposition: HttpPayloadDisposition, options?: ExtractBodyAndMetadataOptions): DiagnosticResult<HttpPayload>;
//# sourceMappingURL=payload.d.ts.map