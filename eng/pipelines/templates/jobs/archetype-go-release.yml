parameters:
  DependsOn: Build
  TestPipeline: false
  ServiceDirectory: ''

stages:
  - stage: CheckRelease
    variables:
      - template: /eng/pipelines/templates/variables/globals.yml
    displayName: 'Check Release: ${{ parameters.ServiceDirectory }}'
    dependsOn: ${{ parameters.DependsOn }}
    condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-go-pr'), ne(variables.UseAzcoreFromMain, 'true'))
    jobs:
      - job: CheckReleaseJob
        displayName: "Check whether need to release"
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          image: azsdk-pool-mms-ubuntu-2004-1espt
          os: linux
        steps:
          - task: PowerShell@2
            name: Verify
            inputs:
              filePath: ./eng/scripts/Verify-NeedToRelease.ps1
              ${{ if startsWith(parameters.ServiceDirectory, '../') }}:
                arguments: >
                  -PackageName "${{replace(parameters.ServiceDirectory, '../', '')}}"
                  -ServiceDirectory '${{ parameters.ServiceDirectory }}'
                  -repoId Azure/azure-sdk-for-go
                  -workingDirectory $(System.DefaultWorkingDirectory)
              ${{ else }}:
                arguments: >
                  -PackageName 'sdk/${{ parameters.ServiceDirectory }}'
                  -ServiceDirectory '${{ parameters.ServiceDirectory }}'
                  -repoId Azure/azure-sdk-for-go
                  -workingDirectory $(System.DefaultWorkingDirectory)
              pwsh: true
            env:
              GH_TOKEN: $(azuresdk-github-pat)
  - stage: Release
    variables:
      - template: /eng/pipelines/templates/variables/globals.yml
    displayName: 'Release: ${{ parameters.ServiceDirectory }}'
    dependsOn: CheckRelease
    condition: and(succeeded(), eq(dependencies.CheckRelease.outputs['CheckReleaseJob.Verify.NeedToRelease'], 'true'))
    jobs:
      - deployment: ReleaseGate
        environment: package-publish
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          image: azsdk-pool-mms-ubuntu-2004-1espt
          os: linux
        templateContext:
          type: releaseJob
          isProduction: true
        strategy:
          runOnce:
            deploy:
              steps:
                - pwsh: |
                    Write-Host "The go release job needs local scripts to actually publish, given that it's tagging the code that creates the release. This clashes with 1ES release requirements."
                    Write-Host "This is a placeholder deployment so that we can use the gate approval feature, while allowing the actual release steps to be jobs instead of deployments."
                  displayName: "Describe why this job exists."

      - job: TagRepository
        displayName: "Create release tag"
        condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))
        dependsOn: ReleaseGate

        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          image: azsdk-pool-mms-ubuntu-2004-1espt
          os: linux

        steps:
          - checkout: self
          - download: current
            artifact: 'PackageInfo'
          - template: /eng/common/pipelines/templates/steps/retain-run.yml
          - template: /eng/common/pipelines/templates/steps/verify-changelog.yml
            parameters:
              ServiceDirectory: '${{parameters.ServiceDirectory}}'
              ${{ if startsWith(parameters.ServiceDirectory, '../') }}:
                PackageName: "${{replace(parameters.ServiceDirectory, '../', '')}}"
              ${{ else }}:
                PackageName: 'sdk/${{parameters.ServiceDirectory}}'
              ForRelease: true
          - template: /eng/common/pipelines/templates/steps/verify-restapi-spec-location.yml
            parameters:
              ${{ if startsWith(parameters.ServiceDirectory, '../') }}:
                PackageName: "${{replace(parameters.ServiceDirectory, '../', '')}}"
              ${{ else }}:
                PackageName: 'sdk/${{parameters.ServiceDirectory}}'
              ServiceDirectory: ${{parameters.ServiceDirectory}}
              ArtifactLocation: $(Pipeline.Workspace)
          - task: PowerShell@2
            displayName: 'Verify no replace directives in go.mod file'
            inputs:
              targetType: 'filePath'
              filePath: ./eng/scripts/validate_go_mod.ps1
              arguments: '${{ parameters.ServiceDirectory }}'
              pwsh: true
          - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
            parameters:
              ArtifactLocation: $(Build.SourcesDirectory)/sdk/${{ parameters.ServiceDirectory }}
              PackageFilter: sdk/${{ parameters.ServiceDirectory }}
              ReleaseSha: $(Build.SourceVersion)
              RepoId: Azure/azure-sdk-for-go
              WorkingDirectory: $(System.DefaultWorkingDirectory)

      - ${{ if not(and(startsWith(parameters.ServiceDirectory, 'resourcemanager'), ne(parameters.ServiceDirectory, 'resourcemanager/internal'))) }}:
        - job: UpdatePackageVersion
          displayName: "Update Package Version"
          condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
          dependsOn: TagRepository

          pool:
            name: azsdk-pool-mms-ubuntu-2004-general
            image: azsdk-pool-mms-ubuntu-2004-1espt
            os: linux

          steps:
            - checkout: self
            - pwsh: |
                eng/scripts/Update-ModuleVersion.ps1 -ModulePath 'sdk/${{parameters.ServiceDirectory}}'
              displayName: Increment package version
            - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
              parameters:
                PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                CommitMsg: "Increment package version after release of ${{ parameters.ServiceDirectory }}"
                PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"
                CloseAfterOpenForTesting: '${{ parameters.TestPipeline }}'
