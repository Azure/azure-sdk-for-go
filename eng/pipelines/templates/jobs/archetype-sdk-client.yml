resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: RunLiveTests
    type: boolean
    default: false
  - name: NonShipping
    type: boolean
    default: false
  - name: LicenseCheck
    type: boolean
    default: true
  - name: EnvVars
    type: object
    default: {}
  - name: Clouds
    type: string
    default: 'Public'
  - name: SupportedClouds
    type: string
    default: 'Public'
  - name: UnsupportedClouds
    type: string
    default: ''
  - name: PreSteps
    type: object
    default: []
  - name: PostSteps
    type: object
    default: []
  - name: TimeoutInMinutes
    type: number
    default: 60
  - name: Location
    type: string
    default: ''
  - name: CloudConfig
    type: object
    default:
      Public:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
      Preview:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources-preview)
      Canary:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
        Location: 'centraluseuap'
      UsGov:
        SubscriptionConfiguration: $(sub-config-gov-test-resources)
      China:
        SubscriptionConfiguration: $(sub-config-cn-test-resources)
  - name: MatrixConfigs
    type: object
    default:
      - Name: Go_live_test_base
        Path: eng/pipelines/templates/stages/platform-matrix.json
        Selection: all
        GenerateVMJobs: true
  - name: AdditionalMatrixConfigs
    type: object
    default: []
  - name: MatrixFilters
    type: object
    default: []
  - name: MatrixReplace
    type: object
    default: []
  - name: TestRunTime
    type: string
    default: '600s'
  - name: IncludeRelease
    type: boolean
    default: false
  - name: ExcludeGoNMinus2
    type: boolean
    default: false
  - name: UsePipelineProxy
    type: boolean
    default: true
  - name: AdditionalStages
    type: object
    default: []

extends:
  ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    settings:
      skipBuildTagsForGitHubPullRequests: true
    sdl:
      sourceAnalysisPool:
        name: azsdk-pool-mms-win-2022-general
        image: azsdk-pool-mms-win-2022-1espt
        os: windows
      sourceRepositoriesToScan:
        exclude:
          - repository: azure-sdk-build-tools
      eslint:
        enabled: false
        justificationForDisabling: "ESLint injected task has failures because it uses an old version of mkdirp. We should not fail for tools not controlled by the repo. See: https://dev.azure.com/azure-sdk/internal/_build/results?buildId=3499746&"
      psscriptanalyzer:
        compiled: true
        break: true
      policy: M365
      credscan:
        toolVersion: '2.3.12.23'
        suppressionsFile: '$(Build.SourcesDirectory)/eng/CredScanSuppression.json'
    stages:
      - stage: Build
        variables:
          - template: /eng/pipelines/templates/variables/globals.yml@self
          - template: /eng/pipelines/templates/variables/image.yml@self
        jobs:
          - template: /eng/common/pipelines/templates/jobs/generate-job-matrix.yml@self
            parameters:
              JobTemplatePath: /eng/pipelines/templates/jobs/ci.tests.yml@self
              MatrixConfigs:
                - ${{ if eq(parameters.ExcludeGoNMinus2, false) }}:
                    - Name: ci_test_base
                      Path: eng/pipelines/templates/stages/ci-platform-matrix-complete.json
                      Selection: all
                      GenerateVMJobs: true
                - ${{ else }}:
                    - Name: ci_test_base
                      Path: eng/pipelines/templates/stages/ci-platform-matrix.json
                      Selection: all
                      GenerateVMJobs: true
              AdditionalParameters:
                ServiceDirectory: ${{ parameters.ServiceDirectory }}
                TestRunTime: ${{ parameters.TestRunTime }}
                UsePipelineProxy: ${{ parameters.UsePipelineProxy }}

          - job: Analyze
            displayName: Analyze
            variables:
              - name: Codeql.Enabled
                value: true
              - name: Codeql.BuildIdentifier
                value: ${{ parameters.ServiceDirectory }}
              - name: Codeql.SkipTaskAutoInjection
                value: false
            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux

            steps:
              - template: /eng/common/pipelines/templates/steps/check-spelling.yml@self

              - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
                displayName: "Component Detection"
                condition: and(succeededOrFailed(), ne(variables['Build.Reason'],'PullRequest'))

              - task: GoTool@0
                inputs:
                  version: '1.22.0'
                displayName: "Select Go Version"

              - template: /eng/pipelines/templates/steps/create-go-workspace.yml@self

              - template: /eng/pipelines/templates/steps/analyze.yml@self
                parameters:
                  ServiceDirectory: ${{ parameters.ServiceDirectory }}
                  LintVersion: $(GoLintCLIVersion)
                  NonShipping: ${{ parameters.NonShipping }}
                  LicenseCheck: ${{ parameters.LicenseCheck }}

      - ${{ parameters.AdditionalStages }}

      # Run live tests for internal only, not public CI builds. This can be triggered manually for via an `/azp run` comment.
      - ${{if and(eq(variables['System.TeamProject'], 'internal'), eq(parameters.RunLiveTests, 'true'))}}:
          - ${{ each cloud in parameters.CloudConfig }}:
              # Run all clouds by default for weekly test pipeline, except for clouds specifically unsupported by the calling pipeline
              - ${{ if or(contains(parameters.Clouds, cloud.key), and(contains(variables['Build.DefinitionName'], 'weekly'), contains(parameters.SupportedClouds, cloud.key))) }}:
                  - ${{ if not(contains(parameters.UnsupportedClouds, cloud.key)) }}:
                      - stage: ${{ cloud.key }}
                        variables:
                          - template: /eng/pipelines/templates/variables/globals.yml@self
                          - template: /eng/pipelines/templates/variables/image.yml@self
                        displayName: Live Test ${{ cloud.key }}
                        dependsOn: []
                        jobs:
                          - template: /eng/common/pipelines/templates/jobs/generate-job-matrix.yml@self
                            parameters:
                              JobTemplatePath: /eng/pipelines/templates/jobs/live.tests.yml@self
                              AdditionalParameters:
                                ServiceDirectory: ${{ parameters.ServiceDirectory }}
                                EnvVars: ${{ parameters.EnvVars }}
                                TimeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
                                TestRunTime: ${{ parameters.TestRunTime }}
                                Location: ${{ parameters.Location }}
                                PreSteps:
                                  - ${{ parameters.PreSteps }}
                                PostSteps:
                                  - ${{ parameters.PostSteps }}
                              MatrixConfigs:
                                # Enumerate platforms and additional platforms based on supported clouds (sparse platform<-->cloud matrix).
                                - ${{ each config in parameters.MatrixConfigs }}:
                                    - ${{ config }}
                                - ${{ each config in parameters.AdditionalMatrixConfigs }}:
                                    - ${{ config }}
                              MatrixFilters:
                                - ${{ each cloudFilter in cloud.value.MatrixFilters }}:
                                    - ${{ cloudFilter }}
                                - ${{ parameters.MatrixFilters }}
                              MatrixReplace:
                                - ${{ each cloudReplace in cloud.value.MatrixReplace }}:
                                    - ${{ cloudReplace }}
                                - ${{ parameters.MatrixReplace }}
                              CloudConfig:
                                SubscriptionConfiguration: ${{ cloud.value.SubscriptionConfiguration }}
                                SubscriptionConfigurations: ${{ cloud.value.SubscriptionConfigurations }}
                                Location: ${{ coalesce(parameters.Location, cloud.value.Location) }}
                                Cloud: ${{ cloud.key }}

      # The Prerelease and Release stages are conditioned on:
      # 1. Internal trigger, not Pull Request trigger
      # 2. Not weekly build
      # 3. Manual trigger or force IncludeRelease
      - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal')) }}:
          - ${{ if not(contains(variables['Build.DefinitionName'], 'weekly')) }}:
              - ${{ if or(in(variables['Build.Reason'], 'Manual', ''), eq(parameters.IncludeRelease, true)) }}:
                  - template: archetype-go-release.yml@self
                    parameters:
                      DependsOn:
                        - Build
                        # Copy cloud conditional logic from live test stage
                        - ${{if and(eq(variables['System.TeamProject'], 'internal'), eq(parameters.RunLiveTests, 'true'))}}:
                            - ${{ each cloud in parameters.CloudConfig }}:
                                - ${{ if or(contains(parameters.Clouds, cloud.key), and(contains(variables['Build.DefinitionName'], 'tests-weekly'), contains(parameters.SupportedClouds, cloud.key))) }}:
                                    - ${{ if not(contains(parameters.UnsupportedClouds, cloud.key)) }}:
                                        - ${{ cloud.key }}
                      ServiceDirectory: ${{ parameters.ServiceDirectory }}
