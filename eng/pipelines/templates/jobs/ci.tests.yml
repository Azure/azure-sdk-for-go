parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: Matrix
    type: string
  - name: TestRunTime
    type: string
    default: '600s'
  - name: UsePipelineProxy
    type: boolean
    default: true
  - name: OSName
    type: string
  - name: CloudConfig
    type: object
    default: {}
  - name: DependsOn
    type: object
    default: []
  - name: UsePlatformContainer
    type: boolean
    default: false
  - name: EnableRaceDetector
    type: boolean
    default: false

jobs:
- job:
  displayName: Build/Test on
  condition: |
    and(
      succeededOrFailed(),
      ne(variables['Skip.Test'], 'true'),
      ne(${{ parameters.Matrix }}, '{}')
    )

  strategy:
    matrix: $[ ${{ parameters.Matrix }} ]

  dependsOn:
   - ${{ parameters.DependsOn }}

  pool:
    name: $(Pool)
    # 1es pipeline templates converts `image` to demands: ImageOverride under the hood
    # which is incompatible with image selection in the default non-1es hosted pools
    ${{ if eq(parameters.OSName, 'macOS') }}:
      vmImage: $(OSVmImage)
    ${{ else }}:
      image: $(OSVmImage)
    os: ${{ parameters.OSName }}

  steps:
  - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml
    parameters:
      AgentImage: ${{ parameters.OSName }}

  - task: GoTool@0
    inputs:
      version: '$(go.version)'
    displayName: "Select Go Version"

  - template: ../steps/create-go-workspace.yml

  - template: ../steps/build-test.yml
    parameters:
      ServiceDirectory: ${{ parameters.ServiceDirectory }}
      Image: $(OSVmImage)
      GoVersion: $(go.version)
      TestProxy: ${{ parameters.UsePipelineProxy }}
      TestRunTime: ${{ parameters.TestRunTime }}
      EnableRaceDetector: ${{ parameters.EnableRaceDetector }}
      EnvVars:
        AZURE_RECORD_MODE: 'playback'

- ${{ if and(startsWith(parameters.ServiceDirectory, 'resourcemanager'), ne(parameters.ServiceDirectory, 'resourcemanager/internal'), eq(parameters.OSName, 'linux')) }}:
  - template: /eng/pipelines/templates/jobs/mgmt-mock-test.yml
    parameters:
      ServiceDirectory: ${{ parameters.ServiceDirectory }}
      OSName: ${{ parameters.OSName }}
