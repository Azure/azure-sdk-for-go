// +build go1.9

// Copyright 2017 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/tools/profileBuilder
// commit ID: b19c730e3a5c747d9055c95884b5c0310f7f2f16

package deprecated

import original "github.com/Azure/azure-sdk-for-go/service/sql/management/2014-04-01/deprecated"

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type ManagementClient = original.ManagementClient
type CreateMode = original.CreateMode

const (
	Copy				CreateMode	= original.Copy
	Default				CreateMode	= original.Default
	NonReadableSecondary		CreateMode	= original.NonReadableSecondary
	OnlineSecondary			CreateMode	= original.OnlineSecondary
	PointInTimeRestore		CreateMode	= original.PointInTimeRestore
	Recovery			CreateMode	= original.Recovery
	Restore				CreateMode	= original.Restore
	RestoreLongTermRetentionBackup	CreateMode	= original.RestoreLongTermRetentionBackup
)

type DatabaseEdition = original.DatabaseEdition

const (
	Basic		DatabaseEdition	= original.Basic
	Business	DatabaseEdition	= original.Business
	DataWarehouse	DatabaseEdition	= original.DataWarehouse
	Free		DatabaseEdition	= original.Free
	Premium		DatabaseEdition	= original.Premium
	Standard	DatabaseEdition	= original.Standard
	Stretch		DatabaseEdition	= original.Stretch
	System		DatabaseEdition	= original.System
	System2		DatabaseEdition	= original.System2
	Web		DatabaseEdition	= original.Web
)

type ElasticPoolEdition = original.ElasticPoolEdition

const (
	ElasticPoolEditionBasic		ElasticPoolEdition	= original.ElasticPoolEditionBasic
	ElasticPoolEditionPremium	ElasticPoolEdition	= original.ElasticPoolEditionPremium
	ElasticPoolEditionStandard	ElasticPoolEdition	= original.ElasticPoolEditionStandard
)

type ElasticPoolState = original.ElasticPoolState

const (
	Creating	ElasticPoolState	= original.Creating
	Disabled	ElasticPoolState	= original.Disabled
	Ready		ElasticPoolState	= original.Ready
)

type ReadScale = original.ReadScale

const (
	ReadScaleDisabled	ReadScale	= original.ReadScaleDisabled
	ReadScaleEnabled	ReadScale	= original.ReadScaleEnabled
)

type RecommendedIndexAction = original.RecommendedIndexAction

const (
	Create	RecommendedIndexAction	= original.Create
	Drop	RecommendedIndexAction	= original.Drop
	Rebuild	RecommendedIndexAction	= original.Rebuild
)

type RecommendedIndexState = original.RecommendedIndexState

const (
	Active		RecommendedIndexState	= original.Active
	Blocked		RecommendedIndexState	= original.Blocked
	Executing	RecommendedIndexState	= original.Executing
	Expired		RecommendedIndexState	= original.Expired
	Ignored		RecommendedIndexState	= original.Ignored
	Pending		RecommendedIndexState	= original.Pending
	PendingRevert	RecommendedIndexState	= original.PendingRevert
	Reverted	RecommendedIndexState	= original.Reverted
	Reverting	RecommendedIndexState	= original.Reverting
	Success		RecommendedIndexState	= original.Success
	Verifying	RecommendedIndexState	= original.Verifying
)

type RecommendedIndexType = original.RecommendedIndexType

const (
	CLUSTERED		RecommendedIndexType	= original.CLUSTERED
	CLUSTEREDCOLUMNSTORE	RecommendedIndexType	= original.CLUSTEREDCOLUMNSTORE
	COLUMNSTORE		RecommendedIndexType	= original.COLUMNSTORE
	NONCLUSTERED		RecommendedIndexType	= original.NONCLUSTERED
)

type SampleName = original.SampleName

const (
	AdventureWorksLT SampleName = original.AdventureWorksLT
)

type ServiceObjectiveName = original.ServiceObjectiveName

const (
	ServiceObjectiveNameBasic	ServiceObjectiveName	= original.ServiceObjectiveNameBasic
	ServiceObjectiveNameElasticPool	ServiceObjectiveName	= original.ServiceObjectiveNameElasticPool
	ServiceObjectiveNameP1		ServiceObjectiveName	= original.ServiceObjectiveNameP1
	ServiceObjectiveNameP11		ServiceObjectiveName	= original.ServiceObjectiveNameP11
	ServiceObjectiveNameP15		ServiceObjectiveName	= original.ServiceObjectiveNameP15
	ServiceObjectiveNameP2		ServiceObjectiveName	= original.ServiceObjectiveNameP2
	ServiceObjectiveNameP3		ServiceObjectiveName	= original.ServiceObjectiveNameP3
	ServiceObjectiveNameP4		ServiceObjectiveName	= original.ServiceObjectiveNameP4
	ServiceObjectiveNameP6		ServiceObjectiveName	= original.ServiceObjectiveNameP6
	ServiceObjectiveNameS0		ServiceObjectiveName	= original.ServiceObjectiveNameS0
	ServiceObjectiveNameS1		ServiceObjectiveName	= original.ServiceObjectiveNameS1
	ServiceObjectiveNameS2		ServiceObjectiveName	= original.ServiceObjectiveNameS2
	ServiceObjectiveNameS3		ServiceObjectiveName	= original.ServiceObjectiveNameS3
	ServiceObjectiveNameSystem	ServiceObjectiveName	= original.ServiceObjectiveNameSystem
	ServiceObjectiveNameSystem2	ServiceObjectiveName	= original.ServiceObjectiveNameSystem2
)

type TransparentDataEncryptionActivityStatus = original.TransparentDataEncryptionActivityStatus

const (
	Decrypting	TransparentDataEncryptionActivityStatus	= original.Decrypting
	Encrypting	TransparentDataEncryptionActivityStatus	= original.Encrypting
)

type TransparentDataEncryptionStatus = original.TransparentDataEncryptionStatus

const (
	TransparentDataEncryptionStatusDisabled	TransparentDataEncryptionStatus	= original.TransparentDataEncryptionStatusDisabled
	TransparentDataEncryptionStatusEnabled	TransparentDataEncryptionStatus	= original.TransparentDataEncryptionStatusEnabled
)

type Database = original.Database
type DatabaseProperties = original.DatabaseProperties
type DatabaseUpdate = original.DatabaseUpdate
type ElasticPool = original.ElasticPool
type ElasticPoolActivity = original.ElasticPoolActivity
type ElasticPoolActivityProperties = original.ElasticPoolActivityProperties
type ElasticPoolDatabaseActivity = original.ElasticPoolDatabaseActivity
type ElasticPoolDatabaseActivityProperties = original.ElasticPoolDatabaseActivityProperties
type ElasticPoolProperties = original.ElasticPoolProperties
type ElasticPoolUpdate = original.ElasticPoolUpdate
type OperationImpact = original.OperationImpact
type ProxyResource = original.ProxyResource
type RecommendedElasticPool = original.RecommendedElasticPool
type RecommendedElasticPoolMetric = original.RecommendedElasticPoolMetric
type RecommendedElasticPoolProperties = original.RecommendedElasticPoolProperties
type RecommendedIndex = original.RecommendedIndex
type RecommendedIndexProperties = original.RecommendedIndexProperties
type Resource = original.Resource
type ServiceTierAdvisor = original.ServiceTierAdvisor
type ServiceTierAdvisorProperties = original.ServiceTierAdvisorProperties
type SloUsageMetric = original.SloUsageMetric
type TrackedResource = original.TrackedResource
type TransparentDataEncryption = original.TransparentDataEncryption
type TransparentDataEncryptionActivity = original.TransparentDataEncryptionActivity
type TransparentDataEncryptionActivityProperties = original.TransparentDataEncryptionActivityProperties
type TransparentDataEncryptionListResult = original.TransparentDataEncryptionListResult
type TransparentDataEncryptionProperties = original.TransparentDataEncryptionProperties
type TransparentDataEncryptionConfigurationsClient = original.TransparentDataEncryptionConfigurationsClient

func New(subscriptionID string) ManagementClient {
	return original.New(subscriptionID)
}
func NewWithBaseURI(baseURI string, subscriptionID string) ManagementClient {
	return original.NewWithBaseURI(baseURI, subscriptionID)
}
func NewTransparentDataEncryptionConfigurationsClient(subscriptionID string) TransparentDataEncryptionConfigurationsClient {
	return original.NewTransparentDataEncryptionConfigurationsClient(subscriptionID)
}
func NewTransparentDataEncryptionConfigurationsClientWithBaseURI(baseURI string, subscriptionID string) TransparentDataEncryptionConfigurationsClient {
	return original.NewTransparentDataEncryptionConfigurationsClientWithBaseURI(baseURI, subscriptionID)
}
func UserAgent() string {
	return original.UserAgent()
}
func Version() string {
	return original.Version()
}
