// +build go1.9

// Copyright 2017 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/tools/profileBuilder
// commit ID: b19c730e3a5c747d9055c95884b5c0310f7f2f16

package storage

import original "github.com/Azure/azure-sdk-for-go/service/storage/management/2016-12-01/storage"

type AccountsClient = original.AccountsClient

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type ManagementClient = original.ManagementClient
type AccessTier = original.AccessTier

const (
	Cool	AccessTier	= original.Cool
	Hot	AccessTier	= original.Hot
)

type AccountStatus = original.AccountStatus

const (
	Available	AccountStatus	= original.Available
	Unavailable	AccountStatus	= original.Unavailable
)

type HTTPProtocol = original.HTTPProtocol

const (
	HTTPS		HTTPProtocol	= original.HTTPS
	Httpshttp	HTTPProtocol	= original.Httpshttp
)

type KeyPermission = original.KeyPermission

const (
	Full	KeyPermission	= original.Full
	Read	KeyPermission	= original.Read
)

type Kind = original.Kind

const (
	BlobStorage	Kind	= original.BlobStorage
	Storage		Kind	= original.Storage
)

type Permissions = original.Permissions

const (
	A	Permissions	= original.A
	C	Permissions	= original.C
	D	Permissions	= original.D
	L	Permissions	= original.L
	P	Permissions	= original.P
	R	Permissions	= original.R
	U	Permissions	= original.U
	W	Permissions	= original.W
)

type Permissions1 = original.Permissions1

const (
	Permissions1A	Permissions1	= original.Permissions1A
	Permissions1C	Permissions1	= original.Permissions1C
	Permissions1D	Permissions1	= original.Permissions1D
	Permissions1L	Permissions1	= original.Permissions1L
	Permissions1P	Permissions1	= original.Permissions1P
	Permissions1R	Permissions1	= original.Permissions1R
	Permissions1U	Permissions1	= original.Permissions1U
	Permissions1W	Permissions1	= original.Permissions1W
)

type ProvisioningState = original.ProvisioningState

const (
	Creating	ProvisioningState	= original.Creating
	ResolvingDNS	ProvisioningState	= original.ResolvingDNS
	Succeeded	ProvisioningState	= original.Succeeded
)

type Reason = original.Reason

const (
	AccountNameInvalid	Reason	= original.AccountNameInvalid
	AlreadyExists		Reason	= original.AlreadyExists
)

type ResourceEnum = original.ResourceEnum

const (
	ResourceEnumB	ResourceEnum	= original.ResourceEnumB
	ResourceEnumC	ResourceEnum	= original.ResourceEnumC
	ResourceEnumF	ResourceEnum	= original.ResourceEnumF
	ResourceEnumS	ResourceEnum	= original.ResourceEnumS
)

type ResourceTypes = original.ResourceTypes

const (
	ResourceTypesC	ResourceTypes	= original.ResourceTypesC
	ResourceTypesO	ResourceTypes	= original.ResourceTypesO
	ResourceTypesS	ResourceTypes	= original.ResourceTypesS
)

type Services = original.Services

const (
	B	Services	= original.B
	F	Services	= original.F
	Q	Services	= original.Q
	T	Services	= original.T
)

type SkuName = original.SkuName

const (
	PremiumLRS	SkuName	= original.PremiumLRS
	StandardGRS	SkuName	= original.StandardGRS
	StandardLRS	SkuName	= original.StandardLRS
	StandardRAGRS	SkuName	= original.StandardRAGRS
	StandardZRS	SkuName	= original.StandardZRS
)

type SkuTier = original.SkuTier

const (
	Premium		SkuTier	= original.Premium
	Standard	SkuTier	= original.Standard
)

type UsageUnit = original.UsageUnit

const (
	Bytes		UsageUnit	= original.Bytes
	BytesPerSecond	UsageUnit	= original.BytesPerSecond
	Count		UsageUnit	= original.Count
	CountsPerSecond	UsageUnit	= original.CountsPerSecond
	Percent		UsageUnit	= original.Percent
	Seconds		UsageUnit	= original.Seconds
)

type Account = original.Account
type AccountCheckNameAvailabilityParameters = original.AccountCheckNameAvailabilityParameters
type AccountCreateParameters = original.AccountCreateParameters
type AccountKey = original.AccountKey
type AccountListKeysResult = original.AccountListKeysResult
type AccountListResult = original.AccountListResult
type AccountProperties = original.AccountProperties
type AccountPropertiesCreateParameters = original.AccountPropertiesCreateParameters
type AccountPropertiesUpdateParameters = original.AccountPropertiesUpdateParameters
type AccountRegenerateKeyParameters = original.AccountRegenerateKeyParameters
type AccountSasParameters = original.AccountSasParameters
type AccountUpdateParameters = original.AccountUpdateParameters
type CheckNameAvailabilityResult = original.CheckNameAvailabilityResult
type CustomDomain = original.CustomDomain
type Encryption = original.Encryption
type EncryptionService = original.EncryptionService
type EncryptionServices = original.EncryptionServices
type Endpoints = original.Endpoints
type ListAccountSasResponse = original.ListAccountSasResponse
type ListServiceSasResponse = original.ListServiceSasResponse
type Resource = original.Resource
type ServiceSasParameters = original.ServiceSasParameters
type Sku = original.Sku
type Usage = original.Usage
type UsageListResult = original.UsageListResult
type UsageName = original.UsageName
type UsageClient = original.UsageClient

func NewAccountsClient(subscriptionID string) AccountsClient {
	return original.NewAccountsClient(subscriptionID)
}
func NewAccountsClientWithBaseURI(baseURI string, subscriptionID string) AccountsClient {
	return original.NewAccountsClientWithBaseURI(baseURI, subscriptionID)
}
func New(subscriptionID string) ManagementClient {
	return original.New(subscriptionID)
}
func NewWithBaseURI(baseURI string, subscriptionID string) ManagementClient {
	return original.NewWithBaseURI(baseURI, subscriptionID)
}
func NewUsageClient(subscriptionID string) UsageClient {
	return original.NewUsageClient(subscriptionID)
}
func NewUsageClientWithBaseURI(baseURI string, subscriptionID string) UsageClient {
	return original.NewUsageClientWithBaseURI(baseURI, subscriptionID)
}
func UserAgent() string {
	return original.UserAgent()
}
func Version() string {
	return original.Version()
}
