// +build go1.9

// Copyright 2018 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/tools/profileBuilder

package servicefabric

import original "github.com/Azure/azure-sdk-for-go/services/servicefabric/1.0.0/servicefabric"

type ApplicationHealthsClient = original.ApplicationHealthsClient

func NewApplicationHealthsClient(timeout *int32) ApplicationHealthsClient {
	return original.NewApplicationHealthsClient(timeout)
}
func NewApplicationHealthsClientWithBaseURI(baseURI string, timeout *int32) ApplicationHealthsClient {
	return original.NewApplicationHealthsClientWithBaseURI(baseURI, timeout)
}

type ApplicationManifestsClient = original.ApplicationManifestsClient

func NewApplicationManifestsClient(timeout *int32) ApplicationManifestsClient {
	return original.NewApplicationManifestsClient(timeout)
}
func NewApplicationManifestsClientWithBaseURI(baseURI string, timeout *int32) ApplicationManifestsClient {
	return original.NewApplicationManifestsClientWithBaseURI(baseURI, timeout)
}

type ApplicationsClient = original.ApplicationsClient

func NewApplicationsClient(timeout *int32) ApplicationsClient {
	return original.NewApplicationsClient(timeout)
}
func NewApplicationsClientWithBaseURI(baseURI string, timeout *int32) ApplicationsClient {
	return original.NewApplicationsClientWithBaseURI(baseURI, timeout)
}

type ApplicationTypesClient = original.ApplicationTypesClient

func NewApplicationTypesClient(timeout *int32) ApplicationTypesClient {
	return original.NewApplicationTypesClient(timeout)
}
func NewApplicationTypesClientWithBaseURI(baseURI string, timeout *int32) ApplicationTypesClient {
	return original.NewApplicationTypesClientWithBaseURI(baseURI, timeout)
}

type ApplicationUpgradeRollbacksClient = original.ApplicationUpgradeRollbacksClient

func NewApplicationUpgradeRollbacksClient(timeout *int32) ApplicationUpgradeRollbacksClient {
	return original.NewApplicationUpgradeRollbacksClient(timeout)
}
func NewApplicationUpgradeRollbacksClientWithBaseURI(baseURI string, timeout *int32) ApplicationUpgradeRollbacksClient {
	return original.NewApplicationUpgradeRollbacksClientWithBaseURI(baseURI, timeout)
}

type ApplicationUpgradesClient = original.ApplicationUpgradesClient

func NewApplicationUpgradesClient(timeout *int32) ApplicationUpgradesClient {
	return original.NewApplicationUpgradesClient(timeout)
}
func NewApplicationUpgradesClientWithBaseURI(baseURI string, timeout *int32) ApplicationUpgradesClient {
	return original.NewApplicationUpgradesClientWithBaseURI(baseURI, timeout)
}

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type BaseClient = original.BaseClient

func New(timeout *int32) BaseClient {
	return original.New(timeout)
}
func NewWithBaseURI(baseURI string, timeout *int32) BaseClient {
	return original.NewWithBaseURI(baseURI, timeout)
}

type ClusterHealthsClient = original.ClusterHealthsClient

func NewClusterHealthsClient(timeout *int32) ClusterHealthsClient {
	return original.NewClusterHealthsClient(timeout)
}
func NewClusterHealthsClientWithBaseURI(baseURI string, timeout *int32) ClusterHealthsClient {
	return original.NewClusterHealthsClientWithBaseURI(baseURI, timeout)
}

type ClusterLoadInformationsClient = original.ClusterLoadInformationsClient

func NewClusterLoadInformationsClient(timeout *int32) ClusterLoadInformationsClient {
	return original.NewClusterLoadInformationsClient(timeout)
}
func NewClusterLoadInformationsClientWithBaseURI(baseURI string, timeout *int32) ClusterLoadInformationsClient {
	return original.NewClusterLoadInformationsClientWithBaseURI(baseURI, timeout)
}

type ClusterManifestsClient = original.ClusterManifestsClient

func NewClusterManifestsClient(timeout *int32) ClusterManifestsClient {
	return original.NewClusterManifestsClient(timeout)
}
func NewClusterManifestsClientWithBaseURI(baseURI string, timeout *int32) ClusterManifestsClient {
	return original.NewClusterManifestsClientWithBaseURI(baseURI, timeout)
}

type ClusterPackagesClient = original.ClusterPackagesClient

func NewClusterPackagesClient(timeout *int32) ClusterPackagesClient {
	return original.NewClusterPackagesClient(timeout)
}
func NewClusterPackagesClientWithBaseURI(baseURI string, timeout *int32) ClusterPackagesClient {
	return original.NewClusterPackagesClientWithBaseURI(baseURI, timeout)
}

type ClusterUpgradesClient = original.ClusterUpgradesClient

func NewClusterUpgradesClient(timeout *int32) ClusterUpgradesClient {
	return original.NewClusterUpgradesClient(timeout)
}
func NewClusterUpgradesClientWithBaseURI(baseURI string, timeout *int32) ClusterUpgradesClient {
	return original.NewClusterUpgradesClientWithBaseURI(baseURI, timeout)
}

type DeployedApplicationHealthsClient = original.DeployedApplicationHealthsClient

func NewDeployedApplicationHealthsClient(timeout *int32) DeployedApplicationHealthsClient {
	return original.NewDeployedApplicationHealthsClient(timeout)
}
func NewDeployedApplicationHealthsClientWithBaseURI(baseURI string, timeout *int32) DeployedApplicationHealthsClient {
	return original.NewDeployedApplicationHealthsClientWithBaseURI(baseURI, timeout)
}

type DeployedApplicationsClient = original.DeployedApplicationsClient

func NewDeployedApplicationsClient(timeout *int32) DeployedApplicationsClient {
	return original.NewDeployedApplicationsClient(timeout)
}
func NewDeployedApplicationsClientWithBaseURI(baseURI string, timeout *int32) DeployedApplicationsClient {
	return original.NewDeployedApplicationsClientWithBaseURI(baseURI, timeout)
}

type DeployedCodePackagesClient = original.DeployedCodePackagesClient

func NewDeployedCodePackagesClient(timeout *int32) DeployedCodePackagesClient {
	return original.NewDeployedCodePackagesClient(timeout)
}
func NewDeployedCodePackagesClientWithBaseURI(baseURI string, timeout *int32) DeployedCodePackagesClient {
	return original.NewDeployedCodePackagesClientWithBaseURI(baseURI, timeout)
}

type DeployedReplicaDetailsClient = original.DeployedReplicaDetailsClient

func NewDeployedReplicaDetailsClient(timeout *int32) DeployedReplicaDetailsClient {
	return original.NewDeployedReplicaDetailsClient(timeout)
}
func NewDeployedReplicaDetailsClientWithBaseURI(baseURI string, timeout *int32) DeployedReplicaDetailsClient {
	return original.NewDeployedReplicaDetailsClientWithBaseURI(baseURI, timeout)
}

type DeployedReplicasClient = original.DeployedReplicasClient

func NewDeployedReplicasClient(timeout *int32) DeployedReplicasClient {
	return original.NewDeployedReplicasClient(timeout)
}
func NewDeployedReplicasClientWithBaseURI(baseURI string, timeout *int32) DeployedReplicasClient {
	return original.NewDeployedReplicasClientWithBaseURI(baseURI, timeout)
}

type DeployedServicePackageHealthsClient = original.DeployedServicePackageHealthsClient

func NewDeployedServicePackageHealthsClient(timeout *int32) DeployedServicePackageHealthsClient {
	return original.NewDeployedServicePackageHealthsClient(timeout)
}
func NewDeployedServicePackageHealthsClientWithBaseURI(baseURI string, timeout *int32) DeployedServicePackageHealthsClient {
	return original.NewDeployedServicePackageHealthsClientWithBaseURI(baseURI, timeout)
}

type DeployedServicePackagesClient = original.DeployedServicePackagesClient

func NewDeployedServicePackagesClient(timeout *int32) DeployedServicePackagesClient {
	return original.NewDeployedServicePackagesClient(timeout)
}
func NewDeployedServicePackagesClientWithBaseURI(baseURI string, timeout *int32) DeployedServicePackagesClient {
	return original.NewDeployedServicePackagesClientWithBaseURI(baseURI, timeout)
}

type DeployedServiceTypesClient = original.DeployedServiceTypesClient

func NewDeployedServiceTypesClient(timeout *int32) DeployedServiceTypesClient {
	return original.NewDeployedServiceTypesClient(timeout)
}
func NewDeployedServiceTypesClientWithBaseURI(baseURI string, timeout *int32) DeployedServiceTypesClient {
	return original.NewDeployedServiceTypesClientWithBaseURI(baseURI, timeout)
}

type AggregatedHealthState = original.AggregatedHealthState

const (
	Error   AggregatedHealthState = original.Error
	Invalid AggregatedHealthState = original.Invalid
	Ok      AggregatedHealthState = original.Ok
	Unknown AggregatedHealthState = original.Unknown
	Warning AggregatedHealthState = original.Warning
)

func PossibleAggregatedHealthStateValues() []AggregatedHealthState {
	return original.PossibleAggregatedHealthStateValues()
}

type AggregatedHealthState1 = original.AggregatedHealthState1

const (
	AggregatedHealthState1Error   AggregatedHealthState1 = original.AggregatedHealthState1Error
	AggregatedHealthState1Invalid AggregatedHealthState1 = original.AggregatedHealthState1Invalid
	AggregatedHealthState1Ok      AggregatedHealthState1 = original.AggregatedHealthState1Ok
	AggregatedHealthState1Unknown AggregatedHealthState1 = original.AggregatedHealthState1Unknown
	AggregatedHealthState1Warning AggregatedHealthState1 = original.AggregatedHealthState1Warning
)

func PossibleAggregatedHealthState1Values() []AggregatedHealthState1 {
	return original.PossibleAggregatedHealthState1Values()
}

type AggregatedHealthState10 = original.AggregatedHealthState10

const (
	AggregatedHealthState10Error   AggregatedHealthState10 = original.AggregatedHealthState10Error
	AggregatedHealthState10Invalid AggregatedHealthState10 = original.AggregatedHealthState10Invalid
	AggregatedHealthState10Ok      AggregatedHealthState10 = original.AggregatedHealthState10Ok
	AggregatedHealthState10Unknown AggregatedHealthState10 = original.AggregatedHealthState10Unknown
	AggregatedHealthState10Warning AggregatedHealthState10 = original.AggregatedHealthState10Warning
)

func PossibleAggregatedHealthState10Values() []AggregatedHealthState10 {
	return original.PossibleAggregatedHealthState10Values()
}

type AggregatedHealthState11 = original.AggregatedHealthState11

const (
	AggregatedHealthState11Error   AggregatedHealthState11 = original.AggregatedHealthState11Error
	AggregatedHealthState11Invalid AggregatedHealthState11 = original.AggregatedHealthState11Invalid
	AggregatedHealthState11Ok      AggregatedHealthState11 = original.AggregatedHealthState11Ok
	AggregatedHealthState11Unknown AggregatedHealthState11 = original.AggregatedHealthState11Unknown
	AggregatedHealthState11Warning AggregatedHealthState11 = original.AggregatedHealthState11Warning
)

func PossibleAggregatedHealthState11Values() []AggregatedHealthState11 {
	return original.PossibleAggregatedHealthState11Values()
}

type AggregatedHealthState12 = original.AggregatedHealthState12

const (
	AggregatedHealthState12Error   AggregatedHealthState12 = original.AggregatedHealthState12Error
	AggregatedHealthState12Invalid AggregatedHealthState12 = original.AggregatedHealthState12Invalid
	AggregatedHealthState12Ok      AggregatedHealthState12 = original.AggregatedHealthState12Ok
	AggregatedHealthState12Unknown AggregatedHealthState12 = original.AggregatedHealthState12Unknown
	AggregatedHealthState12Warning AggregatedHealthState12 = original.AggregatedHealthState12Warning
)

func PossibleAggregatedHealthState12Values() []AggregatedHealthState12 {
	return original.PossibleAggregatedHealthState12Values()
}

type AggregatedHealthState13 = original.AggregatedHealthState13

const (
	AggregatedHealthState13Error   AggregatedHealthState13 = original.AggregatedHealthState13Error
	AggregatedHealthState13Invalid AggregatedHealthState13 = original.AggregatedHealthState13Invalid
	AggregatedHealthState13Ok      AggregatedHealthState13 = original.AggregatedHealthState13Ok
	AggregatedHealthState13Unknown AggregatedHealthState13 = original.AggregatedHealthState13Unknown
	AggregatedHealthState13Warning AggregatedHealthState13 = original.AggregatedHealthState13Warning
)

func PossibleAggregatedHealthState13Values() []AggregatedHealthState13 {
	return original.PossibleAggregatedHealthState13Values()
}

type AggregatedHealthState14 = original.AggregatedHealthState14

const (
	AggregatedHealthState14Error   AggregatedHealthState14 = original.AggregatedHealthState14Error
	AggregatedHealthState14Invalid AggregatedHealthState14 = original.AggregatedHealthState14Invalid
	AggregatedHealthState14Ok      AggregatedHealthState14 = original.AggregatedHealthState14Ok
	AggregatedHealthState14Unknown AggregatedHealthState14 = original.AggregatedHealthState14Unknown
	AggregatedHealthState14Warning AggregatedHealthState14 = original.AggregatedHealthState14Warning
)

func PossibleAggregatedHealthState14Values() []AggregatedHealthState14 {
	return original.PossibleAggregatedHealthState14Values()
}

type AggregatedHealthState15 = original.AggregatedHealthState15

const (
	AggregatedHealthState15Error   AggregatedHealthState15 = original.AggregatedHealthState15Error
	AggregatedHealthState15Invalid AggregatedHealthState15 = original.AggregatedHealthState15Invalid
	AggregatedHealthState15Ok      AggregatedHealthState15 = original.AggregatedHealthState15Ok
	AggregatedHealthState15Unknown AggregatedHealthState15 = original.AggregatedHealthState15Unknown
	AggregatedHealthState15Warning AggregatedHealthState15 = original.AggregatedHealthState15Warning
)

func PossibleAggregatedHealthState15Values() []AggregatedHealthState15 {
	return original.PossibleAggregatedHealthState15Values()
}

type AggregatedHealthState2 = original.AggregatedHealthState2

const (
	AggregatedHealthState2Error   AggregatedHealthState2 = original.AggregatedHealthState2Error
	AggregatedHealthState2Invalid AggregatedHealthState2 = original.AggregatedHealthState2Invalid
	AggregatedHealthState2Ok      AggregatedHealthState2 = original.AggregatedHealthState2Ok
	AggregatedHealthState2Unknown AggregatedHealthState2 = original.AggregatedHealthState2Unknown
	AggregatedHealthState2Warning AggregatedHealthState2 = original.AggregatedHealthState2Warning
)

func PossibleAggregatedHealthState2Values() []AggregatedHealthState2 {
	return original.PossibleAggregatedHealthState2Values()
}

type AggregatedHealthState3 = original.AggregatedHealthState3

const (
	AggregatedHealthState3Error   AggregatedHealthState3 = original.AggregatedHealthState3Error
	AggregatedHealthState3Invalid AggregatedHealthState3 = original.AggregatedHealthState3Invalid
	AggregatedHealthState3Ok      AggregatedHealthState3 = original.AggregatedHealthState3Ok
	AggregatedHealthState3Unknown AggregatedHealthState3 = original.AggregatedHealthState3Unknown
	AggregatedHealthState3Warning AggregatedHealthState3 = original.AggregatedHealthState3Warning
)

func PossibleAggregatedHealthState3Values() []AggregatedHealthState3 {
	return original.PossibleAggregatedHealthState3Values()
}

type AggregatedHealthState4 = original.AggregatedHealthState4

const (
	AggregatedHealthState4Error   AggregatedHealthState4 = original.AggregatedHealthState4Error
	AggregatedHealthState4Invalid AggregatedHealthState4 = original.AggregatedHealthState4Invalid
	AggregatedHealthState4Ok      AggregatedHealthState4 = original.AggregatedHealthState4Ok
	AggregatedHealthState4Unknown AggregatedHealthState4 = original.AggregatedHealthState4Unknown
	AggregatedHealthState4Warning AggregatedHealthState4 = original.AggregatedHealthState4Warning
)

func PossibleAggregatedHealthState4Values() []AggregatedHealthState4 {
	return original.PossibleAggregatedHealthState4Values()
}

type AggregatedHealthState5 = original.AggregatedHealthState5

const (
	AggregatedHealthState5Error   AggregatedHealthState5 = original.AggregatedHealthState5Error
	AggregatedHealthState5Invalid AggregatedHealthState5 = original.AggregatedHealthState5Invalid
	AggregatedHealthState5Ok      AggregatedHealthState5 = original.AggregatedHealthState5Ok
	AggregatedHealthState5Unknown AggregatedHealthState5 = original.AggregatedHealthState5Unknown
	AggregatedHealthState5Warning AggregatedHealthState5 = original.AggregatedHealthState5Warning
)

func PossibleAggregatedHealthState5Values() []AggregatedHealthState5 {
	return original.PossibleAggregatedHealthState5Values()
}

type AggregatedHealthState6 = original.AggregatedHealthState6

const (
	AggregatedHealthState6Error   AggregatedHealthState6 = original.AggregatedHealthState6Error
	AggregatedHealthState6Invalid AggregatedHealthState6 = original.AggregatedHealthState6Invalid
	AggregatedHealthState6Ok      AggregatedHealthState6 = original.AggregatedHealthState6Ok
	AggregatedHealthState6Unknown AggregatedHealthState6 = original.AggregatedHealthState6Unknown
	AggregatedHealthState6Warning AggregatedHealthState6 = original.AggregatedHealthState6Warning
)

func PossibleAggregatedHealthState6Values() []AggregatedHealthState6 {
	return original.PossibleAggregatedHealthState6Values()
}

type AggregatedHealthState7 = original.AggregatedHealthState7

const (
	AggregatedHealthState7Error   AggregatedHealthState7 = original.AggregatedHealthState7Error
	AggregatedHealthState7Invalid AggregatedHealthState7 = original.AggregatedHealthState7Invalid
	AggregatedHealthState7Ok      AggregatedHealthState7 = original.AggregatedHealthState7Ok
	AggregatedHealthState7Unknown AggregatedHealthState7 = original.AggregatedHealthState7Unknown
	AggregatedHealthState7Warning AggregatedHealthState7 = original.AggregatedHealthState7Warning
)

func PossibleAggregatedHealthState7Values() []AggregatedHealthState7 {
	return original.PossibleAggregatedHealthState7Values()
}

type AggregatedHealthState8 = original.AggregatedHealthState8

const (
	AggregatedHealthState8Error   AggregatedHealthState8 = original.AggregatedHealthState8Error
	AggregatedHealthState8Invalid AggregatedHealthState8 = original.AggregatedHealthState8Invalid
	AggregatedHealthState8Ok      AggregatedHealthState8 = original.AggregatedHealthState8Ok
	AggregatedHealthState8Unknown AggregatedHealthState8 = original.AggregatedHealthState8Unknown
	AggregatedHealthState8Warning AggregatedHealthState8 = original.AggregatedHealthState8Warning
)

func PossibleAggregatedHealthState8Values() []AggregatedHealthState8 {
	return original.PossibleAggregatedHealthState8Values()
}

type AggregatedHealthState9 = original.AggregatedHealthState9

const (
	AggregatedHealthState9Error   AggregatedHealthState9 = original.AggregatedHealthState9Error
	AggregatedHealthState9Invalid AggregatedHealthState9 = original.AggregatedHealthState9Invalid
	AggregatedHealthState9Ok      AggregatedHealthState9 = original.AggregatedHealthState9Ok
	AggregatedHealthState9Unknown AggregatedHealthState9 = original.AggregatedHealthState9Unknown
	AggregatedHealthState9Warning AggregatedHealthState9 = original.AggregatedHealthState9Warning
)

func PossibleAggregatedHealthState9Values() []AggregatedHealthState9 {
	return original.PossibleAggregatedHealthState9Values()
}

type DeactivationIntent = original.DeactivationIntent

const (
	Pause      DeactivationIntent = original.Pause
	RemoveData DeactivationIntent = original.RemoveData
	RemoveNode DeactivationIntent = original.RemoveNode
	Restart    DeactivationIntent = original.Restart
)

func PossibleDeactivationIntentValues() []DeactivationIntent {
	return original.PossibleDeactivationIntentValues()
}

type DefaultMoveCost = original.DefaultMoveCost

const (
	High   DefaultMoveCost = original.High
	Low    DefaultMoveCost = original.Low
	Medium DefaultMoveCost = original.Medium
	Zero   DefaultMoveCost = original.Zero
)

func PossibleDefaultMoveCostValues() []DefaultMoveCost {
	return original.PossibleDefaultMoveCostValues()
}

type DefaultMoveCost1 = original.DefaultMoveCost1

const (
	DefaultMoveCost1High   DefaultMoveCost1 = original.DefaultMoveCost1High
	DefaultMoveCost1Low    DefaultMoveCost1 = original.DefaultMoveCost1Low
	DefaultMoveCost1Medium DefaultMoveCost1 = original.DefaultMoveCost1Medium
	DefaultMoveCost1Zero   DefaultMoveCost1 = original.DefaultMoveCost1Zero
)

func PossibleDefaultMoveCost1Values() []DefaultMoveCost1 {
	return original.PossibleDefaultMoveCost1Values()
}

type DefaultMoveCost2 = original.DefaultMoveCost2

const (
	DefaultMoveCost2High   DefaultMoveCost2 = original.DefaultMoveCost2High
	DefaultMoveCost2Low    DefaultMoveCost2 = original.DefaultMoveCost2Low
	DefaultMoveCost2Medium DefaultMoveCost2 = original.DefaultMoveCost2Medium
	DefaultMoveCost2Zero   DefaultMoveCost2 = original.DefaultMoveCost2Zero
)

func PossibleDefaultMoveCost2Values() []DefaultMoveCost2 {
	return original.PossibleDefaultMoveCost2Values()
}

type DefaultMoveCost3 = original.DefaultMoveCost3

const (
	DefaultMoveCost3High   DefaultMoveCost3 = original.DefaultMoveCost3High
	DefaultMoveCost3Low    DefaultMoveCost3 = original.DefaultMoveCost3Low
	DefaultMoveCost3Medium DefaultMoveCost3 = original.DefaultMoveCost3Medium
	DefaultMoveCost3Zero   DefaultMoveCost3 = original.DefaultMoveCost3Zero
)

func PossibleDefaultMoveCost3Values() []DefaultMoveCost3 {
	return original.PossibleDefaultMoveCost3Values()
}

type FailureReason = original.FailureReason

const (
	FailureReasonHealthCheck           FailureReason = original.FailureReasonHealthCheck
	FailureReasonInterrupted           FailureReason = original.FailureReasonInterrupted
	FailureReasonInvalid               FailureReason = original.FailureReasonInvalid
	FailureReasonOverallUpgradeTimeout FailureReason = original.FailureReasonOverallUpgradeTimeout
	FailureReasonUpgradeDomainTimeout  FailureReason = original.FailureReasonUpgradeDomainTimeout
)

func PossibleFailureReasonValues() []FailureReason {
	return original.PossibleFailureReasonValues()
}

type FailureReason1 = original.FailureReason1

const (
	FailureReason1HealthCheck           FailureReason1 = original.FailureReason1HealthCheck
	FailureReason1Interrupted           FailureReason1 = original.FailureReason1Interrupted
	FailureReason1Invalid               FailureReason1 = original.FailureReason1Invalid
	FailureReason1OverallUpgradeTimeout FailureReason1 = original.FailureReason1OverallUpgradeTimeout
	FailureReason1UpgradeDomainTimeout  FailureReason1 = original.FailureReason1UpgradeDomainTimeout
)

func PossibleFailureReason1Values() []FailureReason1 {
	return original.PossibleFailureReason1Values()
}

type HealthState = original.HealthState

const (
	HealthStateError   HealthState = original.HealthStateError
	HealthStateInvalid HealthState = original.HealthStateInvalid
	HealthStateOk      HealthState = original.HealthStateOk
	HealthStateUnknown HealthState = original.HealthStateUnknown
	HealthStateWarning HealthState = original.HealthStateWarning
)

func PossibleHealthStateValues() []HealthState {
	return original.PossibleHealthStateValues()
}

type HealthState1 = original.HealthState1

const (
	HealthState1Error   HealthState1 = original.HealthState1Error
	HealthState1Invalid HealthState1 = original.HealthState1Invalid
	HealthState1Ok      HealthState1 = original.HealthState1Ok
	HealthState1Unknown HealthState1 = original.HealthState1Unknown
	HealthState1Warning HealthState1 = original.HealthState1Warning
)

func PossibleHealthState1Values() []HealthState1 {
	return original.PossibleHealthState1Values()
}

type HealthState2 = original.HealthState2

const (
	HealthState2Error   HealthState2 = original.HealthState2Error
	HealthState2Invalid HealthState2 = original.HealthState2Invalid
	HealthState2Ok      HealthState2 = original.HealthState2Ok
	HealthState2Unknown HealthState2 = original.HealthState2Unknown
	HealthState2Warning HealthState2 = original.HealthState2Warning
)

func PossibleHealthState2Values() []HealthState2 {
	return original.PossibleHealthState2Values()
}

type HealthState3 = original.HealthState3

const (
	HealthState3Error   HealthState3 = original.HealthState3Error
	HealthState3Invalid HealthState3 = original.HealthState3Invalid
	HealthState3Ok      HealthState3 = original.HealthState3Ok
	HealthState3Unknown HealthState3 = original.HealthState3Unknown
	HealthState3Warning HealthState3 = original.HealthState3Warning
)

func PossibleHealthState3Values() []HealthState3 {
	return original.PossibleHealthState3Values()
}

type HealthState4 = original.HealthState4

const (
	HealthState4Error   HealthState4 = original.HealthState4Error
	HealthState4Invalid HealthState4 = original.HealthState4Invalid
	HealthState4Ok      HealthState4 = original.HealthState4Ok
	HealthState4Unknown HealthState4 = original.HealthState4Unknown
	HealthState4Warning HealthState4 = original.HealthState4Warning
)

func PossibleHealthState4Values() []HealthState4 {
	return original.PossibleHealthState4Values()
}

type HealthState5 = original.HealthState5

const (
	HealthState5Error   HealthState5 = original.HealthState5Error
	HealthState5Invalid HealthState5 = original.HealthState5Invalid
	HealthState5Ok      HealthState5 = original.HealthState5Ok
	HealthState5Unknown HealthState5 = original.HealthState5Unknown
	HealthState5Warning HealthState5 = original.HealthState5Warning
)

func PossibleHealthState5Values() []HealthState5 {
	return original.PossibleHealthState5Values()
}

type HealthState6 = original.HealthState6

const (
	HealthState6Error   HealthState6 = original.HealthState6Error
	HealthState6Invalid HealthState6 = original.HealthState6Invalid
	HealthState6Ok      HealthState6 = original.HealthState6Ok
	HealthState6Unknown HealthState6 = original.HealthState6Unknown
	HealthState6Warning HealthState6 = original.HealthState6Warning
)

func PossibleHealthState6Values() []HealthState6 {
	return original.PossibleHealthState6Values()
}

type Kind = original.Kind

const (
	KindApplication                       Kind = original.KindApplication
	KindApplications                      Kind = original.KindApplications
	KindApplicationType                   Kind = original.KindApplicationType
	KindDeltaNodesCheck                   Kind = original.KindDeltaNodesCheck
	KindDeployedApplication               Kind = original.KindDeployedApplication
	KindDeployedApplications              Kind = original.KindDeployedApplications
	KindDeployedServicePackage            Kind = original.KindDeployedServicePackage
	KindDeployedServicePackages           Kind = original.KindDeployedServicePackages
	KindEvent                             Kind = original.KindEvent
	KindHealthEvaluation                  Kind = original.KindHealthEvaluation
	KindNode                              Kind = original.KindNode
	KindNodes                             Kind = original.KindNodes
	KindPartition                         Kind = original.KindPartition
	KindPartitions                        Kind = original.KindPartitions
	KindReplica                           Kind = original.KindReplica
	KindReplicas                          Kind = original.KindReplicas
	KindService                           Kind = original.KindService
	KindServices                          Kind = original.KindServices
	KindSystemApplication                 Kind = original.KindSystemApplication
	KindUpgradeDomainDeltaNodesCheck      Kind = original.KindUpgradeDomainDeltaNodesCheck
	KindUpgradeDomainDeployedApplications Kind = original.KindUpgradeDomainDeployedApplications
	KindUpgradeDomainNodes                Kind = original.KindUpgradeDomainNodes
)

func PossibleKindValues() []Kind {
	return original.PossibleKindValues()
}

type NodeDeactivationIntent = original.NodeDeactivationIntent

const (
	NodeDeactivationIntentInvalid    NodeDeactivationIntent = original.NodeDeactivationIntentInvalid
	NodeDeactivationIntentPause      NodeDeactivationIntent = original.NodeDeactivationIntentPause
	NodeDeactivationIntentRemoveData NodeDeactivationIntent = original.NodeDeactivationIntentRemoveData
	NodeDeactivationIntentRestart    NodeDeactivationIntent = original.NodeDeactivationIntentRestart
)

func PossibleNodeDeactivationIntentValues() []NodeDeactivationIntent {
	return original.PossibleNodeDeactivationIntentValues()
}

type NodeDeactivationStatus = original.NodeDeactivationStatus

const (
	NodeDeactivationStatusCompleted             NodeDeactivationStatus = original.NodeDeactivationStatusCompleted
	NodeDeactivationStatusInvalid               NodeDeactivationStatus = original.NodeDeactivationStatusInvalid
	NodeDeactivationStatusSafetyCheckComplete   NodeDeactivationStatus = original.NodeDeactivationStatusSafetyCheckComplete
	NodeDeactivationStatusSafetyCheckInProgress NodeDeactivationStatus = original.NodeDeactivationStatusSafetyCheckInProgress
)

func PossibleNodeDeactivationStatusValues() []NodeDeactivationStatus {
	return original.PossibleNodeDeactivationStatusValues()
}

type NodeStatus = original.NodeStatus

const (
	NodeStatusDisabled  NodeStatus = original.NodeStatusDisabled
	NodeStatusDisabling NodeStatus = original.NodeStatusDisabling
	NodeStatusDown      NodeStatus = original.NodeStatusDown
	NodeStatusEnabling  NodeStatus = original.NodeStatusEnabling
	NodeStatusInvalid   NodeStatus = original.NodeStatusInvalid
	NodeStatusRemoved   NodeStatus = original.NodeStatusRemoved
	NodeStatusUnknown   NodeStatus = original.NodeStatusUnknown
	NodeStatusUp        NodeStatus = original.NodeStatusUp
)

func PossibleNodeStatusValues() []NodeStatus {
	return original.PossibleNodeStatusValues()
}

type PartitionScheme = original.PartitionScheme

const (
	PartitionSchemeInvalid      PartitionScheme = original.PartitionSchemeInvalid
	PartitionSchemeNamed        PartitionScheme = original.PartitionSchemeNamed
	PartitionSchemeSingleton    PartitionScheme = original.PartitionSchemeSingleton
	PartitionSchemeUniformInt64 PartitionScheme = original.PartitionSchemeUniformInt64
)

func PossiblePartitionSchemeValues() []PartitionScheme {
	return original.PossiblePartitionSchemeValues()
}

type PartitionStatus = original.PartitionStatus

const (
	PartitionStatusDeleting      PartitionStatus = original.PartitionStatusDeleting
	PartitionStatusInQuorumLoss  PartitionStatus = original.PartitionStatusInQuorumLoss
	PartitionStatusInvalid       PartitionStatus = original.PartitionStatusInvalid
	PartitionStatusNotReady      PartitionStatus = original.PartitionStatusNotReady
	PartitionStatusReady         PartitionStatus = original.PartitionStatusReady
	PartitionStatusReconfiguring PartitionStatus = original.PartitionStatusReconfiguring
)

func PossiblePartitionStatusValues() []PartitionStatus {
	return original.PossiblePartitionStatusValues()
}

type ReplicaRole = original.ReplicaRole

const (
	ReplicaRoleActiveSecondary ReplicaRole = original.ReplicaRoleActiveSecondary
	ReplicaRoleIdleSecondary   ReplicaRole = original.ReplicaRoleIdleSecondary
	ReplicaRoleInvalid         ReplicaRole = original.ReplicaRoleInvalid
	ReplicaRoleNone            ReplicaRole = original.ReplicaRoleNone
	ReplicaRolePrimary         ReplicaRole = original.ReplicaRolePrimary
)

func PossibleReplicaRoleValues() []ReplicaRole {
	return original.PossibleReplicaRoleValues()
}

type ReplicaRole1 = original.ReplicaRole1

const (
	ReplicaRole1ActiveSecondary ReplicaRole1 = original.ReplicaRole1ActiveSecondary
	ReplicaRole1IdleSecondary   ReplicaRole1 = original.ReplicaRole1IdleSecondary
	ReplicaRole1Invalid         ReplicaRole1 = original.ReplicaRole1Invalid
	ReplicaRole1None            ReplicaRole1 = original.ReplicaRole1None
	ReplicaRole1Primary         ReplicaRole1 = original.ReplicaRole1Primary
)

func PossibleReplicaRole1Values() []ReplicaRole1 {
	return original.PossibleReplicaRole1Values()
}

type ReplicaStatus = original.ReplicaStatus

const (
	ReplicaStatusDown    ReplicaStatus = original.ReplicaStatusDown
	ReplicaStatusDropped ReplicaStatus = original.ReplicaStatusDropped
	ReplicaStatusInBuild ReplicaStatus = original.ReplicaStatusInBuild
	ReplicaStatusInvalid ReplicaStatus = original.ReplicaStatusInvalid
	ReplicaStatusReady   ReplicaStatus = original.ReplicaStatusReady
	ReplicaStatusStandby ReplicaStatus = original.ReplicaStatusStandby
)

func PossibleReplicaStatusValues() []ReplicaStatus {
	return original.PossibleReplicaStatusValues()
}

type ReplicaStatus1 = original.ReplicaStatus1

const (
	ReplicaStatus1Down    ReplicaStatus1 = original.ReplicaStatus1Down
	ReplicaStatus1Dropped ReplicaStatus1 = original.ReplicaStatus1Dropped
	ReplicaStatus1InBuild ReplicaStatus1 = original.ReplicaStatus1InBuild
	ReplicaStatus1Invalid ReplicaStatus1 = original.ReplicaStatus1Invalid
	ReplicaStatus1Ready   ReplicaStatus1 = original.ReplicaStatus1Ready
	ReplicaStatus1Standby ReplicaStatus1 = original.ReplicaStatus1Standby
)

func PossibleReplicaStatus1Values() []ReplicaStatus1 {
	return original.PossibleReplicaStatus1Values()
}

type RollingUpgradeMode = original.RollingUpgradeMode

const (
	RollingUpgradeModeInvalid           RollingUpgradeMode = original.RollingUpgradeModeInvalid
	RollingUpgradeModeMonitored         RollingUpgradeMode = original.RollingUpgradeModeMonitored
	RollingUpgradeModeUnmonitoredAuto   RollingUpgradeMode = original.RollingUpgradeModeUnmonitoredAuto
	RollingUpgradeModeUnmonitoredManual RollingUpgradeMode = original.RollingUpgradeModeUnmonitoredManual
)

func PossibleRollingUpgradeModeValues() []RollingUpgradeMode {
	return original.PossibleRollingUpgradeModeValues()
}

type RollingUpgradeMode1 = original.RollingUpgradeMode1

const (
	RollingUpgradeMode1Invalid           RollingUpgradeMode1 = original.RollingUpgradeMode1Invalid
	RollingUpgradeMode1Monitored         RollingUpgradeMode1 = original.RollingUpgradeMode1Monitored
	RollingUpgradeMode1UnmonitoredAuto   RollingUpgradeMode1 = original.RollingUpgradeMode1UnmonitoredAuto
	RollingUpgradeMode1UnmonitoredManual RollingUpgradeMode1 = original.RollingUpgradeMode1UnmonitoredManual
)

func PossibleRollingUpgradeMode1Values() []RollingUpgradeMode1 {
	return original.PossibleRollingUpgradeMode1Values()
}

type RollingUpgradeMode2 = original.RollingUpgradeMode2

const (
	RollingUpgradeMode2Invalid           RollingUpgradeMode2 = original.RollingUpgradeMode2Invalid
	RollingUpgradeMode2Monitored         RollingUpgradeMode2 = original.RollingUpgradeMode2Monitored
	RollingUpgradeMode2UnmonitoredAuto   RollingUpgradeMode2 = original.RollingUpgradeMode2UnmonitoredAuto
	RollingUpgradeMode2UnmonitoredManual RollingUpgradeMode2 = original.RollingUpgradeMode2UnmonitoredManual
)

func PossibleRollingUpgradeMode2Values() []RollingUpgradeMode2 {
	return original.PossibleRollingUpgradeMode2Values()
}

type RollingUpgradeMode3 = original.RollingUpgradeMode3

const (
	RollingUpgradeMode3Invalid           RollingUpgradeMode3 = original.RollingUpgradeMode3Invalid
	RollingUpgradeMode3Monitored         RollingUpgradeMode3 = original.RollingUpgradeMode3Monitored
	RollingUpgradeMode3UnmonitoredAuto   RollingUpgradeMode3 = original.RollingUpgradeMode3UnmonitoredAuto
	RollingUpgradeMode3UnmonitoredManual RollingUpgradeMode3 = original.RollingUpgradeMode3UnmonitoredManual
)

func PossibleRollingUpgradeMode3Values() []RollingUpgradeMode3 {
	return original.PossibleRollingUpgradeMode3Values()
}

type RollingUpgradeMode4 = original.RollingUpgradeMode4

const (
	RollingUpgradeMode4Invalid           RollingUpgradeMode4 = original.RollingUpgradeMode4Invalid
	RollingUpgradeMode4Monitored         RollingUpgradeMode4 = original.RollingUpgradeMode4Monitored
	RollingUpgradeMode4UnmonitoredAuto   RollingUpgradeMode4 = original.RollingUpgradeMode4UnmonitoredAuto
	RollingUpgradeMode4UnmonitoredManual RollingUpgradeMode4 = original.RollingUpgradeMode4UnmonitoredManual
)

func PossibleRollingUpgradeMode4Values() []RollingUpgradeMode4 {
	return original.PossibleRollingUpgradeMode4Values()
}

type RollingUpgradeMode5 = original.RollingUpgradeMode5

const (
	RollingUpgradeMode5Invalid           RollingUpgradeMode5 = original.RollingUpgradeMode5Invalid
	RollingUpgradeMode5Monitored         RollingUpgradeMode5 = original.RollingUpgradeMode5Monitored
	RollingUpgradeMode5UnmonitoredAuto   RollingUpgradeMode5 = original.RollingUpgradeMode5UnmonitoredAuto
	RollingUpgradeMode5UnmonitoredManual RollingUpgradeMode5 = original.RollingUpgradeMode5UnmonitoredManual
)

func PossibleRollingUpgradeMode5Values() []RollingUpgradeMode5 {
	return original.PossibleRollingUpgradeMode5Values()
}

type ServiceCorrelationScheme = original.ServiceCorrelationScheme

const (
	ServiceCorrelationSchemeAffinity           ServiceCorrelationScheme = original.ServiceCorrelationSchemeAffinity
	ServiceCorrelationSchemeAlignedAffinity    ServiceCorrelationScheme = original.ServiceCorrelationSchemeAlignedAffinity
	ServiceCorrelationSchemeInvalid            ServiceCorrelationScheme = original.ServiceCorrelationSchemeInvalid
	ServiceCorrelationSchemeNonAlignedAffinity ServiceCorrelationScheme = original.ServiceCorrelationSchemeNonAlignedAffinity
)

func PossibleServiceCorrelationSchemeValues() []ServiceCorrelationScheme {
	return original.PossibleServiceCorrelationSchemeValues()
}

type ServiceKind = original.ServiceKind

const (
	ServiceKindInvalid   ServiceKind = original.ServiceKindInvalid
	ServiceKindStateful  ServiceKind = original.ServiceKindStateful
	ServiceKindStateless ServiceKind = original.ServiceKindStateless
)

func PossibleServiceKindValues() []ServiceKind {
	return original.PossibleServiceKindValues()
}

type ServiceKind1 = original.ServiceKind1

const (
	ServiceKind1Invalid   ServiceKind1 = original.ServiceKind1Invalid
	ServiceKind1Stateful  ServiceKind1 = original.ServiceKind1Stateful
	ServiceKind1Stateless ServiceKind1 = original.ServiceKind1Stateless
)

func PossibleServiceKind1Values() []ServiceKind1 {
	return original.PossibleServiceKind1Values()
}

type ServiceKind2 = original.ServiceKind2

const (
	ServiceKind2Invalid   ServiceKind2 = original.ServiceKind2Invalid
	ServiceKind2Stateful  ServiceKind2 = original.ServiceKind2Stateful
	ServiceKind2Stateless ServiceKind2 = original.ServiceKind2Stateless
)

func PossibleServiceKind2Values() []ServiceKind2 {
	return original.PossibleServiceKind2Values()
}

type ServiceKind3 = original.ServiceKind3

const (
	ServiceKind3Invalid   ServiceKind3 = original.ServiceKind3Invalid
	ServiceKind3Stateful  ServiceKind3 = original.ServiceKind3Stateful
	ServiceKind3Stateless ServiceKind3 = original.ServiceKind3Stateless
)

func PossibleServiceKind3Values() []ServiceKind3 {
	return original.PossibleServiceKind3Values()
}

type ServiceKind4 = original.ServiceKind4

const (
	ServiceKind4Invalid   ServiceKind4 = original.ServiceKind4Invalid
	ServiceKind4Stateful  ServiceKind4 = original.ServiceKind4Stateful
	ServiceKind4Stateless ServiceKind4 = original.ServiceKind4Stateless
)

func PossibleServiceKind4Values() []ServiceKind4 {
	return original.PossibleServiceKind4Values()
}

type ServiceKind5 = original.ServiceKind5

const (
	ServiceKind5Invalid   ServiceKind5 = original.ServiceKind5Invalid
	ServiceKind5Stateful  ServiceKind5 = original.ServiceKind5Stateful
	ServiceKind5Stateless ServiceKind5 = original.ServiceKind5Stateless
)

func PossibleServiceKind5Values() []ServiceKind5 {
	return original.PossibleServiceKind5Values()
}

type ServiceKind6 = original.ServiceKind6

const (
	ServiceKind6Invalid   ServiceKind6 = original.ServiceKind6Invalid
	ServiceKind6Stateful  ServiceKind6 = original.ServiceKind6Stateful
	ServiceKind6Stateless ServiceKind6 = original.ServiceKind6Stateless
)

func PossibleServiceKind6Values() []ServiceKind6 {
	return original.PossibleServiceKind6Values()
}

type ServiceKindBasicCreateServiceDescription = original.ServiceKindBasicCreateServiceDescription

const (
	ServiceKindCreateServiceDescription ServiceKindBasicCreateServiceDescription = original.ServiceKindCreateServiceDescription
	ServiceKindStateful1                ServiceKindBasicCreateServiceDescription = original.ServiceKindStateful1
	ServiceKindStateless1               ServiceKindBasicCreateServiceDescription = original.ServiceKindStateless1
)

func PossibleServiceKindBasicCreateServiceDescriptionValues() []ServiceKindBasicCreateServiceDescription {
	return original.PossibleServiceKindBasicCreateServiceDescriptionValues()
}

type ServiceKindBasicCreateServiceGroupDescription = original.ServiceKindBasicCreateServiceGroupDescription

const (
	ServiceKindBasicCreateServiceGroupDescriptionServiceKindCreateServiceGroupDescription ServiceKindBasicCreateServiceGroupDescription = original.ServiceKindBasicCreateServiceGroupDescriptionServiceKindCreateServiceGroupDescription
	ServiceKindBasicCreateServiceGroupDescriptionServiceKindStateful                      ServiceKindBasicCreateServiceGroupDescription = original.ServiceKindBasicCreateServiceGroupDescriptionServiceKindStateful
	ServiceKindBasicCreateServiceGroupDescriptionServiceKindStateless                     ServiceKindBasicCreateServiceGroupDescription = original.ServiceKindBasicCreateServiceGroupDescriptionServiceKindStateless
)

func PossibleServiceKindBasicCreateServiceGroupDescriptionValues() []ServiceKindBasicCreateServiceGroupDescription {
	return original.PossibleServiceKindBasicCreateServiceGroupDescriptionValues()
}

type ServiceKindBasicServiceDescription = original.ServiceKindBasicServiceDescription

const (
	ServiceKindBasicServiceDescriptionServiceKindServiceDescription ServiceKindBasicServiceDescription = original.ServiceKindBasicServiceDescriptionServiceKindServiceDescription
	ServiceKindBasicServiceDescriptionServiceKindStateful           ServiceKindBasicServiceDescription = original.ServiceKindBasicServiceDescriptionServiceKindStateful
	ServiceKindBasicServiceDescriptionServiceKindStateless          ServiceKindBasicServiceDescription = original.ServiceKindBasicServiceDescriptionServiceKindStateless
)

func PossibleServiceKindBasicServiceDescriptionValues() []ServiceKindBasicServiceDescription {
	return original.PossibleServiceKindBasicServiceDescriptionValues()
}

type ServiceKindBasicServiceGroupDescription = original.ServiceKindBasicServiceGroupDescription

const (
	ServiceKindBasicServiceGroupDescriptionServiceKindServiceGroupDescription ServiceKindBasicServiceGroupDescription = original.ServiceKindBasicServiceGroupDescriptionServiceKindServiceGroupDescription
	ServiceKindBasicServiceGroupDescriptionServiceKindStateful                ServiceKindBasicServiceGroupDescription = original.ServiceKindBasicServiceGroupDescriptionServiceKindStateful
	ServiceKindBasicServiceGroupDescriptionServiceKindStateless               ServiceKindBasicServiceGroupDescription = original.ServiceKindBasicServiceGroupDescriptionServiceKindStateless
)

func PossibleServiceKindBasicServiceGroupDescriptionValues() []ServiceKindBasicServiceGroupDescription {
	return original.PossibleServiceKindBasicServiceGroupDescriptionValues()
}

type ServiceKindBasicUpdateServiceDescription = original.ServiceKindBasicUpdateServiceDescription

const (
	ServiceKindBasicUpdateServiceDescriptionServiceKindStateful                 ServiceKindBasicUpdateServiceDescription = original.ServiceKindBasicUpdateServiceDescriptionServiceKindStateful
	ServiceKindBasicUpdateServiceDescriptionServiceKindStateless                ServiceKindBasicUpdateServiceDescription = original.ServiceKindBasicUpdateServiceDescriptionServiceKindStateless
	ServiceKindBasicUpdateServiceDescriptionServiceKindUpdateServiceDescription ServiceKindBasicUpdateServiceDescription = original.ServiceKindBasicUpdateServiceDescriptionServiceKindUpdateServiceDescription
)

func PossibleServiceKindBasicUpdateServiceDescriptionValues() []ServiceKindBasicUpdateServiceDescription {
	return original.PossibleServiceKindBasicUpdateServiceDescriptionValues()
}

type ServiceKindBasicUpdateServiceGroupDescription = original.ServiceKindBasicUpdateServiceGroupDescription

const (
	ServiceKindBasicUpdateServiceGroupDescriptionServiceKindStateful                      ServiceKindBasicUpdateServiceGroupDescription = original.ServiceKindBasicUpdateServiceGroupDescriptionServiceKindStateful
	ServiceKindBasicUpdateServiceGroupDescriptionServiceKindStateless                     ServiceKindBasicUpdateServiceGroupDescription = original.ServiceKindBasicUpdateServiceGroupDescriptionServiceKindStateless
	ServiceKindBasicUpdateServiceGroupDescriptionServiceKindUpdateServiceGroupDescription ServiceKindBasicUpdateServiceGroupDescription = original.ServiceKindBasicUpdateServiceGroupDescriptionServiceKindUpdateServiceGroupDescription
)

func PossibleServiceKindBasicUpdateServiceGroupDescriptionValues() []ServiceKindBasicUpdateServiceGroupDescription {
	return original.PossibleServiceKindBasicUpdateServiceGroupDescriptionValues()
}

type ServiceLoadMetricWeight = original.ServiceLoadMetricWeight

const (
	ServiceLoadMetricWeightHigh   ServiceLoadMetricWeight = original.ServiceLoadMetricWeightHigh
	ServiceLoadMetricWeightLow    ServiceLoadMetricWeight = original.ServiceLoadMetricWeightLow
	ServiceLoadMetricWeightMedium ServiceLoadMetricWeight = original.ServiceLoadMetricWeightMedium
	ServiceLoadMetricWeightZero   ServiceLoadMetricWeight = original.ServiceLoadMetricWeightZero
)

func PossibleServiceLoadMetricWeightValues() []ServiceLoadMetricWeight {
	return original.PossibleServiceLoadMetricWeightValues()
}

type ServicePartitionKind = original.ServicePartitionKind

const (
	ServicePartitionKindInt64Range ServicePartitionKind = original.ServicePartitionKindInt64Range
	ServicePartitionKindInvalid    ServicePartitionKind = original.ServicePartitionKindInvalid
	ServicePartitionKindNamed      ServicePartitionKind = original.ServicePartitionKindNamed
	ServicePartitionKindSingleton  ServicePartitionKind = original.ServicePartitionKindSingleton
)

func PossibleServicePartitionKindValues() []ServicePartitionKind {
	return original.PossibleServicePartitionKindValues()
}

type ServiceStatus = original.ServiceStatus

const (
	ServiceStatusActive    ServiceStatus = original.ServiceStatusActive
	ServiceStatusCreating  ServiceStatus = original.ServiceStatusCreating
	ServiceStatusDeleting  ServiceStatus = original.ServiceStatusDeleting
	ServiceStatusFaile     ServiceStatus = original.ServiceStatusFaile
	ServiceStatusInvalid   ServiceStatus = original.ServiceStatusInvalid
	ServiceStatusUpgrading ServiceStatus = original.ServiceStatusUpgrading
)

func PossibleServiceStatusValues() []ServiceStatus {
	return original.PossibleServiceStatusValues()
}

type UpgradeKind = original.UpgradeKind

const (
	UpgradeKindInvalid UpgradeKind = original.UpgradeKindInvalid
	UpgradeKindRolling UpgradeKind = original.UpgradeKindRolling
)

func PossibleUpgradeKindValues() []UpgradeKind {
	return original.PossibleUpgradeKindValues()
}

type UpgradeState = original.UpgradeState

const (
	UpgradeStateInvalid                  UpgradeState = original.UpgradeStateInvalid
	UpgradeStateRollingBackCompleted     UpgradeState = original.UpgradeStateRollingBackCompleted
	UpgradeStateRollingBackInProgress    UpgradeState = original.UpgradeStateRollingBackInProgress
	UpgradeStateRollingForwardCompleted  UpgradeState = original.UpgradeStateRollingForwardCompleted
	UpgradeStateRollingForwardInProgress UpgradeState = original.UpgradeStateRollingForwardInProgress
	UpgradeStateRollingForwardPending    UpgradeState = original.UpgradeStateRollingForwardPending
)

func PossibleUpgradeStateValues() []UpgradeState {
	return original.PossibleUpgradeStateValues()
}

type UpgradeState1 = original.UpgradeState1

const (
	UpgradeState1Invalid                  UpgradeState1 = original.UpgradeState1Invalid
	UpgradeState1RollingBackCompleted     UpgradeState1 = original.UpgradeState1RollingBackCompleted
	UpgradeState1RollingBackInProgress    UpgradeState1 = original.UpgradeState1RollingBackInProgress
	UpgradeState1RollingForwardCompleted  UpgradeState1 = original.UpgradeState1RollingForwardCompleted
	UpgradeState1RollingForwardInProgress UpgradeState1 = original.UpgradeState1RollingForwardInProgress
	UpgradeState1RollingForwardPending    UpgradeState1 = original.UpgradeState1RollingForwardPending
)

func PossibleUpgradeState1Values() []UpgradeState1 {
	return original.PossibleUpgradeState1Values()
}

type Application = original.Application
type ApplicationDescription = original.ApplicationDescription
type ApplicationDescriptionParameterListItem = original.ApplicationDescriptionParameterListItem
type ApplicationHealth = original.ApplicationHealth
type ApplicationHealthDeployedApplicationHealthStatesItem = original.ApplicationHealthDeployedApplicationHealthStatesItem
type ApplicationHealthEvaluation = original.ApplicationHealthEvaluation
type ApplicationHealthPolicy = original.ApplicationHealthPolicy
type ApplicationHealthPolicyDefaultServiceTypeHealthPolicy = original.ApplicationHealthPolicyDefaultServiceTypeHealthPolicy
type ApplicationHealthPolicyMap = original.ApplicationHealthPolicyMap
type ApplicationHealthReport = original.ApplicationHealthReport
type ApplicationHealthServiceHealthStatesItem = original.ApplicationHealthServiceHealthStatesItem
type ApplicationList = original.ApplicationList
type ApplicationManifest = original.ApplicationManifest
type ApplicationParametersItem = original.ApplicationParametersItem
type ApplicationsHealthEvaluation = original.ApplicationsHealthEvaluation
type ApplicationType = original.ApplicationType
type ApplicationTypeDefaultParameterListItem = original.ApplicationTypeDefaultParameterListItem
type ApplicationTypeHealthEvaluation = original.ApplicationTypeHealthEvaluation
type ApplicationUpgrade = original.ApplicationUpgrade
type ApplicationUpgradeCurrentUpgradeDomainProgress = original.ApplicationUpgradeCurrentUpgradeDomainProgress
type ApplicationUpgradeDeployedApplicationHealthStates = original.ApplicationUpgradeDeployedApplicationHealthStates
type ClusterHealth = original.ClusterHealth
type ClusterHealthApplicationHealthStateItem = original.ClusterHealthApplicationHealthStateItem
type ClusterHealthNodeHealthStatesItem = original.ClusterHealthNodeHealthStatesItem
type ClusterHealthNodeHealthStatesItemID = original.ClusterHealthNodeHealthStatesItemID
type ClusterHealthPolicy = original.ClusterHealthPolicy
type ClusterHealthReport = original.ClusterHealthReport
type ClusterLoadInformation = original.ClusterLoadInformation
type ClusterUpgradeHealthPolicy = original.ClusterUpgradeHealthPolicy
type ClusterUpgradeProgress = original.ClusterUpgradeProgress
type ClusterUpgradeProgressCurrentUpgradeDomainProgress = original.ClusterUpgradeProgressCurrentUpgradeDomainProgress
type ClusterUpgradeProgressUpgradeDomainProgressAtFailure = original.ClusterUpgradeProgressUpgradeDomainProgressAtFailure
type CodePackageEntryPointStatistics = original.CodePackageEntryPointStatistics
type BasicCreateServiceDescription = original.BasicCreateServiceDescription
type CreateServiceDescription = original.CreateServiceDescription
type BasicCreateServiceGroupDescription = original.BasicCreateServiceGroupDescription
type CreateServiceGroupDescription = original.CreateServiceGroupDescription
type DeltaNodesCheckHealthEvaluation = original.DeltaNodesCheckHealthEvaluation
type DeployedApplication = original.DeployedApplication
type DeployedApplicationHealth = original.DeployedApplicationHealth
type DeployedApplicationHealthEvaluation = original.DeployedApplicationHealthEvaluation
type DeployedApplicationHealthReport = original.DeployedApplicationHealthReport
type DeployedApplicationsHealthEvaluation = original.DeployedApplicationsHealthEvaluation
type DeployedCodePackage = original.DeployedCodePackage
type DeployedReplica = original.DeployedReplica
type DeployedReplicaDetail = original.DeployedReplicaDetail
type DeployedReplicaDetailReplicatorStatus = original.DeployedReplicaDetailReplicatorStatus
type DeployedReplicaDetailReplicatorStatusReplicationQueueStatus = original.DeployedReplicaDetailReplicatorStatusReplicationQueueStatus
type DeployedServiceHealthReport = original.DeployedServiceHealthReport
type DeployedServicePackage = original.DeployedServicePackage
type DeployedServicePackageHealth = original.DeployedServicePackageHealth
type DeployedServicePackageHealthEvaluation = original.DeployedServicePackageHealthEvaluation
type DeployedServicePackageHealthState = original.DeployedServicePackageHealthState
type DeployedServicePackagesHealthEvaluation = original.DeployedServicePackagesHealthEvaluation
type DeployedServiceType = original.DeployedServiceType
type DisableNode = original.DisableNode
type EntryPoint = original.EntryPoint
type ErrorModel = original.ErrorModel
type ErrorModelError = original.ErrorModelError
type EventHealthEvaluation = original.EventHealthEvaluation
type BasicHealthEvaluation = original.BasicHealthEvaluation
type HealthEvaluation = original.HealthEvaluation
type HealthEvent = original.HealthEvent
type HealthReport = original.HealthReport
type ListApplicationType = original.ListApplicationType
type ListDeployedApplication = original.ListDeployedApplication
type ListDeployedCodePackage = original.ListDeployedCodePackage
type ListDeployedReplica = original.ListDeployedReplica
type ListDeployedServicePackage = original.ListDeployedServicePackage
type ListDeployedServiceType = original.ListDeployedServiceType
type ListServiceType = original.ListServiceType
type LoadMetricInformation = original.LoadMetricInformation
type LoadMetricInformationMaxNodeLoadID = original.LoadMetricInformationMaxNodeLoadID
type LoadMetricInformationMinNodeLoadID = original.LoadMetricInformationMinNodeLoadID
type MonitoringPolicy = original.MonitoringPolicy
type Node = original.Node
type NodeHealth = original.NodeHealth
type NodeHealthEvaluation = original.NodeHealthEvaluation
type NodeHealthReport = original.NodeHealthReport
type NodeID = original.NodeID
type NodeList = original.NodeList
type NodeLoadInformation = original.NodeLoadInformation
type NodeLoadMetricInformation = original.NodeLoadMetricInformation
type NodeNodeDeactivationInfo = original.NodeNodeDeactivationInfo
type NodesHealthEvaluation = original.NodesHealthEvaluation
type Partition = original.Partition
type PartitionCurrentConfigurationEpoch = original.PartitionCurrentConfigurationEpoch
type PartitionDescription = original.PartitionDescription
type PartitionHealth = original.PartitionHealth
type PartitionHealthEvaluation = original.PartitionHealthEvaluation
type PartitionHealthReplicaHealthStatesItem = original.PartitionHealthReplicaHealthStatesItem
type PartitionHealthReport = original.PartitionHealthReport
type PartitionInformation = original.PartitionInformation
type PartitionList = original.PartitionList
type PartitionLoadInformation = original.PartitionLoadInformation
type PartitionsHealthEvaluation = original.PartitionsHealthEvaluation
type RegisterApplicationType = original.RegisterApplicationType
type RegisterClusterPackage = original.RegisterClusterPackage
type Replica = original.Replica
type ReplicaHealth = original.ReplicaHealth
type ReplicaHealthEvaluation = original.ReplicaHealthEvaluation
type ReplicaHealthReport = original.ReplicaHealthReport
type ReplicaList = original.ReplicaList
type ReplicaLoadInformation = original.ReplicaLoadInformation
type ReplicasHealthEvaluation = original.ReplicasHealthEvaluation
type ResolvedServicePartition = original.ResolvedServicePartition
type ResolvedServicePartitionEndpointsItem = original.ResolvedServicePartitionEndpointsItem
type ResumeApplicationUpgrade = original.ResumeApplicationUpgrade
type ResumeClusterUpgrade = original.ResumeClusterUpgrade
type Service = original.Service
type ServiceCorrelationDescription = original.ServiceCorrelationDescription
type BasicServiceDescription = original.BasicServiceDescription
type ServiceDescription = original.ServiceDescription
type ServiceDescriptionModel = original.ServiceDescriptionModel
type ServiceDescriptionTemplate = original.ServiceDescriptionTemplate
type BasicServiceGroupDescription = original.BasicServiceGroupDescription
type ServiceGroupDescription = original.ServiceGroupDescription
type ServiceGroupDescriptionModel = original.ServiceGroupDescriptionModel
type ServiceGroupMember = original.ServiceGroupMember
type ServiceGroupMemberDescription = original.ServiceGroupMemberDescription
type ServiceHealth = original.ServiceHealth
type ServiceHealthEvaluation = original.ServiceHealthEvaluation
type ServiceHealthPartitionHealthStatesItem = original.ServiceHealthPartitionHealthStatesItem
type ServiceHealthReport = original.ServiceHealthReport
type ServiceList = original.ServiceList
type ServiceLoadMetricDescription = original.ServiceLoadMetricDescription
type ServiceManifest = original.ServiceManifest
type ServicePlacementPolicyDescription = original.ServicePlacementPolicyDescription
type ServicesHealthEvaluation = original.ServicesHealthEvaluation
type ServiceType = original.ServiceType
type ServiceTypeServiceTypeDescription = original.ServiceTypeServiceTypeDescription
type StartApplicationUpgrade = original.StartApplicationUpgrade
type StartApplicationUpgradeParametersItem = original.StartApplicationUpgradeParametersItem
type StartClusterUpgrade = original.StartClusterUpgrade
type StatefulCreateServiceDescription = original.StatefulCreateServiceDescription
type StatefulCreateServiceGroupDescription = original.StatefulCreateServiceGroupDescription
type StatefulServiceDescription = original.StatefulServiceDescription
type StatefulServiceGroupDescription = original.StatefulServiceGroupDescription
type StatefulUpdateServiceDescription = original.StatefulUpdateServiceDescription
type StatefulUpdateServiceGroupDescription = original.StatefulUpdateServiceGroupDescription
type StatelessCreateServiceDescription = original.StatelessCreateServiceDescription
type StatelessCreateServiceGroupDescription = original.StatelessCreateServiceGroupDescription
type StatelessServiceDescription = original.StatelessServiceDescription
type StatelessServiceGroupDescription = original.StatelessServiceGroupDescription
type StatelessUpdateServiceDescription = original.StatelessUpdateServiceDescription
type StatelessUpdateServiceGroupDescription = original.StatelessUpdateServiceGroupDescription
type String = original.String
type SystemApplicationHealthEvaluation = original.SystemApplicationHealthEvaluation
type UnhealthyEvaluation = original.UnhealthyEvaluation
type UnregisterApplicationType = original.UnregisterApplicationType
type UnregisterClusterPackage = original.UnregisterClusterPackage
type UpdateApplicationUpgrade = original.UpdateApplicationUpgrade
type UpdateClusterUpgrade = original.UpdateClusterUpgrade
type UpdateDescription = original.UpdateDescription
type BasicUpdateServiceDescription = original.BasicUpdateServiceDescription
type UpdateServiceDescription = original.UpdateServiceDescription
type BasicUpdateServiceGroupDescription = original.BasicUpdateServiceGroupDescription
type UpdateServiceGroupDescription = original.UpdateServiceGroupDescription
type UpgradeDomainDeltaNodesCheckHealthEvaluation = original.UpgradeDomainDeltaNodesCheckHealthEvaluation
type UpgradeDomainDeployedApplicationsHealthEvaluation = original.UpgradeDomainDeployedApplicationsHealthEvaluation
type UpgradeDomainNodesHealthEvaluation = original.UpgradeDomainNodesHealthEvaluation
type NodeHealthsClient = original.NodeHealthsClient

func NewNodeHealthsClient(timeout *int32) NodeHealthsClient {
	return original.NewNodeHealthsClient(timeout)
}
func NewNodeHealthsClientWithBaseURI(baseURI string, timeout *int32) NodeHealthsClient {
	return original.NewNodeHealthsClientWithBaseURI(baseURI, timeout)
}

type NodeLoadInformationsClient = original.NodeLoadInformationsClient

func NewNodeLoadInformationsClient(timeout *int32) NodeLoadInformationsClient {
	return original.NewNodeLoadInformationsClient(timeout)
}
func NewNodeLoadInformationsClientWithBaseURI(baseURI string, timeout *int32) NodeLoadInformationsClient {
	return original.NewNodeLoadInformationsClientWithBaseURI(baseURI, timeout)
}

type NodesClient = original.NodesClient

func NewNodesClient(timeout *int32) NodesClient {
	return original.NewNodesClient(timeout)
}
func NewNodesClientWithBaseURI(baseURI string, timeout *int32) NodesClient {
	return original.NewNodesClientWithBaseURI(baseURI, timeout)
}

type NodeStatesClient = original.NodeStatesClient

func NewNodeStatesClient(timeout *int32) NodeStatesClient {
	return original.NewNodeStatesClient(timeout)
}
func NewNodeStatesClientWithBaseURI(baseURI string, timeout *int32) NodeStatesClient {
	return original.NewNodeStatesClientWithBaseURI(baseURI, timeout)
}

type PartitionHealthsClient = original.PartitionHealthsClient

func NewPartitionHealthsClient(timeout *int32) PartitionHealthsClient {
	return original.NewPartitionHealthsClient(timeout)
}
func NewPartitionHealthsClientWithBaseURI(baseURI string, timeout *int32) PartitionHealthsClient {
	return original.NewPartitionHealthsClientWithBaseURI(baseURI, timeout)
}

type PartitionListsClient = original.PartitionListsClient

func NewPartitionListsClient(timeout *int32) PartitionListsClient {
	return original.NewPartitionListsClient(timeout)
}
func NewPartitionListsClientWithBaseURI(baseURI string, timeout *int32) PartitionListsClient {
	return original.NewPartitionListsClientWithBaseURI(baseURI, timeout)
}

type PartitionLoadInformationsClient = original.PartitionLoadInformationsClient

func NewPartitionLoadInformationsClient(timeout *int32) PartitionLoadInformationsClient {
	return original.NewPartitionLoadInformationsClient(timeout)
}
func NewPartitionLoadInformationsClientWithBaseURI(baseURI string, timeout *int32) PartitionLoadInformationsClient {
	return original.NewPartitionLoadInformationsClientWithBaseURI(baseURI, timeout)
}

type PartitionLoadsClient = original.PartitionLoadsClient

func NewPartitionLoadsClient(timeout *int32) PartitionLoadsClient {
	return original.NewPartitionLoadsClient(timeout)
}
func NewPartitionLoadsClientWithBaseURI(baseURI string, timeout *int32) PartitionLoadsClient {
	return original.NewPartitionLoadsClientWithBaseURI(baseURI, timeout)
}

type PartitionsClient = original.PartitionsClient

func NewPartitionsClient(timeout *int32) PartitionsClient {
	return original.NewPartitionsClient(timeout)
}
func NewPartitionsClientWithBaseURI(baseURI string, timeout *int32) PartitionsClient {
	return original.NewPartitionsClientWithBaseURI(baseURI, timeout)
}

type ReplicaHealthsClient = original.ReplicaHealthsClient

func NewReplicaHealthsClient(timeout *int32) ReplicaHealthsClient {
	return original.NewReplicaHealthsClient(timeout)
}
func NewReplicaHealthsClientWithBaseURI(baseURI string, timeout *int32) ReplicaHealthsClient {
	return original.NewReplicaHealthsClientWithBaseURI(baseURI, timeout)
}

type ReplicaLoadInformationsClient = original.ReplicaLoadInformationsClient

func NewReplicaLoadInformationsClient(timeout *int32) ReplicaLoadInformationsClient {
	return original.NewReplicaLoadInformationsClient(timeout)
}
func NewReplicaLoadInformationsClientWithBaseURI(baseURI string, timeout *int32) ReplicaLoadInformationsClient {
	return original.NewReplicaLoadInformationsClientWithBaseURI(baseURI, timeout)
}

type ReplicasClient = original.ReplicasClient

func NewReplicasClient(timeout *int32) ReplicasClient {
	return original.NewReplicasClient(timeout)
}
func NewReplicasClientWithBaseURI(baseURI string, timeout *int32) ReplicasClient {
	return original.NewReplicasClientWithBaseURI(baseURI, timeout)
}

type ServiceDescriptionsClient = original.ServiceDescriptionsClient

func NewServiceDescriptionsClient(timeout *int32) ServiceDescriptionsClient {
	return original.NewServiceDescriptionsClient(timeout)
}
func NewServiceDescriptionsClientWithBaseURI(baseURI string, timeout *int32) ServiceDescriptionsClient {
	return original.NewServiceDescriptionsClientWithBaseURI(baseURI, timeout)
}

type ServiceFromTemplatesClient = original.ServiceFromTemplatesClient

func NewServiceFromTemplatesClient(timeout *int32) ServiceFromTemplatesClient {
	return original.NewServiceFromTemplatesClient(timeout)
}
func NewServiceFromTemplatesClientWithBaseURI(baseURI string, timeout *int32) ServiceFromTemplatesClient {
	return original.NewServiceFromTemplatesClientWithBaseURI(baseURI, timeout)
}

type ServiceGroupDescriptionsClient = original.ServiceGroupDescriptionsClient

func NewServiceGroupDescriptionsClient(timeout *int32) ServiceGroupDescriptionsClient {
	return original.NewServiceGroupDescriptionsClient(timeout)
}
func NewServiceGroupDescriptionsClientWithBaseURI(baseURI string, timeout *int32) ServiceGroupDescriptionsClient {
	return original.NewServiceGroupDescriptionsClientWithBaseURI(baseURI, timeout)
}

type ServiceGroupFromTemplatesClient = original.ServiceGroupFromTemplatesClient

func NewServiceGroupFromTemplatesClient(timeout *int32) ServiceGroupFromTemplatesClient {
	return original.NewServiceGroupFromTemplatesClient(timeout)
}
func NewServiceGroupFromTemplatesClientWithBaseURI(baseURI string, timeout *int32) ServiceGroupFromTemplatesClient {
	return original.NewServiceGroupFromTemplatesClientWithBaseURI(baseURI, timeout)
}

type ServiceGroupMembersClient = original.ServiceGroupMembersClient

func NewServiceGroupMembersClient(timeout *int32) ServiceGroupMembersClient {
	return original.NewServiceGroupMembersClient(timeout)
}
func NewServiceGroupMembersClientWithBaseURI(baseURI string, timeout *int32) ServiceGroupMembersClient {
	return original.NewServiceGroupMembersClientWithBaseURI(baseURI, timeout)
}

type ServiceGroupsClient = original.ServiceGroupsClient

func NewServiceGroupsClient(timeout *int32) ServiceGroupsClient {
	return original.NewServiceGroupsClient(timeout)
}
func NewServiceGroupsClientWithBaseURI(baseURI string, timeout *int32) ServiceGroupsClient {
	return original.NewServiceGroupsClientWithBaseURI(baseURI, timeout)
}

type ServiceHealthsClient = original.ServiceHealthsClient

func NewServiceHealthsClient(timeout *int32) ServiceHealthsClient {
	return original.NewServiceHealthsClient(timeout)
}
func NewServiceHealthsClientWithBaseURI(baseURI string, timeout *int32) ServiceHealthsClient {
	return original.NewServiceHealthsClientWithBaseURI(baseURI, timeout)
}

type ServiceManifestsClient = original.ServiceManifestsClient

func NewServiceManifestsClient(timeout *int32) ServiceManifestsClient {
	return original.NewServiceManifestsClient(timeout)
}
func NewServiceManifestsClientWithBaseURI(baseURI string, timeout *int32) ServiceManifestsClient {
	return original.NewServiceManifestsClientWithBaseURI(baseURI, timeout)
}

type ServicesClient = original.ServicesClient

func NewServicesClient(timeout *int32) ServicesClient {
	return original.NewServicesClient(timeout)
}
func NewServicesClientWithBaseURI(baseURI string, timeout *int32) ServicesClient {
	return original.NewServicesClientWithBaseURI(baseURI, timeout)
}

type ServiceTypesClient = original.ServiceTypesClient

func NewServiceTypesClient(timeout *int32) ServiceTypesClient {
	return original.NewServiceTypesClient(timeout)
}
func NewServiceTypesClientWithBaseURI(baseURI string, timeout *int32) ServiceTypesClient {
	return original.NewServiceTypesClientWithBaseURI(baseURI, timeout)
}

type UpgradeProgressesClient = original.UpgradeProgressesClient

func NewUpgradeProgressesClient(timeout *int32) UpgradeProgressesClient {
	return original.NewUpgradeProgressesClient(timeout)
}
func NewUpgradeProgressesClientWithBaseURI(baseURI string, timeout *int32) UpgradeProgressesClient {
	return original.NewUpgradeProgressesClientWithBaseURI(baseURI, timeout)
}
func UserAgent() string {
	return original.UserAgent() + " profiles/latest"
}
func Version() string {
	return original.Version()
}
