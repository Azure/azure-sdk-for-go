// +build go1.9

// Copyright 2019 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/tools/profileBuilder

package anomalydetector

import original "github.com/Azure/azure-sdk-for-go/services/preview/cognitiveservices/v1.0/anomalydetector"

type Granularity = original.Granularity

const (
	Daily    Granularity = original.Daily
	Hourly   Granularity = original.Hourly
	Minutely Granularity = original.Minutely
	Monthly  Granularity = original.Monthly
	Weekly   Granularity = original.Weekly
	Yearly   Granularity = original.Yearly
)

type LabelType = original.LabelType

const (
	Anomaly     LabelType = original.Anomaly
	ChangePoint LabelType = original.ChangePoint
)

type LabelValue = original.LabelValue

const (
	NegativeAnomaly     LabelValue = original.NegativeAnomaly
	NegativeChangePoint LabelValue = original.NegativeChangePoint
	PositiveAnomaly     LabelValue = original.PositiveAnomaly
	PositiveChangePoint LabelValue = original.PositiveChangePoint
)

type TimeSeriesField = original.TimeSeriesField

const (
	AnomalyConfidenceScore     TimeSeriesField = original.AnomalyConfidenceScore
	ChangePointConfidenceScore TimeSeriesField = original.ChangePointConfidenceScore
	ExpectedValue              TimeSeriesField = original.ExpectedValue
	IsAnomaly                  TimeSeriesField = original.IsAnomaly
	IsChangePoint              TimeSeriesField = original.IsChangePoint
	IsNegativeAnomaly          TimeSeriesField = original.IsNegativeAnomaly
	IsPositiveAnomaly          TimeSeriesField = original.IsPositiveAnomaly
	LowerMargin                TimeSeriesField = original.LowerMargin
	Period                     TimeSeriesField = original.Period
	UpperMargin                TimeSeriesField = original.UpperMargin
	Value                      TimeSeriesField = original.Value
)

type APIError = original.APIError
type AnomalyDetectOnTimestampRequest = original.AnomalyDetectOnTimestampRequest
type AnomalyDetectOnTimestampResponse = original.AnomalyDetectOnTimestampResponse
type BaseClient = original.BaseClient
type ChangePointDetectOnTimestampRequest = original.ChangePointDetectOnTimestampRequest
type ChangePointDetectOnTimestampResponse = original.ChangePointDetectOnTimestampResponse
type ChangePointDetectRequest = original.ChangePointDetectRequest
type ChangePointDetectResponse = original.ChangePointDetectResponse
type EntireDetectResponse = original.EntireDetectResponse
type Inconsistency = original.Inconsistency
type InconsistencyDetectRequest = original.InconsistencyDetectRequest
type LabelRequest = original.LabelRequest
type LastDetectResponse = original.LastDetectResponse
type Point = original.Point
type Request = original.Request
type SetObject = original.SetObject
type TimeSeries = original.TimeSeries
type TimeSeriesClient = original.TimeSeriesClient
type TimeSeriesCreateRequest = original.TimeSeriesCreateRequest
type TimeSeriesList = original.TimeSeriesList
type TimeSeriesQueryRequest = original.TimeSeriesQueryRequest
type TimeSeriesQueryResponse = original.TimeSeriesQueryResponse

func New(endpoint string) BaseClient {
	return original.New(endpoint)
}
func NewTimeSeriesClient(endpoint string) TimeSeriesClient {
	return original.NewTimeSeriesClient(endpoint)
}
func NewWithoutDefaults(endpoint string) BaseClient {
	return original.NewWithoutDefaults(endpoint)
}
func PossibleGranularityValues() []Granularity {
	return original.PossibleGranularityValues()
}
func PossibleLabelTypeValues() []LabelType {
	return original.PossibleLabelTypeValues()
}
func PossibleLabelValueValues() []LabelValue {
	return original.PossibleLabelValueValues()
}
func PossibleTimeSeriesFieldValues() []TimeSeriesField {
	return original.PossibleTimeSeriesFieldValues()
}
func UserAgent() string {
	return original.UserAgent() + " profiles/preview"
}
func Version() string {
	return original.Version()
}
