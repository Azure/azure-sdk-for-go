// +build go1.9

// Copyright 2019 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/tools/profileBuilder

package monitorconfiguration

import (
	"context"

	original "github.com/Azure/azure-sdk-for-go/services/preview/monitorconfiguration/mgmt/2019-07-01-privatepreview/monitorconfiguration"
)

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type ConfigurationType = original.ConfigurationType

const (
	BaseOS ConfigurationType = original.BaseOS
)

type MonitoringEngine = original.MonitoringEngine

const (
	VMHealth MonitoringEngine = original.VMHealth
)

type Assignment = original.Assignment
type AssignmentCollection = original.AssignmentCollection
type AssignmentCollectionIterator = original.AssignmentCollectionIterator
type AssignmentCollectionPage = original.AssignmentCollectionPage
type AssignmentCreateParameters = original.AssignmentCreateParameters
type AssignmentProperties = original.AssignmentProperties
type AssignmentsClient = original.AssignmentsClient
type AssignmentsCreateOnScopeFuture = original.AssignmentsCreateOnScopeFuture
type AssignmentsDeleteFromScopeFuture = original.AssignmentsDeleteFromScopeFuture
type BaseClient = original.BaseClient
type CreateOrUpdateParameters = original.CreateOrUpdateParameters
type HealthRollup = original.HealthRollup
type HealthRule = original.HealthRule
type MonitorConfiguration = original.MonitorConfiguration
type MonitorConfigurationsClient = original.MonitorConfigurationsClient
type MonitorConfigurationsCollectionIteratorType = original.MonitorConfigurationsCollectionIteratorType
type MonitorConfigurationsCollectionPageType = original.MonitorConfigurationsCollectionPageType
type MonitorConfigurationsCollectionType = original.MonitorConfigurationsCollectionType
type MonitorConfigurationsCreateOrUpdateFutureType = original.MonitorConfigurationsCreateOrUpdateFutureType
type MonitorConfigurationsUpdateFutureType = original.MonitorConfigurationsUpdateFutureType
type Operation = original.Operation
type OperationListResult = original.OperationListResult
type OperationListResultIterator = original.OperationListResultIterator
type OperationListResultPage = original.OperationListResultPage
type OperationProperties = original.OperationProperties
type OperationsClient = original.OperationsClient
type Properties = original.Properties
type SetObject = original.SetObject

func New(subscriptionID string) BaseClient {
	return original.New(subscriptionID)
}
func NewAssignmentCollectionIterator(page AssignmentCollectionPage) AssignmentCollectionIterator {
	return original.NewAssignmentCollectionIterator(page)
}
func NewAssignmentCollectionPage(getNextPage func(context.Context, AssignmentCollection) (AssignmentCollection, error)) AssignmentCollectionPage {
	return original.NewAssignmentCollectionPage(getNextPage)
}
func NewAssignmentsClient(subscriptionID string) AssignmentsClient {
	return original.NewAssignmentsClient(subscriptionID)
}
func NewAssignmentsClientWithBaseURI(baseURI string, subscriptionID string) AssignmentsClient {
	return original.NewAssignmentsClientWithBaseURI(baseURI, subscriptionID)
}
func NewMonitorConfigurationsClient(subscriptionID string) MonitorConfigurationsClient {
	return original.NewMonitorConfigurationsClient(subscriptionID)
}
func NewMonitorConfigurationsClientWithBaseURI(baseURI string, subscriptionID string) MonitorConfigurationsClient {
	return original.NewMonitorConfigurationsClientWithBaseURI(baseURI, subscriptionID)
}
func NewMonitorConfigurationsCollectionIteratorType(page MonitorConfigurationsCollectionPageType) MonitorConfigurationsCollectionIteratorType {
	return original.NewMonitorConfigurationsCollectionIteratorType(page)
}
func NewMonitorConfigurationsCollectionPageType(getNextPage func(context.Context, MonitorConfigurationsCollectionType) (MonitorConfigurationsCollectionType, error)) MonitorConfigurationsCollectionPageType {
	return original.NewMonitorConfigurationsCollectionPageType(getNextPage)
}
func NewOperationListResultIterator(page OperationListResultPage) OperationListResultIterator {
	return original.NewOperationListResultIterator(page)
}
func NewOperationListResultPage(getNextPage func(context.Context, OperationListResult) (OperationListResult, error)) OperationListResultPage {
	return original.NewOperationListResultPage(getNextPage)
}
func NewOperationsClient(subscriptionID string) OperationsClient {
	return original.NewOperationsClient(subscriptionID)
}
func NewOperationsClientWithBaseURI(baseURI string, subscriptionID string) OperationsClient {
	return original.NewOperationsClientWithBaseURI(baseURI, subscriptionID)
}
func NewWithBaseURI(baseURI string, subscriptionID string) BaseClient {
	return original.NewWithBaseURI(baseURI, subscriptionID)
}
func PossibleConfigurationTypeValues() []ConfigurationType {
	return original.PossibleConfigurationTypeValues()
}
func PossibleMonitoringEngineValues() []MonitoringEngine {
	return original.PossibleMonitoringEngineValues()
}
func UserAgent() string {
	return original.UserAgent() + " profiles/preview"
}
func Version() string {
	return original.Version()
}
