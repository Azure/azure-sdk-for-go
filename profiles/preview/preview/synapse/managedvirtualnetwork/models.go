//go:build go1.9
// +build go1.9

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/eng/tools/profileBuilder

package managedvirtualnetwork

import (
	"context"

	original "github.com/Azure/azure-sdk-for-go/services/preview/synapse/2019-06-01-preview/managedvirtualnetwork"
)

type BaseClient = original.BaseClient
type ManagedPrivateEndpoint = original.ManagedPrivateEndpoint
type ManagedPrivateEndpointConnectionState = original.ManagedPrivateEndpointConnectionState
type ManagedPrivateEndpointListResponse = original.ManagedPrivateEndpointListResponse
type ManagedPrivateEndpointListResponseIterator = original.ManagedPrivateEndpointListResponseIterator
type ManagedPrivateEndpointListResponsePage = original.ManagedPrivateEndpointListResponsePage
type ManagedPrivateEndpointProperties = original.ManagedPrivateEndpointProperties
type ManagedPrivateEndpointsClient = original.ManagedPrivateEndpointsClient

func New(endpoint string) BaseClient {
	return original.New(endpoint)
}
func NewManagedPrivateEndpointListResponseIterator(page ManagedPrivateEndpointListResponsePage) ManagedPrivateEndpointListResponseIterator {
	return original.NewManagedPrivateEndpointListResponseIterator(page)
}
func NewManagedPrivateEndpointListResponsePage(cur ManagedPrivateEndpointListResponse, getNextPage func(context.Context, ManagedPrivateEndpointListResponse) (ManagedPrivateEndpointListResponse, error)) ManagedPrivateEndpointListResponsePage {
	return original.NewManagedPrivateEndpointListResponsePage(cur, getNextPage)
}
func NewManagedPrivateEndpointsClient(endpoint string) ManagedPrivateEndpointsClient {
	return original.NewManagedPrivateEndpointsClient(endpoint)
}
func NewWithoutDefaults(endpoint string) BaseClient {
	return original.NewWithoutDefaults(endpoint)
}
func UserAgent() string {
	return original.UserAgent() + " profiles/preview"
}
func Version() string {
	return original.Version()
}
