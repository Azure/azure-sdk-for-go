//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azopenai

// GetAudioTranscriptionAsPlainTextOptions contains the optional parameters for the Client.GetAudioTranscriptionAsPlainText
// method.
type GetAudioTranscriptionAsPlainTextOptions struct {
	// placeholder for future optional parameters
}

// getAudioTranscriptionInternalOptions contains the optional parameters for the Client.getAudioTranscriptionInternal
// method.
type getAudioTranscriptionInternalOptions struct {
	// The optional filename or descriptive identifier to associate with with the audio data.
	Filename *string

	// The primary spoken language of the audio data to be transcribed, supplied as a two-letter ISO-639-1 language code such
	// as 'en' or 'fr'. Providing this known input language is optional but may improve
	// the accuracy and/or latency of transcription.
	Language *string

	// The model to use for this transcription request.
	Model *string

	// An optional hint to guide the model's style or continue from a prior audio segment. The written language of the prompt
	// should match the primary spoken language of the audio data.
	Prompt *string

	// The requested format of the transcription response data, which will influence the content and detail of the result.
	ResponseFormat *AudioTranscriptionFormat

	// The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values
	// like 0.2 will make it more focused and deterministic. If set to 0, the model will
	// use log probability to automatically increase the temperature until certain thresholds are hit.
	Temperature *float32
}

// GetAudioTranslationAsPlainTextOptions contains the optional parameters for the Client.GetAudioTranslationAsPlainText
// method.
type GetAudioTranslationAsPlainTextOptions struct {
	// placeholder for future optional parameters
}

// getAudioTranslationInternalOptions contains the optional parameters for the Client.getAudioTranslationInternal method.
type getAudioTranslationInternalOptions struct {
	// The optional filename or descriptive identifier to associate with with the audio data.
	Filename *string

	// The model to use for this translation request.
	Model *string

	// An optional hint to guide the model's style or continue from a prior audio segment. The written language of the prompt
	// should match the primary spoken language of the audio data.
	Prompt *string

	// The requested format of the translation response data, which will influence the content and detail of the result.
	ResponseFormat *AudioTranslationFormat

	// The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values
	// like 0.2 will make it more focused and deterministic. If set to 0, the model will
	// use log probability to automatically increase the temperature until certain thresholds are hit.
	Temperature *float32
}

// GetChatCompletionsOptions contains the optional parameters for the Client.GetChatCompletions method.
type GetChatCompletionsOptions struct {
	// placeholder for future optional parameters
}

// GetChatCompletionsWithAzureExtensionsOptions contains the optional parameters for the Client.GetChatCompletionsWithAzureExtensions
// method.
type GetChatCompletionsWithAzureExtensionsOptions struct {
	// placeholder for future optional parameters
}

// GetCompletionsOptions contains the optional parameters for the Client.GetCompletions method.
type GetCompletionsOptions struct {
	// placeholder for future optional parameters
}

// GetEmbeddingsOptions contains the optional parameters for the Client.GetEmbeddings method.
type GetEmbeddingsOptions struct {
	// placeholder for future optional parameters
}

// GetImageGenerationsOptions contains the optional parameters for the Client.GetImageGenerations method.
type GetImageGenerationsOptions struct {
	// placeholder for future optional parameters
}
