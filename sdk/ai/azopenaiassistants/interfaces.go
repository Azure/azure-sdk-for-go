//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azopenaiassistants

// CodeInterpreterToolCallOutputClassification provides polymorphic access to related types.
// Call the interface's GetCodeInterpreterToolCallOutput() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *CodeInterpreterImageOutput, *CodeInterpreterLogOutput, *CodeInterpreterToolCallOutput
type CodeInterpreterToolCallOutputClassification interface {
	// GetCodeInterpreterToolCallOutput returns the CodeInterpreterToolCallOutput content of the underlying type.
	GetCodeInterpreterToolCallOutput() *CodeInterpreterToolCallOutput
}

// MessageContentClassification provides polymorphic access to related types.
// Call the interface's GetMessageContent() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *MessageContent, *MessageImageFileContent, *MessageTextContent
type MessageContentClassification interface {
	// GetMessageContent returns the MessageContent content of the underlying type.
	GetMessageContent() *MessageContent
}

// MessageTextAnnotationClassification provides polymorphic access to related types.
// Call the interface's GetMessageTextAnnotation() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *MessageTextAnnotation, *MessageTextFileCitationAnnotation, *MessageTextFilePathAnnotation
type MessageTextAnnotationClassification interface {
	// GetMessageTextAnnotation returns the MessageTextAnnotation content of the underlying type.
	GetMessageTextAnnotation() *MessageTextAnnotation
}

// RequiredActionClassification provides polymorphic access to related types.
// Call the interface's GetRequiredAction() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *RequiredAction, *SubmitToolOutputsAction, *ThreadRunRequiredAction
type RequiredActionClassification interface {
	// GetRequiredAction returns the RequiredAction content of the underlying type.
	GetRequiredAction() *RequiredAction
}

// RequiredToolCallClassification provides polymorphic access to related types.
// Call the interface's GetRequiredToolCall() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *RequiredFunctionToolCall, *RequiredToolCall
type RequiredToolCallClassification interface {
	// GetRequiredToolCall returns the RequiredToolCall content of the underlying type.
	GetRequiredToolCall() *RequiredToolCall
}

// RunStepDetailsClassification provides polymorphic access to related types.
// Call the interface's GetRunStepDetails() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *RunStepDetails, *RunStepMessageCreationDetails, *RunStepToolCallDetails
type RunStepDetailsClassification interface {
	// GetRunStepDetails returns the RunStepDetails content of the underlying type.
	GetRunStepDetails() *RunStepDetails
}

// ToolCallClassification provides polymorphic access to related types.
// Call the interface's GetToolCall() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *CodeInterpreterToolCall, *FunctionToolCall, *RetrievalToolCall, *ToolCall
type ToolCallClassification interface {
	// GetToolCall returns the ToolCall content of the underlying type.
	GetToolCall() *ToolCall
}

// ToolDefinitionClassification provides polymorphic access to related types.
// Call the interface's GetToolDefinition() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *CodeInterpreterToolDefinition, *FunctionToolDefinition, *RetrievalToolDefinition, *ToolDefinition
type ToolDefinitionClassification interface {
	// GetToolDefinition returns the ToolDefinition content of the underlying type.
	GetToolDefinition() *ToolDefinition
}
