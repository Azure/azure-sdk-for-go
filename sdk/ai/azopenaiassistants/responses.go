//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azopenaiassistants

// CancelRunResponse contains the response from method Client.CancelRun.
type CancelRunResponse struct {
	// Data representing a single evaluation run of an assistant thread.
	ThreadRun
}

// CreateAssistantFileResponse contains the response from method Client.CreateAssistantFile.
type CreateAssistantFileResponse struct {
	// Information about a file attached to an assistant, as used by tools that can read files.
	AssistantFile
}

// CreateAssistantResponse contains the response from method Client.CreateAssistant.
type CreateAssistantResponse struct {
	// Represents an assistant that can call the model and use tools.
	Assistant
}

// CreateMessageResponse contains the response from method Client.CreateMessage.
type CreateMessageResponse struct {
	// A single, existing message within an assistant thread.
	ThreadMessage
}

// CreateRunResponse contains the response from method Client.CreateRun.
type CreateRunResponse struct {
	// Data representing a single evaluation run of an assistant thread.
	ThreadRun
}

// CreateThreadAndRunResponse contains the response from method Client.CreateThreadAndRun.
type CreateThreadAndRunResponse struct {
	// Data representing a single evaluation run of an assistant thread.
	ThreadRun
}

// CreateThreadResponse contains the response from method Client.CreateThread.
type CreateThreadResponse struct {
	// Information about a single thread associated with an assistant.
	AssistantThread
}

// DeleteAssistantFileResponse contains the response from method Client.DeleteAssistantFile.
type DeleteAssistantFileResponse struct {
	// The status of an assistant file deletion operation.
	AssistantFileDeletionStatus
}

// DeleteAssistantResponse contains the response from method Client.DeleteAssistant.
type DeleteAssistantResponse struct {
	// The status of an assistant deletion operation.
	AssistantDeletionStatus
}

// DeleteFileResponse contains the response from method Client.DeleteFile.
type DeleteFileResponse struct {
	// A status response from a file deletion operation.
	FileDeletionStatus
}

// DeleteThreadResponse contains the response from method Client.DeleteThread.
type DeleteThreadResponse struct {
	// The status of a thread deletion operation.
	ThreadDeletionStatus
}

// GetAssistantFileResponse contains the response from method Client.GetAssistantFile.
type GetAssistantFileResponse struct {
	// Information about a file attached to an assistant, as used by tools that can read files.
	AssistantFile
}

// GetAssistantResponse contains the response from method Client.GetAssistant.
type GetAssistantResponse struct {
	// Represents an assistant that can call the model and use tools.
	Assistant
}

// GetFileResponse contains the response from method Client.GetFile.
type GetFileResponse struct {
	// Represents an assistant that can call the model and use tools.
	OpenAIFile
}

// GetMessageFileResponse contains the response from method Client.GetMessageFile.
type GetMessageFileResponse struct {
	// Information about a file attached to an assistant thread message.
	MessageFile
}

// GetMessageResponse contains the response from method Client.GetMessage.
type GetMessageResponse struct {
	// A single, existing message within an assistant thread.
	ThreadMessage
}

// GetRunResponse contains the response from method Client.GetRun.
type GetRunResponse struct {
	// Data representing a single evaluation run of an assistant thread.
	ThreadRun
}

// GetRunStepResponse contains the response from method Client.GetRunStep.
type GetRunStepResponse struct {
	// Detailed information about a single step of an assistant thread run.
	RunStep
}

// GetThreadResponse contains the response from method Client.GetThread.
type GetThreadResponse struct {
	// Information about a single thread associated with an assistant.
	AssistantThread
}

// ListAssistantFilesResponse contains the response from method Client.ListAssistantFiles.
type ListAssistantFilesResponse struct {
	// The response data for a requested list of items.
	AssistantFilesPage
}

// ListAssistantsResponse contains the response from method Client.ListAssistants.
type ListAssistantsResponse struct {
	// The response data for a requested list of items.
	AssistantsPage
}

// ListFilesResponse contains the response from method Client.ListFiles.
type ListFilesResponse struct {
	// The response data from a file list operation.
	FileListResponse
}

// ListMessageFilesResponse contains the response from method Client.ListMessageFiles.
type ListMessageFilesResponse struct {
	// The response data for a requested list of items.
	MessageFilesPage
}

// ListMessagesResponse contains the response from method Client.ListMessages.
type ListMessagesResponse struct {
	// The response data for a requested list of items.
	MessagesPage
}

// ListRunStepsResponse contains the response from method Client.ListRunSteps.
type ListRunStepsResponse struct {
	// The response data for a requested list of items.
	RunStepsPage
}

// ListRunsResponse contains the response from method Client.ListRuns.
type ListRunsResponse struct {
	// The response data for a requested list of items.
	ThreadRunsPage
}

// SubmitToolOutputsToRunResponse contains the response from method Client.SubmitToolOutputsToRun.
type SubmitToolOutputsToRunResponse struct {
	// Data representing a single evaluation run of an assistant thread.
	ThreadRun
}

// UpdateAssistantResponse contains the response from method Client.UpdateAssistant.
type UpdateAssistantResponse struct {
	// Represents an assistant that can call the model and use tools.
	Assistant
}

// UpdateMessageResponse contains the response from method Client.UpdateMessage.
type UpdateMessageResponse struct {
	// A single, existing message within an assistant thread.
	ThreadMessage
}

// UpdateRunResponse contains the response from method Client.UpdateRun.
type UpdateRunResponse struct {
	// Data representing a single evaluation run of an assistant thread.
	ThreadRun
}

// UpdateThreadResponse contains the response from method Client.UpdateThread.
type UpdateThreadResponse struct {
	// Information about a single thread associated with an assistant.
	AssistantThread
}

// UploadFileResponse contains the response from method Client.UploadFile.
type UploadFileResponse struct {
	// Represents an assistant that can call the model and use tools.
	OpenAIFile
}
