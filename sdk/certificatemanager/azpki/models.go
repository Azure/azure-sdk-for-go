//go:build go1.18
// +build go1.18

// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/go@4.0.0-preview.45)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package azpki

import "time"

// CertificateAttributes - Certificate and/or Certificate chain, along with a list of the certificate's attributes.
type CertificateAttributes struct {
	// Acceptable values of ExtendedKeyUsage.
	ExtendedKeyUsage []*ExtendedKeyUsage `json:"extendedKeyUsage,omitempty"`

	// Name of the certificate issuer.
	Issuer *string `json:"issuer,omitempty"`

	// Acceptable values of KeyUsage.
	KeyUsage []*KeyUsage `json:"keyUsage,omitempty"`

	// The validity end date in UTC.
	NotAfter *time.Time `json:"notAfter,omitempty"`

	// The validity start date in UTC.
	NotBefore *time.Time `json:"notBefore,omitempty"`

	// Serial number for the certificate.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Distinguished name for the certificate.
	Subject *string `json:"subject,omitempty"`
	SubjectAlternativeNames []*string `json:"subjectAlternativeNames,omitempty"`
}

// CertificateDescriptionResponse - The attributes returned on the certificate description.
type CertificateDescriptionResponse struct {
	// The name of the Certificate Authority(CA) for the issued certificate.
	CaName *string `json:"caName,omitempty"`

	// Name of the enrollment policy used.
	EnrollmentPolicyName *string `json:"enrollmentPolicyName,omitempty"`

	// The version of the enrollment policy which was used for this enroll request.
	EnrollmentPolicyVersion *string `json:"enrollmentPolicyVersion,omitempty"`

	// The timestamp in UTC for when the certificate is issued.
	IssuedAt *time.Time `json:"issuedAt,omitempty"`

	// The name of the PKI.
	PkiName *string `json:"pkiName,omitempty"`
	RevocationReason *string `json:"revocationReason,omitempty"`

	// The timestamp in UTC for when the certificate was revoked.
	RevocationTime *time.Time `json:"revocationTime,omitempty"`

	// The attributes of the certificate.
	Value *CertificateAttributes `json:"value,omitempty"`
}

// CertificateValue - Certificate and/or Certificate chain, along with a list of the certificate's attributes.
type CertificateValue struct {
	// Acceptable values of ExtendedKeyUsage.
	ExtendedKeyUsage []*ExtendedKeyUsage `json:"extendedKeyUsage,omitempty"`

	// Name of the certificate issuer.
	Issuer *string `json:"issuer,omitempty"`

	// Acceptable values of KeyUsage.
	KeyUsage []*KeyUsage `json:"keyUsage,omitempty"`

	// The validity end date in UTC.
	NotAfter *time.Time `json:"notAfter,omitempty"`

	// The validity start date in UTC.
	NotBefore *time.Time `json:"notBefore,omitempty"`

	// Certificate in pem format
	Pem *string `json:"pem,omitempty"`

	// Certificate chain in pem format.
	PemChain *string `json:"pemChain,omitempty"`

	// The certificate in pkcs7 format.
	Pkcs7 *string `json:"pkcs7,omitempty"`

	// Serial number for the certificate.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Distinguished name for the certificate.
	Subject *string `json:"subject,omitempty"`
	SubjectAlternativeNames []*string `json:"subjectAlternativeNames,omitempty"`

	// Thumbprint of the certificate.
	Thumbprint *string `json:"thumbprint,omitempty"`
}

// EnrollRequest - The attributes for the enroll request.
type EnrollRequest struct {
	// The Certificate Signing Request(CSR) for enrollment.
	Csr *string `json:"csr,omitempty"`

	// Certificate attributes which will be used on the issued certificate.
	Substitutes *Substitutes `json:"substitutes,omitempty"`
}

// EnrollResponse - The attributes for the enroll response.
type EnrollResponse struct {
	// The name of the Certificate Authority(CA) for the issued certificate.
	CaName *string `json:"caName,omitempty"`

	// Name of the enrollment policy used.
	EnrollmentPolicyName *string `json:"enrollmentPolicyName,omitempty"`

	// The version of the enrollment policy which was used for this enroll request.
	EnrollmentPolicyVersion *string `json:"enrollmentPolicyVersion,omitempty"`

	// The timestamp in UTC for when the certificate is issued.
	IssuedAt *time.Time `json:"issuedAt,omitempty"`

	// This is a part of the response only if the 'include' query parameter is set to 'log'. Contains warnings/errors generated
// during the enrollment.
	Log []*LogEntry `json:"log,omitempty"`

	// The name of the PKI.
	PkiName *string `json:"pkiName,omitempty"`
	RevocationReason *string `json:"revocationReason,omitempty"`

	// The timestamp in UTC for when the certificate was revoked.
	RevocationTime *time.Time `json:"revocationTime,omitempty"`

	// The attributes and the certificate value in pem/pkcs7 format. Can also contain the certificate chain in pkcs7/pem formats.
	Value *CertificateValue `json:"value,omitempty"`
}

// Error - The PKI server error.
type Error struct {
	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The PKI server error.
	InnerError *Error `json:"innererror,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// LogEntry - Logs generated during a particular operation enrollment/revocation.
type LogEntry struct {
	// Description of the log message
	Description *string `json:"description,omitempty"`

	// Type of log message - error/warning/info
	Type *string `json:"type,omitempty"`
}

// PkiClientCertificateDetailsOptions contains the optional parameters for the PkiClient.CertificateDetails method.
type PkiClientCertificateDetailsOptions struct {
	// placeholder for future optional parameters
}

// PkiClientEndEntityCertificateDownloadOptions contains the optional parameters for the PkiClient.EndEntityCertificateDownload
// method.
type PkiClientEndEntityCertificateDownloadOptions struct {
	// placeholder for future optional parameters
}

// PkiClientEnrollCertificateOptions contains the optional parameters for the PkiClient.EnrollCertificate method.
type PkiClientEnrollCertificateOptions struct {
	// Flag to indicate if the full certificate chain is to be included in the response.
	FullChain *bool
	// If set to 'logs', the response will include warnings/information from the requested endpoint operation.
	Include *string
}

// PkiClientGetCaCertificateOptions contains the optional parameters for the PkiClient.GetCaCertificate method.
type PkiClientGetCaCertificateOptions struct {
	// Flag to indicate if the full certificate chain is to be included in the response.
	FullChain *bool
}

// PkiClientRevokeOptions contains the optional parameters for the PkiClient.Revoke method.
type PkiClientRevokeOptions struct {
	// If set to 'logs', the response will include warnings/information from the requested endpoint operation.
	Include *string
}

// PkiError - The PKI error exception.
type PkiError struct {
	// READ-ONLY; The PKI server error.
	Error *Error `json:"error,omitempty" azure:"ro"`
}

// RevokeRequest - The attributes for the revoke request.
type RevokeRequest struct {
	RevocationReason *string `json:"revocationReason,omitempty"`
}

// RevokeResponse - The attributes for the revoke response.
type RevokeResponse struct {
	// Name of Certificate Authority(CA).
	CaName *string `json:"caName,omitempty"`

	// Contains warnings/errors generated during the revocation.
	Log []*LogEntry `json:"log,omitempty"`

	// Name of PKI.
	PkiName *string `json:"pkiName,omitempty"`

	// The timestamp in UTC for when the certificate was revoked.
	RevokedAt *time.Time `json:"revokedAt,omitempty"`

	// Serial number of the certificate.
	SerialNumber *string `json:"serialNumber,omitempty"`
}

// Substitutes - List of attributes which can be specified under substitutes.
type Substitutes struct {
	// Distinguished name for the certificate.
	DistinguishedName *string `json:"distinguishedName,omitempty"`

	// Acceptable values of ExtendedKeyUsage.
	ExtendedKeyUsage []*ExtendedKeyUsage `json:"extendedKeyUsage,omitempty"`

	// Acceptable values of KeyUsage.
	KeyUsage []*KeyUsage `json:"keyUsage,omitempty"`

	// The validity end date in UTC.
	NotAfter *time.Time `json:"notAfter,omitempty"`

	// The validity start date in UTC.
	NotBefore *time.Time `json:"notBefore,omitempty"`
	SubjectAlternativeNames []*string `json:"subjectAlternativeNames,omitempty"`

	// Subject name for the certificate.
	SubjectName *string `json:"subjectName,omitempty"`
}

