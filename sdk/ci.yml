trigger:
  paths:
    include:
    - sdk/

pr:
  paths:
    include:
    - sdk/

jobs:
  - job: Build_Test
    strategy:
      matrix:
        Linux_Go113:
          vm.image: 'ubuntu-18.04'
          go.version: '1.13'
          GOROOT: '/usr/local/go$(go.version)'

    pool:
      vmImage: $(vm.image)

    variables:
      sdkPath: '$(system.defaultWorkingDirectory)'

    steps:
    - script: |
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Create Go Workspace'
    - script: |
        go version
      workingDirectory: '$(sdkPath)'
      displayName: 'Install Dependencies'
    - script: go vet $(go list ./sdk/...)
      workingDirectory: '$(sdkPath)'
      displayName: 'Vet'
    - script: go build -v $(go list ./sdk/...)
      workingDirectory: '$(sdkPath)'
      displayName: 'Build'
    - script: go test ./sdk/...
      workingDirectory: '$(sdkPath)'
      displayName: 'Run Tests'
    - script: grep -L -r --include \*.go -P "Copyright (\d{4}|\(c\)) Microsoft" ./sdk | tee >&2
      workingDirectory: '$(sdkPath)'
      displayName: 'Copyright Header Check'
      failOnStderr: true
      condition: succeededOrFailed()
    - script: gofmt -s -l -w $(find ./sdk -name '*.go' -print) >&2
      workingDirectory: '$(sdkPath)'
      displayName: 'Format Check'
      failOnStderr: true
      condition: succeededOrFailed()
