// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcompute

import (
	"context"
	"net/http"
	"time"
)

// AccessURIPollerResponse is the response envelope for operations that asynchronously return a AccessURI type.
type AccessURIPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (AccessURIResponse, error)

	// Poller contains an initialized poller.
	Poller AccessURIPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessURIResponse is the response envelope for operations that return a AccessURI type.
type AccessURIResponse struct {
	// A disk access SAS uri.
	AccessURI *AccessURI

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AvailabilitySetListResultResponse is the response envelope for operations that return a AvailabilitySetListResult type.
type AvailabilitySetListResultResponse struct {
	// The List Availability Set operation response.
	AvailabilitySetListResult *AvailabilitySetListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AvailabilitySetResponse is the response envelope for operations that return a AvailabilitySet type.
type AvailabilitySetResponse struct {
	// Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability
	// set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview).
	// <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates)
	// <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
	AvailabilitySet *AvailabilitySet

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CloudServiceInstanceViewResponse is the response envelope for operations that return a CloudServiceInstanceView type.
type CloudServiceInstanceViewResponse struct {
	// InstanceView of CloudService as a whole
	CloudServiceInstanceView *CloudServiceInstanceView

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CloudServiceListResultResponse is the response envelope for operations that return a CloudServiceListResult type.
type CloudServiceListResultResponse struct {
	CloudServiceListResult *CloudServiceListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CloudServicePollerResponse is the response envelope for operations that asynchronously return a CloudService type.
type CloudServicePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (CloudServiceResponse, error)

	// Poller contains an initialized poller.
	Poller CloudServicePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CloudServiceResponse is the response envelope for operations that return a CloudService type.
type CloudServiceResponse struct {
	// Describes the cloud service.
	CloudService *CloudService

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CloudServiceRoleListResultResponse is the response envelope for operations that return a CloudServiceRoleListResult type.
type CloudServiceRoleListResultResponse struct {
	CloudServiceRoleListResult *CloudServiceRoleListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CloudServiceRoleResponse is the response envelope for operations that return a CloudServiceRole type.
type CloudServiceRoleResponse struct {
	// Describes a role of the cloud service.
	CloudServiceRole *CloudServiceRole

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ComputeOperationListResultResponse is the response envelope for operations that return a ComputeOperationListResult type.
type ComputeOperationListResultResponse struct {
	// The List Compute Operation operation response.
	ComputeOperationListResult *ComputeOperationListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DedicatedHostGroupListResultResponse is the response envelope for operations that return a DedicatedHostGroupListResult type.
type DedicatedHostGroupListResultResponse struct {
	// The List Dedicated Host Group with resource group response.
	DedicatedHostGroupListResult *DedicatedHostGroupListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DedicatedHostGroupResponse is the response envelope for operations that return a DedicatedHostGroup type.
type DedicatedHostGroupResponse struct {
	// Specifies information about the dedicated host group that the dedicated hosts should be assigned to. <br><br> Currently, a dedicated host can only be
	// added to a dedicated host group at creation time. An existing dedicated host cannot be added to another dedicated host group.
	DedicatedHostGroup *DedicatedHostGroup

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DedicatedHostListResultResponse is the response envelope for operations that return a DedicatedHostListResult type.
type DedicatedHostListResultResponse struct {
	// The list dedicated host operation response.
	DedicatedHostListResult *DedicatedHostListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DedicatedHostPollerResponse is the response envelope for operations that asynchronously return a DedicatedHost type.
type DedicatedHostPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DedicatedHostResponse, error)

	// Poller contains an initialized poller.
	Poller DedicatedHostPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DedicatedHostResponse is the response envelope for operations that return a DedicatedHost type.
type DedicatedHostResponse struct {
	// Specifies information about the Dedicated host.
	DedicatedHost *DedicatedHost

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskAccessListResponse is the response envelope for operations that return a DiskAccessList type.
type DiskAccessListResponse struct {
	// The List disk access operation response.
	DiskAccessList *DiskAccessList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskAccessPollerResponse is the response envelope for operations that asynchronously return a DiskAccess type.
type DiskAccessPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DiskAccessResponse, error)

	// Poller contains an initialized poller.
	Poller DiskAccessPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskAccessResponse is the response envelope for operations that return a DiskAccess type.
type DiskAccessResponse struct {
	// disk access resource.
	DiskAccess *DiskAccess

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskEncryptionSetListResponse is the response envelope for operations that return a DiskEncryptionSetList type.
type DiskEncryptionSetListResponse struct {
	// The List disk encryption set operation response.
	DiskEncryptionSetList *DiskEncryptionSetList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskEncryptionSetPollerResponse is the response envelope for operations that asynchronously return a DiskEncryptionSet type.
type DiskEncryptionSetPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DiskEncryptionSetResponse, error)

	// Poller contains an initialized poller.
	Poller DiskEncryptionSetPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskEncryptionSetResponse is the response envelope for operations that return a DiskEncryptionSet type.
type DiskEncryptionSetResponse struct {
	// disk encryption set resource.
	DiskEncryptionSet *DiskEncryptionSet

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskListResponse is the response envelope for operations that return a DiskList type.
type DiskListResponse struct {
	// The List Disks operation response.
	DiskList *DiskList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskPollerResponse is the response envelope for operations that asynchronously return a Disk type.
type DiskPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DiskResponse, error)

	// Poller contains an initialized poller.
	Poller DiskPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskResponse is the response envelope for operations that return a Disk type.
type DiskResponse struct {
	// Disk resource.
	Disk *Disk

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskRestorePointListResponse is the response envelope for operations that return a DiskRestorePointList type.
type DiskRestorePointListResponse struct {
	// The List Disk Restore Points operation response.
	DiskRestorePointList *DiskRestorePointList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiskRestorePointResponse is the response envelope for operations that return a DiskRestorePoint type.
type DiskRestorePointResponse struct {
	// Properties of disk restore point
	DiskRestorePoint *DiskRestorePoint

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryApplicationListResponse is the response envelope for operations that return a GalleryApplicationList type.
type GalleryApplicationListResponse struct {
	// The List Gallery Applications operation response.
	GalleryApplicationList *GalleryApplicationList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryApplicationPollerResponse is the response envelope for operations that asynchronously return a GalleryApplication type.
type GalleryApplicationPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (GalleryApplicationResponse, error)

	// Poller contains an initialized poller.
	Poller GalleryApplicationPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryApplicationResponse is the response envelope for operations that return a GalleryApplication type.
type GalleryApplicationResponse struct {
	// Specifies information about the gallery Application Definition that you want to create or update.
	GalleryApplication *GalleryApplication

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryApplicationVersionListResponse is the response envelope for operations that return a GalleryApplicationVersionList type.
type GalleryApplicationVersionListResponse struct {
	// The List Gallery Application version operation response.
	GalleryApplicationVersionList *GalleryApplicationVersionList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryApplicationVersionPollerResponse is the response envelope for operations that asynchronously return a GalleryApplicationVersion type.
type GalleryApplicationVersionPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (GalleryApplicationVersionResponse, error)

	// Poller contains an initialized poller.
	Poller GalleryApplicationVersionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryApplicationVersionResponse is the response envelope for operations that return a GalleryApplicationVersion type.
type GalleryApplicationVersionResponse struct {
	// Specifies information about the gallery Application Version that you want to create or update.
	GalleryApplicationVersion *GalleryApplicationVersion

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryImageListResponse is the response envelope for operations that return a GalleryImageList type.
type GalleryImageListResponse struct {
	// The List Gallery Images operation response.
	GalleryImageList *GalleryImageList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryImagePollerResponse is the response envelope for operations that asynchronously return a GalleryImage type.
type GalleryImagePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (GalleryImageResponse, error)

	// Poller contains an initialized poller.
	Poller GalleryImagePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryImageResponse is the response envelope for operations that return a GalleryImage type.
type GalleryImageResponse struct {
	// Specifies information about the gallery image definition that you want to create or update.
	GalleryImage *GalleryImage

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryImageVersionListResponse is the response envelope for operations that return a GalleryImageVersionList type.
type GalleryImageVersionListResponse struct {
	// The List Gallery Image version operation response.
	GalleryImageVersionList *GalleryImageVersionList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryImageVersionPollerResponse is the response envelope for operations that asynchronously return a GalleryImageVersion type.
type GalleryImageVersionPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (GalleryImageVersionResponse, error)

	// Poller contains an initialized poller.
	Poller GalleryImageVersionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryImageVersionResponse is the response envelope for operations that return a GalleryImageVersion type.
type GalleryImageVersionResponse struct {
	// Specifies information about the gallery image version that you want to create or update.
	GalleryImageVersion *GalleryImageVersion

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryListResponse is the response envelope for operations that return a GalleryList type.
type GalleryListResponse struct {
	// The List Galleries operation response.
	GalleryList *GalleryList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryPollerResponse is the response envelope for operations that asynchronously return a Gallery type.
type GalleryPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (GalleryResponse, error)

	// Poller contains an initialized poller.
	Poller GalleryPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GalleryResponse is the response envelope for operations that return a Gallery type.
type GalleryResponse struct {
	// Specifies information about the Shared Image Gallery that you want to create or update.
	Gallery *Gallery

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ImageListResultResponse is the response envelope for operations that return a ImageListResult type.
type ImageListResultResponse struct {
	// The List Image operation response.
	ImageListResult *ImageListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ImagePollerResponse is the response envelope for operations that asynchronously return a Image type.
type ImagePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ImageResponse, error)

	// Poller contains an initialized poller.
	Poller ImagePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ImageResponse is the response envelope for operations that return a Image type.
type ImageResponse struct {
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided,
	// the destination virtual hard drive must not exist.
	Image *Image

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ListUsagesResultResponse is the response envelope for operations that return a ListUsagesResult type.
type ListUsagesResultResponse struct {
	// The List Usages operation response.
	ListUsagesResult *ListUsagesResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LogAnalyticsOperationResultPollerResponse is the response envelope for operations that asynchronously return a LogAnalyticsOperationResult type.
type LogAnalyticsOperationResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (LogAnalyticsOperationResultResponse, error)

	// Poller contains an initialized poller.
	Poller LogAnalyticsOperationResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LogAnalyticsOperationResultResponse is the response envelope for operations that return a LogAnalyticsOperationResult type.
type LogAnalyticsOperationResultResponse struct {
	// LogAnalytics operation status response
	LogAnalyticsOperationResult *LogAnalyticsOperationResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OSFamilyListResultResponse is the response envelope for operations that return a OSFamilyListResult type.
type OSFamilyListResultResponse struct {
	OSFamilyListResult *OSFamilyListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OSFamilyResponse is the response envelope for operations that return a OSFamily type.
type OSFamilyResponse struct {
	// Describes a cloud service OS family.
	OSFamily *OSFamily

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OSVersionListResultResponse is the response envelope for operations that return a OSVersionListResult type.
type OSVersionListResultResponse struct {
	OSVersionListResult *OSVersionListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OSVersionResponse is the response envelope for operations that return a OSVersion type.
type OSVersionResponse struct {
	// Describes a cloud service OS version.
	OSVersion *OSVersion

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionListResultResponse is the response envelope for operations that return a PrivateEndpointConnectionListResult type.
type PrivateEndpointConnectionListResultResponse struct {
	// A list of private link resources
	PrivateEndpointConnectionListResult *PrivateEndpointConnectionListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionPollerResponse is the response envelope for operations that asynchronously return a PrivateEndpointConnection type.
type PrivateEndpointConnectionPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (PrivateEndpointConnectionResponse, error)

	// Poller contains an initialized poller.
	Poller PrivateEndpointConnectionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionResponse is the response envelope for operations that return a PrivateEndpointConnection type.
type PrivateEndpointConnectionResponse struct {
	// The Private Endpoint Connection resource.
	PrivateEndpointConnection *PrivateEndpointConnection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourceListResultResponse is the response envelope for operations that return a PrivateLinkResourceListResult type.
type PrivateLinkResourceListResultResponse struct {
	// A list of private link resources
	PrivateLinkResourceListResult *PrivateLinkResourceListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProximityPlacementGroupListResultResponse is the response envelope for operations that return a ProximityPlacementGroupListResult type.
type ProximityPlacementGroupListResultResponse struct {
	// The List Proximity Placement Group operation response.
	ProximityPlacementGroupListResult *ProximityPlacementGroupListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProximityPlacementGroupResponse is the response envelope for operations that return a ProximityPlacementGroup type.
type ProximityPlacementGroupResponse struct {
	// Specifies information about the proximity placement group.
	ProximityPlacementGroup *ProximityPlacementGroup

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecoveryWalkResponseResponse is the response envelope for operations that return a RecoveryWalkResponse type.
type RecoveryWalkResponseResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Response after calling a manual recovery walk
	RecoveryWalkResponse *RecoveryWalkResponse
}

// ResourceSKUsResultResponse is the response envelope for operations that return a ResourceSKUsResult type.
type ResourceSKUsResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Resource Skus operation response.
	ResourceSKUsResult *ResourceSKUsResult
}

// ResourceURIListResponse is the response envelope for operations that return a ResourceURIList type.
type ResourceURIListResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List resources which are encrypted with the disk encryption set.
	ResourceURIList *ResourceURIList
}

// RestorePointCollectionListResultResponse is the response envelope for operations that return a RestorePointCollectionListResult type.
type RestorePointCollectionListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List restore point collection operation response.
	RestorePointCollectionListResult *RestorePointCollectionListResult
}

// RestorePointCollectionResponse is the response envelope for operations that return a RestorePointCollection type.
type RestorePointCollectionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Create or update Restore Point collection parameters.
	RestorePointCollection *RestorePointCollection
}

// RestorePointPollerResponse is the response envelope for operations that asynchronously return a RestorePoint type.
type RestorePointPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (RestorePointResponse, error)

	// Poller contains an initialized poller.
	Poller RestorePointPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RestorePointResponse is the response envelope for operations that return a RestorePoint type.
type RestorePointResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Restore Point details.
	RestorePoint *RestorePoint
}

// RetrieveBootDiagnosticsDataResultResponse is the response envelope for operations that return a RetrieveBootDiagnosticsDataResult type.
type RetrieveBootDiagnosticsDataResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The SAS URIs of the console screenshot and serial log blobs.
	RetrieveBootDiagnosticsDataResult *RetrieveBootDiagnosticsDataResult
}

// RoleInstanceListResultResponse is the response envelope for operations that return a RoleInstanceListResult type.
type RoleInstanceListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse            *http.Response
	RoleInstanceListResult *RoleInstanceListResult
}

// RoleInstanceResponse is the response envelope for operations that return a RoleInstance type.
type RoleInstanceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse  *http.Response
	RoleInstance *RoleInstance
}

// RoleInstanceViewResponse is the response envelope for operations that return a RoleInstanceView type.
type RoleInstanceViewResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The instance view of the role instance.
	RoleInstanceView *RoleInstanceView
}

// RollingUpgradeStatusInfoResponse is the response envelope for operations that return a RollingUpgradeStatusInfo type.
type RollingUpgradeStatusInfoResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The status of the latest virtual machine scale set rolling upgrade.
	RollingUpgradeStatusInfo *RollingUpgradeStatusInfo
}

// RunCommandDocumentResponse is the response envelope for operations that return a RunCommandDocument type.
type RunCommandDocumentResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes the properties of a Run Command.
	RunCommandDocument *RunCommandDocument
}

// RunCommandListResultResponse is the response envelope for operations that return a RunCommandListResult type.
type RunCommandListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Virtual Machine operation response.
	RunCommandListResult *RunCommandListResult
}

// RunCommandResultPollerResponse is the response envelope for operations that asynchronously return a RunCommandResult type.
type RunCommandResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (RunCommandResultResponse, error)

	// Poller contains an initialized poller.
	Poller RunCommandResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RunCommandResultResponse is the response envelope for operations that return a RunCommandResult type.
type RunCommandResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse      *http.Response
	RunCommandResult *RunCommandResult
}

// SSHPublicKeyGenerateKeyPairResultResponse is the response envelope for operations that return a SSHPublicKeyGenerateKeyPairResult type.
type SSHPublicKeyGenerateKeyPairResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Response from generation of an SSH key pair.
	SSHPublicKeyGenerateKeyPairResult *SSHPublicKeyGenerateKeyPairResult
}

// SSHPublicKeyResourceResponse is the response envelope for operations that return a SSHPublicKeyResource type.
type SSHPublicKeyResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Specifies information about the SSH public key.
	SSHPublicKeyResource *SSHPublicKeyResource
}

// SSHPublicKeysGroupListResultResponse is the response envelope for operations that return a SSHPublicKeysGroupListResult type.
type SSHPublicKeysGroupListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The list SSH public keys operation response.
	SSHPublicKeysGroupListResult *SSHPublicKeysGroupListResult
}

// SharedGalleryImageListResponse is the response envelope for operations that return a SharedGalleryImageList type.
type SharedGalleryImageListResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Shared Gallery Images operation response.
	SharedGalleryImageList *SharedGalleryImageList
}

// SharedGalleryImageResponse is the response envelope for operations that return a SharedGalleryImage type.
type SharedGalleryImageResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Specifies information about the gallery image definition that you want to create or update.
	SharedGalleryImage *SharedGalleryImage
}

// SharedGalleryImageVersionListResponse is the response envelope for operations that return a SharedGalleryImageVersionList type.
type SharedGalleryImageVersionListResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Shared Gallery Image versions operation response.
	SharedGalleryImageVersionList *SharedGalleryImageVersionList
}

// SharedGalleryImageVersionResponse is the response envelope for operations that return a SharedGalleryImageVersion type.
type SharedGalleryImageVersionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Specifies information about the gallery image version that you want to create or update.
	SharedGalleryImageVersion *SharedGalleryImageVersion
}

// SharedGalleryListResponse is the response envelope for operations that return a SharedGalleryList type.
type SharedGalleryListResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Shared Galleries operation response.
	SharedGalleryList *SharedGalleryList
}

// SharedGalleryResponse is the response envelope for operations that return a SharedGallery type.
type SharedGalleryResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Specifies information about the Shared Gallery that you want to create or update.
	SharedGallery *SharedGallery
}

// SharingUpdatePollerResponse is the response envelope for operations that asynchronously return a SharingUpdate type.
type SharingUpdatePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SharingUpdateResponse, error)

	// Poller contains an initialized poller.
	Poller SharingUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SharingUpdateResponse is the response envelope for operations that return a SharingUpdate type.
type SharingUpdateResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Specifies information about the gallery sharing profile update.
	SharingUpdate *SharingUpdate
}

// SnapshotListResponse is the response envelope for operations that return a SnapshotList type.
type SnapshotListResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Snapshots operation response.
	SnapshotList *SnapshotList
}

// SnapshotPollerResponse is the response envelope for operations that asynchronously return a Snapshot type.
type SnapshotPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SnapshotResponse, error)

	// Poller contains an initialized poller.
	Poller SnapshotPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SnapshotResponse is the response envelope for operations that return a Snapshot type.
type SnapshotResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Snapshot resource.
	Snapshot *Snapshot
}

// UpdateDomainListResultResponse is the response envelope for operations that return a UpdateDomainListResult type.
type UpdateDomainListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse            *http.Response
	UpdateDomainListResult *UpdateDomainListResult
}

// UpdateDomainResponse is the response envelope for operations that return a UpdateDomain type.
type UpdateDomainResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Defines an update domain for the cloud service.
	UpdateDomain *UpdateDomain
}

// VirtualMachineAssessPatchesResultPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineAssessPatchesResult
// type.
type VirtualMachineAssessPatchesResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineAssessPatchesResultResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineAssessPatchesResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineAssessPatchesResultResponse is the response envelope for operations that return a VirtualMachineAssessPatchesResult type.
type VirtualMachineAssessPatchesResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes the properties of an AssessPatches result.
	VirtualMachineAssessPatchesResult *VirtualMachineAssessPatchesResult
}

// VirtualMachineCaptureResultPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineCaptureResult type.
type VirtualMachineCaptureResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineCaptureResultResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineCaptureResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineCaptureResultResponse is the response envelope for operations that return a VirtualMachineCaptureResult type.
type VirtualMachineCaptureResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Output of virtual machine capture operation.
	VirtualMachineCaptureResult *VirtualMachineCaptureResult
}

// VirtualMachineExtensionImageArrayResponse is the response envelope for operations that return a []*VirtualMachineExtensionImage type.
type VirtualMachineExtensionImageArrayResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Array of VirtualMachineExtensionImage
	VirtualMachineExtensionImageArray []*VirtualMachineExtensionImage
}

// VirtualMachineExtensionImageResponse is the response envelope for operations that return a VirtualMachineExtensionImage type.
type VirtualMachineExtensionImageResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a Virtual Machine Extension Image.
	VirtualMachineExtensionImage *VirtualMachineExtensionImage
}

// VirtualMachineExtensionPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineExtension type.
type VirtualMachineExtensionPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineExtensionResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineExtensionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineExtensionResponse is the response envelope for operations that return a VirtualMachineExtension type.
type VirtualMachineExtensionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a Virtual Machine Extension.
	VirtualMachineExtension *VirtualMachineExtension
}

// VirtualMachineExtensionsListResultResponse is the response envelope for operations that return a VirtualMachineExtensionsListResult type.
type VirtualMachineExtensionsListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Extension operation response
	VirtualMachineExtensionsListResult *VirtualMachineExtensionsListResult
}

// VirtualMachineImageResourceArrayResponse is the response envelope for operations that return a []*VirtualMachineImageResource type.
type VirtualMachineImageResourceArrayResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Array of VirtualMachineImageResource
	VirtualMachineImageResourceArray []*VirtualMachineImageResource
}

// VirtualMachineImageResponse is the response envelope for operations that return a VirtualMachineImage type.
type VirtualMachineImageResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a Virtual Machine Image.
	VirtualMachineImage *VirtualMachineImage
}

// VirtualMachineInstallPatchesResultPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineInstallPatchesResult
// type.
type VirtualMachineInstallPatchesResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineInstallPatchesResultResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineInstallPatchesResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineInstallPatchesResultResponse is the response envelope for operations that return a VirtualMachineInstallPatchesResult type.
type VirtualMachineInstallPatchesResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result summary of an installation operation.
	VirtualMachineInstallPatchesResult *VirtualMachineInstallPatchesResult
}

// VirtualMachineInstanceViewResponse is the response envelope for operations that return a VirtualMachineInstanceView type.
type VirtualMachineInstanceViewResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The instance view of a virtual machine.
	VirtualMachineInstanceView *VirtualMachineInstanceView
}

// VirtualMachineListResultResponse is the response envelope for operations that return a VirtualMachineListResult type.
type VirtualMachineListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Virtual Machine operation response.
	VirtualMachineListResult *VirtualMachineListResult
}

// VirtualMachinePollerResponse is the response envelope for operations that asynchronously return a VirtualMachine type.
type VirtualMachinePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachinePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineResponse is the response envelope for operations that return a VirtualMachine type.
type VirtualMachineResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a Virtual Machine.
	VirtualMachine *VirtualMachine
}

// VirtualMachineRunCommandPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineRunCommand type.
type VirtualMachineRunCommandPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineRunCommandResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineRunCommandPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineRunCommandResponse is the response envelope for operations that return a VirtualMachineRunCommand type.
type VirtualMachineRunCommandResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a Virtual Machine run command.
	VirtualMachineRunCommand *VirtualMachineRunCommand
}

// VirtualMachineRunCommandsListResultResponse is the response envelope for operations that return a VirtualMachineRunCommandsListResult type.
type VirtualMachineRunCommandsListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List run command operation response
	VirtualMachineRunCommandsListResult *VirtualMachineRunCommandsListResult
}

// VirtualMachineScaleSetExtensionListResultResponse is the response envelope for operations that return a VirtualMachineScaleSetExtensionListResult type.
type VirtualMachineScaleSetExtensionListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List VM scale set extension operation response.
	VirtualMachineScaleSetExtensionListResult *VirtualMachineScaleSetExtensionListResult
}

// VirtualMachineScaleSetExtensionPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineScaleSetExtension type.
type VirtualMachineScaleSetExtensionPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineScaleSetExtensionResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineScaleSetExtensionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineScaleSetExtensionResponse is the response envelope for operations that return a VirtualMachineScaleSetExtension type.
type VirtualMachineScaleSetExtensionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a Virtual Machine Scale Set Extension.
	VirtualMachineScaleSetExtension *VirtualMachineScaleSetExtension
}

// VirtualMachineScaleSetInstanceViewResponse is the response envelope for operations that return a VirtualMachineScaleSetInstanceView type.
type VirtualMachineScaleSetInstanceViewResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The instance view of a virtual machine scale set.
	VirtualMachineScaleSetInstanceView *VirtualMachineScaleSetInstanceView
}

// VirtualMachineScaleSetListOSUpgradeHistoryResponse is the response envelope for operations that return a VirtualMachineScaleSetListOSUpgradeHistory type.
type VirtualMachineScaleSetListOSUpgradeHistoryResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// List of Virtual Machine Scale Set OS Upgrade History operation response.
	VirtualMachineScaleSetListOSUpgradeHistory *VirtualMachineScaleSetListOSUpgradeHistory
}

// VirtualMachineScaleSetListResultResponse is the response envelope for operations that return a VirtualMachineScaleSetListResult type.
type VirtualMachineScaleSetListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Virtual Machine operation response.
	VirtualMachineScaleSetListResult *VirtualMachineScaleSetListResult
}

// VirtualMachineScaleSetListSKUsResultResponse is the response envelope for operations that return a VirtualMachineScaleSetListSKUsResult type.
type VirtualMachineScaleSetListSKUsResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The Virtual Machine Scale Set List Skus operation response.
	VirtualMachineScaleSetListSKUsResult *VirtualMachineScaleSetListSKUsResult
}

// VirtualMachineScaleSetListWithLinkResultResponse is the response envelope for operations that return a VirtualMachineScaleSetListWithLinkResult type.
type VirtualMachineScaleSetListWithLinkResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Virtual Machine operation response.
	VirtualMachineScaleSetListWithLinkResult *VirtualMachineScaleSetListWithLinkResult
}

// VirtualMachineScaleSetPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineScaleSet type.
type VirtualMachineScaleSetPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineScaleSetResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineScaleSetPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineScaleSetResponse is the response envelope for operations that return a VirtualMachineScaleSet type.
type VirtualMachineScaleSetResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a Virtual Machine Scale Set.
	VirtualMachineScaleSet *VirtualMachineScaleSet
}

// VirtualMachineScaleSetVMExtensionPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineScaleSetVMExtension
// type.
type VirtualMachineScaleSetVMExtensionPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineScaleSetVMExtensionResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineScaleSetVMExtensionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineScaleSetVMExtensionResponse is the response envelope for operations that return a VirtualMachineScaleSetVMExtension type.
type VirtualMachineScaleSetVMExtensionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a VMSS VM Extension.
	VirtualMachineScaleSetVMExtension *VirtualMachineScaleSetVMExtension
}

// VirtualMachineScaleSetVMExtensionsListResultResponse is the response envelope for operations that return a VirtualMachineScaleSetVMExtensionsListResult
// type.
type VirtualMachineScaleSetVMExtensionsListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List VMSS VM Extension operation response
	VirtualMachineScaleSetVMExtensionsListResult *VirtualMachineScaleSetVMExtensionsListResult
}

// VirtualMachineScaleSetVMInstanceViewResponse is the response envelope for operations that return a VirtualMachineScaleSetVMInstanceView type.
type VirtualMachineScaleSetVMInstanceViewResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The instance view of a virtual machine scale set VM.
	VirtualMachineScaleSetVMInstanceView *VirtualMachineScaleSetVMInstanceView
}

// VirtualMachineScaleSetVMListResultResponse is the response envelope for operations that return a VirtualMachineScaleSetVMListResult type.
type VirtualMachineScaleSetVMListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Virtual Machine Scale Set VMs operation response.
	VirtualMachineScaleSetVMListResult *VirtualMachineScaleSetVMListResult
}

// VirtualMachineScaleSetVMPollerResponse is the response envelope for operations that asynchronously return a VirtualMachineScaleSetVM type.
type VirtualMachineScaleSetVMPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (VirtualMachineScaleSetVMResponse, error)

	// Poller contains an initialized poller.
	Poller VirtualMachineScaleSetVMPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VirtualMachineScaleSetVMResponse is the response envelope for operations that return a VirtualMachineScaleSetVM type.
type VirtualMachineScaleSetVMResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Describes a virtual machine scale set virtual machine.
	VirtualMachineScaleSetVM *VirtualMachineScaleSetVM
}

// VirtualMachineSizeListResultResponse is the response envelope for operations that return a VirtualMachineSizeListResult type.
type VirtualMachineSizeListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The List Virtual Machine operation response.
	VirtualMachineSizeListResult *VirtualMachineSizeListResult
}
