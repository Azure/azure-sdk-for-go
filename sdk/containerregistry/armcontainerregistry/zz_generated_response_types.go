// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcontainerregistry

import (
	"context"
	"net/http"
	"time"
)

// AgentPoolListResultResponse is the response envelope for operations that return a AgentPoolListResult type.
type AgentPoolListResultResponse struct {
	// The collection of agent pools.
	AgentPoolListResult *AgentPoolListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AgentPoolPollerResponse is the response envelope for operations that asynchronously return a AgentPool type.
type AgentPoolPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (AgentPoolResponse, error)

	// Poller contains an initialized poller.
	Poller AgentPoolPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AgentPoolQueueStatusResponse is the response envelope for operations that return a AgentPoolQueueStatus type.
type AgentPoolQueueStatusResponse struct {
	// The QueueStatus of Agent Pool
	AgentPoolQueueStatus *AgentPoolQueueStatus

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AgentPoolResponse is the response envelope for operations that return a AgentPool type.
type AgentPoolResponse struct {
	// The agentpool that has the ARM resource and properties.
	// The agentpool will have all information to create an agent pool.
	AgentPool *AgentPool

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CallbackConfigResponse is the response envelope for operations that return a CallbackConfig type.
type CallbackConfigResponse struct {
	// The configuration of service URI and custom headers for the webhook.
	CallbackConfig *CallbackConfig

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ConnectedRegistryListResultResponse is the response envelope for operations that return a ConnectedRegistryListResult type.
type ConnectedRegistryListResultResponse struct {
	// The result of a request to list connected registries for a container registry.
	ConnectedRegistryListResult *ConnectedRegistryListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ConnectedRegistryPollerResponse is the response envelope for operations that asynchronously return a ConnectedRegistry type.
type ConnectedRegistryPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ConnectedRegistryResponse, error)

	// Poller contains an initialized poller.
	Poller ConnectedRegistryPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ConnectedRegistryResponse is the response envelope for operations that return a ConnectedRegistry type.
type ConnectedRegistryResponse struct {
	// An object that represents a connected registry for a container registry.
	ConnectedRegistry *ConnectedRegistry

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EventInfoResponse is the response envelope for operations that return a EventInfo type.
type EventInfoResponse struct {
	// The basic information of an event.
	EventInfo *EventInfo

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EventListResultResponse is the response envelope for operations that return a EventListResult type.
type EventListResultResponse struct {
	// The result of a request to list events for a webhook.
	EventListResult *EventListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ExportPipelineListResultResponse is the response envelope for operations that return a ExportPipelineListResult type.
type ExportPipelineListResultResponse struct {
	// The result of a request to list export pipelines for a container registry.
	ExportPipelineListResult *ExportPipelineListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ExportPipelinePollerResponse is the response envelope for operations that asynchronously return a ExportPipeline type.
type ExportPipelinePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ExportPipelineResponse, error)

	// Poller contains an initialized poller.
	Poller ExportPipelinePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ExportPipelineResponse is the response envelope for operations that return a ExportPipeline type.
type ExportPipelineResponse struct {
	// An object that represents an export pipeline for a container registry.
	ExportPipeline *ExportPipeline

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GenerateCredentialsResultPollerResponse is the response envelope for operations that asynchronously return a GenerateCredentialsResult type.
type GenerateCredentialsResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (GenerateCredentialsResultResponse, error)

	// Poller contains an initialized poller.
	Poller GenerateCredentialsResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GenerateCredentialsResultResponse is the response envelope for operations that return a GenerateCredentialsResult type.
type GenerateCredentialsResultResponse struct {
	// The response from the GenerateCredentials operation.
	GenerateCredentialsResult *GenerateCredentialsResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ImportPipelineListResultResponse is the response envelope for operations that return a ImportPipelineListResult type.
type ImportPipelineListResultResponse struct {
	// The result of a request to list import pipelines for a container registry.
	ImportPipelineListResult *ImportPipelineListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ImportPipelinePollerResponse is the response envelope for operations that asynchronously return a ImportPipeline type.
type ImportPipelinePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ImportPipelineResponse, error)

	// Poller contains an initialized poller.
	Poller ImportPipelinePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ImportPipelineResponse is the response envelope for operations that return a ImportPipeline type.
type ImportPipelineResponse struct {
	// An object that represents an import pipeline for a container registry.
	ImportPipeline *ImportPipeline

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationListResultResponse is the response envelope for operations that return a OperationListResult type.
type OperationListResultResponse struct {
	// The result of a request to list container registry operations.
	OperationListResult *OperationListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineRunListResultResponse is the response envelope for operations that return a PipelineRunListResult type.
type PipelineRunListResultResponse struct {
	// The result of a request to list pipeline runs for a container registry.
	PipelineRunListResult *PipelineRunListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineRunPollerResponse is the response envelope for operations that asynchronously return a PipelineRun type.
type PipelineRunPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (PipelineRunResponseType, error)

	// Poller contains an initialized poller.
	Poller PipelineRunPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineRunResponseType is the response envelope for operations that return a PipelineRun type.
type PipelineRunResponseType struct {
	// An object that represents a pipeline run for a container registry.
	PipelineRun *PipelineRun

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionListResultResponse is the response envelope for operations that return a PrivateEndpointConnectionListResult type.
type PrivateEndpointConnectionListResultResponse struct {
	// The result of a request to list private endpoint connections for a container registry.
	PrivateEndpointConnectionListResult *PrivateEndpointConnectionListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionPollerResponse is the response envelope for operations that asynchronously return a PrivateEndpointConnection type.
type PrivateEndpointConnectionPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (PrivateEndpointConnectionResponse, error)

	// Poller contains an initialized poller.
	Poller PrivateEndpointConnectionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionResponse is the response envelope for operations that return a PrivateEndpointConnection type.
type PrivateEndpointConnectionResponse struct {
	// An object that represents a private endpoint connection for a container registry.
	PrivateEndpointConnection *PrivateEndpointConnection

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourceListResultResponse is the response envelope for operations that return a PrivateLinkResourceListResult type.
type PrivateLinkResourceListResultResponse struct {
	// The result of a request to list private link resources for a container registry.
	PrivateLinkResourceListResult *PrivateLinkResourceListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RegistryListCredentialsResultResponse is the response envelope for operations that return a RegistryListCredentialsResult type.
type RegistryListCredentialsResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The response from the ListCredentials operation.
	RegistryListCredentialsResult *RegistryListCredentialsResult
}

// RegistryListResultResponse is the response envelope for operations that return a RegistryListResult type.
type RegistryListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of a request to list container registries.
	RegistryListResult *RegistryListResult
}

// RegistryNameStatusResponse is the response envelope for operations that return a RegistryNameStatus type.
type RegistryNameStatusResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of a request to check the availability of a container registry name.
	RegistryNameStatus *RegistryNameStatus
}

// RegistryPollerResponse is the response envelope for operations that asynchronously return a Registry type.
type RegistryPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (RegistryResponse, error)

	// Poller contains an initialized poller.
	Poller RegistryPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RegistryResponse is the response envelope for operations that return a Registry type.
type RegistryResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// An object that represents a container registry.
	Registry *Registry
}

// RegistryUsageListResultResponse is the response envelope for operations that return a RegistryUsageListResult type.
type RegistryUsageListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of a request to get container registry quota usages.
	RegistryUsageListResult *RegistryUsageListResult
}

// ReplicationListResultResponse is the response envelope for operations that return a ReplicationListResult type.
type ReplicationListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of a request to list replications for a container registry.
	ReplicationListResult *ReplicationListResult
}

// ReplicationPollerResponse is the response envelope for operations that asynchronously return a Replication type.
type ReplicationPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ReplicationResponse, error)

	// Poller contains an initialized poller.
	Poller ReplicationPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReplicationResponse is the response envelope for operations that return a Replication type.
type ReplicationResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// An object that represents a replication for a container registry.
	Replication *Replication
}

// RunGetLogResultResponse is the response envelope for operations that return a RunGetLogResult type.
type RunGetLogResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of get log link operation.
	RunGetLogResult *RunGetLogResult
}

// RunListResultResponse is the response envelope for operations that return a RunListResult type.
type RunListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Collection of runs.
	RunListResult *RunListResult
}

// RunPollerResponse is the response envelope for operations that asynchronously return a Run type.
type RunPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (RunResponse, error)

	// Poller contains an initialized poller.
	Poller RunPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RunResponse is the response envelope for operations that return a Run type.
type RunResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Run resource properties
	Run *Run
}

// ScopeMapListResultResponse is the response envelope for operations that return a ScopeMapListResult type.
type ScopeMapListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of a request to list scope maps for a container registry.
	ScopeMapListResult *ScopeMapListResult
}

// ScopeMapPollerResponse is the response envelope for operations that asynchronously return a ScopeMap type.
type ScopeMapPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ScopeMapResponse, error)

	// Poller contains an initialized poller.
	Poller ScopeMapPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ScopeMapResponse is the response envelope for operations that return a ScopeMap type.
type ScopeMapResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// An object that represents a scope map for a container registry.
	ScopeMap *ScopeMap
}

// SourceUploadDefinitionResponse is the response envelope for operations that return a SourceUploadDefinition type.
type SourceUploadDefinitionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The properties of a response to source upload request.
	SourceUploadDefinition *SourceUploadDefinition
}

// TaskListResultResponse is the response envelope for operations that return a TaskListResult type.
type TaskListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The collection of tasks.
	TaskListResult *TaskListResult
}

// TaskPollerResponse is the response envelope for operations that asynchronously return a Task type.
type TaskPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (TaskResponse, error)

	// Poller contains an initialized poller.
	Poller TaskPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TaskResponse is the response envelope for operations that return a Task type.
type TaskResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The task that has the ARM resource and task properties.
	// The task will have all information to schedule a run against it.
	Task *Task
}

// TaskRunListResultResponse is the response envelope for operations that return a TaskRunListResult type.
type TaskRunListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The collection of task runs.
	TaskRunListResult *TaskRunListResult
}

// TaskRunPollerResponse is the response envelope for operations that asynchronously return a TaskRun type.
type TaskRunPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (TaskRunResponse, error)

	// Poller contains an initialized poller.
	Poller TaskRunPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TaskRunResponse is the response envelope for operations that return a TaskRun type.
type TaskRunResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The task run that has the ARM resource and properties.
	// The task run will have the information of request and result of a run.
	TaskRun *TaskRun
}

// TokenListResultResponse is the response envelope for operations that return a TokenListResult type.
type TokenListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of a request to list tokens for a container registry.
	TokenListResult *TokenListResult
}

// TokenPollerResponse is the response envelope for operations that asynchronously return a Token type.
type TokenPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (TokenResponse, error)

	// Poller contains an initialized poller.
	Poller TokenPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TokenResponse is the response envelope for operations that return a Token type.
type TokenResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// An object that represents a token for a container registry.
	Token *Token
}

// WebhookListResultResponse is the response envelope for operations that return a WebhookListResult type.
type WebhookListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// The result of a request to list webhooks for a container registry.
	WebhookListResult *WebhookListResult
}

// WebhookPollerResponse is the response envelope for operations that asynchronously return a Webhook type.
type WebhookPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (WebhookResponse, error)

	// Poller contains an initialized poller.
	Poller WebhookPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// WebhookResponse is the response envelope for operations that return a Webhook type.
type WebhookResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// An object that represents a webhook for a container registry.
	Webhook *Webhook
}
