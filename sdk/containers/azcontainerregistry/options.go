//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azcontainerregistry

// authenticationClientExchangeAADAccessTokenForACRRefreshTokenOptions contains the optional parameters for the authenticationClient.ExchangeAADAccessTokenForACRRefreshToken
// method.
type authenticationClientExchangeAADAccessTokenForACRRefreshTokenOptions struct {
	// AAD access token, mandatory when granttype is accesstokenrefreshtoken or access_token.
	AccessToken *string

	// AAD refresh token, mandatory when granttype is accesstokenrefreshtoken or refresh_token
	RefreshToken *string

	// AAD tenant associated to the AAD credentials.
	Tenant *string
}

// authenticationClientExchangeACRRefreshTokenForACRAccessTokenOptions contains the optional parameters for the authenticationClient.ExchangeACRRefreshTokenForACRAccessToken
// method.
type authenticationClientExchangeACRRefreshTokenForACRAccessTokenOptions struct {
	// Grant type is expected to be refresh_token
	GrantType *tokenGrantType
}

// BlobClientCancelUploadOptions contains the optional parameters for the BlobClient.CancelUpload method.
type BlobClientCancelUploadOptions struct {
	// placeholder for future optional parameters
}

// BlobClientCheckBlobExistsOptions contains the optional parameters for the BlobClient.CheckBlobExists method.
type BlobClientCheckBlobExistsOptions struct {
	// placeholder for future optional parameters
}

// BlobClientCheckChunkExistsOptions contains the optional parameters for the BlobClient.CheckChunkExists method.
type BlobClientCheckChunkExistsOptions struct {
	// placeholder for future optional parameters
}

// BlobClientCompleteUploadOptions contains the optional parameters for the BlobClient.CompleteUpload method.
type BlobClientCompleteUploadOptions struct {
	// placeholder for future optional parameters
}

// BlobClientDeleteBlobOptions contains the optional parameters for the BlobClient.DeleteBlob method.
type BlobClientDeleteBlobOptions struct {
	// placeholder for future optional parameters
}

// BlobClientGetBlobOptions contains the optional parameters for the BlobClient.GetBlob method.
type BlobClientGetBlobOptions struct {
	// placeholder for future optional parameters
}

// BlobClientGetChunkOptions contains the optional parameters for the BlobClient.GetChunk method.
type BlobClientGetChunkOptions struct {
	// placeholder for future optional parameters
}

// BlobClientGetUploadStatusOptions contains the optional parameters for the BlobClient.GetUploadStatus method.
type BlobClientGetUploadStatusOptions struct {
	// placeholder for future optional parameters
}

// BlobClientMountBlobOptions contains the optional parameters for the BlobClient.MountBlob method.
type BlobClientMountBlobOptions struct {
	// placeholder for future optional parameters
}

// BlobClientStartUploadOptions contains the optional parameters for the BlobClient.StartUpload method.
type BlobClientStartUploadOptions struct {
	// placeholder for future optional parameters
}

// blobClientUploadChunkOptions contains the optional parameters for the BlobClient.uploadChunk method.
type blobClientUploadChunkOptions struct {
	// Range of bytes identifying the desired block of content represented by the body. Start must the end offset retrieved via
	// status check plus one. Note that this is a non-standard use of the
	// Content-Range header.
	ContentRange *string
}

// ClientDeleteManifestOptions contains the optional parameters for the Client.DeleteManifest method.
type ClientDeleteManifestOptions struct {
	// placeholder for future optional parameters
}

// ClientDeleteRepositoryOptions contains the optional parameters for the Client.DeleteRepository method.
type ClientDeleteRepositoryOptions struct {
	// placeholder for future optional parameters
}

// ClientDeleteTagOptions contains the optional parameters for the Client.DeleteTag method.
type ClientDeleteTagOptions struct {
	// placeholder for future optional parameters
}

// ClientGetManifestOptions contains the optional parameters for the Client.GetManifest method.
type ClientGetManifestOptions struct {
	// Accept header string delimited by comma. For example, application/vnd.docker.distribution.manifest.v2+json
	Accept *string
}

// ClientGetManifestPropertiesOptions contains the optional parameters for the Client.GetManifestProperties method.
type ClientGetManifestPropertiesOptions struct {
	// placeholder for future optional parameters
}

// ClientGetRepositoryPropertiesOptions contains the optional parameters for the Client.GetRepositoryProperties method.
type ClientGetRepositoryPropertiesOptions struct {
	// placeholder for future optional parameters
}

// ClientGetTagPropertiesOptions contains the optional parameters for the Client.GetTagProperties method.
type ClientGetTagPropertiesOptions struct {
	// placeholder for future optional parameters
}

// ClientListManifestsOptions contains the optional parameters for the Client.NewListManifestsPager method.
type ClientListManifestsOptions struct {
	// Query parameter for the last item in previous query. Result set will include values lexically after last.
	Last *string

	// query parameter for max number of items
	MaxNum *int32

	// Sort options for ordering manifests in a collection.
	OrderBy *ArtifactManifestOrderBy
}

// ClientListRepositoriesOptions contains the optional parameters for the Client.NewListRepositoriesPager method.
type ClientListRepositoriesOptions struct {
	// Query parameter for the last item in previous query. Result set will include values lexically after last.
	Last *string

	// query parameter for max number of items
	MaxNum *int32
}

// ClientListTagsOptions contains the optional parameters for the Client.NewListTagsPager method.
type ClientListTagsOptions struct {
	// filter by digest
	Digest *string

	// Query parameter for the last item in previous query. Result set will include values lexically after last.
	Last *string

	// query parameter for max number of items
	MaxNum *int32

	// Sort options for ordering tags in a collection.
	OrderBy *ArtifactTagOrderBy
}

// ClientUpdateManifestPropertiesOptions contains the optional parameters for the Client.UpdateManifestProperties method.
type ClientUpdateManifestPropertiesOptions struct {
	// Manifest attribute value
	Value *ManifestWriteableProperties
}

// ClientUpdateRepositoryPropertiesOptions contains the optional parameters for the Client.UpdateRepositoryProperties method.
type ClientUpdateRepositoryPropertiesOptions struct {
	// Repository attribute value
	Value *RepositoryWriteableProperties
}

// ClientUpdateTagPropertiesOptions contains the optional parameters for the Client.UpdateTagProperties method.
type ClientUpdateTagPropertiesOptions struct {
	// Tag attribute value
	Value *TagWriteableProperties
}

// ClientUploadManifestOptions contains the optional parameters for the Client.UploadManifest method.
type ClientUploadManifestOptions struct {
	// placeholder for future optional parameters
}
