//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package generated

import "time"

// AzureAppConfigurationClientBeginCreateSnapshotOptions contains the optional parameters for the AzureAppConfigurationClient.BeginCreateSnapshot
// method.
type AzureAppConfigurationClientBeginCreateSnapshotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AzureAppConfigurationClientCheckKeyValueOptions contains the optional parameters for the AzureAppConfigurationClient.CheckKeyValue
// method.
type AzureAppConfigurationClientCheckKeyValueOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// The label of the key-value to retrieve.
	Label *string
	// Used to select what fields are present in the returned resource(s).
	Select []SettingFields
}

// AzureAppConfigurationClientCheckKeyValuesOptions contains the optional parameters for the AzureAppConfigurationClient.CheckKeyValues
// method.
type AzureAppConfigurationClientCheckKeyValuesOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// A filter used to match keys.
	Key *string
	// A filter used to match labels
	Label *string
	// Used to select what fields are present in the returned resource(s).
	Select []SettingFields
	// A filter used get key-values for a snapshot. Not valid when used with 'key' and 'label' filters.
	Snapshot *string
}

// AzureAppConfigurationClientCheckKeysOptions contains the optional parameters for the AzureAppConfigurationClient.CheckKeys
// method.
type AzureAppConfigurationClientCheckKeysOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// A filter for the name of the returned keys.
	Name *string
}

// AzureAppConfigurationClientCheckLabelsOptions contains the optional parameters for the AzureAppConfigurationClient.CheckLabels
// method.
type AzureAppConfigurationClientCheckLabelsOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// A filter for the name of the returned labels.
	Name *string
	// Used to select what fields are present in the returned resource(s).
	Select []LabelFields
}

// AzureAppConfigurationClientCheckRevisionsOptions contains the optional parameters for the AzureAppConfigurationClient.CheckRevisions
// method.
type AzureAppConfigurationClientCheckRevisionsOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// A filter used to match keys.
	Key *string
	// A filter used to match labels
	Label *string
	// Used to select what fields are present in the returned resource(s).
	Select []SettingFields
}

// AzureAppConfigurationClientCheckSnapshotOptions contains the optional parameters for the AzureAppConfigurationClient.CheckSnapshot
// method.
type AzureAppConfigurationClientCheckSnapshotOptions struct {
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
}

// AzureAppConfigurationClientCheckSnapshotsOptions contains the optional parameters for the AzureAppConfigurationClient.CheckSnapshots
// method.
type AzureAppConfigurationClientCheckSnapshotsOptions struct {
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
}

// AzureAppConfigurationClientDeleteKeyValueOptions contains the optional parameters for the AzureAppConfigurationClient.DeleteKeyValue
// method.
type AzureAppConfigurationClientDeleteKeyValueOptions struct {
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// The label of the key-value to delete.
	Label *string
}

// AzureAppConfigurationClientDeleteLockOptions contains the optional parameters for the AzureAppConfigurationClient.DeleteLock
// method.
type AzureAppConfigurationClientDeleteLockOptions struct {
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// The label, if any, of the key-value to unlock.
	Label *string
}

// AzureAppConfigurationClientGetKeyValueOptions contains the optional parameters for the AzureAppConfigurationClient.GetKeyValue
// method.
type AzureAppConfigurationClientGetKeyValueOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// The label of the key-value to retrieve.
	Label *string
	// Used to select what fields are present in the returned resource(s).
	Select []SettingFields
}

// AzureAppConfigurationClientGetKeyValuesOptions contains the optional parameters for the AzureAppConfigurationClient.NewGetKeyValuesPager
// method.
type AzureAppConfigurationClientGetKeyValuesOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// A filter used to match keys.
	Key *string
	// A filter used to match labels
	Label *string
	// Used to select what fields are present in the returned resource(s).
	Select []SettingFields
	// A filter used get key-values for a snapshot. The value should be the name of the snapshot. Not valid when used with 'key'
	// and 'label' filters.
	Snapshot *string
}

// AzureAppConfigurationClientGetKeysOptions contains the optional parameters for the AzureAppConfigurationClient.NewGetKeysPager
// method.
type AzureAppConfigurationClientGetKeysOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// A filter for the name of the returned keys.
	Name *string
}

// AzureAppConfigurationClientGetLabelsOptions contains the optional parameters for the AzureAppConfigurationClient.NewGetLabelsPager
// method.
type AzureAppConfigurationClientGetLabelsOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// A filter for the name of the returned labels.
	Name *string
	// Used to select what fields are present in the returned resource(s).
	Select []LabelFields
}

// AzureAppConfigurationClientGetOperationDetailsOptions contains the optional parameters for the AzureAppConfigurationClient.GetOperationDetails
// method.
type AzureAppConfigurationClientGetOperationDetailsOptions struct {
	// placeholder for future optional parameters
}

// AzureAppConfigurationClientGetRevisionsOptions contains the optional parameters for the AzureAppConfigurationClient.NewGetRevisionsPager
// method.
type AzureAppConfigurationClientGetRevisionsOptions struct {
	// Requests the server to respond with the state of the resource at the specified time.
	AcceptDatetime *string
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// A filter used to match keys.
	Key *string
	// A filter used to match labels
	Label *string
	// Used to select what fields are present in the returned resource(s).
	Select []SettingFields
}

// AzureAppConfigurationClientGetSnapshotOptions contains the optional parameters for the AzureAppConfigurationClient.GetSnapshot
// method.
type AzureAppConfigurationClientGetSnapshotOptions struct {
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// Used to select what fields are present in the returned resource(s).
	Select []SnapshotFields
}

// AzureAppConfigurationClientGetSnapshotsOptions contains the optional parameters for the AzureAppConfigurationClient.NewGetSnapshotsPager
// method.
type AzureAppConfigurationClientGetSnapshotsOptions struct {
	// Instructs the server to return elements that appear after the element referred to by the specified token.
	After *string
	// A filter for the name of the returned snapshots.
	Name *string
	// Used to select what fields are present in the returned resource(s).
	Select []SnapshotFields
	// Used to filter returned snapshots by their status property.
	Status []SnapshotStatus
}

// AzureAppConfigurationClientPutKeyValueOptions contains the optional parameters for the AzureAppConfigurationClient.PutKeyValue
// method.
type AzureAppConfigurationClientPutKeyValueOptions struct {
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// The label of the key-value to create.
	Label *string
}

// AzureAppConfigurationClientPutLockOptions contains the optional parameters for the AzureAppConfigurationClient.PutLock
// method.
type AzureAppConfigurationClientPutLockOptions struct {
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
	// The label, if any, of the key-value to lock.
	Label *string
}

// AzureAppConfigurationClientUpdateSnapshotOptions contains the optional parameters for the AzureAppConfigurationClient.UpdateSnapshot
// method.
type AzureAppConfigurationClientUpdateSnapshotOptions struct {
	// Used to perform an operation only if the targeted resource's etag matches the value provided.
	IfMatch *string
	// Used to perform an operation only if the targeted resource's etag does not match the value provided.
	IfNoneMatch *string
}

// Error - Azure App Configuration error object.
type Error struct {
	// A detailed description of the error.
	Detail *string

	// The name of the parameter that resulted in the error.
	Name *string

	// The HTTP status code that the error maps to.
	Status *int32

	// A brief summary of the error.
	Title *string

	// The type of the error.
	Type *string
}

// ErrorDetail - The details of an error.
type ErrorDetail struct {
	// REQUIRED; One of a server-defined set of error codes.
	Code *string

	// REQUIRED; A human-readable representation of the error.
	Message *string

	// An array of details about specific errors that led to this reported error.
	Details []*ErrorDetail

	// An object containing more specific information than the current object about the error.
	Innererror *InnerError
}

// InnerError - An object containing specific information about an error.
type InnerError struct {
	// One of a server-defined set of error codes.
	Code *string

	// An object containing more specific information than the current object about the error.
	Innererror *InnerError
}

type Key struct {
	// READ-ONLY; The name of the key.
	Name *string
}

// KeyListResult - The result of a list request.
type KeyListResult struct {
	// The collection value.
	Items []*Key

	// The URI that can be used to request the next set of paged results.
	NextLink *string
}

type KeyValue struct {
	// The content type of the value stored within the key-value.
	ContentType *string

	// A value representing the current state of the resource.
	Etag *string

	// The key of the key-value.
	Key *string

	// The label the key-value belongs to.
	Label *string

	// A date representing the last time the key-value was modified.
	LastModified *time.Time

	// Indicates whether the key-value is locked.
	Locked *bool

	// The tags of the key-value
	Tags map[string]*string

	// The value of the key-value.
	Value *string
}

// KeyValueFilter - Enables filtering of key-values.
type KeyValueFilter struct {
	// REQUIRED; Filters key-values by their key field.
	Key *string

	// Filters key-values by their label field.
	Label *string
}

// KeyValueListResult - The result of a list request.
type KeyValueListResult struct {
	// An identifier representing the returned state of the resource.
	Etag *string

	// The collection value.
	Items []*KeyValue

	// The URI that can be used to request the next set of paged results.
	NextLink *string
}

type Label struct {
	// READ-ONLY; The name of the label.
	Name *string
}

// LabelListResult - The result of a list request.
type LabelListResult struct {
	// The collection value.
	Items []*Label

	// The URI that can be used to request the next set of paged results.
	NextLink *string
}

// OperationDetails - Details of a long running operation.
type OperationDetails struct {
	// REQUIRED; The unique id of the operation.
	ID *string

	// REQUIRED; The current status of the operation
	Status *State

	// An error, available when the status is Failed, describing why the operation failed.
	Error *ErrorDetail
}

type Snapshot struct {
	// REQUIRED; A list of filters used to filter the key-values included in the snapshot.
	Filters []*KeyValueFilter

	// The composition type describes how the key-values within the snapshot are composed. The 'key' composition type ensures
	// there are no two key-values containing the same key. The 'key_label' composition
	// type ensures there are no two key-values containing the same key and label.
	CompositionType *CompositionType

	// The amount of time, in seconds, that a snapshot will remain in the archived state before expiring. This property is only
	// writable during the creation of a snapshot. If not specified, the default
	// lifetime of key-value revisions will be used.
	RetentionPeriod *int64

	// The tags of the snapshot.
	Tags map[string]*string

	// READ-ONLY; The time that the snapshot was created.
	Created *time.Time

	// READ-ONLY; A value representing the current state of the snapshot.
	Etag *string

	// READ-ONLY; The time that the snapshot will expire.
	Expires *time.Time

	// READ-ONLY; The amount of key-values in the snapshot.
	ItemsCount *int64

	// READ-ONLY; The name of the snapshot.
	Name *string

	// READ-ONLY; The size in bytes of the snapshot.
	Size *int64

	// READ-ONLY; The current status of the snapshot.
	Status *SnapshotStatus
}

// SnapshotListResult - The result of a snapshot list request.
type SnapshotListResult struct {
	// The collection value.
	Items []*Snapshot

	// The URI that can be used to request the next set of paged results.
	NextLink *string
}

// SnapshotUpdateParameters - Parameters used to update a snapshot.
type SnapshotUpdateParameters struct {
	// The desired status of the snapshot.
	Status *SnapshotStatus
}
