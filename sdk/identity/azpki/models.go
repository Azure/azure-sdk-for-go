//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package azpki

import "time"

// CertificateAttributes - Certificate and/or Certificate chain, along with a list of the certificate's attributes.
type CertificateAttributes struct {
	ExtendedKeyUsage []*ExtendedKeyUsage `json:"extendedKeyUsage,omitempty"`

	// The validity end date in UTC.
	InvalidAt *time.Time `json:"invalidAt,omitempty"`

	// Name of the certificate issuer.
	Issuer   *string     `json:"issuer,omitempty"`
	KeyUsage []*KeyUsage `json:"keyUsage,omitempty"`

	// Serial number for the certificate.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Distinguished name for the certificate.
	Subject                 *string   `json:"subject,omitempty"`
	SubjectAlternativeNames []*string `json:"subjectAlternativeNames,omitempty"`

	// The validity start date in UTC.
	ValidAt *time.Time `json:"validAt,omitempty"`
}

// CertificateDescriptionResponse - The attributes returned on the certificate description.
type CertificateDescriptionResponse struct {
	// The name of the Certificate Authority(CA) for the issued certificate.
	CAName *string `json:"CAName,omitempty"`

	// Name of the enrollment policy used.
	EnrollmentPolicyName *string `json:"enrollmentPolicyName,omitempty"`

	// The version of the enrollment policy which was used for this enroll request.
	EnrollmentPolicyVersion *string `json:"enrollmentPolicyVersion,omitempty"`

	// The timestamp in UTC for when the certificate was revoked.
	InvalidAt *time.Time `json:"invalidAt,omitempty"`

	// The timestamp in UTC for when the certificate is issued.
	IssuedAt *time.Time `json:"issuedAt,omitempty"`

	// The name of the PKI.
	Name             *string             `json:"name,omitempty"`
	RevocationReason []*RevocationReason `json:"revocationReason,omitempty"`

	// The attributes of the certificate.
	Value *CertificateAttributes `json:"value,omitempty"`
}

// CertificateValue - Certificate and/or Certificate chain, along with a list of the certificate's attributes.
type CertificateValue struct {
	ExtendedKeyUsage []*ExtendedKeyUsage `json:"extendedKeyUsage,omitempty"`

	// The validity end date in UTC.
	InvalidAt *time.Time `json:"invalidAt,omitempty"`

	// Name of the certificate issuer.
	Issuer   *string     `json:"issuer,omitempty"`
	KeyUsage []*KeyUsage `json:"keyUsage,omitempty"`

	// Certificate in pem format
	PEM *string `json:"PEM,omitempty"`

	// Certificate chain in pem/pkcs7 format.
	PEMChain *string `json:"PEMChain,omitempty"`

	// The certificate in pkcs7 format.
	PKCS7 *string `json:"PKCS7,omitempty"`

	// Serial number for the certificate.
	SerialNumber *string `json:"serialNumber,omitempty"`

	// Distinguished name for the certificate.
	Subject                 *string   `json:"subject,omitempty"`
	SubjectAlternativeNames []*string `json:"subjectAlternativeNames,omitempty"`

	// Thumbprint of the certificate.
	Thumbprint *string `json:"thumbprint,omitempty"`

	// The validity start date in UTC.
	ValidAt *time.Time `json:"validAt,omitempty"`
}

// ClientCertificateDetailsOptions contains the optional parameters for the Client.CertificateDetails method.
type ClientCertificateDetailsOptions struct {
	// placeholder for future optional parameters
}

// ClientEndEntityCertificateDownloadOptions contains the optional parameters for the Client.EndEntityCertificateDownload
// method.
type ClientEndEntityCertificateDownloadOptions struct {
	// placeholder for future optional parameters
}

// ClientEnrollCertificateOptions contains the optional parameters for the Client.EnrollCertificate method.
type ClientEnrollCertificateOptions struct {
	// Flag to indicate if the full certificate chain is to be included in the response.
	FullChain *bool
	// If set to 'logs', the response will include warnings/information from the requested endpoint operation.
	Include []Include
}

// ClientGetCaCertificateOptions contains the optional parameters for the Client.GetCaCertificate method.
type ClientGetCaCertificateOptions struct {
	// Flag to indicate if the full certificate chain is to be included in the response.
	FullChain *bool
}

// ClientRevokeOptions contains the optional parameters for the Client.Revoke method.
type ClientRevokeOptions struct {
	// If set to 'logs', the response will include warnings/information from the requested endpoint operation.
	Include []Include
}

// EnrollRequest - The attributes for the enroll request.
type EnrollRequest struct {
	// The Certificate Signing Request(CSR) for enrollment.
	CSR *string `json:"CSR,omitempty"`

	// Certificate attributes which will be used on the issued certificate.
	Substitutes *Substitutes `json:"substitutes,omitempty"`
}

// EnrollResponse - The attributes for the enroll response.
type EnrollResponse struct {
	// The name of the Certificate Authority(CA) for the issued certificate.
	CAName *string `json:"CAName,omitempty"`

	// Name of the enrollment policy used.
	EnrollmentPolicyName *string `json:"enrollmentPolicyName,omitempty"`

	// The version of the enrollment policy which was used for this enroll request.
	EnrollmentPolicyVersion *string `json:"enrollmentPolicyVersion,omitempty"`

	// The timestamp in UTC for when the certificate was revoked.
	InvalidAt *time.Time `json:"invalidAt,omitempty"`

	// The timestamp in UTC for when the certificate is issued.
	IssuedAt *time.Time `json:"issuedAt,omitempty"`

	// This is a part of the response only if the 'include' query parameter is set to 'log'. Contains warnings/errors generated
	// during the enrollment.
	Log []*LogEntry `json:"log,omitempty"`

	// The name of the PKI.
	Name             *string             `json:"name,omitempty"`
	RevocationReason []*RevocationReason `json:"revocationReason,omitempty"`

	// The attributes and the certificate value in pem/pkcs7 format. Can also contain the certificate chain in pkcs7/pem formats.
	Value *CertificateValue `json:"value,omitempty"`
}

// LogEntry - Logs generated during a particular operation enrollment/revocation.
type LogEntry struct {
	// Description of the log message
	Description *string `json:"description,omitempty"`

	// Type of log message - error/warning/info
	Type *string `json:"type,omitempty"`
}

// RevokeRequest - The attributes for the revoke request.
type RevokeRequest struct {
	RevocationReason []*RevocationReason `json:"revocationReason,omitempty"`
}

// RevokeResponse - The attributes for the revoke response.
type RevokeResponse struct {
	// Name of Certificate Authority(CA).
	CAName *string `json:"CAName,omitempty"`

	// The timestamp in UTC for when the certificate was revoked.
	InvalidAt *time.Time `json:"invalidAt,omitempty"`

	// Contains warnings/errors generated during the revocation.
	Log []*LogEntry `json:"log,omitempty"`

	// Name of PKI.
	Name *string `json:"name,omitempty"`

	// Serial number of the certificate.
	SerialNumber *string `json:"serialNumber,omitempty"`
}

// Substitutes - List of attributes which can be specified under substitutes.
type Substitutes struct {
	// Distinguished name for the certificate.
	DistinguishedName *string             `json:"distinguishedName,omitempty"`
	ExtendedKeyUsage  []*ExtendedKeyUsage `json:"extendedKeyUsage,omitempty"`

	// The validity end date in UTC.
	InvalidAt               *time.Time  `json:"invalidAt,omitempty"`
	KeyUsage                []*KeyUsage `json:"keyUsage,omitempty"`
	SubjectAlternativeNames []*string   `json:"subjectAlternativeNames,omitempty"`

	// Subject name for the certificate.
	SubjectName *string `json:"subjectName,omitempty"`

	// The validity start date in UTC.
	ValidAt *time.Time `json:"validAt,omitempty"`
}
