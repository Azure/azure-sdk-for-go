//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package azeventgrid

import "github.com/Azure/azure-sdk-for-go/sdk/azcore/messaging"

// AcknowledgeOptions - Array of lock token strings for the corresponding received Cloud Events to be acknowledged.
type AcknowledgeOptions struct {
	// REQUIRED; String array of lock tokens.
	LockTokens []*string
}

// AcknowledgeResult - The result of the Acknowledge operation.
type AcknowledgeResult struct {
	// REQUIRED; Array of LockToken values for failed cloud events. Each LockToken includes the lock token value along with the
	// related error information (namely, the error code and description).
	FailedLockTokens []*FailedLockToken

	// REQUIRED; Array of lock tokens values for the successfully acknowledged cloud events.
	SucceededLockTokens []*string
}

// BrokerProperties - Properties of the Event Broker operation.
type BrokerProperties struct {
	// REQUIRED; The attempt count for delivering the event.
	DeliveryCount *int32

	// REQUIRED; The token used to lock the event.
	LockToken *string
}

// AcknowledgeCloudEventsOptions contains the optional parameters for the Client.AcknowledgeCloudEvents method.
type AcknowledgeCloudEventsOptions struct {
	// placeholder for future optional parameters
}

// PublishCloudEventsOptions contains the optional parameters for the Client.PublishCloudEvents method.
type PublishCloudEventsOptions struct {
	// placeholder for future optional parameters
}

// ReceiveCloudEventsOptions contains the optional parameters for the Client.ReceiveCloudEvents method.
type ReceiveCloudEventsOptions struct {
	// Max Events count to be received. Minimum value is 1, while maximum value is 100 events. If not specified, the default value
	// is 1.
	MaxEvents *int32
	// Max wait time value for receive operation in Seconds. It is the time in seconds that the server approximately waits for
	// the availability of an event and responds to the request. If an event is
	// available, the broker responds immediately to the client. Minimum value is 10 seconds, while maximum value is 120 seconds.
	// If not specified, the default value is 60 seconds.
	MaxWaitTime *int32
}

// RejectCloudEventsOptions contains the optional parameters for the Client.RejectCloudEvents method.
type RejectCloudEventsOptions struct {
	// placeholder for future optional parameters
}

// ReleaseCloudEventsOptions contains the optional parameters for the Client.ReleaseCloudEvents method.
type ReleaseCloudEventsOptions struct {
	// placeholder for future optional parameters
}

// FailedLockToken - Failed LockToken information.
type FailedLockToken struct {
	// REQUIRED; Error code related to the token. Example of such error codes are BadToken: which indicates the Token is not formatted
	// correctly, TokenLost: which indicates that token is not found, and
	// InternalServerError: For any internal server errors.
	ErrorCode *string

	// REQUIRED; Description of the token error.
	ErrorDescription *string

	// REQUIRED; LockToken value
	LockToken *string
}

// ReceiveDetails - Receive operation details per Cloud Event.
type ReceiveDetails struct {
	// REQUIRED; The Event Broker details.
	BrokerProperties *BrokerProperties

	// REQUIRED; Cloud Event details.
	Event messaging.CloudEvent
}

// ReceiveResult - Details of the Receive operation response.
type ReceiveResult struct {
	// REQUIRED; Array of receive responses, one per cloud event.
	Value []*ReceiveDetails
}

// RejectOptions - Array of lock token strings for the corresponding received Cloud Events to be rejected.
type RejectOptions struct {
	// REQUIRED; String array of lock tokens.
	LockTokens []*string
}

// RejectResult - The result of the Reject operation.
type RejectResult struct {
	// REQUIRED; Array of LockToken values for failed cloud events. Each LockToken includes the lock token value along with the
	// related error information (namely, the error code and description).
	FailedLockTokens []*FailedLockToken

	// REQUIRED; Array of lock tokens values for the successfully rejected cloud events.
	SucceededLockTokens []*string
}

// ReleaseOptions - Array of lock token strings for the corresponding received Cloud Events to be released.
type ReleaseOptions struct {
	// REQUIRED; String array of lock tokens.
	LockTokens []*string
}

// ReleaseResult - The result of the Release operation.
type ReleaseResult struct {
	// REQUIRED; Array of LockToken values for failed cloud events. Each LockToken includes the lock token value along with the
	// related error information (namely, the error code and description).
	FailedLockTokens []*FailedLockToken

	// REQUIRED; Array of lock tokens values for the successfully released cloud events.
	SucceededLockTokens []*string
}
