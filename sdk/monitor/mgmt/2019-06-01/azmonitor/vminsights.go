// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azmonitor

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"net/http"
	"strings"
)

// VMInsightsOperations contains the methods for the VMInsights group.
type VMInsightsOperations interface {
	// GetOnboardingStatus - Retrieves the VM Insights onboarding status for the specified resource or resource scope.
	GetOnboardingStatus(ctx context.Context, resourceUri string) (*VMInsightsOnboardingStatusResponse, error)
}

// vmInsightsOperations implements the VMInsightsOperations interface.
type vmInsightsOperations struct {
	*Client
}

// GetOnboardingStatus - Retrieves the VM Insights onboarding status for the specified resource or resource scope.
func (client *vmInsightsOperations) GetOnboardingStatus(ctx context.Context, resourceUri string) (*VMInsightsOnboardingStatusResponse, error) {
	req, err := client.getOnboardingStatusCreateRequest(resourceUri)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.getOnboardingStatusHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// getOnboardingStatusCreateRequest creates the GetOnboardingStatus request.
func (client *vmInsightsOperations) getOnboardingStatusCreateRequest(resourceUri string) (*azcore.Request, error) {
	urlPath := "/{resourceUri}/providers/Microsoft.Insights/vmInsightsOnboardingStatuses/default"
	urlPath = strings.ReplaceAll(urlPath, "{resourceUri}", resourceUri)
	u, err := client.u.Parse(urlPath)
	if err != nil {
		return nil, err
	}
	query := u.Query()
	query.Set("api-version", "2018-11-27-preview")
	u.RawQuery = query.Encode()
	req := azcore.NewRequest(http.MethodGet, *u)
	return req, nil
}

// getOnboardingStatusHandleResponse handles the GetOnboardingStatus response.
func (client *vmInsightsOperations) getOnboardingStatusHandleResponse(resp *azcore.Response) (*VMInsightsOnboardingStatusResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, client.getOnboardingStatusHandleError(resp)
	}
	result := VMInsightsOnboardingStatusResponse{RawResponse: resp.Response}
	return &result, resp.UnmarshalAsJSON(&result.VMInsightsOnboardingStatus)
}

// getOnboardingStatusHandleError handles the GetOnboardingStatus error response.
func (client *vmInsightsOperations) getOnboardingStatusHandleError(resp *azcore.Response) error {
	var err ResponseWithError
	if err := resp.UnmarshalAsJSON(&err); err != nil {
		return err
	}
	return err
}
