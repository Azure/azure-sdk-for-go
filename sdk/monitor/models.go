//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package monitor

// BatchQueryRequest - An single request in a batch.
type BatchQueryRequest struct {
	// REQUIRED; The Analytics query. Learn more about the Analytics query syntax [https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/]
	Body *QueryBody `json:"body,omitempty"`

	// REQUIRED; The error details.
	ID *string `json:"id,omitempty"`

	// REQUIRED; Workspace Id to be included in the query
	Workspace *string `json:"workspace,omitempty"`

	// Dictionary of
	Headers map[string]*string       `json:"headers,omitempty"`
	Method  *BatchQueryRequestMethod `json:"method,omitempty"`
	Path    *BatchQueryRequestPath   `json:"path,omitempty"`
}

type BatchQueryResponse struct {
	// Contains the tables, columns & rows resulting from a query.
	Body *BatchQueryResults `json:"body,omitempty"`

	// Dictionary of
	Headers map[string]*string `json:"headers,omitempty"`
	ID      *string            `json:"id,omitempty"`
	Status  *int32             `json:"status,omitempty"`
}

// BatchQueryResults - Contains the tables, columns & rows resulting from a query.
type BatchQueryResults struct {
	// The code and message for an error.
	Error *ErrorInfo `json:"error,omitempty"`

	// Visualization data in JSON format.
	Render interface{} `json:"render,omitempty"`

	// Statistics represented in JSON format.
	Statistics interface{} `json:"statistics,omitempty"`

	// The list of tables, columns and rows.
	Tables []*Table `json:"tables,omitempty"`
}

// BatchRequest - An array of requests.
type BatchRequest struct {
	// REQUIRED; An single request in a batch.
	Requests []*BatchQueryRequest `json:"requests,omitempty"`
}

// BatchResponse - Response to a batch query.
type BatchResponse struct {
	// An array of responses corresponding to each individual request in a batch.
	Responses []*BatchQueryResponse `json:"responses,omitempty"`
}

// Column - A column in a table.
type Column struct {
	// The name of this column.
	Name *string `json:"name,omitempty"`

	// The data type of this column.
	Type *LogsColumnType `json:"type,omitempty"`
}

// ErrorDetail - Error details.
type ErrorDetail struct {
	// REQUIRED; The error's code.
	Code *string `json:"code,omitempty"`

	// REQUIRED; A human readable error message.
	Message *string `json:"message,omitempty"`

	// Additional properties that can be provided on the error details object
	AdditionalProperties interface{} `json:"additionalProperties,omitempty"`

	// Indicates resources which were responsible for the error.
	Resources []*string `json:"resources,omitempty"`

	// Indicates which property in the request is responsible for the error.
	Target *string `json:"target,omitempty"`

	// Indicates which value in 'target' is responsible for the error.
	Value *string `json:"value,omitempty"`
}

// ErrorInfo - The code and message for an error.
type ErrorInfo struct {
	// REQUIRED; A machine readable error code.
	Code *string `json:"code,omitempty"`

	// REQUIRED; A human readable error message.
	Message *string `json:"message,omitempty"`

	// Additional properties that can be provided on the error info object
	AdditionalProperties interface{} `json:"additionalProperties,omitempty"`

	// error details.
	Details []*ErrorDetail `json:"details,omitempty"`

	// Inner error details if they exist.
	Innererror *ErrorInfo `json:"innererror,omitempty"`
}

// ErrorResponse - Contains details when the response code indicates an error.
type ErrorResponse struct {
	// REQUIRED; The error details.
	Error *ErrorInfo `json:"error,omitempty"`
}

// MetadataApplication - Application Insights apps that were part of the metadata request and that the user has access to.
type MetadataApplication struct {
	// REQUIRED; The ID of the Application Insights app.
	ID *string `json:"id,omitempty"`

	// REQUIRED; The name of the Application Insights app.
	Name *string `json:"name,omitempty"`

	// REQUIRED; The Azure region of the Application Insights app.
	Region *string `json:"region,omitempty"`

	// REQUIRED; The ARM resource ID of the Application Insights app.
	ResourceID *string `json:"resourceId,omitempty"`

	// The related metadata items for the Application Insights app.
	Related *MetadataApplicationRelated `json:"related,omitempty"`
}

// MetadataApplicationRelated - The related metadata items for the Application Insights app.
type MetadataApplicationRelated struct {
	// The related functions for the Application Insights app.
	Functions []*string `json:"functions,omitempty"`

	// The related tables for the Application Insights app.
	Tables []*string `json:"tables,omitempty"`
}

// MetadataCategory - Categories are used to group other metadata entities.
type MetadataCategory struct {
	// REQUIRED; The display name of the category
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; The ID of the category
	ID *string `json:"id,omitempty"`

	// The description of the category
	Description *string `json:"description,omitempty"`

	// The related metadata items for the category
	Related *MetadataCategoryRelated `json:"related,omitempty"`
}

// MetadataCategoryRelated - The related metadata items for the category
type MetadataCategoryRelated struct {
	// The functions related to the category
	Functions []*string `json:"functions,omitempty"`

	// The saved queries related to the category
	Queries []*string `json:"queries,omitempty"`

	// The resource types related to the category
	ResourceTypes []*string `json:"resourceTypes,omitempty"`

	// The Log Analytics solutions related to the category
	Solutions []*string `json:"solutions,omitempty"`

	// The tables related to the category
	Tables []*string `json:"tables,omitempty"`
}

// MetadataClientGetOptions contains the optional parameters for the MetadataClient.Get method.
type MetadataClientGetOptions struct {
	// placeholder for future optional parameters
}

// MetadataClientPostOptions contains the optional parameters for the MetadataClient.Post method.
type MetadataClientPostOptions struct {
	// placeholder for future optional parameters
}

// MetadataFunction - Functions are stored Kusto queries that can be specified as part of queries by using their name.
type MetadataFunction struct {
	// REQUIRED; The KQL body of the function.
	Body *string `json:"body,omitempty"`

	// REQUIRED; The ID of the function.
	ID *string `json:"id,omitempty"`

	// REQUIRED; The name of the function, to be used in queries.
	Name *string `json:"name,omitempty"`

	// The description of the function.
	Description *string `json:"description,omitempty"`

	// The display name of the function.
	DisplayName *string `json:"displayName,omitempty"`

	// The parameters/arguments of the function, if any.
	Parameters *string `json:"parameters,omitempty"`

	// The properties of the function.
	Properties interface{} `json:"properties,omitempty"`

	// The related metadata items for the function.
	Related *MetadataFunctionRelated `json:"related,omitempty"`

	// The tags associated with the function.
	Tags interface{} `json:"tags,omitempty"`
}

// MetadataFunctionRelated - The related metadata items for the function.
type MetadataFunctionRelated struct {
	// The related categories for the function.
	Categories []*string `json:"categories,omitempty"`

	// The related resource types for the function.
	ResourceTypes []*string `json:"resourceTypes,omitempty"`

	// The related Log Analytics solutions for the function.
	Solutions []*string `json:"solutions,omitempty"`

	// The related tables for the function.
	Tables []*string `json:"tables,omitempty"`

	// The related workspaces for the function.
	Workspaces []*string `json:"workspaces,omitempty"`
}

// MetadataPermissions - Permission information for the metadata call, includes apps/workspaces/resource the user didn't have
// access to.
type MetadataPermissions struct {
	// REQUIRED; The permission indication for the workspaces on the metadata request.
	Workspaces []*MetadataPermissionsWorkspacesItem `json:"workspaces,omitempty"`

	// The permission indication for the Application Insights apps on the metadata request.
	Applications []*MetadataPermissionsApplicationsItem `json:"applications,omitempty"`

	// The permission indication for the Azure resources on the metadata request.
	Resources []*MetadataPermissionsResourcesItem `json:"resources,omitempty"`
}

type MetadataPermissionsApplicationsItem struct {
	// REQUIRED; The resource ID on the permission indication.
	ResourceID *string `json:"resourceId,omitempty"`
}

type MetadataPermissionsResourcesItem struct {
	// REQUIRED; The resource ID on the permission indication.
	ResourceID *string `json:"resourceId,omitempty"`

	// The list of tables that were denied access for the resource ID.
	DenyTables []*string `json:"denyTables,omitempty"`
}

type MetadataPermissionsWorkspacesItem struct {
	// REQUIRED; The resource ID on the permission indication.
	ResourceID *string `json:"resourceId,omitempty"`

	// The list of tables that were denied access for the resource ID.
	DenyTables []*string `json:"denyTables,omitempty"`
}

// MetadataQuery - Queries are stored pieces of KQL, along with a list of relevant metadata items.
type MetadataQuery struct {
	// REQUIRED; The KQL body of the query.
	Body *string `json:"body,omitempty"`

	// REQUIRED; The ID of the query.
	ID *string `json:"id,omitempty"`

	// The description of the query.
	Description *string `json:"description,omitempty"`

	// The display name of the query.
	DisplayName *string `json:"displayName,omitempty"`

	// The user defined labels associated with the query.
	Labels []*string `json:"labels,omitempty"`

	// The properties of the query.
	Properties interface{} `json:"properties,omitempty"`

	// The related metadata items for the query.
	Related *MetadataQueryRelated `json:"related,omitempty"`

	// The tags associated with the query.
	Tags interface{} `json:"tags,omitempty"`
}

// MetadataQueryRelated - The related metadata items for the query.
type MetadataQueryRelated struct {
	// The related categories for the query.
	Categories []*string `json:"categories,omitempty"`

	// The related resource types for the query.
	ResourceTypes []*string `json:"resourceTypes,omitempty"`

	// The related Log Analytics solutions for the query.
	Solutions []*string `json:"solutions,omitempty"`

	// The related tables for the query.
	Tables []*string `json:"tables,omitempty"`
}

// MetadataResourceType - Metadata about types of Azure resources, containing relevant tables, functions, etc.
type MetadataResourceType struct {
	// REQUIRED; The ID of the resource-type
	ID *string `json:"id,omitempty"`

	// REQUIRED; The type of the resource-type
	Type *string `json:"type,omitempty"`

	// The description of the resource-type
	Description *string `json:"description,omitempty"`

	// The display name of the resource-type
	DisplayName *string `json:"displayName,omitempty"`

	// The user-defined labels of the resource-type
	Labels []*string `json:"labels,omitempty"`

	// The properties of the resource-type
	Properties interface{} `json:"properties,omitempty"`

	// The related metadata items for the resource-type
	Related *MetadataResourceTypeRelated `json:"related,omitempty"`

	// The tags associated with the resource-type
	Tags interface{} `json:"tags,omitempty"`
}

// MetadataResourceTypeRelated - The related metadata items for the resource-type
type MetadataResourceTypeRelated struct {
	// The categories related to the resource-type
	Categories []*string `json:"categories,omitempty"`

	// The functions related to the resource-type
	Functions []*string `json:"functions,omitempty"`

	// The queries related to the resource-type
	Queries []*string `json:"queries,omitempty"`

	// The Azure resources related to the resource-type
	Resources []*string `json:"resources,omitempty"`

	// The tables related to the resource-type
	Tables []*string `json:"tables,omitempty"`

	// The Log Analytics workspaces related to the resource-type
	Workspaces []*string `json:"workspaces,omitempty"`
}

// MetadataResults - The metadata response for the app, including available tables, etc.
type MetadataResults struct {
	// The list of Application Insights apps that were referenced in the metadata request.
	Applications []*MetadataApplication `json:"applications,omitempty"`

	// The list of categories that are referenced in this metadata response.
	Categories []*MetadataCategory `json:"categories,omitempty"`

	// The list of functions stored on the workspace, or introduced by solutions etc.
	Functions []*MetadataFunction `json:"functions,omitempty"`

	// The list of permission rules that affected the metadata request.
	Permissions []*MetadataPermissions `json:"permissions,omitempty"`

	// The list of saved queries stored on the workspace, or introduced by solutions, resource types, etc.
	Queries []*MetadataQuery `json:"queries,omitempty"`

	// The list of resource types that are referenced in this metadata response.
	ResourceTypes []*MetadataResourceType `json:"resourceTypes,omitempty"`

	// The list of Azure resources that were referenced in the metadata request.
	Resources []interface{} `json:"resources,omitempty"`

	// The list of Log Analytics solutions installed on the workspace.
	Solutions []*MetadataSolution `json:"solutions,omitempty"`

	// The list of tables and columns that comprise the schema of the workspace.
	Tables []*MetadataTable `json:"tables,omitempty"`

	// The list of Log Analytics workspaces that were referenced in the metadata request.
	Workspaces []*MetadataWorkspace `json:"workspaces,omitempty"`
}

// MetadataSolution - Solutions can group tables and functions that are associated with a certain Azure Log Analytics offering.
type MetadataSolution struct {
	// REQUIRED; The ID of the Log Analytics solution
	ID *string `json:"id,omitempty"`

	// REQUIRED; The name of the Log Analytics solution
	Name *string `json:"name,omitempty"`

	// REQUIRED; The related metadata items for the Log Analytics solution
	Related *MetadataSolutionRelated `json:"related,omitempty"`

	// The description of the Log Analytics solution
	Description *string `json:"description,omitempty"`

	// The display name of the Log Analytics solution
	DisplayName *string `json:"displayName,omitempty"`

	// The properties of the Log Analytics solution
	Properties interface{} `json:"properties,omitempty"`

	// The tags that are associated with the Log Analytics solution
	Tags interface{} `json:"tags,omitempty"`
}

// MetadataSolutionRelated - The related metadata items for the Log Analytics solution
type MetadataSolutionRelated struct {
	// REQUIRED; The tables related to the Log Analytics solution
	Tables []*string `json:"tables,omitempty"`

	// The categories related to the Log Analytics solution
	Categories []*string `json:"categories,omitempty"`

	// The functions related to the Log Analytics solution
	Functions []*string `json:"functions,omitempty"`

	// The saved queries related to the Log Analytics solution
	Queries []*string `json:"queries,omitempty"`

	// The Workspaces referenced in the metadata request that are related to the Log Analytics solution
	Workspaces []*string `json:"workspaces,omitempty"`
}

// MetadataTable - Tables are part of the workspace schema, and contain a list of columns and a reference to other relevant
// metadata items.
type MetadataTable struct {
	// REQUIRED; The ID of the table
	ID *string `json:"id,omitempty"`

	// REQUIRED; The name of the table
	Name *string `json:"name,omitempty"`

	// The list of columns defined on the table
	Columns []*MetadataTableColumnsItem `json:"columns,omitempty"`

	// The description of the table
	Description *string `json:"description,omitempty"`

	// The user defined labels of the table
	Labels []*string `json:"labels,omitempty"`

	// The properties of the table
	Properties interface{} `json:"properties,omitempty"`

	// The related metadata items for the table
	Related *MetadataTableRelated `json:"related,omitempty"`

	// The tags associated with the table
	Tags interface{} `json:"tags,omitempty"`

	// The column associated with the timespan query parameter for the table
	TimespanColumn *string `json:"timespanColumn,omitempty"`
}

type MetadataTableColumnsItem struct {
	// REQUIRED; The name of the column
	Name *string `json:"name,omitempty"`

	// REQUIRED; The data type of the column
	Type *MetadataColumnDataType `json:"type,omitempty"`

	// The description of the column
	Description *string `json:"description,omitempty"`

	// A flag indicating this column is a preferred facet
	IsPreferredFacet *bool `json:"isPreferredFacet,omitempty"`

	// an indication of the source of the column, used only when multiple workspaces have conflicting definition for the column
	Source interface{} `json:"source,omitempty"`
}

// MetadataTableRelated - The related metadata items for the table
type MetadataTableRelated struct {
	// The related categories for the table
	Categories []*string `json:"categories,omitempty"`

	// The related functions for the table
	Functions []*string `json:"functions,omitempty"`

	// The related saved queries for the table
	Queries []*string `json:"queries,omitempty"`

	// The related resource types for the table
	ResourceTypes []*string `json:"resourceTypes,omitempty"`

	// The related Log Analytics solutions for the table
	Solutions []*string `json:"solutions,omitempty"`

	// The related Log Analytics workspaces for the table
	Workspaces []*string `json:"workspaces,omitempty"`
}

// MetadataWorkspace - Log Analytics workspaces that were part of the metadata request and that the user has access to.
type MetadataWorkspace struct {
	// REQUIRED; The ID of the Log Analytics workspace.
	ID *string `json:"id,omitempty"`

	// REQUIRED; The name of the Log Analytics workspace.
	Name *string `json:"name,omitempty"`

	// REQUIRED; The Azure region of the Log Analytics workspace.
	Region *string `json:"region,omitempty"`

	// REQUIRED; The ARM resource ID of the Log Analytics workspace.
	ResourceID *string `json:"resourceId,omitempty"`

	// The related metadata items for the Log Analytics workspace.
	Related *MetadataWorkspaceRelated `json:"related,omitempty"`
}

// MetadataWorkspaceRelated - The related metadata items for the Log Analytics workspace.
type MetadataWorkspaceRelated struct {
	// The related functions for the Log Analytics workspace.
	Functions []*string `json:"functions,omitempty"`

	// The related resource types for the Log Analytics workspace.
	ResourceTypes []*string `json:"resourceTypes,omitempty"`

	// The related Azure resources for the Log Analytics workspace.
	Resources []*string `json:"resources,omitempty"`

	// The related Log Analytics solutions for the Log Analytics workspace.
	Solutions []*string `json:"solutions,omitempty"`

	// The related tables for the Log Analytics workspace.
	Tables []*string `json:"tables,omitempty"`
}

// QueryBody - The Analytics query. Learn more about the Analytics query syntax [https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/]
type QueryBody struct {
	// REQUIRED; The query to execute.
	Query *string `json:"query,omitempty"`

	// Optional. The timespan over which to query data. This is an ISO8601 time period value. This timespan is applied in addition
	// to any that are specified in the query expression.
	Timespan *string `json:"timespan,omitempty"`

	// A list of workspaces that are included in the query.
	Workspaces []*string `json:"workspaces,omitempty"`
}

// QueryClientBatchOptions contains the optional parameters for the QueryClient.Batch method.
type QueryClientBatchOptions struct {
	// placeholder for future optional parameters
}

// QueryClientExecuteOptions contains the optional parameters for the QueryClient.Execute method.
type QueryClientExecuteOptions struct {
	// Optional. The prefer header to set server timeout, query statistics and visualization information.
	Prefer *string
}

// QueryClientGetOptions contains the optional parameters for the QueryClient.Get method.
type QueryClientGetOptions struct {
	// Optional. The timespan over which to query data. This is an ISO8601 time period value. This timespan is applied in addition
	// to any that are specified in the query expression.
	Timespan *string
}

// QueryResults - Contains the tables, columns & rows resulting from a query.
type QueryResults struct {
	// REQUIRED; The list of tables, columns and rows.
	Tables []*Table `json:"tables,omitempty"`

	// The code and message for an error.
	Error *ErrorInfo `json:"error,omitempty"`

	// Visualization data in JSON format.
	Render interface{} `json:"render,omitempty"`

	// Statistics represented in JSON format.
	Statistics interface{} `json:"statistics,omitempty"`
}

// Table - Contains the columns and rows for one table in a query response.
type Table struct {
	// REQUIRED; The list of columns in this table.
	Columns []*Column `json:"columns,omitempty"`

	// REQUIRED; The name of the table.
	Name *string `json:"name,omitempty"`

	// REQUIRED; The resulting rows from this query.
	Rows [][]interface{} `json:"rows,omitempty"`
}
