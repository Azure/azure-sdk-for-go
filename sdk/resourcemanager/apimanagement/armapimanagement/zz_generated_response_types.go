//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armapimanagement

import (
	"context"
	"net/http"
	"time"

	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
)

// APICreateOrUpdatePollerResponse contains the response from method API.CreateOrUpdate.
type APICreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APICreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APICreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APICreateOrUpdateResponse, error) {
	respType := APICreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.APIContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APICreateOrUpdatePollerResponse from the provided client and resume token.
func (l *APICreateOrUpdatePollerResponse) Resume(ctx context.Context, client *APIClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &APICreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APICreateOrUpdateResponse contains the response from method API.CreateOrUpdate.
type APICreateOrUpdateResponse struct {
	APICreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APICreateOrUpdateResult contains the result from method API.CreateOrUpdate.
type APICreateOrUpdateResult struct {
	APIContract
}

// APIDeleteResponse contains the response from method API.Delete.
type APIDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIDiagnosticCreateOrUpdateResponse contains the response from method APIDiagnostic.CreateOrUpdate.
type APIDiagnosticCreateOrUpdateResponse struct {
	APIDiagnosticCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIDiagnosticCreateOrUpdateResult contains the result from method APIDiagnostic.CreateOrUpdate.
type APIDiagnosticCreateOrUpdateResult struct {
	DiagnosticContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIDiagnosticDeleteResponse contains the response from method APIDiagnostic.Delete.
type APIDiagnosticDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIDiagnosticGetEntityTagResponse contains the response from method APIDiagnostic.GetEntityTag.
type APIDiagnosticGetEntityTagResponse struct {
	APIDiagnosticGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIDiagnosticGetEntityTagResult contains the result from method APIDiagnostic.GetEntityTag.
type APIDiagnosticGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIDiagnosticGetResponse contains the response from method APIDiagnostic.Get.
type APIDiagnosticGetResponse struct {
	APIDiagnosticGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIDiagnosticGetResult contains the result from method APIDiagnostic.Get.
type APIDiagnosticGetResult struct {
	DiagnosticContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIDiagnosticListByServiceResponse contains the response from method APIDiagnostic.ListByService.
type APIDiagnosticListByServiceResponse struct {
	APIDiagnosticListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIDiagnosticListByServiceResult contains the result from method APIDiagnostic.ListByService.
type APIDiagnosticListByServiceResult struct {
	DiagnosticCollection
}

// APIDiagnosticUpdateResponse contains the response from method APIDiagnostic.Update.
type APIDiagnosticUpdateResponse struct {
	APIDiagnosticUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIDiagnosticUpdateResult contains the result from method APIDiagnostic.Update.
type APIDiagnosticUpdateResult struct {
	DiagnosticContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIExportGetResponse contains the response from method APIExport.Get.
type APIExportGetResponse struct {
	APIExportGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIExportGetResult contains the result from method APIExport.Get.
type APIExportGetResult struct {
	APIExportResult
}

// APIGetEntityTagResponse contains the response from method API.GetEntityTag.
type APIGetEntityTagResponse struct {
	APIGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIGetEntityTagResult contains the result from method API.GetEntityTag.
type APIGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIGetResponse contains the response from method API.Get.
type APIGetResponse struct {
	APIGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIGetResult contains the result from method API.Get.
type APIGetResult struct {
	APIContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIIssueAttachmentCreateOrUpdateResponse contains the response from method APIIssueAttachment.CreateOrUpdate.
type APIIssueAttachmentCreateOrUpdateResponse struct {
	APIIssueAttachmentCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueAttachmentCreateOrUpdateResult contains the result from method APIIssueAttachment.CreateOrUpdate.
type APIIssueAttachmentCreateOrUpdateResult struct {
	IssueAttachmentContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIIssueAttachmentDeleteResponse contains the response from method APIIssueAttachment.Delete.
type APIIssueAttachmentDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueAttachmentGetEntityTagResponse contains the response from method APIIssueAttachment.GetEntityTag.
type APIIssueAttachmentGetEntityTagResponse struct {
	APIIssueAttachmentGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueAttachmentGetEntityTagResult contains the result from method APIIssueAttachment.GetEntityTag.
type APIIssueAttachmentGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIIssueAttachmentGetResponse contains the response from method APIIssueAttachment.Get.
type APIIssueAttachmentGetResponse struct {
	APIIssueAttachmentGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueAttachmentGetResult contains the result from method APIIssueAttachment.Get.
type APIIssueAttachmentGetResult struct {
	IssueAttachmentContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIIssueAttachmentListByServiceResponse contains the response from method APIIssueAttachment.ListByService.
type APIIssueAttachmentListByServiceResponse struct {
	APIIssueAttachmentListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueAttachmentListByServiceResult contains the result from method APIIssueAttachment.ListByService.
type APIIssueAttachmentListByServiceResult struct {
	IssueAttachmentCollection
}

// APIIssueCommentCreateOrUpdateResponse contains the response from method APIIssueComment.CreateOrUpdate.
type APIIssueCommentCreateOrUpdateResponse struct {
	APIIssueCommentCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueCommentCreateOrUpdateResult contains the result from method APIIssueComment.CreateOrUpdate.
type APIIssueCommentCreateOrUpdateResult struct {
	IssueCommentContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIIssueCommentDeleteResponse contains the response from method APIIssueComment.Delete.
type APIIssueCommentDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueCommentGetEntityTagResponse contains the response from method APIIssueComment.GetEntityTag.
type APIIssueCommentGetEntityTagResponse struct {
	APIIssueCommentGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueCommentGetEntityTagResult contains the result from method APIIssueComment.GetEntityTag.
type APIIssueCommentGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIIssueCommentGetResponse contains the response from method APIIssueComment.Get.
type APIIssueCommentGetResponse struct {
	APIIssueCommentGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueCommentGetResult contains the result from method APIIssueComment.Get.
type APIIssueCommentGetResult struct {
	IssueCommentContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIIssueCommentListByServiceResponse contains the response from method APIIssueComment.ListByService.
type APIIssueCommentListByServiceResponse struct {
	APIIssueCommentListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueCommentListByServiceResult contains the result from method APIIssueComment.ListByService.
type APIIssueCommentListByServiceResult struct {
	IssueCommentCollection
}

// APIIssueCreateOrUpdateResponse contains the response from method APIIssue.CreateOrUpdate.
type APIIssueCreateOrUpdateResponse struct {
	APIIssueCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueCreateOrUpdateResult contains the result from method APIIssue.CreateOrUpdate.
type APIIssueCreateOrUpdateResult struct {
	IssueContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIIssueDeleteResponse contains the response from method APIIssue.Delete.
type APIIssueDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueGetEntityTagResponse contains the response from method APIIssue.GetEntityTag.
type APIIssueGetEntityTagResponse struct {
	APIIssueGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueGetEntityTagResult contains the result from method APIIssue.GetEntityTag.
type APIIssueGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIIssueGetResponse contains the response from method APIIssue.Get.
type APIIssueGetResponse struct {
	APIIssueGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueGetResult contains the result from method APIIssue.Get.
type APIIssueGetResult struct {
	IssueContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIIssueListByServiceResponse contains the response from method APIIssue.ListByService.
type APIIssueListByServiceResponse struct {
	APIIssueListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueListByServiceResult contains the result from method APIIssue.ListByService.
type APIIssueListByServiceResult struct {
	IssueCollection
}

// APIIssueUpdateResponse contains the response from method APIIssue.Update.
type APIIssueUpdateResponse struct {
	APIIssueUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIIssueUpdateResult contains the result from method APIIssue.Update.
type APIIssueUpdateResult struct {
	IssueContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIListByServiceResponse contains the response from method API.ListByService.
type APIListByServiceResponse struct {
	APIListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIListByServiceResult contains the result from method API.ListByService.
type APIListByServiceResult struct {
	APICollection
}

// APIListByTagsResponse contains the response from method API.ListByTags.
type APIListByTagsResponse struct {
	APIListByTagsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIListByTagsResult contains the result from method API.ListByTags.
type APIListByTagsResult struct {
	TagResourceCollection
}

// APIManagementClientPerformConnectivityCheckAsyncPollerResponse contains the response from method APIManagementClient.PerformConnectivityCheckAsync.
type APIManagementClientPerformConnectivityCheckAsyncPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APIManagementClientPerformConnectivityCheckAsyncPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APIManagementClientPerformConnectivityCheckAsyncPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APIManagementClientPerformConnectivityCheckAsyncResponse, error) {
	respType := APIManagementClientPerformConnectivityCheckAsyncResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.ConnectivityCheckResponse)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APIManagementClientPerformConnectivityCheckAsyncPollerResponse from the provided client and resume token.
func (l *APIManagementClientPerformConnectivityCheckAsyncPollerResponse) Resume(ctx context.Context, client *APIManagementClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIManagementClient.PerformConnectivityCheckAsync", token, client.pl, client.performConnectivityCheckAsyncHandleError)
	if err != nil {
		return err
	}
	poller := &APIManagementClientPerformConnectivityCheckAsyncPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APIManagementClientPerformConnectivityCheckAsyncResponse contains the response from method APIManagementClient.PerformConnectivityCheckAsync.
type APIManagementClientPerformConnectivityCheckAsyncResponse struct {
	APIManagementClientPerformConnectivityCheckAsyncResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementClientPerformConnectivityCheckAsyncResult contains the result from method APIManagementClient.PerformConnectivityCheckAsync.
type APIManagementClientPerformConnectivityCheckAsyncResult struct {
	ConnectivityCheckResponse
}

// APIManagementOperationsListResponse contains the response from method APIManagementOperations.List.
type APIManagementOperationsListResponse struct {
	APIManagementOperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementOperationsListResult contains the result from method APIManagementOperations.List.
type APIManagementOperationsListResult struct {
	OperationListResult
}

// APIManagementSKUsListResponse contains the response from method APIManagementSKUs.List.
type APIManagementSKUsListResponse struct {
	APIManagementSKUsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementSKUsListResult contains the result from method APIManagementSKUs.List.
type APIManagementSKUsListResult struct {
	APIManagementSKUsResult
}

// APIManagementServiceApplyNetworkConfigurationUpdatesPollerResponse contains the response from method APIManagementService.ApplyNetworkConfigurationUpdates.
type APIManagementServiceApplyNetworkConfigurationUpdatesPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APIManagementServiceApplyNetworkConfigurationUpdatesPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APIManagementServiceApplyNetworkConfigurationUpdatesPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APIManagementServiceApplyNetworkConfigurationUpdatesResponse, error) {
	respType := APIManagementServiceApplyNetworkConfigurationUpdatesResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.APIManagementServiceResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APIManagementServiceApplyNetworkConfigurationUpdatesPollerResponse from the provided client and resume token.
func (l *APIManagementServiceApplyNetworkConfigurationUpdatesPollerResponse) Resume(ctx context.Context, client *APIManagementServiceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIManagementServiceClient.ApplyNetworkConfigurationUpdates", token, client.pl, client.applyNetworkConfigurationUpdatesHandleError)
	if err != nil {
		return err
	}
	poller := &APIManagementServiceApplyNetworkConfigurationUpdatesPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APIManagementServiceApplyNetworkConfigurationUpdatesResponse contains the response from method APIManagementService.ApplyNetworkConfigurationUpdates.
type APIManagementServiceApplyNetworkConfigurationUpdatesResponse struct {
	APIManagementServiceApplyNetworkConfigurationUpdatesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceApplyNetworkConfigurationUpdatesResult contains the result from method APIManagementService.ApplyNetworkConfigurationUpdates.
type APIManagementServiceApplyNetworkConfigurationUpdatesResult struct {
	APIManagementServiceResource
}

// APIManagementServiceBackupPollerResponse contains the response from method APIManagementService.Backup.
type APIManagementServiceBackupPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APIManagementServiceBackupPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APIManagementServiceBackupPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APIManagementServiceBackupResponse, error) {
	respType := APIManagementServiceBackupResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.APIManagementServiceResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APIManagementServiceBackupPollerResponse from the provided client and resume token.
func (l *APIManagementServiceBackupPollerResponse) Resume(ctx context.Context, client *APIManagementServiceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIManagementServiceClient.Backup", token, client.pl, client.backupHandleError)
	if err != nil {
		return err
	}
	poller := &APIManagementServiceBackupPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APIManagementServiceBackupResponse contains the response from method APIManagementService.Backup.
type APIManagementServiceBackupResponse struct {
	APIManagementServiceBackupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceBackupResult contains the result from method APIManagementService.Backup.
type APIManagementServiceBackupResult struct {
	APIManagementServiceResource
}

// APIManagementServiceCheckNameAvailabilityResponse contains the response from method APIManagementService.CheckNameAvailability.
type APIManagementServiceCheckNameAvailabilityResponse struct {
	APIManagementServiceCheckNameAvailabilityResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceCheckNameAvailabilityResult contains the result from method APIManagementService.CheckNameAvailability.
type APIManagementServiceCheckNameAvailabilityResult struct {
	APIManagementServiceNameAvailabilityResult
}

// APIManagementServiceCreateOrUpdatePollerResponse contains the response from method APIManagementService.CreateOrUpdate.
type APIManagementServiceCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APIManagementServiceCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APIManagementServiceCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APIManagementServiceCreateOrUpdateResponse, error) {
	respType := APIManagementServiceCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.APIManagementServiceResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APIManagementServiceCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *APIManagementServiceCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *APIManagementServiceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIManagementServiceClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &APIManagementServiceCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APIManagementServiceCreateOrUpdateResponse contains the response from method APIManagementService.CreateOrUpdate.
type APIManagementServiceCreateOrUpdateResponse struct {
	APIManagementServiceCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceCreateOrUpdateResult contains the result from method APIManagementService.CreateOrUpdate.
type APIManagementServiceCreateOrUpdateResult struct {
	APIManagementServiceResource
}

// APIManagementServiceDeletePollerResponse contains the response from method APIManagementService.Delete.
type APIManagementServiceDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APIManagementServiceDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APIManagementServiceDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APIManagementServiceDeleteResponse, error) {
	respType := APIManagementServiceDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.APIManagementServiceResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APIManagementServiceDeletePollerResponse from the provided client and resume token.
func (l *APIManagementServiceDeletePollerResponse) Resume(ctx context.Context, client *APIManagementServiceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIManagementServiceClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &APIManagementServiceDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APIManagementServiceDeleteResponse contains the response from method APIManagementService.Delete.
type APIManagementServiceDeleteResponse struct {
	APIManagementServiceDeleteResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceDeleteResult contains the result from method APIManagementService.Delete.
type APIManagementServiceDeleteResult struct {
	APIManagementServiceResource
}

// APIManagementServiceGetDomainOwnershipIdentifierResponse contains the response from method APIManagementService.GetDomainOwnershipIdentifier.
type APIManagementServiceGetDomainOwnershipIdentifierResponse struct {
	APIManagementServiceGetDomainOwnershipIdentifierResultEnvelope
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceGetDomainOwnershipIdentifierResultEnvelope contains the result from method APIManagementService.GetDomainOwnershipIdentifier.
type APIManagementServiceGetDomainOwnershipIdentifierResultEnvelope struct {
	APIManagementServiceGetDomainOwnershipIdentifierResult
}

// APIManagementServiceGetResponse contains the response from method APIManagementService.Get.
type APIManagementServiceGetResponse struct {
	APIManagementServiceGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceGetResult contains the result from method APIManagementService.Get.
type APIManagementServiceGetResult struct {
	APIManagementServiceResource
}

// APIManagementServiceGetSsoTokenResponse contains the response from method APIManagementService.GetSsoToken.
type APIManagementServiceGetSsoTokenResponse struct {
	APIManagementServiceGetSsoTokenResultEnvelope
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceGetSsoTokenResultEnvelope contains the result from method APIManagementService.GetSsoToken.
type APIManagementServiceGetSsoTokenResultEnvelope struct {
	APIManagementServiceGetSsoTokenResult
}

// APIManagementServiceListByResourceGroupResponse contains the response from method APIManagementService.ListByResourceGroup.
type APIManagementServiceListByResourceGroupResponse struct {
	APIManagementServiceListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceListByResourceGroupResult contains the result from method APIManagementService.ListByResourceGroup.
type APIManagementServiceListByResourceGroupResult struct {
	APIManagementServiceListResult
}

// APIManagementServiceListResponse contains the response from method APIManagementService.List.
type APIManagementServiceListResponse struct {
	APIManagementServiceListResultEnvelope
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceListResultEnvelope contains the result from method APIManagementService.List.
type APIManagementServiceListResultEnvelope struct {
	APIManagementServiceListResult
}

// APIManagementServiceRestorePollerResponse contains the response from method APIManagementService.Restore.
type APIManagementServiceRestorePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APIManagementServiceRestorePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APIManagementServiceRestorePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APIManagementServiceRestoreResponse, error) {
	respType := APIManagementServiceRestoreResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.APIManagementServiceResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APIManagementServiceRestorePollerResponse from the provided client and resume token.
func (l *APIManagementServiceRestorePollerResponse) Resume(ctx context.Context, client *APIManagementServiceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIManagementServiceClient.Restore", token, client.pl, client.restoreHandleError)
	if err != nil {
		return err
	}
	poller := &APIManagementServiceRestorePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APIManagementServiceRestoreResponse contains the response from method APIManagementService.Restore.
type APIManagementServiceRestoreResponse struct {
	APIManagementServiceRestoreResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceRestoreResult contains the result from method APIManagementService.Restore.
type APIManagementServiceRestoreResult struct {
	APIManagementServiceResource
}

// APIManagementServiceSKUsListAvailableServiceSKUsResponse contains the response from method APIManagementServiceSKUs.ListAvailableServiceSKUs.
type APIManagementServiceSKUsListAvailableServiceSKUsResponse struct {
	APIManagementServiceSKUsListAvailableServiceSKUsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceSKUsListAvailableServiceSKUsResult contains the result from method APIManagementServiceSKUs.ListAvailableServiceSKUs.
type APIManagementServiceSKUsListAvailableServiceSKUsResult struct {
	ResourceSKUResults
}

// APIManagementServiceUpdatePollerResponse contains the response from method APIManagementService.Update.
type APIManagementServiceUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APIManagementServiceUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APIManagementServiceUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APIManagementServiceUpdateResponse, error) {
	respType := APIManagementServiceUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.APIManagementServiceResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APIManagementServiceUpdatePollerResponse from the provided client and resume token.
func (l *APIManagementServiceUpdatePollerResponse) Resume(ctx context.Context, client *APIManagementServiceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APIManagementServiceClient.Update", token, client.pl, client.updateHandleError)
	if err != nil {
		return err
	}
	poller := &APIManagementServiceUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APIManagementServiceUpdateResponse contains the response from method APIManagementService.Update.
type APIManagementServiceUpdateResponse struct {
	APIManagementServiceUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIManagementServiceUpdateResult contains the result from method APIManagementService.Update.
type APIManagementServiceUpdateResult struct {
	APIManagementServiceResource
}

// APIOperationCreateOrUpdateResponse contains the response from method APIOperation.CreateOrUpdate.
type APIOperationCreateOrUpdateResponse struct {
	APIOperationCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationCreateOrUpdateResult contains the result from method APIOperation.CreateOrUpdate.
type APIOperationCreateOrUpdateResult struct {
	OperationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIOperationDeleteResponse contains the response from method APIOperation.Delete.
type APIOperationDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationGetEntityTagResponse contains the response from method APIOperation.GetEntityTag.
type APIOperationGetEntityTagResponse struct {
	APIOperationGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationGetEntityTagResult contains the result from method APIOperation.GetEntityTag.
type APIOperationGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIOperationGetResponse contains the response from method APIOperation.Get.
type APIOperationGetResponse struct {
	APIOperationGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationGetResult contains the result from method APIOperation.Get.
type APIOperationGetResult struct {
	OperationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIOperationListByAPIResponse contains the response from method APIOperation.ListByAPI.
type APIOperationListByAPIResponse struct {
	APIOperationListByAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationListByAPIResult contains the result from method APIOperation.ListByAPI.
type APIOperationListByAPIResult struct {
	OperationCollection
}

// APIOperationPolicyCreateOrUpdateResponse contains the response from method APIOperationPolicy.CreateOrUpdate.
type APIOperationPolicyCreateOrUpdateResponse struct {
	APIOperationPolicyCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationPolicyCreateOrUpdateResult contains the result from method APIOperationPolicy.CreateOrUpdate.
type APIOperationPolicyCreateOrUpdateResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIOperationPolicyDeleteResponse contains the response from method APIOperationPolicy.Delete.
type APIOperationPolicyDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationPolicyGetEntityTagResponse contains the response from method APIOperationPolicy.GetEntityTag.
type APIOperationPolicyGetEntityTagResponse struct {
	APIOperationPolicyGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationPolicyGetEntityTagResult contains the result from method APIOperationPolicy.GetEntityTag.
type APIOperationPolicyGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIOperationPolicyGetResponse contains the response from method APIOperationPolicy.Get.
type APIOperationPolicyGetResponse struct {
	APIOperationPolicyGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationPolicyGetResult contains the result from method APIOperationPolicy.Get.
type APIOperationPolicyGetResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIOperationPolicyListByOperationResponse contains the response from method APIOperationPolicy.ListByOperation.
type APIOperationPolicyListByOperationResponse struct {
	APIOperationPolicyListByOperationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationPolicyListByOperationResult contains the result from method APIOperationPolicy.ListByOperation.
type APIOperationPolicyListByOperationResult struct {
	PolicyCollection
}

// APIOperationUpdateResponse contains the response from method APIOperation.Update.
type APIOperationUpdateResponse struct {
	APIOperationUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIOperationUpdateResult contains the result from method APIOperation.Update.
type APIOperationUpdateResult struct {
	OperationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIPolicyCreateOrUpdateResponse contains the response from method APIPolicy.CreateOrUpdate.
type APIPolicyCreateOrUpdateResponse struct {
	APIPolicyCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIPolicyCreateOrUpdateResult contains the result from method APIPolicy.CreateOrUpdate.
type APIPolicyCreateOrUpdateResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIPolicyDeleteResponse contains the response from method APIPolicy.Delete.
type APIPolicyDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIPolicyGetEntityTagResponse contains the response from method APIPolicy.GetEntityTag.
type APIPolicyGetEntityTagResponse struct {
	APIPolicyGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIPolicyGetEntityTagResult contains the result from method APIPolicy.GetEntityTag.
type APIPolicyGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIPolicyGetResponse contains the response from method APIPolicy.Get.
type APIPolicyGetResponse struct {
	APIPolicyGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIPolicyGetResult contains the result from method APIPolicy.Get.
type APIPolicyGetResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIPolicyListByAPIResponse contains the response from method APIPolicy.ListByAPI.
type APIPolicyListByAPIResponse struct {
	APIPolicyListByAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIPolicyListByAPIResult contains the result from method APIPolicy.ListByAPI.
type APIPolicyListByAPIResult struct {
	PolicyCollection
}

// APIProductListByApisResponse contains the response from method APIProduct.ListByApis.
type APIProductListByApisResponse struct {
	APIProductListByApisResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIProductListByApisResult contains the result from method APIProduct.ListByApis.
type APIProductListByApisResult struct {
	ProductCollection
}

// APIReleaseCreateOrUpdateResponse contains the response from method APIRelease.CreateOrUpdate.
type APIReleaseCreateOrUpdateResponse struct {
	APIReleaseCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIReleaseCreateOrUpdateResult contains the result from method APIRelease.CreateOrUpdate.
type APIReleaseCreateOrUpdateResult struct {
	APIReleaseContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIReleaseDeleteResponse contains the response from method APIRelease.Delete.
type APIReleaseDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIReleaseGetEntityTagResponse contains the response from method APIRelease.GetEntityTag.
type APIReleaseGetEntityTagResponse struct {
	APIReleaseGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIReleaseGetEntityTagResult contains the result from method APIRelease.GetEntityTag.
type APIReleaseGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIReleaseGetResponse contains the response from method APIRelease.Get.
type APIReleaseGetResponse struct {
	APIReleaseGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIReleaseGetResult contains the result from method APIRelease.Get.
type APIReleaseGetResult struct {
	APIReleaseContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIReleaseListByServiceResponse contains the response from method APIRelease.ListByService.
type APIReleaseListByServiceResponse struct {
	APIReleaseListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIReleaseListByServiceResult contains the result from method APIRelease.ListByService.
type APIReleaseListByServiceResult struct {
	APIReleaseCollection
}

// APIReleaseUpdateResponse contains the response from method APIRelease.Update.
type APIReleaseUpdateResponse struct {
	APIReleaseUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIReleaseUpdateResult contains the result from method APIRelease.Update.
type APIReleaseUpdateResult struct {
	APIReleaseContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIRevisionListByServiceResponse contains the response from method APIRevision.ListByService.
type APIRevisionListByServiceResponse struct {
	APIRevisionListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIRevisionListByServiceResult contains the result from method APIRevision.ListByService.
type APIRevisionListByServiceResult struct {
	APIRevisionCollection
}

// APISchemaCreateOrUpdatePollerResponse contains the response from method APISchema.CreateOrUpdate.
type APISchemaCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *APISchemaCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l APISchemaCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (APISchemaCreateOrUpdateResponse, error) {
	respType := APISchemaCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.SchemaContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a APISchemaCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *APISchemaCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *APISchemaClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("APISchemaClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &APISchemaCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// APISchemaCreateOrUpdateResponse contains the response from method APISchema.CreateOrUpdate.
type APISchemaCreateOrUpdateResponse struct {
	APISchemaCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APISchemaCreateOrUpdateResult contains the result from method APISchema.CreateOrUpdate.
type APISchemaCreateOrUpdateResult struct {
	SchemaContract
}

// APISchemaDeleteResponse contains the response from method APISchema.Delete.
type APISchemaDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APISchemaGetEntityTagResponse contains the response from method APISchema.GetEntityTag.
type APISchemaGetEntityTagResponse struct {
	APISchemaGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APISchemaGetEntityTagResult contains the result from method APISchema.GetEntityTag.
type APISchemaGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APISchemaGetResponse contains the response from method APISchema.Get.
type APISchemaGetResponse struct {
	APISchemaGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APISchemaGetResult contains the result from method APISchema.Get.
type APISchemaGetResult struct {
	SchemaContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APISchemaListByAPIResponse contains the response from method APISchema.ListByAPI.
type APISchemaListByAPIResponse struct {
	APISchemaListByAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APISchemaListByAPIResult contains the result from method APISchema.ListByAPI.
type APISchemaListByAPIResult struct {
	SchemaCollection
}

// APITagDescriptionCreateOrUpdateResponse contains the response from method APITagDescription.CreateOrUpdate.
type APITagDescriptionCreateOrUpdateResponse struct {
	APITagDescriptionCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APITagDescriptionCreateOrUpdateResult contains the result from method APITagDescription.CreateOrUpdate.
type APITagDescriptionCreateOrUpdateResult struct {
	TagDescriptionContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APITagDescriptionDeleteResponse contains the response from method APITagDescription.Delete.
type APITagDescriptionDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APITagDescriptionGetEntityTagResponse contains the response from method APITagDescription.GetEntityTag.
type APITagDescriptionGetEntityTagResponse struct {
	APITagDescriptionGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APITagDescriptionGetEntityTagResult contains the result from method APITagDescription.GetEntityTag.
type APITagDescriptionGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APITagDescriptionGetResponse contains the response from method APITagDescription.Get.
type APITagDescriptionGetResponse struct {
	APITagDescriptionGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APITagDescriptionGetResult contains the result from method APITagDescription.Get.
type APITagDescriptionGetResult struct {
	TagDescriptionContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APITagDescriptionListByServiceResponse contains the response from method APITagDescription.ListByService.
type APITagDescriptionListByServiceResponse struct {
	APITagDescriptionListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APITagDescriptionListByServiceResult contains the result from method APITagDescription.ListByService.
type APITagDescriptionListByServiceResult struct {
	TagDescriptionCollection
}

// APIUpdateResponse contains the response from method API.Update.
type APIUpdateResponse struct {
	APIUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIUpdateResult contains the result from method API.Update.
type APIUpdateResult struct {
	APIContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIVersionSetCreateOrUpdateResponse contains the response from method APIVersionSet.CreateOrUpdate.
type APIVersionSetCreateOrUpdateResponse struct {
	APIVersionSetCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIVersionSetCreateOrUpdateResult contains the result from method APIVersionSet.CreateOrUpdate.
type APIVersionSetCreateOrUpdateResult struct {
	APIVersionSetContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIVersionSetDeleteResponse contains the response from method APIVersionSet.Delete.
type APIVersionSetDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIVersionSetGetEntityTagResponse contains the response from method APIVersionSet.GetEntityTag.
type APIVersionSetGetEntityTagResponse struct {
	APIVersionSetGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIVersionSetGetEntityTagResult contains the result from method APIVersionSet.GetEntityTag.
type APIVersionSetGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// APIVersionSetGetResponse contains the response from method APIVersionSet.Get.
type APIVersionSetGetResponse struct {
	APIVersionSetGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIVersionSetGetResult contains the result from method APIVersionSet.Get.
type APIVersionSetGetResult struct {
	APIVersionSetContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// APIVersionSetListByServiceResponse contains the response from method APIVersionSet.ListByService.
type APIVersionSetListByServiceResponse struct {
	APIVersionSetListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIVersionSetListByServiceResult contains the result from method APIVersionSet.ListByService.
type APIVersionSetListByServiceResult struct {
	APIVersionSetCollection
}

// APIVersionSetUpdateResponse contains the response from method APIVersionSet.Update.
type APIVersionSetUpdateResponse struct {
	APIVersionSetUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// APIVersionSetUpdateResult contains the result from method APIVersionSet.Update.
type APIVersionSetUpdateResult struct {
	APIVersionSetContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// AuthorizationServerCreateOrUpdateResponse contains the response from method AuthorizationServer.CreateOrUpdate.
type AuthorizationServerCreateOrUpdateResponse struct {
	AuthorizationServerCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AuthorizationServerCreateOrUpdateResult contains the result from method AuthorizationServer.CreateOrUpdate.
type AuthorizationServerCreateOrUpdateResult struct {
	AuthorizationServerContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// AuthorizationServerDeleteResponse contains the response from method AuthorizationServer.Delete.
type AuthorizationServerDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AuthorizationServerGetEntityTagResponse contains the response from method AuthorizationServer.GetEntityTag.
type AuthorizationServerGetEntityTagResponse struct {
	AuthorizationServerGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AuthorizationServerGetEntityTagResult contains the result from method AuthorizationServer.GetEntityTag.
type AuthorizationServerGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// AuthorizationServerGetResponse contains the response from method AuthorizationServer.Get.
type AuthorizationServerGetResponse struct {
	AuthorizationServerGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AuthorizationServerGetResult contains the result from method AuthorizationServer.Get.
type AuthorizationServerGetResult struct {
	AuthorizationServerContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// AuthorizationServerListByServiceResponse contains the response from method AuthorizationServer.ListByService.
type AuthorizationServerListByServiceResponse struct {
	AuthorizationServerListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AuthorizationServerListByServiceResult contains the result from method AuthorizationServer.ListByService.
type AuthorizationServerListByServiceResult struct {
	AuthorizationServerCollection
}

// AuthorizationServerListSecretsResponse contains the response from method AuthorizationServer.ListSecrets.
type AuthorizationServerListSecretsResponse struct {
	AuthorizationServerListSecretsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AuthorizationServerListSecretsResult contains the result from method AuthorizationServer.ListSecrets.
type AuthorizationServerListSecretsResult struct {
	AuthorizationServerSecretsContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// AuthorizationServerUpdateResponse contains the response from method AuthorizationServer.Update.
type AuthorizationServerUpdateResponse struct {
	AuthorizationServerUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AuthorizationServerUpdateResult contains the result from method AuthorizationServer.Update.
type AuthorizationServerUpdateResult struct {
	AuthorizationServerContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// BackendCreateOrUpdateResponse contains the response from method Backend.CreateOrUpdate.
type BackendCreateOrUpdateResponse struct {
	BackendCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackendCreateOrUpdateResult contains the result from method Backend.CreateOrUpdate.
type BackendCreateOrUpdateResult struct {
	BackendContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// BackendDeleteResponse contains the response from method Backend.Delete.
type BackendDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackendGetEntityTagResponse contains the response from method Backend.GetEntityTag.
type BackendGetEntityTagResponse struct {
	BackendGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackendGetEntityTagResult contains the result from method Backend.GetEntityTag.
type BackendGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// BackendGetResponse contains the response from method Backend.Get.
type BackendGetResponse struct {
	BackendGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackendGetResult contains the result from method Backend.Get.
type BackendGetResult struct {
	BackendContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// BackendListByServiceResponse contains the response from method Backend.ListByService.
type BackendListByServiceResponse struct {
	BackendListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackendListByServiceResult contains the result from method Backend.ListByService.
type BackendListByServiceResult struct {
	BackendCollection
}

// BackendReconnectResponse contains the response from method Backend.Reconnect.
type BackendReconnectResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackendUpdateResponse contains the response from method Backend.Update.
type BackendUpdateResponse struct {
	BackendUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackendUpdateResult contains the result from method Backend.Update.
type BackendUpdateResult struct {
	BackendContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CacheCreateOrUpdateResponse contains the response from method Cache.CreateOrUpdate.
type CacheCreateOrUpdateResponse struct {
	CacheCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CacheCreateOrUpdateResult contains the result from method Cache.CreateOrUpdate.
type CacheCreateOrUpdateResult struct {
	CacheContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CacheDeleteResponse contains the response from method Cache.Delete.
type CacheDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CacheGetEntityTagResponse contains the response from method Cache.GetEntityTag.
type CacheGetEntityTagResponse struct {
	CacheGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CacheGetEntityTagResult contains the result from method Cache.GetEntityTag.
type CacheGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// CacheGetResponse contains the response from method Cache.Get.
type CacheGetResponse struct {
	CacheGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CacheGetResult contains the result from method Cache.Get.
type CacheGetResult struct {
	CacheContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CacheListByServiceResponse contains the response from method Cache.ListByService.
type CacheListByServiceResponse struct {
	CacheListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CacheListByServiceResult contains the result from method Cache.ListByService.
type CacheListByServiceResult struct {
	CacheCollection
}

// CacheUpdateResponse contains the response from method Cache.Update.
type CacheUpdateResponse struct {
	CacheUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CacheUpdateResult contains the result from method Cache.Update.
type CacheUpdateResult struct {
	CacheContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CertificateCreateOrUpdateResponse contains the response from method Certificate.CreateOrUpdate.
type CertificateCreateOrUpdateResponse struct {
	CertificateCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateCreateOrUpdateResult contains the result from method Certificate.CreateOrUpdate.
type CertificateCreateOrUpdateResult struct {
	CertificateContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CertificateDeleteResponse contains the response from method Certificate.Delete.
type CertificateDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateGetEntityTagResponse contains the response from method Certificate.GetEntityTag.
type CertificateGetEntityTagResponse struct {
	CertificateGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateGetEntityTagResult contains the result from method Certificate.GetEntityTag.
type CertificateGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// CertificateGetResponse contains the response from method Certificate.Get.
type CertificateGetResponse struct {
	CertificateGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateGetResult contains the result from method Certificate.Get.
type CertificateGetResult struct {
	CertificateContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CertificateListByServiceResponse contains the response from method Certificate.ListByService.
type CertificateListByServiceResponse struct {
	CertificateListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateListByServiceResult contains the result from method Certificate.ListByService.
type CertificateListByServiceResult struct {
	CertificateCollection
}

// CertificateRefreshSecretResponse contains the response from method Certificate.RefreshSecret.
type CertificateRefreshSecretResponse struct {
	CertificateRefreshSecretResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateRefreshSecretResult contains the result from method Certificate.RefreshSecret.
type CertificateRefreshSecretResult struct {
	CertificateContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ContentItemCreateOrUpdateResponse contains the response from method ContentItem.CreateOrUpdate.
type ContentItemCreateOrUpdateResponse struct {
	ContentItemCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentItemCreateOrUpdateResult contains the result from method ContentItem.CreateOrUpdate.
type ContentItemCreateOrUpdateResult struct {
	ContentItemContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ContentItemDeleteResponse contains the response from method ContentItem.Delete.
type ContentItemDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentItemGetEntityTagResponse contains the response from method ContentItem.GetEntityTag.
type ContentItemGetEntityTagResponse struct {
	ContentItemGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentItemGetEntityTagResult contains the result from method ContentItem.GetEntityTag.
type ContentItemGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// ContentItemGetResponse contains the response from method ContentItem.Get.
type ContentItemGetResponse struct {
	ContentItemGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentItemGetResult contains the result from method ContentItem.Get.
type ContentItemGetResult struct {
	ContentItemContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ContentItemListByServiceResponse contains the response from method ContentItem.ListByService.
type ContentItemListByServiceResponse struct {
	ContentItemListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentItemListByServiceResult contains the result from method ContentItem.ListByService.
type ContentItemListByServiceResult struct {
	ContentItemCollection
}

// ContentTypeCreateOrUpdateResponse contains the response from method ContentType.CreateOrUpdate.
type ContentTypeCreateOrUpdateResponse struct {
	ContentTypeCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentTypeCreateOrUpdateResult contains the result from method ContentType.CreateOrUpdate.
type ContentTypeCreateOrUpdateResult struct {
	ContentTypeContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ContentTypeDeleteResponse contains the response from method ContentType.Delete.
type ContentTypeDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentTypeGetResponse contains the response from method ContentType.Get.
type ContentTypeGetResponse struct {
	ContentTypeGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentTypeGetResult contains the result from method ContentType.Get.
type ContentTypeGetResult struct {
	ContentTypeContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ContentTypeListByServiceResponse contains the response from method ContentType.ListByService.
type ContentTypeListByServiceResponse struct {
	ContentTypeListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContentTypeListByServiceResult contains the result from method ContentType.ListByService.
type ContentTypeListByServiceResult struct {
	ContentTypeCollection
}

// DelegationSettingsCreateOrUpdateResponse contains the response from method DelegationSettings.CreateOrUpdate.
type DelegationSettingsCreateOrUpdateResponse struct {
	DelegationSettingsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DelegationSettingsCreateOrUpdateResult contains the result from method DelegationSettings.CreateOrUpdate.
type DelegationSettingsCreateOrUpdateResult struct {
	PortalDelegationSettings
}

// DelegationSettingsGetEntityTagResponse contains the response from method DelegationSettings.GetEntityTag.
type DelegationSettingsGetEntityTagResponse struct {
	DelegationSettingsGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DelegationSettingsGetEntityTagResult contains the result from method DelegationSettings.GetEntityTag.
type DelegationSettingsGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// DelegationSettingsGetResponse contains the response from method DelegationSettings.Get.
type DelegationSettingsGetResponse struct {
	DelegationSettingsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DelegationSettingsGetResult contains the result from method DelegationSettings.Get.
type DelegationSettingsGetResult struct {
	PortalDelegationSettings
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// DelegationSettingsListSecretsResponse contains the response from method DelegationSettings.ListSecrets.
type DelegationSettingsListSecretsResponse struct {
	DelegationSettingsListSecretsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DelegationSettingsListSecretsResult contains the result from method DelegationSettings.ListSecrets.
type DelegationSettingsListSecretsResult struct {
	PortalSettingValidationKeyContract
}

// DelegationSettingsUpdateResponse contains the response from method DelegationSettings.Update.
type DelegationSettingsUpdateResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeletedServicesGetByNameResponse contains the response from method DeletedServices.GetByName.
type DeletedServicesGetByNameResponse struct {
	DeletedServicesGetByNameResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeletedServicesGetByNameResult contains the result from method DeletedServices.GetByName.
type DeletedServicesGetByNameResult struct {
	DeletedServiceContract
}

// DeletedServicesListBySubscriptionResponse contains the response from method DeletedServices.ListBySubscription.
type DeletedServicesListBySubscriptionResponse struct {
	DeletedServicesListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeletedServicesListBySubscriptionResult contains the result from method DeletedServices.ListBySubscription.
type DeletedServicesListBySubscriptionResult struct {
	DeletedServicesCollection
}

// DeletedServicesPurgePollerResponse contains the response from method DeletedServices.Purge.
type DeletedServicesPurgePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *DeletedServicesPurgePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l DeletedServicesPurgePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (DeletedServicesPurgeResponse, error) {
	respType := DeletedServicesPurgeResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.DeletedServiceContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a DeletedServicesPurgePollerResponse from the provided client and resume token.
func (l *DeletedServicesPurgePollerResponse) Resume(ctx context.Context, client *DeletedServicesClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("DeletedServicesClient.Purge", token, client.pl, client.purgeHandleError)
	if err != nil {
		return err
	}
	poller := &DeletedServicesPurgePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// DeletedServicesPurgeResponse contains the response from method DeletedServices.Purge.
type DeletedServicesPurgeResponse struct {
	DeletedServicesPurgeResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeletedServicesPurgeResult contains the result from method DeletedServices.Purge.
type DeletedServicesPurgeResult struct {
	DeletedServiceContract
}

// DiagnosticCreateOrUpdateResponse contains the response from method Diagnostic.CreateOrUpdate.
type DiagnosticCreateOrUpdateResponse struct {
	DiagnosticCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticCreateOrUpdateResult contains the result from method Diagnostic.CreateOrUpdate.
type DiagnosticCreateOrUpdateResult struct {
	DiagnosticContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// DiagnosticDeleteResponse contains the response from method Diagnostic.Delete.
type DiagnosticDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticGetEntityTagResponse contains the response from method Diagnostic.GetEntityTag.
type DiagnosticGetEntityTagResponse struct {
	DiagnosticGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticGetEntityTagResult contains the result from method Diagnostic.GetEntityTag.
type DiagnosticGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// DiagnosticGetResponse contains the response from method Diagnostic.Get.
type DiagnosticGetResponse struct {
	DiagnosticGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticGetResult contains the result from method Diagnostic.Get.
type DiagnosticGetResult struct {
	DiagnosticContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// DiagnosticListByServiceResponse contains the response from method Diagnostic.ListByService.
type DiagnosticListByServiceResponse struct {
	DiagnosticListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticListByServiceResult contains the result from method Diagnostic.ListByService.
type DiagnosticListByServiceResult struct {
	DiagnosticCollection
}

// DiagnosticUpdateResponse contains the response from method Diagnostic.Update.
type DiagnosticUpdateResponse struct {
	DiagnosticUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DiagnosticUpdateResult contains the result from method Diagnostic.Update.
type DiagnosticUpdateResult struct {
	DiagnosticContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// EmailTemplateCreateOrUpdateResponse contains the response from method EmailTemplate.CreateOrUpdate.
type EmailTemplateCreateOrUpdateResponse struct {
	EmailTemplateCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EmailTemplateCreateOrUpdateResult contains the result from method EmailTemplate.CreateOrUpdate.
type EmailTemplateCreateOrUpdateResult struct {
	EmailTemplateContract
}

// EmailTemplateDeleteResponse contains the response from method EmailTemplate.Delete.
type EmailTemplateDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EmailTemplateGetEntityTagResponse contains the response from method EmailTemplate.GetEntityTag.
type EmailTemplateGetEntityTagResponse struct {
	EmailTemplateGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EmailTemplateGetEntityTagResult contains the result from method EmailTemplate.GetEntityTag.
type EmailTemplateGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// EmailTemplateGetResponse contains the response from method EmailTemplate.Get.
type EmailTemplateGetResponse struct {
	EmailTemplateGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EmailTemplateGetResult contains the result from method EmailTemplate.Get.
type EmailTemplateGetResult struct {
	EmailTemplateContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// EmailTemplateListByServiceResponse contains the response from method EmailTemplate.ListByService.
type EmailTemplateListByServiceResponse struct {
	EmailTemplateListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EmailTemplateListByServiceResult contains the result from method EmailTemplate.ListByService.
type EmailTemplateListByServiceResult struct {
	EmailTemplateCollection
}

// EmailTemplateUpdateResponse contains the response from method EmailTemplate.Update.
type EmailTemplateUpdateResponse struct {
	EmailTemplateUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EmailTemplateUpdateResult contains the result from method EmailTemplate.Update.
type EmailTemplateUpdateResult struct {
	EmailTemplateContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayAPICreateOrUpdateResponse contains the response from method GatewayAPI.CreateOrUpdate.
type GatewayAPICreateOrUpdateResponse struct {
	GatewayAPICreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayAPICreateOrUpdateResult contains the result from method GatewayAPI.CreateOrUpdate.
type GatewayAPICreateOrUpdateResult struct {
	APIContract
}

// GatewayAPIDeleteResponse contains the response from method GatewayAPI.Delete.
type GatewayAPIDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayAPIGetEntityTagResponse contains the response from method GatewayAPI.GetEntityTag.
type GatewayAPIGetEntityTagResponse struct {
	GatewayAPIGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayAPIGetEntityTagResult contains the result from method GatewayAPI.GetEntityTag.
type GatewayAPIGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// GatewayAPIListByServiceResponse contains the response from method GatewayAPI.ListByService.
type GatewayAPIListByServiceResponse struct {
	GatewayAPIListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayAPIListByServiceResult contains the result from method GatewayAPI.ListByService.
type GatewayAPIListByServiceResult struct {
	APICollection
}

// GatewayCertificateAuthorityCreateOrUpdateResponse contains the response from method GatewayCertificateAuthority.CreateOrUpdate.
type GatewayCertificateAuthorityCreateOrUpdateResponse struct {
	GatewayCertificateAuthorityCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayCertificateAuthorityCreateOrUpdateResult contains the result from method GatewayCertificateAuthority.CreateOrUpdate.
type GatewayCertificateAuthorityCreateOrUpdateResult struct {
	GatewayCertificateAuthorityContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayCertificateAuthorityDeleteResponse contains the response from method GatewayCertificateAuthority.Delete.
type GatewayCertificateAuthorityDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayCertificateAuthorityGetEntityTagResponse contains the response from method GatewayCertificateAuthority.GetEntityTag.
type GatewayCertificateAuthorityGetEntityTagResponse struct {
	GatewayCertificateAuthorityGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayCertificateAuthorityGetEntityTagResult contains the result from method GatewayCertificateAuthority.GetEntityTag.
type GatewayCertificateAuthorityGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// GatewayCertificateAuthorityGetResponse contains the response from method GatewayCertificateAuthority.Get.
type GatewayCertificateAuthorityGetResponse struct {
	GatewayCertificateAuthorityGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayCertificateAuthorityGetResult contains the result from method GatewayCertificateAuthority.Get.
type GatewayCertificateAuthorityGetResult struct {
	GatewayCertificateAuthorityContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayCertificateAuthorityListByServiceResponse contains the response from method GatewayCertificateAuthority.ListByService.
type GatewayCertificateAuthorityListByServiceResponse struct {
	GatewayCertificateAuthorityListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayCertificateAuthorityListByServiceResult contains the result from method GatewayCertificateAuthority.ListByService.
type GatewayCertificateAuthorityListByServiceResult struct {
	GatewayCertificateAuthorityCollection
}

// GatewayCreateOrUpdateResponse contains the response from method Gateway.CreateOrUpdate.
type GatewayCreateOrUpdateResponse struct {
	GatewayCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayCreateOrUpdateResult contains the result from method Gateway.CreateOrUpdate.
type GatewayCreateOrUpdateResult struct {
	GatewayContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayDeleteResponse contains the response from method Gateway.Delete.
type GatewayDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayGenerateTokenResponse contains the response from method Gateway.GenerateToken.
type GatewayGenerateTokenResponse struct {
	GatewayGenerateTokenResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayGenerateTokenResult contains the result from method Gateway.GenerateToken.
type GatewayGenerateTokenResult struct {
	GatewayTokenContract
}

// GatewayGetEntityTagResponse contains the response from method Gateway.GetEntityTag.
type GatewayGetEntityTagResponse struct {
	GatewayGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayGetEntityTagResult contains the result from method Gateway.GetEntityTag.
type GatewayGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// GatewayGetResponse contains the response from method Gateway.Get.
type GatewayGetResponse struct {
	GatewayGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayGetResult contains the result from method Gateway.Get.
type GatewayGetResult struct {
	GatewayContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayHostnameConfigurationCreateOrUpdateResponse contains the response from method GatewayHostnameConfiguration.CreateOrUpdate.
type GatewayHostnameConfigurationCreateOrUpdateResponse struct {
	GatewayHostnameConfigurationCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayHostnameConfigurationCreateOrUpdateResult contains the result from method GatewayHostnameConfiguration.CreateOrUpdate.
type GatewayHostnameConfigurationCreateOrUpdateResult struct {
	GatewayHostnameConfigurationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayHostnameConfigurationDeleteResponse contains the response from method GatewayHostnameConfiguration.Delete.
type GatewayHostnameConfigurationDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayHostnameConfigurationGetEntityTagResponse contains the response from method GatewayHostnameConfiguration.GetEntityTag.
type GatewayHostnameConfigurationGetEntityTagResponse struct {
	GatewayHostnameConfigurationGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayHostnameConfigurationGetEntityTagResult contains the result from method GatewayHostnameConfiguration.GetEntityTag.
type GatewayHostnameConfigurationGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// GatewayHostnameConfigurationGetResponse contains the response from method GatewayHostnameConfiguration.Get.
type GatewayHostnameConfigurationGetResponse struct {
	GatewayHostnameConfigurationGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayHostnameConfigurationGetResult contains the result from method GatewayHostnameConfiguration.Get.
type GatewayHostnameConfigurationGetResult struct {
	GatewayHostnameConfigurationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayHostnameConfigurationListByServiceResponse contains the response from method GatewayHostnameConfiguration.ListByService.
type GatewayHostnameConfigurationListByServiceResponse struct {
	GatewayHostnameConfigurationListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayHostnameConfigurationListByServiceResult contains the result from method GatewayHostnameConfiguration.ListByService.
type GatewayHostnameConfigurationListByServiceResult struct {
	GatewayHostnameConfigurationCollection
}

// GatewayListByServiceResponse contains the response from method Gateway.ListByService.
type GatewayListByServiceResponse struct {
	GatewayListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayListByServiceResult contains the result from method Gateway.ListByService.
type GatewayListByServiceResult struct {
	GatewayCollection
}

// GatewayListKeysResponse contains the response from method Gateway.ListKeys.
type GatewayListKeysResponse struct {
	GatewayListKeysResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayListKeysResult contains the result from method Gateway.ListKeys.
type GatewayListKeysResult struct {
	GatewayKeysContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GatewayRegenerateKeyResponse contains the response from method Gateway.RegenerateKey.
type GatewayRegenerateKeyResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayUpdateResponse contains the response from method Gateway.Update.
type GatewayUpdateResponse struct {
	GatewayUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GatewayUpdateResult contains the result from method Gateway.Update.
type GatewayUpdateResult struct {
	GatewayContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GroupCreateOrUpdateResponse contains the response from method Group.CreateOrUpdate.
type GroupCreateOrUpdateResponse struct {
	GroupCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupCreateOrUpdateResult contains the result from method Group.CreateOrUpdate.
type GroupCreateOrUpdateResult struct {
	GroupContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GroupDeleteResponse contains the response from method Group.Delete.
type GroupDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupGetEntityTagResponse contains the response from method Group.GetEntityTag.
type GroupGetEntityTagResponse struct {
	GroupGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupGetEntityTagResult contains the result from method Group.GetEntityTag.
type GroupGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// GroupGetResponse contains the response from method Group.Get.
type GroupGetResponse struct {
	GroupGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupGetResult contains the result from method Group.Get.
type GroupGetResult struct {
	GroupContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GroupListByServiceResponse contains the response from method Group.ListByService.
type GroupListByServiceResponse struct {
	GroupListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupListByServiceResult contains the result from method Group.ListByService.
type GroupListByServiceResult struct {
	GroupCollection
}

// GroupUpdateResponse contains the response from method Group.Update.
type GroupUpdateResponse struct {
	GroupUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupUpdateResult contains the result from method Group.Update.
type GroupUpdateResult struct {
	GroupContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// GroupUserCheckEntityExistsResponse contains the response from method GroupUser.CheckEntityExists.
type GroupUserCheckEntityExistsResponse struct {
	GroupUserCheckEntityExistsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupUserCheckEntityExistsResult contains the result from method GroupUser.CheckEntityExists.
type GroupUserCheckEntityExistsResult struct {
	// Success indicates if the operation succeeded or failed.
	Success bool
}

// GroupUserCreateResponse contains the response from method GroupUser.Create.
type GroupUserCreateResponse struct {
	GroupUserCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupUserCreateResult contains the result from method GroupUser.Create.
type GroupUserCreateResult struct {
	UserContract
}

// GroupUserDeleteResponse contains the response from method GroupUser.Delete.
type GroupUserDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupUserListResponse contains the response from method GroupUser.List.
type GroupUserListResponse struct {
	GroupUserListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GroupUserListResult contains the result from method GroupUser.List.
type GroupUserListResult struct {
	UserCollection
}

// IdentityProviderCreateOrUpdateResponse contains the response from method IdentityProvider.CreateOrUpdate.
type IdentityProviderCreateOrUpdateResponse struct {
	IdentityProviderCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentityProviderCreateOrUpdateResult contains the result from method IdentityProvider.CreateOrUpdate.
type IdentityProviderCreateOrUpdateResult struct {
	IdentityProviderContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// IdentityProviderDeleteResponse contains the response from method IdentityProvider.Delete.
type IdentityProviderDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentityProviderGetEntityTagResponse contains the response from method IdentityProvider.GetEntityTag.
type IdentityProviderGetEntityTagResponse struct {
	IdentityProviderGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentityProviderGetEntityTagResult contains the result from method IdentityProvider.GetEntityTag.
type IdentityProviderGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// IdentityProviderGetResponse contains the response from method IdentityProvider.Get.
type IdentityProviderGetResponse struct {
	IdentityProviderGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentityProviderGetResult contains the result from method IdentityProvider.Get.
type IdentityProviderGetResult struct {
	IdentityProviderContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// IdentityProviderListByServiceResponse contains the response from method IdentityProvider.ListByService.
type IdentityProviderListByServiceResponse struct {
	IdentityProviderListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentityProviderListByServiceResult contains the result from method IdentityProvider.ListByService.
type IdentityProviderListByServiceResult struct {
	IdentityProviderList
}

// IdentityProviderListSecretsResponse contains the response from method IdentityProvider.ListSecrets.
type IdentityProviderListSecretsResponse struct {
	IdentityProviderListSecretsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentityProviderListSecretsResult contains the result from method IdentityProvider.ListSecrets.
type IdentityProviderListSecretsResult struct {
	ClientSecretContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// IdentityProviderUpdateResponse contains the response from method IdentityProvider.Update.
type IdentityProviderUpdateResponse struct {
	IdentityProviderUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IdentityProviderUpdateResult contains the result from method IdentityProvider.Update.
type IdentityProviderUpdateResult struct {
	IdentityProviderContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// IssueGetResponse contains the response from method Issue.Get.
type IssueGetResponse struct {
	IssueGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IssueGetResult contains the result from method Issue.Get.
type IssueGetResult struct {
	IssueContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// IssueListByServiceResponse contains the response from method Issue.ListByService.
type IssueListByServiceResponse struct {
	IssueListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IssueListByServiceResult contains the result from method Issue.ListByService.
type IssueListByServiceResult struct {
	IssueCollection
}

// LoggerCreateOrUpdateResponse contains the response from method Logger.CreateOrUpdate.
type LoggerCreateOrUpdateResponse struct {
	LoggerCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LoggerCreateOrUpdateResult contains the result from method Logger.CreateOrUpdate.
type LoggerCreateOrUpdateResult struct {
	LoggerContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// LoggerDeleteResponse contains the response from method Logger.Delete.
type LoggerDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LoggerGetEntityTagResponse contains the response from method Logger.GetEntityTag.
type LoggerGetEntityTagResponse struct {
	LoggerGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LoggerGetEntityTagResult contains the result from method Logger.GetEntityTag.
type LoggerGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// LoggerGetResponse contains the response from method Logger.Get.
type LoggerGetResponse struct {
	LoggerGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LoggerGetResult contains the result from method Logger.Get.
type LoggerGetResult struct {
	LoggerContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// LoggerListByServiceResponse contains the response from method Logger.ListByService.
type LoggerListByServiceResponse struct {
	LoggerListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LoggerListByServiceResult contains the result from method Logger.ListByService.
type LoggerListByServiceResult struct {
	LoggerCollection
}

// LoggerUpdateResponse contains the response from method Logger.Update.
type LoggerUpdateResponse struct {
	LoggerUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LoggerUpdateResult contains the result from method Logger.Update.
type LoggerUpdateResult struct {
	LoggerContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// NamedValueCreateOrUpdatePollerResponse contains the response from method NamedValue.CreateOrUpdate.
type NamedValueCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *NamedValueCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l NamedValueCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (NamedValueCreateOrUpdateResponse, error) {
	respType := NamedValueCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.NamedValueContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a NamedValueCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *NamedValueCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *NamedValueClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("NamedValueClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &NamedValueCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// NamedValueCreateOrUpdateResponse contains the response from method NamedValue.CreateOrUpdate.
type NamedValueCreateOrUpdateResponse struct {
	NamedValueCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueCreateOrUpdateResult contains the result from method NamedValue.CreateOrUpdate.
type NamedValueCreateOrUpdateResult struct {
	NamedValueContract
}

// NamedValueDeleteResponse contains the response from method NamedValue.Delete.
type NamedValueDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueGetEntityTagResponse contains the response from method NamedValue.GetEntityTag.
type NamedValueGetEntityTagResponse struct {
	NamedValueGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueGetEntityTagResult contains the result from method NamedValue.GetEntityTag.
type NamedValueGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// NamedValueGetResponse contains the response from method NamedValue.Get.
type NamedValueGetResponse struct {
	NamedValueGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueGetResult contains the result from method NamedValue.Get.
type NamedValueGetResult struct {
	NamedValueContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// NamedValueListByServiceResponse contains the response from method NamedValue.ListByService.
type NamedValueListByServiceResponse struct {
	NamedValueListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueListByServiceResult contains the result from method NamedValue.ListByService.
type NamedValueListByServiceResult struct {
	NamedValueCollection
}

// NamedValueListValueResponse contains the response from method NamedValue.ListValue.
type NamedValueListValueResponse struct {
	NamedValueListValueResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueListValueResult contains the result from method NamedValue.ListValue.
type NamedValueListValueResult struct {
	NamedValueSecretContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// NamedValueRefreshSecretPollerResponse contains the response from method NamedValue.RefreshSecret.
type NamedValueRefreshSecretPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *NamedValueRefreshSecretPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l NamedValueRefreshSecretPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (NamedValueRefreshSecretResponse, error) {
	respType := NamedValueRefreshSecretResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.NamedValueContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a NamedValueRefreshSecretPollerResponse from the provided client and resume token.
func (l *NamedValueRefreshSecretPollerResponse) Resume(ctx context.Context, client *NamedValueClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("NamedValueClient.RefreshSecret", token, client.pl, client.refreshSecretHandleError)
	if err != nil {
		return err
	}
	poller := &NamedValueRefreshSecretPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// NamedValueRefreshSecretResponse contains the response from method NamedValue.RefreshSecret.
type NamedValueRefreshSecretResponse struct {
	NamedValueRefreshSecretResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueRefreshSecretResult contains the result from method NamedValue.RefreshSecret.
type NamedValueRefreshSecretResult struct {
	NamedValueContract
}

// NamedValueUpdatePollerResponse contains the response from method NamedValue.Update.
type NamedValueUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *NamedValueUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l NamedValueUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (NamedValueUpdateResponse, error) {
	respType := NamedValueUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.NamedValueContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a NamedValueUpdatePollerResponse from the provided client and resume token.
func (l *NamedValueUpdatePollerResponse) Resume(ctx context.Context, client *NamedValueClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("NamedValueClient.Update", token, client.pl, client.updateHandleError)
	if err != nil {
		return err
	}
	poller := &NamedValueUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// NamedValueUpdateResponse contains the response from method NamedValue.Update.
type NamedValueUpdateResponse struct {
	NamedValueUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NamedValueUpdateResult contains the result from method NamedValue.Update.
type NamedValueUpdateResult struct {
	NamedValueContract
}

// NetworkStatusListByLocationResponse contains the response from method NetworkStatus.ListByLocation.
type NetworkStatusListByLocationResponse struct {
	NetworkStatusListByLocationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NetworkStatusListByLocationResult contains the result from method NetworkStatus.ListByLocation.
type NetworkStatusListByLocationResult struct {
	NetworkStatusContract
}

// NetworkStatusListByServiceResponse contains the response from method NetworkStatus.ListByService.
type NetworkStatusListByServiceResponse struct {
	NetworkStatusListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NetworkStatusListByServiceResult contains the result from method NetworkStatus.ListByService.
type NetworkStatusListByServiceResult struct {
	// List of Network Status values.
	NetworkStatusContractByLocationArray []*NetworkStatusContractByLocation
}

// NotificationCreateOrUpdateResponse contains the response from method Notification.CreateOrUpdate.
type NotificationCreateOrUpdateResponse struct {
	NotificationCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationCreateOrUpdateResult contains the result from method Notification.CreateOrUpdate.
type NotificationCreateOrUpdateResult struct {
	NotificationContract
}

// NotificationGetResponse contains the response from method Notification.Get.
type NotificationGetResponse struct {
	NotificationGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationGetResult contains the result from method Notification.Get.
type NotificationGetResult struct {
	NotificationContract
}

// NotificationListByServiceResponse contains the response from method Notification.ListByService.
type NotificationListByServiceResponse struct {
	NotificationListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationListByServiceResult contains the result from method Notification.ListByService.
type NotificationListByServiceResult struct {
	NotificationCollection
}

// NotificationRecipientEmailCheckEntityExistsResponse contains the response from method NotificationRecipientEmail.CheckEntityExists.
type NotificationRecipientEmailCheckEntityExistsResponse struct {
	NotificationRecipientEmailCheckEntityExistsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientEmailCheckEntityExistsResult contains the result from method NotificationRecipientEmail.CheckEntityExists.
type NotificationRecipientEmailCheckEntityExistsResult struct {
	// Success indicates if the operation succeeded or failed.
	Success bool
}

// NotificationRecipientEmailCreateOrUpdateResponse contains the response from method NotificationRecipientEmail.CreateOrUpdate.
type NotificationRecipientEmailCreateOrUpdateResponse struct {
	NotificationRecipientEmailCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientEmailCreateOrUpdateResult contains the result from method NotificationRecipientEmail.CreateOrUpdate.
type NotificationRecipientEmailCreateOrUpdateResult struct {
	RecipientEmailContract
}

// NotificationRecipientEmailDeleteResponse contains the response from method NotificationRecipientEmail.Delete.
type NotificationRecipientEmailDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientEmailListByNotificationResponse contains the response from method NotificationRecipientEmail.ListByNotification.
type NotificationRecipientEmailListByNotificationResponse struct {
	NotificationRecipientEmailListByNotificationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientEmailListByNotificationResult contains the result from method NotificationRecipientEmail.ListByNotification.
type NotificationRecipientEmailListByNotificationResult struct {
	RecipientEmailCollection
}

// NotificationRecipientUserCheckEntityExistsResponse contains the response from method NotificationRecipientUser.CheckEntityExists.
type NotificationRecipientUserCheckEntityExistsResponse struct {
	NotificationRecipientUserCheckEntityExistsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientUserCheckEntityExistsResult contains the result from method NotificationRecipientUser.CheckEntityExists.
type NotificationRecipientUserCheckEntityExistsResult struct {
	// Success indicates if the operation succeeded or failed.
	Success bool
}

// NotificationRecipientUserCreateOrUpdateResponse contains the response from method NotificationRecipientUser.CreateOrUpdate.
type NotificationRecipientUserCreateOrUpdateResponse struct {
	NotificationRecipientUserCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientUserCreateOrUpdateResult contains the result from method NotificationRecipientUser.CreateOrUpdate.
type NotificationRecipientUserCreateOrUpdateResult struct {
	RecipientUserContract
}

// NotificationRecipientUserDeleteResponse contains the response from method NotificationRecipientUser.Delete.
type NotificationRecipientUserDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientUserListByNotificationResponse contains the response from method NotificationRecipientUser.ListByNotification.
type NotificationRecipientUserListByNotificationResponse struct {
	NotificationRecipientUserListByNotificationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotificationRecipientUserListByNotificationResult contains the result from method NotificationRecipientUser.ListByNotification.
type NotificationRecipientUserListByNotificationResult struct {
	RecipientUserCollection
}

// OpenIDConnectProviderCreateOrUpdateResponse contains the response from method OpenIDConnectProvider.CreateOrUpdate.
type OpenIDConnectProviderCreateOrUpdateResponse struct {
	OpenIDConnectProviderCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OpenIDConnectProviderCreateOrUpdateResult contains the result from method OpenIDConnectProvider.CreateOrUpdate.
type OpenIDConnectProviderCreateOrUpdateResult struct {
	OpenidConnectProviderContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// OpenIDConnectProviderDeleteResponse contains the response from method OpenIDConnectProvider.Delete.
type OpenIDConnectProviderDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OpenIDConnectProviderGetEntityTagResponse contains the response from method OpenIDConnectProvider.GetEntityTag.
type OpenIDConnectProviderGetEntityTagResponse struct {
	OpenIDConnectProviderGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OpenIDConnectProviderGetEntityTagResult contains the result from method OpenIDConnectProvider.GetEntityTag.
type OpenIDConnectProviderGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// OpenIDConnectProviderGetResponse contains the response from method OpenIDConnectProvider.Get.
type OpenIDConnectProviderGetResponse struct {
	OpenIDConnectProviderGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OpenIDConnectProviderGetResult contains the result from method OpenIDConnectProvider.Get.
type OpenIDConnectProviderGetResult struct {
	OpenidConnectProviderContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// OpenIDConnectProviderListByServiceResponse contains the response from method OpenIDConnectProvider.ListByService.
type OpenIDConnectProviderListByServiceResponse struct {
	OpenIDConnectProviderListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OpenIDConnectProviderListByServiceResult contains the result from method OpenIDConnectProvider.ListByService.
type OpenIDConnectProviderListByServiceResult struct {
	OpenIDConnectProviderCollection
}

// OpenIDConnectProviderListSecretsResponse contains the response from method OpenIDConnectProvider.ListSecrets.
type OpenIDConnectProviderListSecretsResponse struct {
	OpenIDConnectProviderListSecretsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OpenIDConnectProviderListSecretsResult contains the result from method OpenIDConnectProvider.ListSecrets.
type OpenIDConnectProviderListSecretsResult struct {
	ClientSecretContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// OpenIDConnectProviderUpdateResponse contains the response from method OpenIDConnectProvider.Update.
type OpenIDConnectProviderUpdateResponse struct {
	OpenIDConnectProviderUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OpenIDConnectProviderUpdateResult contains the result from method OpenIDConnectProvider.Update.
type OpenIDConnectProviderUpdateResult struct {
	OpenidConnectProviderContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// OperationListByTagsResponse contains the response from method Operation.ListByTags.
type OperationListByTagsResponse struct {
	OperationListByTagsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationListByTagsResult contains the result from method Operation.ListByTags.
type OperationListByTagsResult struct {
	TagResourceCollection
}

// OutboundNetworkDependenciesEndpointsListByServiceResponse contains the response from method OutboundNetworkDependenciesEndpoints.ListByService.
type OutboundNetworkDependenciesEndpointsListByServiceResponse struct {
	OutboundNetworkDependenciesEndpointsListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OutboundNetworkDependenciesEndpointsListByServiceResult contains the result from method OutboundNetworkDependenciesEndpoints.ListByService.
type OutboundNetworkDependenciesEndpointsListByServiceResult struct {
	OutboundEnvironmentEndpointList
}

// PolicyCreateOrUpdateResponse contains the response from method Policy.CreateOrUpdate.
type PolicyCreateOrUpdateResponse struct {
	PolicyCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PolicyCreateOrUpdateResult contains the result from method Policy.CreateOrUpdate.
type PolicyCreateOrUpdateResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PolicyDeleteResponse contains the response from method Policy.Delete.
type PolicyDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PolicyDescriptionListByServiceResponse contains the response from method PolicyDescription.ListByService.
type PolicyDescriptionListByServiceResponse struct {
	PolicyDescriptionListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PolicyDescriptionListByServiceResult contains the result from method PolicyDescription.ListByService.
type PolicyDescriptionListByServiceResult struct {
	PolicyDescriptionCollection
}

// PolicyGetEntityTagResponse contains the response from method Policy.GetEntityTag.
type PolicyGetEntityTagResponse struct {
	PolicyGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PolicyGetEntityTagResult contains the result from method Policy.GetEntityTag.
type PolicyGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// PolicyGetResponse contains the response from method Policy.Get.
type PolicyGetResponse struct {
	PolicyGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PolicyGetResult contains the result from method Policy.Get.
type PolicyGetResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PolicyListByServiceResponse contains the response from method Policy.ListByService.
type PolicyListByServiceResponse struct {
	PolicyListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PolicyListByServiceResult contains the result from method Policy.ListByService.
type PolicyListByServiceResult struct {
	PolicyCollection
}

// PortalRevisionCreateOrUpdatePollerResponse contains the response from method PortalRevision.CreateOrUpdate.
type PortalRevisionCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PortalRevisionCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l PortalRevisionCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PortalRevisionCreateOrUpdateResponse, error) {
	respType := PortalRevisionCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PortalRevisionContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PortalRevisionCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *PortalRevisionCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *PortalRevisionClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PortalRevisionClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &PortalRevisionCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PortalRevisionCreateOrUpdateResponse contains the response from method PortalRevision.CreateOrUpdate.
type PortalRevisionCreateOrUpdateResponse struct {
	PortalRevisionCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PortalRevisionCreateOrUpdateResult contains the result from method PortalRevision.CreateOrUpdate.
type PortalRevisionCreateOrUpdateResult struct {
	PortalRevisionContract
}

// PortalRevisionGetEntityTagResponse contains the response from method PortalRevision.GetEntityTag.
type PortalRevisionGetEntityTagResponse struct {
	PortalRevisionGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PortalRevisionGetEntityTagResult contains the result from method PortalRevision.GetEntityTag.
type PortalRevisionGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// PortalRevisionGetResponse contains the response from method PortalRevision.Get.
type PortalRevisionGetResponse struct {
	PortalRevisionGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PortalRevisionGetResult contains the result from method PortalRevision.Get.
type PortalRevisionGetResult struct {
	PortalRevisionContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PortalRevisionListByServiceResponse contains the response from method PortalRevision.ListByService.
type PortalRevisionListByServiceResponse struct {
	PortalRevisionListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PortalRevisionListByServiceResult contains the result from method PortalRevision.ListByService.
type PortalRevisionListByServiceResult struct {
	PortalRevisionCollection
}

// PortalRevisionUpdatePollerResponse contains the response from method PortalRevision.Update.
type PortalRevisionUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PortalRevisionUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l PortalRevisionUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PortalRevisionUpdateResponse, error) {
	respType := PortalRevisionUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PortalRevisionContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PortalRevisionUpdatePollerResponse from the provided client and resume token.
func (l *PortalRevisionUpdatePollerResponse) Resume(ctx context.Context, client *PortalRevisionClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PortalRevisionClient.Update", token, client.pl, client.updateHandleError)
	if err != nil {
		return err
	}
	poller := &PortalRevisionUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PortalRevisionUpdateResponse contains the response from method PortalRevision.Update.
type PortalRevisionUpdateResponse struct {
	PortalRevisionUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PortalRevisionUpdateResult contains the result from method PortalRevision.Update.
type PortalRevisionUpdateResult struct {
	PortalRevisionContract
}

// PortalSettingsListByServiceResponse contains the response from method PortalSettings.ListByService.
type PortalSettingsListByServiceResponse struct {
	PortalSettingsListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PortalSettingsListByServiceResult contains the result from method PortalSettings.ListByService.
type PortalSettingsListByServiceResult struct {
	PortalSettingsCollection
}

// PrivateEndpointConnectionCreateOrUpdatePollerResponse contains the response from method PrivateEndpointConnection.CreateOrUpdate.
type PrivateEndpointConnectionCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l PrivateEndpointConnectionCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionCreateOrUpdateResponse, error) {
	respType := PrivateEndpointConnectionCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PrivateEndpointConnection)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PrivateEndpointConnectionCreateOrUpdateResponse contains the response from method PrivateEndpointConnection.CreateOrUpdate.
type PrivateEndpointConnectionCreateOrUpdateResponse struct {
	PrivateEndpointConnectionCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionCreateOrUpdateResult contains the result from method PrivateEndpointConnection.CreateOrUpdate.
type PrivateEndpointConnectionCreateOrUpdateResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionDeletePollerResponse contains the response from method PrivateEndpointConnection.Delete.
type PrivateEndpointConnectionDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l PrivateEndpointConnectionDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionDeleteResponse, error) {
	respType := PrivateEndpointConnectionDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionDeletePollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionDeletePollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PrivateEndpointConnectionDeleteResponse contains the response from method PrivateEndpointConnection.Delete.
type PrivateEndpointConnectionDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionGetByNameResponse contains the response from method PrivateEndpointConnection.GetByName.
type PrivateEndpointConnectionGetByNameResponse struct {
	PrivateEndpointConnectionGetByNameResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionGetByNameResult contains the result from method PrivateEndpointConnection.GetByName.
type PrivateEndpointConnectionGetByNameResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionGetPrivateLinkResourceResponse contains the response from method PrivateEndpointConnection.GetPrivateLinkResource.
type PrivateEndpointConnectionGetPrivateLinkResourceResponse struct {
	PrivateEndpointConnectionGetPrivateLinkResourceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionGetPrivateLinkResourceResult contains the result from method PrivateEndpointConnection.GetPrivateLinkResource.
type PrivateEndpointConnectionGetPrivateLinkResourceResult struct {
	PrivateLinkResource
}

// PrivateEndpointConnectionListByServiceResponse contains the response from method PrivateEndpointConnection.ListByService.
type PrivateEndpointConnectionListByServiceResponse struct {
	PrivateEndpointConnectionListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionListByServiceResult contains the result from method PrivateEndpointConnection.ListByService.
type PrivateEndpointConnectionListByServiceResult struct {
	PrivateEndpointConnectionListResult
}

// PrivateEndpointConnectionListPrivateLinkResourcesResponse contains the response from method PrivateEndpointConnection.ListPrivateLinkResources.
type PrivateEndpointConnectionListPrivateLinkResourcesResponse struct {
	PrivateEndpointConnectionListPrivateLinkResourcesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionListPrivateLinkResourcesResult contains the result from method PrivateEndpointConnection.ListPrivateLinkResources.
type PrivateEndpointConnectionListPrivateLinkResourcesResult struct {
	PrivateLinkResourceListResult
}

// ProductAPICheckEntityExistsResponse contains the response from method ProductAPI.CheckEntityExists.
type ProductAPICheckEntityExistsResponse struct {
	ProductAPICheckEntityExistsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductAPICheckEntityExistsResult contains the result from method ProductAPI.CheckEntityExists.
type ProductAPICheckEntityExistsResult struct {
	// Success indicates if the operation succeeded or failed.
	Success bool
}

// ProductAPICreateOrUpdateResponse contains the response from method ProductAPI.CreateOrUpdate.
type ProductAPICreateOrUpdateResponse struct {
	ProductAPICreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductAPICreateOrUpdateResult contains the result from method ProductAPI.CreateOrUpdate.
type ProductAPICreateOrUpdateResult struct {
	APIContract
}

// ProductAPIDeleteResponse contains the response from method ProductAPI.Delete.
type ProductAPIDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductAPIListByProductResponse contains the response from method ProductAPI.ListByProduct.
type ProductAPIListByProductResponse struct {
	ProductAPIListByProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductAPIListByProductResult contains the result from method ProductAPI.ListByProduct.
type ProductAPIListByProductResult struct {
	APICollection
}

// ProductCreateOrUpdateResponse contains the response from method Product.CreateOrUpdate.
type ProductCreateOrUpdateResponse struct {
	ProductCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductCreateOrUpdateResult contains the result from method Product.CreateOrUpdate.
type ProductCreateOrUpdateResult struct {
	ProductContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ProductDeleteResponse contains the response from method Product.Delete.
type ProductDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductGetEntityTagResponse contains the response from method Product.GetEntityTag.
type ProductGetEntityTagResponse struct {
	ProductGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductGetEntityTagResult contains the result from method Product.GetEntityTag.
type ProductGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// ProductGetResponse contains the response from method Product.Get.
type ProductGetResponse struct {
	ProductGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductGetResult contains the result from method Product.Get.
type ProductGetResult struct {
	ProductContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ProductGroupCheckEntityExistsResponse contains the response from method ProductGroup.CheckEntityExists.
type ProductGroupCheckEntityExistsResponse struct {
	ProductGroupCheckEntityExistsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductGroupCheckEntityExistsResult contains the result from method ProductGroup.CheckEntityExists.
type ProductGroupCheckEntityExistsResult struct {
	// Success indicates if the operation succeeded or failed.
	Success bool
}

// ProductGroupCreateOrUpdateResponse contains the response from method ProductGroup.CreateOrUpdate.
type ProductGroupCreateOrUpdateResponse struct {
	ProductGroupCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductGroupCreateOrUpdateResult contains the result from method ProductGroup.CreateOrUpdate.
type ProductGroupCreateOrUpdateResult struct {
	GroupContract
}

// ProductGroupDeleteResponse contains the response from method ProductGroup.Delete.
type ProductGroupDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductGroupListByProductResponse contains the response from method ProductGroup.ListByProduct.
type ProductGroupListByProductResponse struct {
	ProductGroupListByProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductGroupListByProductResult contains the result from method ProductGroup.ListByProduct.
type ProductGroupListByProductResult struct {
	GroupCollection
}

// ProductListByServiceResponse contains the response from method Product.ListByService.
type ProductListByServiceResponse struct {
	ProductListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductListByServiceResult contains the result from method Product.ListByService.
type ProductListByServiceResult struct {
	ProductCollection
}

// ProductListByTagsResponse contains the response from method Product.ListByTags.
type ProductListByTagsResponse struct {
	ProductListByTagsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductListByTagsResult contains the result from method Product.ListByTags.
type ProductListByTagsResult struct {
	TagResourceCollection
}

// ProductPolicyCreateOrUpdateResponse contains the response from method ProductPolicy.CreateOrUpdate.
type ProductPolicyCreateOrUpdateResponse struct {
	ProductPolicyCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductPolicyCreateOrUpdateResult contains the result from method ProductPolicy.CreateOrUpdate.
type ProductPolicyCreateOrUpdateResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ProductPolicyDeleteResponse contains the response from method ProductPolicy.Delete.
type ProductPolicyDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductPolicyGetEntityTagResponse contains the response from method ProductPolicy.GetEntityTag.
type ProductPolicyGetEntityTagResponse struct {
	ProductPolicyGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductPolicyGetEntityTagResult contains the result from method ProductPolicy.GetEntityTag.
type ProductPolicyGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// ProductPolicyGetResponse contains the response from method ProductPolicy.Get.
type ProductPolicyGetResponse struct {
	ProductPolicyGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductPolicyGetResult contains the result from method ProductPolicy.Get.
type ProductPolicyGetResult struct {
	PolicyContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// ProductPolicyListByProductResponse contains the response from method ProductPolicy.ListByProduct.
type ProductPolicyListByProductResponse struct {
	ProductPolicyListByProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductPolicyListByProductResult contains the result from method ProductPolicy.ListByProduct.
type ProductPolicyListByProductResult struct {
	PolicyCollection
}

// ProductSubscriptionsListResponse contains the response from method ProductSubscriptions.List.
type ProductSubscriptionsListResponse struct {
	ProductSubscriptionsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductSubscriptionsListResult contains the result from method ProductSubscriptions.List.
type ProductSubscriptionsListResult struct {
	SubscriptionCollection
}

// ProductUpdateResponse contains the response from method Product.Update.
type ProductUpdateResponse struct {
	ProductUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductUpdateResult contains the result from method Product.Update.
type ProductUpdateResult struct {
	ProductContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// QuotaByCounterKeysListByServiceResponse contains the response from method QuotaByCounterKeys.ListByService.
type QuotaByCounterKeysListByServiceResponse struct {
	QuotaByCounterKeysListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// QuotaByCounterKeysListByServiceResult contains the result from method QuotaByCounterKeys.ListByService.
type QuotaByCounterKeysListByServiceResult struct {
	QuotaCounterCollection
}

// QuotaByCounterKeysUpdateResponse contains the response from method QuotaByCounterKeys.Update.
type QuotaByCounterKeysUpdateResponse struct {
	QuotaByCounterKeysUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// QuotaByCounterKeysUpdateResult contains the result from method QuotaByCounterKeys.Update.
type QuotaByCounterKeysUpdateResult struct {
	QuotaCounterCollection
}

// QuotaByPeriodKeysGetResponse contains the response from method QuotaByPeriodKeys.Get.
type QuotaByPeriodKeysGetResponse struct {
	QuotaByPeriodKeysGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// QuotaByPeriodKeysGetResult contains the result from method QuotaByPeriodKeys.Get.
type QuotaByPeriodKeysGetResult struct {
	QuotaCounterContract
}

// QuotaByPeriodKeysUpdateResponse contains the response from method QuotaByPeriodKeys.Update.
type QuotaByPeriodKeysUpdateResponse struct {
	QuotaByPeriodKeysUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// QuotaByPeriodKeysUpdateResult contains the result from method QuotaByPeriodKeys.Update.
type QuotaByPeriodKeysUpdateResult struct {
	QuotaCounterContract
}

// RegionListByServiceResponse contains the response from method Region.ListByService.
type RegionListByServiceResponse struct {
	RegionListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RegionListByServiceResult contains the result from method Region.ListByService.
type RegionListByServiceResult struct {
	RegionListResult
}

// ReportsListByAPIResponse contains the response from method Reports.ListByAPI.
type ReportsListByAPIResponse struct {
	ReportsListByAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListByAPIResult contains the result from method Reports.ListByAPI.
type ReportsListByAPIResult struct {
	ReportCollection
}

// ReportsListByGeoResponse contains the response from method Reports.ListByGeo.
type ReportsListByGeoResponse struct {
	ReportsListByGeoResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListByGeoResult contains the result from method Reports.ListByGeo.
type ReportsListByGeoResult struct {
	ReportCollection
}

// ReportsListByOperationResponse contains the response from method Reports.ListByOperation.
type ReportsListByOperationResponse struct {
	ReportsListByOperationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListByOperationResult contains the result from method Reports.ListByOperation.
type ReportsListByOperationResult struct {
	ReportCollection
}

// ReportsListByProductResponse contains the response from method Reports.ListByProduct.
type ReportsListByProductResponse struct {
	ReportsListByProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListByProductResult contains the result from method Reports.ListByProduct.
type ReportsListByProductResult struct {
	ReportCollection
}

// ReportsListByRequestResponse contains the response from method Reports.ListByRequest.
type ReportsListByRequestResponse struct {
	ReportsListByRequestResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListByRequestResult contains the result from method Reports.ListByRequest.
type ReportsListByRequestResult struct {
	RequestReportCollection
}

// ReportsListBySubscriptionResponse contains the response from method Reports.ListBySubscription.
type ReportsListBySubscriptionResponse struct {
	ReportsListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListBySubscriptionResult contains the result from method Reports.ListBySubscription.
type ReportsListBySubscriptionResult struct {
	ReportCollection
}

// ReportsListByTimeResponse contains the response from method Reports.ListByTime.
type ReportsListByTimeResponse struct {
	ReportsListByTimeResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListByTimeResult contains the result from method Reports.ListByTime.
type ReportsListByTimeResult struct {
	ReportCollection
}

// ReportsListByUserResponse contains the response from method Reports.ListByUser.
type ReportsListByUserResponse struct {
	ReportsListByUserResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ReportsListByUserResult contains the result from method Reports.ListByUser.
type ReportsListByUserResult struct {
	ReportCollection
}

// SignInSettingsCreateOrUpdateResponse contains the response from method SignInSettings.CreateOrUpdate.
type SignInSettingsCreateOrUpdateResponse struct {
	SignInSettingsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SignInSettingsCreateOrUpdateResult contains the result from method SignInSettings.CreateOrUpdate.
type SignInSettingsCreateOrUpdateResult struct {
	PortalSigninSettings
}

// SignInSettingsGetEntityTagResponse contains the response from method SignInSettings.GetEntityTag.
type SignInSettingsGetEntityTagResponse struct {
	SignInSettingsGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SignInSettingsGetEntityTagResult contains the result from method SignInSettings.GetEntityTag.
type SignInSettingsGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// SignInSettingsGetResponse contains the response from method SignInSettings.Get.
type SignInSettingsGetResponse struct {
	SignInSettingsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SignInSettingsGetResult contains the result from method SignInSettings.Get.
type SignInSettingsGetResult struct {
	PortalSigninSettings
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// SignInSettingsUpdateResponse contains the response from method SignInSettings.Update.
type SignInSettingsUpdateResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SignUpSettingsCreateOrUpdateResponse contains the response from method SignUpSettings.CreateOrUpdate.
type SignUpSettingsCreateOrUpdateResponse struct {
	SignUpSettingsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SignUpSettingsCreateOrUpdateResult contains the result from method SignUpSettings.CreateOrUpdate.
type SignUpSettingsCreateOrUpdateResult struct {
	PortalSignupSettings
}

// SignUpSettingsGetEntityTagResponse contains the response from method SignUpSettings.GetEntityTag.
type SignUpSettingsGetEntityTagResponse struct {
	SignUpSettingsGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SignUpSettingsGetEntityTagResult contains the result from method SignUpSettings.GetEntityTag.
type SignUpSettingsGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// SignUpSettingsGetResponse contains the response from method SignUpSettings.Get.
type SignUpSettingsGetResponse struct {
	SignUpSettingsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SignUpSettingsGetResult contains the result from method SignUpSettings.Get.
type SignUpSettingsGetResult struct {
	PortalSignupSettings
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// SignUpSettingsUpdateResponse contains the response from method SignUpSettings.Update.
type SignUpSettingsUpdateResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionCreateOrUpdateResponse contains the response from method Subscription.CreateOrUpdate.
type SubscriptionCreateOrUpdateResponse struct {
	SubscriptionCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionCreateOrUpdateResult contains the result from method Subscription.CreateOrUpdate.
type SubscriptionCreateOrUpdateResult struct {
	SubscriptionContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// SubscriptionDeleteResponse contains the response from method Subscription.Delete.
type SubscriptionDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionGetEntityTagResponse contains the response from method Subscription.GetEntityTag.
type SubscriptionGetEntityTagResponse struct {
	SubscriptionGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionGetEntityTagResult contains the result from method Subscription.GetEntityTag.
type SubscriptionGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// SubscriptionGetResponse contains the response from method Subscription.Get.
type SubscriptionGetResponse struct {
	SubscriptionGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionGetResult contains the result from method Subscription.Get.
type SubscriptionGetResult struct {
	SubscriptionContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// SubscriptionListResponse contains the response from method Subscription.List.
type SubscriptionListResponse struct {
	SubscriptionListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionListResult contains the result from method Subscription.List.
type SubscriptionListResult struct {
	SubscriptionCollection
}

// SubscriptionListSecretsResponse contains the response from method Subscription.ListSecrets.
type SubscriptionListSecretsResponse struct {
	SubscriptionListSecretsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionListSecretsResult contains the result from method Subscription.ListSecrets.
type SubscriptionListSecretsResult struct {
	SubscriptionKeysContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// SubscriptionRegeneratePrimaryKeyResponse contains the response from method Subscription.RegeneratePrimaryKey.
type SubscriptionRegeneratePrimaryKeyResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionRegenerateSecondaryKeyResponse contains the response from method Subscription.RegenerateSecondaryKey.
type SubscriptionRegenerateSecondaryKeyResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionUpdateResponse contains the response from method Subscription.Update.
type SubscriptionUpdateResponse struct {
	SubscriptionUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SubscriptionUpdateResult contains the result from method Subscription.Update.
type SubscriptionUpdateResult struct {
	SubscriptionContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TagAssignToAPIResponse contains the response from method Tag.AssignToAPI.
type TagAssignToAPIResponse struct {
	TagAssignToAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagAssignToAPIResult contains the result from method Tag.AssignToAPI.
type TagAssignToAPIResult struct {
	TagContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TagAssignToOperationResponse contains the response from method Tag.AssignToOperation.
type TagAssignToOperationResponse struct {
	TagAssignToOperationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagAssignToOperationResult contains the result from method Tag.AssignToOperation.
type TagAssignToOperationResult struct {
	TagContract
}

// TagAssignToProductResponse contains the response from method Tag.AssignToProduct.
type TagAssignToProductResponse struct {
	TagAssignToProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagAssignToProductResult contains the result from method Tag.AssignToProduct.
type TagAssignToProductResult struct {
	TagContract
}

// TagCreateOrUpdateResponse contains the response from method Tag.CreateOrUpdate.
type TagCreateOrUpdateResponse struct {
	TagCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagCreateOrUpdateResult contains the result from method Tag.CreateOrUpdate.
type TagCreateOrUpdateResult struct {
	TagContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TagDeleteResponse contains the response from method Tag.Delete.
type TagDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagDetachFromAPIResponse contains the response from method Tag.DetachFromAPI.
type TagDetachFromAPIResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagDetachFromOperationResponse contains the response from method Tag.DetachFromOperation.
type TagDetachFromOperationResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagDetachFromProductResponse contains the response from method Tag.DetachFromProduct.
type TagDetachFromProductResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetByAPIResponse contains the response from method Tag.GetByAPI.
type TagGetByAPIResponse struct {
	TagGetByAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetByAPIResult contains the result from method Tag.GetByAPI.
type TagGetByAPIResult struct {
	TagContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TagGetByOperationResponse contains the response from method Tag.GetByOperation.
type TagGetByOperationResponse struct {
	TagGetByOperationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetByOperationResult contains the result from method Tag.GetByOperation.
type TagGetByOperationResult struct {
	TagContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TagGetByProductResponse contains the response from method Tag.GetByProduct.
type TagGetByProductResponse struct {
	TagGetByProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetByProductResult contains the result from method Tag.GetByProduct.
type TagGetByProductResult struct {
	TagContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TagGetEntityStateByAPIResponse contains the response from method Tag.GetEntityStateByAPI.
type TagGetEntityStateByAPIResponse struct {
	TagGetEntityStateByAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetEntityStateByAPIResult contains the result from method Tag.GetEntityStateByAPI.
type TagGetEntityStateByAPIResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// TagGetEntityStateByOperationResponse contains the response from method Tag.GetEntityStateByOperation.
type TagGetEntityStateByOperationResponse struct {
	TagGetEntityStateByOperationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetEntityStateByOperationResult contains the result from method Tag.GetEntityStateByOperation.
type TagGetEntityStateByOperationResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// TagGetEntityStateByProductResponse contains the response from method Tag.GetEntityStateByProduct.
type TagGetEntityStateByProductResponse struct {
	TagGetEntityStateByProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetEntityStateByProductResult contains the result from method Tag.GetEntityStateByProduct.
type TagGetEntityStateByProductResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// TagGetEntityStateResponse contains the response from method Tag.GetEntityState.
type TagGetEntityStateResponse struct {
	TagGetEntityStateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetEntityStateResult contains the result from method Tag.GetEntityState.
type TagGetEntityStateResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// TagGetResponse contains the response from method Tag.Get.
type TagGetResponse struct {
	TagGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagGetResult contains the result from method Tag.Get.
type TagGetResult struct {
	TagContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TagListByAPIResponse contains the response from method Tag.ListByAPI.
type TagListByAPIResponse struct {
	TagListByAPIResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagListByAPIResult contains the result from method Tag.ListByAPI.
type TagListByAPIResult struct {
	TagCollection
}

// TagListByOperationResponse contains the response from method Tag.ListByOperation.
type TagListByOperationResponse struct {
	TagListByOperationResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagListByOperationResult contains the result from method Tag.ListByOperation.
type TagListByOperationResult struct {
	TagCollection
}

// TagListByProductResponse contains the response from method Tag.ListByProduct.
type TagListByProductResponse struct {
	TagListByProductResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagListByProductResult contains the result from method Tag.ListByProduct.
type TagListByProductResult struct {
	TagCollection
}

// TagListByServiceResponse contains the response from method Tag.ListByService.
type TagListByServiceResponse struct {
	TagListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagListByServiceResult contains the result from method Tag.ListByService.
type TagListByServiceResult struct {
	TagCollection
}

// TagResourceListByServiceResponse contains the response from method TagResource.ListByService.
type TagResourceListByServiceResponse struct {
	TagResourceListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagResourceListByServiceResult contains the result from method TagResource.ListByService.
type TagResourceListByServiceResult struct {
	TagResourceCollection
}

// TagUpdateResponse contains the response from method Tag.Update.
type TagUpdateResponse struct {
	TagUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TagUpdateResult contains the result from method Tag.Update.
type TagUpdateResult struct {
	TagContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TenantAccessCreateResponse contains the response from method TenantAccess.Create.
type TenantAccessCreateResponse struct {
	TenantAccessCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessCreateResult contains the result from method TenantAccess.Create.
type TenantAccessCreateResult struct {
	AccessInformationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TenantAccessGetEntityTagResponse contains the response from method TenantAccess.GetEntityTag.
type TenantAccessGetEntityTagResponse struct {
	TenantAccessGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessGetEntityTagResult contains the result from method TenantAccess.GetEntityTag.
type TenantAccessGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// TenantAccessGetResponse contains the response from method TenantAccess.Get.
type TenantAccessGetResponse struct {
	TenantAccessGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessGetResult contains the result from method TenantAccess.Get.
type TenantAccessGetResult struct {
	AccessInformationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TenantAccessGitRegeneratePrimaryKeyResponse contains the response from method TenantAccessGit.RegeneratePrimaryKey.
type TenantAccessGitRegeneratePrimaryKeyResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessGitRegenerateSecondaryKeyResponse contains the response from method TenantAccessGit.RegenerateSecondaryKey.
type TenantAccessGitRegenerateSecondaryKeyResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessListByServiceResponse contains the response from method TenantAccess.ListByService.
type TenantAccessListByServiceResponse struct {
	TenantAccessListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessListByServiceResult contains the result from method TenantAccess.ListByService.
type TenantAccessListByServiceResult struct {
	AccessInformationCollection
}

// TenantAccessListSecretsResponse contains the response from method TenantAccess.ListSecrets.
type TenantAccessListSecretsResponse struct {
	TenantAccessListSecretsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessListSecretsResult contains the result from method TenantAccess.ListSecrets.
type TenantAccessListSecretsResult struct {
	AccessInformationSecretsContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TenantAccessRegeneratePrimaryKeyResponse contains the response from method TenantAccess.RegeneratePrimaryKey.
type TenantAccessRegeneratePrimaryKeyResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessRegenerateSecondaryKeyResponse contains the response from method TenantAccess.RegenerateSecondaryKey.
type TenantAccessRegenerateSecondaryKeyResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessUpdateResponse contains the response from method TenantAccess.Update.
type TenantAccessUpdateResponse struct {
	TenantAccessUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantAccessUpdateResult contains the result from method TenantAccess.Update.
type TenantAccessUpdateResult struct {
	AccessInformationContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TenantConfigurationDeployPollerResponse contains the response from method TenantConfiguration.Deploy.
type TenantConfigurationDeployPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *TenantConfigurationDeployPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l TenantConfigurationDeployPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (TenantConfigurationDeployResponse, error) {
	respType := TenantConfigurationDeployResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.OperationResultContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a TenantConfigurationDeployPollerResponse from the provided client and resume token.
func (l *TenantConfigurationDeployPollerResponse) Resume(ctx context.Context, client *TenantConfigurationClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("TenantConfigurationClient.Deploy", token, client.pl, client.deployHandleError)
	if err != nil {
		return err
	}
	poller := &TenantConfigurationDeployPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// TenantConfigurationDeployResponse contains the response from method TenantConfiguration.Deploy.
type TenantConfigurationDeployResponse struct {
	TenantConfigurationDeployResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantConfigurationDeployResult contains the result from method TenantConfiguration.Deploy.
type TenantConfigurationDeployResult struct {
	OperationResultContract
}

// TenantConfigurationGetSyncStateResponse contains the response from method TenantConfiguration.GetSyncState.
type TenantConfigurationGetSyncStateResponse struct {
	TenantConfigurationGetSyncStateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantConfigurationGetSyncStateResult contains the result from method TenantConfiguration.GetSyncState.
type TenantConfigurationGetSyncStateResult struct {
	TenantConfigurationSyncStateContract
}

// TenantConfigurationSavePollerResponse contains the response from method TenantConfiguration.Save.
type TenantConfigurationSavePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *TenantConfigurationSavePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l TenantConfigurationSavePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (TenantConfigurationSaveResponse, error) {
	respType := TenantConfigurationSaveResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.OperationResultContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a TenantConfigurationSavePollerResponse from the provided client and resume token.
func (l *TenantConfigurationSavePollerResponse) Resume(ctx context.Context, client *TenantConfigurationClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("TenantConfigurationClient.Save", token, client.pl, client.saveHandleError)
	if err != nil {
		return err
	}
	poller := &TenantConfigurationSavePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// TenantConfigurationSaveResponse contains the response from method TenantConfiguration.Save.
type TenantConfigurationSaveResponse struct {
	TenantConfigurationSaveResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantConfigurationSaveResult contains the result from method TenantConfiguration.Save.
type TenantConfigurationSaveResult struct {
	OperationResultContract
}

// TenantConfigurationValidatePollerResponse contains the response from method TenantConfiguration.Validate.
type TenantConfigurationValidatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *TenantConfigurationValidatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l TenantConfigurationValidatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (TenantConfigurationValidateResponse, error) {
	respType := TenantConfigurationValidateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.OperationResultContract)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a TenantConfigurationValidatePollerResponse from the provided client and resume token.
func (l *TenantConfigurationValidatePollerResponse) Resume(ctx context.Context, client *TenantConfigurationClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("TenantConfigurationClient.Validate", token, client.pl, client.validateHandleError)
	if err != nil {
		return err
	}
	poller := &TenantConfigurationValidatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// TenantConfigurationValidateResponse contains the response from method TenantConfiguration.Validate.
type TenantConfigurationValidateResponse struct {
	TenantConfigurationValidateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantConfigurationValidateResult contains the result from method TenantConfiguration.Validate.
type TenantConfigurationValidateResult struct {
	OperationResultContract
}

// TenantSettingsGetResponse contains the response from method TenantSettings.Get.
type TenantSettingsGetResponse struct {
	TenantSettingsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantSettingsGetResult contains the result from method TenantSettings.Get.
type TenantSettingsGetResult struct {
	TenantSettingsContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// TenantSettingsListByServiceResponse contains the response from method TenantSettings.ListByService.
type TenantSettingsListByServiceResponse struct {
	TenantSettingsListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TenantSettingsListByServiceResult contains the result from method TenantSettings.ListByService.
type TenantSettingsListByServiceResult struct {
	TenantSettingsCollection
}

// UserConfirmationPasswordSendResponse contains the response from method UserConfirmationPassword.Send.
type UserConfirmationPasswordSendResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserCreateOrUpdateResponse contains the response from method User.CreateOrUpdate.
type UserCreateOrUpdateResponse struct {
	UserCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserCreateOrUpdateResult contains the result from method User.CreateOrUpdate.
type UserCreateOrUpdateResult struct {
	UserContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// UserDeleteResponse contains the response from method User.Delete.
type UserDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserGenerateSsoURLResponse contains the response from method User.GenerateSsoURL.
type UserGenerateSsoURLResponse struct {
	UserGenerateSsoURLResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserGenerateSsoURLResult contains the result from method User.GenerateSsoURL.
type UserGenerateSsoURLResult struct {
	GenerateSsoURLResult
}

// UserGetEntityTagResponse contains the response from method User.GetEntityTag.
type UserGetEntityTagResponse struct {
	UserGetEntityTagResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserGetEntityTagResult contains the result from method User.GetEntityTag.
type UserGetEntityTagResult struct {
	// ETag contains the information returned from the ETag header response.
	ETag *string

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// UserGetResponse contains the response from method User.Get.
type UserGetResponse struct {
	UserGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserGetResult contains the result from method User.Get.
type UserGetResult struct {
	UserContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// UserGetSharedAccessTokenResponse contains the response from method User.GetSharedAccessToken.
type UserGetSharedAccessTokenResponse struct {
	UserGetSharedAccessTokenResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserGetSharedAccessTokenResult contains the result from method User.GetSharedAccessToken.
type UserGetSharedAccessTokenResult struct {
	UserTokenResult
}

// UserGroupListResponse contains the response from method UserGroup.List.
type UserGroupListResponse struct {
	UserGroupListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserGroupListResult contains the result from method UserGroup.List.
type UserGroupListResult struct {
	GroupCollection
}

// UserIdentitiesListResponse contains the response from method UserIdentities.List.
type UserIdentitiesListResponse struct {
	UserIdentitiesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserIdentitiesListResult contains the result from method UserIdentities.List.
type UserIdentitiesListResult struct {
	UserIdentityCollection
}

// UserListByServiceResponse contains the response from method User.ListByService.
type UserListByServiceResponse struct {
	UserListByServiceResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserListByServiceResult contains the result from method User.ListByService.
type UserListByServiceResult struct {
	UserCollection
}

// UserSubscriptionGetResponse contains the response from method UserSubscription.Get.
type UserSubscriptionGetResponse struct {
	UserSubscriptionGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserSubscriptionGetResult contains the result from method UserSubscription.Get.
type UserSubscriptionGetResult struct {
	SubscriptionContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// UserSubscriptionListResponse contains the response from method UserSubscription.List.
type UserSubscriptionListResponse struct {
	UserSubscriptionListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserSubscriptionListResult contains the result from method UserSubscription.List.
type UserSubscriptionListResult struct {
	SubscriptionCollection
}

// UserUpdateResponse contains the response from method User.Update.
type UserUpdateResponse struct {
	UserUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// UserUpdateResult contains the result from method User.Update.
type UserUpdateResult struct {
	UserContract
	// ETag contains the information returned from the ETag header response.
	ETag *string
}
