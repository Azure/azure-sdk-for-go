//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armapp

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"reflect"
	"time"
)

// AllowedAudiencesValidation - The configuration settings of the Allowed Audiences validation flow.
type AllowedAudiencesValidation struct {
	// The configuration settings of the allowed list of audiences from which to validate the JWT token.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AllowedAudiencesValidation.
func (a AllowedAudiencesValidation) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "allowedAudiences", a.AllowedAudiences)
	return json.Marshal(objectMap)
}

// Apple - The configuration settings of the Apple provider.
type Apple struct {
	// The configuration settings of the login flow.
	Login *LoginScopes `json:"login,omitempty"`

	// The configuration settings of the Apple registration.
	Registration *AppleRegistration `json:"registration,omitempty"`

	// Disabled if the Apple provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`
}

// AppleRegistration - The configuration settings of the registration for the Apple provider
type AppleRegistration struct {
	// The Client ID of the app used for login.
	ClientID *string `json:"clientId,omitempty"`

	// The app secret ref name that contains the client secret.
	ClientSecretRefName *string `json:"clientSecretRefName,omitempty"`
}

// AuthConfig - Configuration settings for the Azure ContainerApp Authentication / Authorization feature.
type AuthConfig struct {
	// Easy Auth configuration resource specific properties
	Properties *AuthConfigProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AuthConfigCollection - AuthConfig collection ARM resource.
type AuthConfigCollection struct {
	// REQUIRED; Collection of resources.
	Value []*AuthConfig `json:"value,omitempty"`

	// READ-ONLY; Link to next page of resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AuthConfigCollection.
func (a AuthConfigCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", a.NextLink)
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// AuthConfigProperties - Easy Auth configuration resource specific properties
type AuthConfigProperties struct {
	// The configuration settings that determines the validation flow of users using ContainerApp Authentication/Authorization.
	GlobalValidation *GlobalValidation `json:"globalValidation,omitempty"`

	// The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp
	// Authentication/Authorization.
	HTTPSettings *HTTPSettings `json:"httpSettings,omitempty"`

	// The configuration settings of each of the identity providers used to configure ContainerApp Authentication/Authorization.
	IdentityProviders *IdentityProviders `json:"identityProviders,omitempty"`

	// The configuration settings of the login flow of users using ContainerApp Authentication/Authorization.
	Login *Login `json:"login,omitempty"`

	// Enabled if the Authentication / Authorization feature is enabled for the current app; otherwise, Disabled.
	State *EasyAuthState `json:"state,omitempty"`
}

// AvailableOperations - Available operations of the service
type AvailableOperations struct {
	// URL client should use to fetch the next page (per server side paging). It's null for now, added for future use.
	NextLink *string `json:"nextLink,omitempty"`

	// Collection of available operation details
	Value []*OperationDetail `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AvailableOperations.
func (a AvailableOperations) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", a.NextLink)
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// AzureActiveDirectory - The configuration settings of the Azure Active directory provider.
type AzureActiveDirectory struct {
	// The configuration settings of the Azure Active Directory login flow.
	Login *AzureActiveDirectoryLogin `json:"login,omitempty"`

	// The configuration settings of the Azure Active Directory app registration.
	Registration *AzureActiveDirectoryRegistration `json:"registration,omitempty"`

	// Disabled if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`

	// The configuration settings of the Azure Active Directory token validation flow.
	Validation *AzureActiveDirectoryValidation `json:"validation,omitempty"`
}

// AzureActiveDirectoryLogin - The configuration settings of the Azure Active Directory login flow.
type AzureActiveDirectoryLogin struct {
	// true if the www-authenticate provider should be omitted from the request; otherwise, false.
	DisableWwwAuthenticate *DisableWwwAuthenticateMode `json:"disableWwwAuthenticate,omitempty"`

	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the
	// form "key=value".
	LoginParameters []*string `json:"loginParameters,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AzureActiveDirectoryLogin.
func (a AzureActiveDirectoryLogin) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "disableWwwAuthenticate", a.DisableWwwAuthenticate)
	populate(objectMap, "loginParameters", a.LoginParameters)
	return json.Marshal(objectMap)
}

// AzureActiveDirectoryRegistration - The configuration settings of the Azure Active Directory app registration.
type AzureActiveDirectoryRegistration struct {
	// The Client ID of this relying party application, known as the clientid. This setting is required for enabling OpenID Connection
	// authentication with Azure Active Directory or other 3rd party OpenID
	// Connect providers. More information on OpenID Connect: http://openid.net/specs/openid-connect-core-10.html
	ClientID *string `json:"clientId,omitempty"`

	// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property
	// acts as a replacement for the Client Secret Certificate Thumbprint. It is
	// also optional.
	ClientSecretCertificateIssuer *string `json:"clientSecretCertificateIssuer,omitempty"`

	// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing
	// purposes. This property acts as a replacement for the Client Secret Certificate
	// Thumbprint. It is also optional.
	ClientSecretCertificateSubjectAlternativeName *string `json:"clientSecretCertificateSubjectAlternativeName,omitempty"`

	// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts
	// as a replacement for the Client Secret. It is also optional.
	ClientSecretCertificateThumbprint *string `json:"clientSecretCertificateThumbprint,omitempty"`

	// The app secret ref name that contains the client secret of the relying party application.
	ClientSecretRefName *string `json:"clientSecretRefName,omitempty"`

	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application. When using Azure
	// Active Directory, this value is the URI of the directory tenant, e.g.
	// https://login.microsoftonline.com/v2.0/{tenant-guid}/. This URI is a case-sensitive identifier for the token issuer. More
	// information on OpenID Connect Discovery:
	// http://openid.net/specs/openid-connect-discovery-1_0.html
	OpenIDIssuer *string `json:"openIdIssuer,omitempty"`
}

// AzureActiveDirectoryValidation - The configuration settings of the Azure Active Directory token validation flow.
type AzureActiveDirectoryValidation struct {
	// The list of audiences that can make successful authentication/authorization requests.
	AllowedAudiences []*string `json:"allowedAudiences,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AzureActiveDirectoryValidation.
func (a AzureActiveDirectoryValidation) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "allowedAudiences", a.AllowedAudiences)
	return json.Marshal(objectMap)
}

// AzureCredentials - Container App credentials.
type AzureCredentials struct {
	// Client Id.
	ClientID *string `json:"clientId,omitempty"`

	// Client Secret.
	ClientSecret *string `json:"clientSecret,omitempty"`

	// Subscription Id.
	SubscriptionID *string `json:"subscriptionId,omitempty"`

	// Tenant Id.
	TenantID *string `json:"tenantId,omitempty"`
}

// AzureFileProperties - Azure File Properties.
type AzureFileProperties struct {
	// Access mode for storage
	AccessMode *AccessMode `json:"accessMode,omitempty"`

	// Storage account key for azure file.
	AccountKey *string `json:"accountKey,omitempty"`

	// Storage account name for azure file.
	AccountName *string `json:"accountName,omitempty"`

	// Azure file share name.
	ShareName *string `json:"shareName,omitempty"`
}

// AzureStaticWebApp - The configuration settings of the Azure Static Web Apps provider.
type AzureStaticWebApp struct {
	// The configuration settings of the Azure Static Web Apps registration.
	Registration *AzureStaticWebAppRegistration `json:"registration,omitempty"`

	// Disabled if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`
}

// AzureStaticWebAppRegistration - The configuration settings of the registration for the Azure Static Web Apps provider
type AzureStaticWebAppRegistration struct {
	// The Client ID of the app used for login.
	ClientID *string `json:"clientId,omitempty"`
}

// Certificate used for Custom Domain bindings of Container Apps in a Managed Environment
type Certificate struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Certificate resource specific properties
	Properties *CertificateProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Certificate.
func (c Certificate) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", c.ID)
	populate(objectMap, "location", c.Location)
	populate(objectMap, "name", c.Name)
	populate(objectMap, "properties", c.Properties)
	populate(objectMap, "systemData", c.SystemData)
	populate(objectMap, "tags", c.Tags)
	populate(objectMap, "type", c.Type)
	return json.Marshal(objectMap)
}

// CertificateCollection - Collection of Certificates.
type CertificateCollection struct {
	// REQUIRED; Collection of resources.
	Value []*Certificate `json:"value,omitempty"`

	// READ-ONLY; Link to next page of resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type CertificateCollection.
func (c CertificateCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", c.NextLink)
	populate(objectMap, "value", c.Value)
	return json.Marshal(objectMap)
}

// CertificatePatch - A certificate to update
type CertificatePatch struct {
	// Application-specific metadata in the form of key-value pairs.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type CertificatePatch.
func (c CertificatePatch) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "tags", c.Tags)
	return json.Marshal(objectMap)
}

// CertificateProperties - Certificate resource specific properties
type CertificateProperties struct {
	// Certificate password.
	Password *string `json:"password,omitempty"`

	// PFX or PEM blob
	Value []byte `json:"value,omitempty"`

	// READ-ONLY; Certificate expiration date.
	ExpirationDate *time.Time `json:"expirationDate,omitempty" azure:"ro"`

	// READ-ONLY; Certificate issue Date.
	IssueDate *time.Time `json:"issueDate,omitempty" azure:"ro"`

	// READ-ONLY; Certificate issuer.
	Issuer *string `json:"issuer,omitempty" azure:"ro"`

	// READ-ONLY; Public key hash.
	PublicKeyHash *string `json:"publicKeyHash,omitempty" azure:"ro"`

	// READ-ONLY; Subject name of the certificate.
	SubjectName *string `json:"subjectName,omitempty" azure:"ro"`

	// READ-ONLY; Certificate thumbprint.
	Thumbprint *string `json:"thumbprint,omitempty" azure:"ro"`

	// READ-ONLY; Is the certificate valid?.
	Valid *bool `json:"valid,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type CertificateProperties.
func (c CertificateProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populateTimeRFC3339(objectMap, "expirationDate", c.ExpirationDate)
	populateTimeRFC3339(objectMap, "issueDate", c.IssueDate)
	populate(objectMap, "issuer", c.Issuer)
	populate(objectMap, "password", c.Password)
	populate(objectMap, "publicKeyHash", c.PublicKeyHash)
	populate(objectMap, "subjectName", c.SubjectName)
	populate(objectMap, "thumbprint", c.Thumbprint)
	populate(objectMap, "valid", c.Valid)
	populateByteArray(objectMap, "value", c.Value, runtime.Base64StdFormat)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type CertificateProperties.
func (c *CertificateProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "expirationDate":
			err = unpopulateTimeRFC3339(val, &c.ExpirationDate)
			delete(rawMsg, key)
		case "issueDate":
			err = unpopulateTimeRFC3339(val, &c.IssueDate)
			delete(rawMsg, key)
		case "issuer":
			err = unpopulate(val, &c.Issuer)
			delete(rawMsg, key)
		case "password":
			err = unpopulate(val, &c.Password)
			delete(rawMsg, key)
		case "publicKeyHash":
			err = unpopulate(val, &c.PublicKeyHash)
			delete(rawMsg, key)
		case "subjectName":
			err = unpopulate(val, &c.SubjectName)
			delete(rawMsg, key)
		case "thumbprint":
			err = unpopulate(val, &c.Thumbprint)
			delete(rawMsg, key)
		case "valid":
			err = unpopulate(val, &c.Valid)
			delete(rawMsg, key)
		case "value":
			err = runtime.DecodeByteArray(string(val), &c.Value, runtime.Base64StdFormat)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// CertificatesClientCreateOrUpdateOptions contains the optional parameters for the CertificatesClient.CreateOrUpdate method.
type CertificatesClientCreateOrUpdateOptions struct {
	// Certificate to be created or updated
	CertificateEnvelope *Certificate
}

// CertificatesClientDeleteOptions contains the optional parameters for the CertificatesClient.Delete method.
type CertificatesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientGetOptions contains the optional parameters for the CertificatesClient.Get method.
type CertificatesClientGetOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientListOptions contains the optional parameters for the CertificatesClient.List method.
type CertificatesClientListOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientUpdateOptions contains the optional parameters for the CertificatesClient.Update method.
type CertificatesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ClientRegistration - The configuration settings of the app registration for providers that have client ids and client secrets
type ClientRegistration struct {
	// The Client ID of the app used for login.
	ClientID *string `json:"clientId,omitempty"`

	// The app secret ref name that contains the client secret.
	ClientSecretRefName *string `json:"clientSecretRefName,omitempty"`
}

// Configuration - Non versioned Container App configuration properties that define the mutable settings of a Container app
type Configuration struct {
	// ActiveRevisionsMode controls how active revisions are handled for the Container app:Multiple: multiple revisions can be
	// active. If no value if provided, this is the defaultSingle: Only one revision
	// can be active at a time. Revision weights can not be used in this mode
	ActiveRevisionsMode *ActiveRevisionsMode `json:"activeRevisionsMode,omitempty"`

	// Ingress configurations.
	Ingress *Ingress `json:"ingress,omitempty"`

	// Collection of private container registry credentials for containers used by the Container app
	Registries []*RegistryCredentials `json:"registries,omitempty"`

	// Collection of secrets used by a Container app
	Secrets []*Secret `json:"secrets,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type Configuration.
func (c Configuration) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "activeRevisionsMode", c.ActiveRevisionsMode)
	populate(objectMap, "ingress", c.Ingress)
	populate(objectMap, "registries", c.Registries)
	populate(objectMap, "secrets", c.Secrets)
	return json.Marshal(objectMap)
}

// Container App container definition.
type Container struct {
	// Container start command arguments.
	Args []*string `json:"args,omitempty"`

	// Container start command.
	Command []*string `json:"command,omitempty"`

	// Container environment variables.
	Env []*EnvironmentVar `json:"env,omitempty"`

	// Container image tag.
	Image *string `json:"image,omitempty"`

	// Custom container name.
	Name *string `json:"name,omitempty"`

	// List of probes for the container.
	Probes []*ContainerAppProbe `json:"probes,omitempty"`

	// Container resource requirements.
	Resources *ContainerResources `json:"resources,omitempty"`

	// Container volume mounts.
	VolumeMounts []*VolumeMount `json:"volumeMounts,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type Container.
func (c Container) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "args", c.Args)
	populate(objectMap, "command", c.Command)
	populate(objectMap, "env", c.Env)
	populate(objectMap, "image", c.Image)
	populate(objectMap, "name", c.Name)
	populate(objectMap, "probes", c.Probes)
	populate(objectMap, "resources", c.Resources)
	populate(objectMap, "volumeMounts", c.VolumeMounts)
	return json.Marshal(objectMap)
}

// ContainerApp - Container App.
type ContainerApp struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials
	// in code.
	Identity *ManagedServiceIdentity `json:"identity,omitempty"`

	// ContainerApp resource specific properties
	Properties *ContainerAppProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ContainerApp.
func (c ContainerApp) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", c.ID)
	populate(objectMap, "identity", c.Identity)
	populate(objectMap, "location", c.Location)
	populate(objectMap, "name", c.Name)
	populate(objectMap, "properties", c.Properties)
	populate(objectMap, "systemData", c.SystemData)
	populate(objectMap, "tags", c.Tags)
	populate(objectMap, "type", c.Type)
	return json.Marshal(objectMap)
}

// ContainerAppCollection - Container App collection ARM resource.
type ContainerAppCollection struct {
	// REQUIRED; Collection of resources.
	Value []*ContainerApp `json:"value,omitempty"`

	// READ-ONLY; Link to next page of resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ContainerAppCollection.
func (c ContainerAppCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", c.NextLink)
	populate(objectMap, "value", c.Value)
	return json.Marshal(objectMap)
}

// ContainerAppPatch - Container App Patch.
type ContainerAppPatch struct {
	// Application-specific metadata in the form of key-value pairs.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ContainerAppPatch.
func (c ContainerAppPatch) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "tags", c.Tags)
	return json.Marshal(objectMap)
}

// ContainerAppProbe - Probe describes a health check to be performed against a container to determine whether it is alive
// or ready to receive traffic.
type ContainerAppProbe struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value
	// is 1. Maximum value is 10.
	FailureThreshold *int32 `json:"failureThreshold,omitempty"`

	// HTTPGet specifies the http request to perform.
	HTTPGet *ContainerAppProbeHTTPGet `json:"httpGet,omitempty"`

	// Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value
	// is 60.
	InitialDelaySeconds *int32 `json:"initialDelaySeconds,omitempty"`

	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	PeriodSeconds *int32 `json:"periodSeconds,omitempty"`

	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for
	// liveness and startup. Minimum value is 1. Maximum value is 10.
	SuccessThreshold *int32 `json:"successThreshold,omitempty"`

	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.
	TCPSocket *ContainerAppProbeTCPSocket `json:"tcpSocket,omitempty"`

	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration
	// in seconds after the processes running in the pod are sent a termination signal
	// and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup
	// time for your process. If this value is nil, the pod's
	// terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must
	// be non-negative integer. The value zero indicates stop immediately via the
	// kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature
	// gate. Maximum value is 3600 seconds (1 hour)
	TerminationGracePeriodSeconds *int64 `json:"terminationGracePeriodSeconds,omitempty"`

	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.
	TimeoutSeconds *int32 `json:"timeoutSeconds,omitempty"`

	// The type of probe.
	Type *Type `json:"type,omitempty"`
}

// ContainerAppProbeHTTPGet - HTTPGet specifies the http request to perform.
type ContainerAppProbeHTTPGet struct {
	// REQUIRED; Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an
	// IANASVCNAME.
	Port *int32 `json:"port,omitempty"`

	// Custom headers to set in the request. HTTP allows repeated headers.
	HTTPHeaders []*ContainerAppProbeHTTPGetHTTPHeadersItem `json:"httpHeaders,omitempty"`

	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `json:"host,omitempty"`

	// Path to access on the HTTP server.
	Path *string `json:"path,omitempty"`

	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `json:"scheme,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ContainerAppProbeHTTPGet.
func (c ContainerAppProbeHTTPGet) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "httpHeaders", c.HTTPHeaders)
	populate(objectMap, "host", c.Host)
	populate(objectMap, "path", c.Path)
	populate(objectMap, "port", c.Port)
	populate(objectMap, "scheme", c.Scheme)
	return json.Marshal(objectMap)
}

// ContainerAppProbeHTTPGetHTTPHeadersItem - HTTPHeader describes a custom header to be used in HTTP probes
type ContainerAppProbeHTTPGetHTTPHeadersItem struct {
	// REQUIRED; The header field name
	Name *string `json:"name,omitempty"`

	// REQUIRED; The header field value
	Value *string `json:"value,omitempty"`
}

// ContainerAppProbeTCPSocket - TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.
type ContainerAppProbeTCPSocket struct {
	// REQUIRED; Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an
	// IANASVCNAME.
	Port *int32 `json:"port,omitempty"`

	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `json:"host,omitempty"`
}

// ContainerAppProperties - ContainerApp resource specific properties
type ContainerAppProperties struct {
	// Non versioned Container App configuration properties.
	Configuration *Configuration `json:"configuration,omitempty"`

	// Resource ID of the Container App's environment.
	ManagedEnvironmentID *string `json:"managedEnvironmentId,omitempty"`

	// Container App versioned application definition.
	Template *Template `json:"template,omitempty"`

	// READ-ONLY; Id used to verify domain name ownership
	CustomDomainVerificationID *string `json:"customDomainVerificationId,omitempty" azure:"ro"`

	// READ-ONLY; Fully Qualified Domain Name of the latest revision of the Container App.
	LatestRevisionFqdn *string `json:"latestRevisionFqdn,omitempty" azure:"ro"`

	// READ-ONLY; Name of the latest revision of the Container App.
	LatestRevisionName *string `json:"latestRevisionName,omitempty" azure:"ro"`

	// READ-ONLY; Outbound IP Addresses for container app.
	OutboundIPAddresses []*string `json:"outboundIPAddresses,omitempty" azure:"ro"`

	// READ-ONLY; Provisioning state of the Container App.
	ProvisioningState *ContainerAppProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ContainerAppProperties.
func (c ContainerAppProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "configuration", c.Configuration)
	populate(objectMap, "customDomainVerificationId", c.CustomDomainVerificationID)
	populate(objectMap, "latestRevisionFqdn", c.LatestRevisionFqdn)
	populate(objectMap, "latestRevisionName", c.LatestRevisionName)
	populate(objectMap, "managedEnvironmentId", c.ManagedEnvironmentID)
	populate(objectMap, "outboundIPAddresses", c.OutboundIPAddresses)
	populate(objectMap, "provisioningState", c.ProvisioningState)
	populate(objectMap, "template", c.Template)
	return json.Marshal(objectMap)
}

// ContainerAppSecret - Container App Secret.
type ContainerAppSecret struct {
	// READ-ONLY; Secret Name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Secret Value.
	Value *string `json:"value,omitempty" azure:"ro"`
}

// ContainerAppsAuthConfigsClientCreateOrUpdateOptions contains the optional parameters for the ContainerAppsAuthConfigsClient.CreateOrUpdate
// method.
type ContainerAppsAuthConfigsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsAuthConfigsClientDeleteOptions contains the optional parameters for the ContainerAppsAuthConfigsClient.Delete
// method.
type ContainerAppsAuthConfigsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsAuthConfigsClientGetOptions contains the optional parameters for the ContainerAppsAuthConfigsClient.Get method.
type ContainerAppsAuthConfigsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsAuthConfigsClientListByContainerAppOptions contains the optional parameters for the ContainerAppsAuthConfigsClient.ListByContainerApp
// method.
type ContainerAppsAuthConfigsClientListByContainerAppOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientBeginCreateOrUpdateOptions contains the optional parameters for the ContainerAppsClient.BeginCreateOrUpdate
// method.
type ContainerAppsClientBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientBeginDeleteOptions contains the optional parameters for the ContainerAppsClient.BeginDelete method.
type ContainerAppsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientGetOptions contains the optional parameters for the ContainerAppsClient.Get method.
type ContainerAppsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientListByResourceGroupOptions contains the optional parameters for the ContainerAppsClient.ListByResourceGroup
// method.
type ContainerAppsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientListBySubscriptionOptions contains the optional parameters for the ContainerAppsClient.ListBySubscription
// method.
type ContainerAppsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientListCustomHostNameAnalysisOptions contains the optional parameters for the ContainerAppsClient.ListCustomHostNameAnalysis
// method.
type ContainerAppsClientListCustomHostNameAnalysisOptions struct {
	// Custom hostname.
	CustomHostname *string
}

// ContainerAppsClientListSecretsOptions contains the optional parameters for the ContainerAppsClient.ListSecrets method.
type ContainerAppsClientListSecretsOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientUpdateOptions contains the optional parameters for the ContainerAppsClient.Update method.
type ContainerAppsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionReplicasClientGetReplicaOptions contains the optional parameters for the ContainerAppsRevisionReplicasClient.GetReplica
// method.
type ContainerAppsRevisionReplicasClientGetReplicaOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionReplicasClientListReplicasOptions contains the optional parameters for the ContainerAppsRevisionReplicasClient.ListReplicas
// method.
type ContainerAppsRevisionReplicasClientListReplicasOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientActivateRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.ActivateRevision
// method.
type ContainerAppsRevisionsClientActivateRevisionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientDeactivateRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.DeactivateRevision
// method.
type ContainerAppsRevisionsClientDeactivateRevisionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientGetRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.GetRevision
// method.
type ContainerAppsRevisionsClientGetRevisionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientListRevisionsOptions contains the optional parameters for the ContainerAppsRevisionsClient.ListRevisions
// method.
type ContainerAppsRevisionsClientListRevisionsOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientRestartRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.RestartRevision
// method.
type ContainerAppsRevisionsClientRestartRevisionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsSourceControlsClientBeginCreateOrUpdateOptions contains the optional parameters for the ContainerAppsSourceControlsClient.BeginCreateOrUpdate
// method.
type ContainerAppsSourceControlsClientBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsSourceControlsClientBeginDeleteOptions contains the optional parameters for the ContainerAppsSourceControlsClient.BeginDelete
// method.
type ContainerAppsSourceControlsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsSourceControlsClientGetOptions contains the optional parameters for the ContainerAppsSourceControlsClient.Get
// method.
type ContainerAppsSourceControlsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsSourceControlsClientListByContainerAppOptions contains the optional parameters for the ContainerAppsSourceControlsClient.ListByContainerApp
// method.
type ContainerAppsSourceControlsClientListByContainerAppOptions struct {
	// placeholder for future optional parameters
}

// ContainerResources - Container App container resource requirements.
type ContainerResources struct {
	// Required CPU in cores, e.g. 0.5
	CPU *float64 `json:"cpu,omitempty"`

	// Required memory, e.g. "250Mb"
	Memory *string `json:"memory,omitempty"`

	// READ-ONLY; Ephemeral Storage, e.g. "1Gi"
	EphemeralStorage *string `json:"ephemeralStorage,omitempty" azure:"ro"`
}

// CustomDomain - Custom Domain of a Container App
type CustomDomain struct {
	// Custom Domain binding type.
	BindingType *BindingType `json:"bindingType,omitempty"`

	// Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.
	CertificateID *string `json:"certificateId,omitempty"`

	// Hostname.
	Name *string `json:"name,omitempty"`
}

// CustomHostnameAnalysisResult - Custom domain analysis.
type CustomHostnameAnalysisResult struct {
	// CustomHostnameAnalysisResult resource specific properties
	Properties *CustomHostnameAnalysisResultProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// CustomHostnameAnalysisResultProperties - CustomHostnameAnalysisResult resource specific properties
type CustomHostnameAnalysisResultProperties struct {
	// A records visible for this hostname.
	ARecords []*string `json:"aRecords,omitempty"`

	// Alternate CName records visible for this hostname.
	AlternateCNameRecords []*string `json:"alternateCNameRecords,omitempty"`

	// Alternate TXT records visible for this hostname.
	AlternateTxtRecords []*string `json:"alternateTxtRecords,omitempty"`

	// CName records visible for this hostname.
	CNameRecords []*string `json:"cNameRecords,omitempty"`

	// TXT records visible for this hostname.
	TxtRecords []*string `json:"txtRecords,omitempty"`

	// READ-ONLY; Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
	ConflictingContainerAppResourceID *string `json:"conflictingContainerAppResourceId,omitempty" azure:"ro"`

	// READ-ONLY; Raw failure information if DNS verification fails.
	CustomDomainVerificationFailureInfo *DefaultErrorResponse `json:"customDomainVerificationFailureInfo,omitempty" azure:"ro"`

	// READ-ONLY; DNS verification test result.
	CustomDomainVerificationTest *DNSVerificationTestResult `json:"customDomainVerificationTest,omitempty" azure:"ro"`

	// READ-ONLY; true if there is a conflict on the Container App's managed environment; otherwise, false.
	HasConflictOnManagedEnvironment *bool `json:"hasConflictOnManagedEnvironment,omitempty" azure:"ro"`

	// READ-ONLY; Host name that was analyzed
	HostName *string `json:"hostName,omitempty" azure:"ro"`

	// READ-ONLY; true if hostname is already verified; otherwise, false.
	IsHostnameAlreadyVerified *bool `json:"isHostnameAlreadyVerified,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type CustomHostnameAnalysisResultProperties.
func (c CustomHostnameAnalysisResultProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "aRecords", c.ARecords)
	populate(objectMap, "alternateCNameRecords", c.AlternateCNameRecords)
	populate(objectMap, "alternateTxtRecords", c.AlternateTxtRecords)
	populate(objectMap, "cNameRecords", c.CNameRecords)
	populate(objectMap, "conflictingContainerAppResourceId", c.ConflictingContainerAppResourceID)
	populate(objectMap, "customDomainVerificationFailureInfo", c.CustomDomainVerificationFailureInfo)
	populate(objectMap, "customDomainVerificationTest", c.CustomDomainVerificationTest)
	populate(objectMap, "hasConflictOnManagedEnvironment", c.HasConflictOnManagedEnvironment)
	populate(objectMap, "hostName", c.HostName)
	populate(objectMap, "isHostnameAlreadyVerified", c.IsHostnameAlreadyVerified)
	populate(objectMap, "txtRecords", c.TxtRecords)
	return json.Marshal(objectMap)
}

// CustomOpenIDConnectProvider - The configuration settings of the custom Open ID Connect provider.
type CustomOpenIDConnectProvider struct {
	// The configuration settings of the login flow of the custom Open ID Connect provider.
	Login *OpenIDConnectLogin `json:"login,omitempty"`

	// The configuration settings of the app registration for the custom Open ID Connect provider.
	Registration *OpenIDConnectRegistration `json:"registration,omitempty"`

	// Disabled if the custom Open ID Connect provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`
}

// CustomScaleRule - Container App container Custom scaling rule.
type CustomScaleRule struct {
	// Authentication secrets for the custom scale rule.
	Auth []*ScaleRuleAuth `json:"auth,omitempty"`

	// Metadata properties to describe custom scale rule.
	Metadata map[string]*string `json:"metadata,omitempty"`

	// Type of the custom scale rule eg: azure-servicebus, redis etc.
	Type *string `json:"type,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type CustomScaleRule.
func (c CustomScaleRule) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "auth", c.Auth)
	populate(objectMap, "metadata", c.Metadata)
	populate(objectMap, "type", c.Type)
	return json.Marshal(objectMap)
}

// Dapr - Container App Dapr configuration.
type Dapr struct {
	// Dapr application identifier
	AppID *string `json:"appId,omitempty"`

	// Tells Dapr which port your application is listening on
	AppPort *int32 `json:"appPort,omitempty"`

	// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
	AppProtocol *AppProtocol `json:"appProtocol,omitempty"`

	// Boolean indicating if the Dapr side car is enabled
	Enabled *bool `json:"enabled,omitempty"`
}

// DaprComponent - Dapr Component.
type DaprComponent struct {
	// Dapr Component resource specific properties
	Properties *DaprComponentProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DaprComponentProperties - Dapr Component resource specific properties
type DaprComponentProperties struct {
	// Component type
	ComponentType *string `json:"componentType,omitempty"`

	// Boolean describing if the component errors are ignores
	IgnoreErrors *bool `json:"ignoreErrors,omitempty"`

	// Initialization timeout
	InitTimeout *string `json:"initTimeout,omitempty"`

	// Component metadata
	Metadata []*DaprMetadata `json:"metadata,omitempty"`

	// Names of container apps that can use this Dapr component
	Scopes []*string `json:"scopes,omitempty"`

	// Collection of secrets used by a Dapr component
	Secrets []*Secret `json:"secrets,omitempty"`

	// Component version
	Version *string `json:"version,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type DaprComponentProperties.
func (d DaprComponentProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "componentType", d.ComponentType)
	populate(objectMap, "ignoreErrors", d.IgnoreErrors)
	populate(objectMap, "initTimeout", d.InitTimeout)
	populate(objectMap, "metadata", d.Metadata)
	populate(objectMap, "scopes", d.Scopes)
	populate(objectMap, "secrets", d.Secrets)
	populate(objectMap, "version", d.Version)
	return json.Marshal(objectMap)
}

// DaprComponentsClientCreateOrUpdateOptions contains the optional parameters for the DaprComponentsClient.CreateOrUpdate
// method.
type DaprComponentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DaprComponentsClientDeleteOptions contains the optional parameters for the DaprComponentsClient.Delete method.
type DaprComponentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DaprComponentsClientGetOptions contains the optional parameters for the DaprComponentsClient.Get method.
type DaprComponentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DaprComponentsClientListOptions contains the optional parameters for the DaprComponentsClient.List method.
type DaprComponentsClientListOptions struct {
	// placeholder for future optional parameters
}

// DaprComponentsCollection - Dapr Components ARM resource.
type DaprComponentsCollection struct {
	// REQUIRED; Collection of resources.
	Value []*DaprComponent `json:"value,omitempty"`

	// READ-ONLY; Link to next page of resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type DaprComponentsCollection.
func (d DaprComponentsCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", d.NextLink)
	populate(objectMap, "value", d.Value)
	return json.Marshal(objectMap)
}

// DaprMetadata - Dapr component metadata.
type DaprMetadata struct {
	// Metadata property name.
	Name *string `json:"name,omitempty"`

	// Name of the Dapr Component secret from which to pull the metadata property value.
	SecretRef *string `json:"secretRef,omitempty"`

	// Metadata property value.
	Value *string `json:"value,omitempty"`
}

// DefaultErrorResponse - App Service error response.
type DefaultErrorResponse struct {
	// READ-ONLY; Error model.
	Error *DefaultErrorResponseError `json:"error,omitempty" azure:"ro"`
}

// DefaultErrorResponseError - Error model.
type DefaultErrorResponseError struct {
	// Details or the error
	Details []*DefaultErrorResponseErrorDetailsItem `json:"details,omitempty"`

	// READ-ONLY; Standardized string to programmatically identify the error.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; More information to debug error.
	Innererror *string `json:"innererror,omitempty" azure:"ro"`

	// READ-ONLY; Detailed error description and debugging information.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; Detailed error description and debugging information.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type DefaultErrorResponseError.
func (d DefaultErrorResponseError) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "code", d.Code)
	populate(objectMap, "details", d.Details)
	populate(objectMap, "innererror", d.Innererror)
	populate(objectMap, "message", d.Message)
	populate(objectMap, "target", d.Target)
	return json.Marshal(objectMap)
}

// DefaultErrorResponseErrorDetailsItem - Detailed errors.
type DefaultErrorResponseErrorDetailsItem struct {
	// READ-ONLY; Standardized string to programmatically identify the error.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Detailed error description and debugging information.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; Detailed error description and debugging information.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// EnvironmentVar - Container App container environment variable.
type EnvironmentVar struct {
	// Environment variable name.
	Name *string `json:"name,omitempty"`

	// Name of the Container App secret from which to pull the environment variable value.
	SecretRef *string `json:"secretRef,omitempty"`

	// Non-secret environment variable value.
	Value *string `json:"value,omitempty"`
}

// Facebook - The configuration settings of the Facebook provider.
type Facebook struct {
	// The version of the Facebook api to be used while logging in.
	GraphAPIVersion *string `json:"graphApiVersion,omitempty"`

	// The configuration settings of the login flow.
	Login *LoginScopes `json:"login,omitempty"`

	// The configuration settings of the app registration for the Facebook provider.
	Registration *Registration `json:"registration,omitempty"`

	// Disabled if the Facebook provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`
}

// GitHub - The configuration settings of the GitHub provider.
type GitHub struct {
	// The configuration settings of the login flow.
	Login *LoginScopes `json:"login,omitempty"`

	// The configuration settings of the app registration for the GitHub provider.
	Registration *ClientRegistration `json:"registration,omitempty"`

	// Disabled if the GitHub provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`
}

// GithubActionConfiguration - Configuration properties that define the mutable settings of a Container App SourceControl
type GithubActionConfiguration struct {
	// AzureCredentials configurations.
	AzureCredentials *AzureCredentials `json:"azureCredentials,omitempty"`

	// Docker file path
	DockerfilePath *string `json:"dockerfilePath,omitempty"`

	// Operation system
	OS *string `json:"os,omitempty"`

	// Code or Image
	PublishType *string `json:"publishType,omitempty"`

	// Registry configurations.
	RegistryInfo *RegistryInfo `json:"registryInfo,omitempty"`

	// Runtime stack
	RuntimeStack *string `json:"runtimeStack,omitempty"`

	// Runtime Version
	RuntimeVersion *string `json:"runtimeVersion,omitempty"`
}

// GlobalValidation - The configuration settings that determines the validation flow of users using ContainerApp Authentication/Authorization.
type GlobalValidation struct {
	// The default authentication provider to use when multiple providers are configured. This setting is only needed if multiple
	// providers are configured and the unauthenticated client action is set to
	// "RedirectToLoginPage".
	RedirectToProvider *string `json:"redirectToProvider,omitempty"`

	// The action to take when an unauthenticated client attempts to access the app.
	UnauthenticatedClientAction *UnauthenticatedClientAction `json:"unauthenticatedClientAction,omitempty"`
}

// Google - The configuration settings of the Google provider.
type Google struct {
	// The configuration settings of the login flow.
	Login *LoginScopes `json:"login,omitempty"`

	// The configuration settings of the app registration for the Google provider.
	Registration *ClientRegistration `json:"registration,omitempty"`

	// Disabled if the Google provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`

	// The configuration settings of the Azure Active Directory token validation flow.
	Validation *AllowedAudiencesValidation `json:"validation,omitempty"`
}

// HTTPScaleRule - Container App container Custom scaling rule.
type HTTPScaleRule struct {
	// Authentication secrets for the custom scale rule.
	Auth []*ScaleRuleAuth `json:"auth,omitempty"`

	// Metadata properties to describe http scale rule.
	Metadata map[string]*string `json:"metadata,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type HTTPScaleRule.
func (h HTTPScaleRule) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "auth", h.Auth)
	populate(objectMap, "metadata", h.Metadata)
	return json.Marshal(objectMap)
}

// HTTPSettings - The configuration settings of the HTTP requests for authentication and authorization requests made against
// ContainerApp Authentication/Authorization.
type HTTPSettings struct {
	// false if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, true.
	RequireHTTPS *RequireHTTPSMode `json:"requireHttps,omitempty"`

	// The configuration settings of the paths HTTP requests.
	Route *HTTPSettingsRoute `json:"route,omitempty"`
}

// HTTPSettingsRoute - The configuration settings of the paths HTTP requests.
type HTTPSettingsRoute struct {
	// The prefix that should precede all the authentication/authorization paths.
	APIPrefix *string `json:"apiPrefix,omitempty"`
}

// IdentityProviders - The configuration settings of each of the identity providers used to configure ContainerApp Authentication/Authorization.
type IdentityProviders struct {
	// The configuration settings of the Apple provider.
	Apple *Apple `json:"apple,omitempty"`

	// The configuration settings of the Azure Active directory provider.
	AzureActiveDirectory *AzureActiveDirectory `json:"azureActiveDirectory,omitempty"`

	// The configuration settings of the Azure Static Web Apps provider.
	AzureStaticWebApp *AzureStaticWebApp `json:"azureStaticWebApp,omitempty"`

	// The map of the name of the alias of each custom Open ID Connect provider to the configuration settings of the custom Open
	// ID Connect provider.
	CustomOpenIDConnectProviders map[string]*CustomOpenIDConnectProvider `json:"customOpenIdConnectProviders,omitempty"`

	// The configuration settings of the Facebook provider.
	Facebook *Facebook `json:"facebook,omitempty"`

	// The configuration settings of the GitHub provider.
	GitHub *GitHub `json:"gitHub,omitempty"`

	// The configuration settings of the Google provider.
	Google *Google `json:"google,omitempty"`

	// The configuration settings of the legacy Microsoft Account provider.
	LegacyMicrosoftAccount *LegacyMicrosoftAccount `json:"legacyMicrosoftAccount,omitempty"`

	// The configuration settings of the Twitter provider.
	Twitter *Twitter `json:"twitter,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type IdentityProviders.
func (i IdentityProviders) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "apple", i.Apple)
	populate(objectMap, "azureActiveDirectory", i.AzureActiveDirectory)
	populate(objectMap, "azureStaticWebApp", i.AzureStaticWebApp)
	populate(objectMap, "customOpenIdConnectProviders", i.CustomOpenIDConnectProviders)
	populate(objectMap, "facebook", i.Facebook)
	populate(objectMap, "gitHub", i.GitHub)
	populate(objectMap, "google", i.Google)
	populate(objectMap, "legacyMicrosoftAccount", i.LegacyMicrosoftAccount)
	populate(objectMap, "twitter", i.Twitter)
	return json.Marshal(objectMap)
}

// Ingress - Container App Ingress configuration.
type Ingress struct {
	// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
	// connections
	AllowInsecure *bool `json:"allowInsecure,omitempty"`

	// custom domain bindings for Container Apps' hostnames.
	CustomDomains []*CustomDomain `json:"customDomains,omitempty"`

	// Bool indicating if app exposes an external http endpoint
	External *bool `json:"external,omitempty"`

	// Target Port in containers for traffic from ingress
	TargetPort *int32 `json:"targetPort,omitempty"`

	// Traffic weights for app's revisions
	Traffic []*TrafficWeight `json:"traffic,omitempty"`

	// Ingress transport protocol
	Transport *IngressTransportMethod `json:"transport,omitempty"`

	// READ-ONLY; Hostname.
	Fqdn *string `json:"fqdn,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Ingress.
func (i Ingress) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "allowInsecure", i.AllowInsecure)
	populate(objectMap, "customDomains", i.CustomDomains)
	populate(objectMap, "external", i.External)
	populate(objectMap, "fqdn", i.Fqdn)
	populate(objectMap, "targetPort", i.TargetPort)
	populate(objectMap, "traffic", i.Traffic)
	populate(objectMap, "transport", i.Transport)
	return json.Marshal(objectMap)
}

// LegacyMicrosoftAccount - The configuration settings of the legacy Microsoft Account provider.
type LegacyMicrosoftAccount struct {
	// The configuration settings of the login flow.
	Login *LoginScopes `json:"login,omitempty"`

	// The configuration settings of the app registration for the legacy Microsoft Account provider.
	Registration *ClientRegistration `json:"registration,omitempty"`

	// Disabled if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`

	// The configuration settings of the legacy Microsoft Account provider token validation flow.
	Validation *AllowedAudiencesValidation `json:"validation,omitempty"`
}

// LogAnalyticsConfiguration - Log analytics configuration
type LogAnalyticsConfiguration struct {
	// Log analytics customer id
	CustomerID *string `json:"customerId,omitempty"`

	// Log analytics customer key
	SharedKey *string `json:"sharedKey,omitempty"`
}

// Login - The configuration settings of the login flow of users using ContainerApp Authentication/Authorization.
type Login struct {
	// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part
	// of the URL is ignored. This is an advanced setting typically only needed by
	// Windows Store application backends. Note that URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty"`

	// True if the fragments from the request are preserved after the login request is made; otherwise, False.
	PreserveURLFragmentsForLogins *PreserveURLFragmentsForLoginsMode `json:"preserveUrlFragmentsForLogins,omitempty"`

	// The route that specify the endpoint used for login and logout requests.
	Route *LoginRoute `json:"route,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type Login.
func (l Login) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "allowedExternalRedirectUrls", l.AllowedExternalRedirectUrls)
	populate(objectMap, "preserveUrlFragmentsForLogins", l.PreserveURLFragmentsForLogins)
	populate(objectMap, "route", l.Route)
	return json.Marshal(objectMap)
}

// LoginRoute - The route that specify the endpoint used for login and logout requests.
type LoginRoute struct {
	// The endpoint at which a logout request should be made.
	LogoutEndpoint *string `json:"logoutEndpoint,omitempty"`
}

// LoginScopes - The configuration settings of the login flow, including the scopes that should be requested.
type LoginScopes struct {
	// A list of the scopes that should be requested while authenticating.
	Scopes []*string `json:"scopes,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type LoginScopes.
func (l LoginScopes) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "scopes", l.Scopes)
	return json.Marshal(objectMap)
}

// LogsConfiguration - Configuration of application logs
type LogsConfiguration struct {
	// Logs destination
	Destination *string `json:"destination,omitempty"`

	// Log Analytics configuration
	LogAnalyticsConfiguration *LogAnalyticsConfiguration `json:"logAnalyticsConfiguration,omitempty"`
}

// ManagedEnvironment - An environment for hosting container apps
type ManagedEnvironment struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Managed environment resource specific properties
	Properties *ManagedEnvironmentProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ManagedEnvironment.
func (m ManagedEnvironment) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", m.ID)
	populate(objectMap, "location", m.Location)
	populate(objectMap, "name", m.Name)
	populate(objectMap, "properties", m.Properties)
	populate(objectMap, "systemData", m.SystemData)
	populate(objectMap, "tags", m.Tags)
	populate(objectMap, "type", m.Type)
	return json.Marshal(objectMap)
}

// ManagedEnvironmentPatch - An environment for hosting container apps
type ManagedEnvironmentPatch struct {
	// Application-specific metadata in the form of key-value pairs.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ManagedEnvironmentPatch.
func (m ManagedEnvironmentPatch) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "tags", m.Tags)
	return json.Marshal(objectMap)
}

// ManagedEnvironmentProperties - Managed environment resource specific properties
type ManagedEnvironmentProperties struct {
	// Cluster configuration which enables the log daemon to export app logs to a destination. Currently only "log-analytics"
	// is supported
	AppLogsConfiguration *LogsConfiguration `json:"appLogsConfiguration,omitempty"`

	// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
	DaprAIInstrumentationKey *string `json:"daprAIInstrumentationKey,omitempty"`

	// Vnet configuration for the environment
	VnetConfiguration *VnetConfiguration `json:"vnetConfiguration,omitempty"`

	// READ-ONLY; Default Domain Name for the cluster
	DefaultDomain *string `json:"defaultDomain,omitempty" azure:"ro"`

	// READ-ONLY; Any errors that occurred during deployment or deployment validation
	DeploymentErrors *string `json:"deploymentErrors,omitempty" azure:"ro"`

	// READ-ONLY; Provisioning state of the Environment.
	ProvisioningState *EnvironmentProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Static IP of the Environment
	StaticIP *string `json:"staticIp,omitempty" azure:"ro"`
}

// ManagedEnvironmentStorage - Storage resource for managedEnvironment.
type ManagedEnvironmentStorage struct {
	// Storage properties
	Properties *ManagedEnvironmentStorageProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ManagedEnvironmentStorageProperties - Storage properties
type ManagedEnvironmentStorageProperties struct {
	// Azure file properties
	AzureFile *AzureFileProperties `json:"azureFile,omitempty"`
}

// ManagedEnvironmentStoragesCollection - Collection of Storage for Environments
type ManagedEnvironmentStoragesCollection struct {
	// REQUIRED; Collection of storage resources.
	Value []*ManagedEnvironmentStorage `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ManagedEnvironmentStoragesCollection.
func (m ManagedEnvironmentStoragesCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", m.Value)
	return json.Marshal(objectMap)
}

// ManagedEnvironmentsClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedEnvironmentsClient.BeginCreateOrUpdate
// method.
type ManagedEnvironmentsClientBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsClientBeginDeleteOptions contains the optional parameters for the ManagedEnvironmentsClient.BeginDelete
// method.
type ManagedEnvironmentsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsClientGetOptions contains the optional parameters for the ManagedEnvironmentsClient.Get method.
type ManagedEnvironmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsClientListByResourceGroupOptions contains the optional parameters for the ManagedEnvironmentsClient.ListByResourceGroup
// method.
type ManagedEnvironmentsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsClientListBySubscriptionOptions contains the optional parameters for the ManagedEnvironmentsClient.ListBySubscription
// method.
type ManagedEnvironmentsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsClientUpdateOptions contains the optional parameters for the ManagedEnvironmentsClient.Update method.
type ManagedEnvironmentsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsCollection - Collection of Environments
type ManagedEnvironmentsCollection struct {
	// REQUIRED; Collection of resources.
	Value []*ManagedEnvironment `json:"value,omitempty"`

	// READ-ONLY; Link to next page of resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ManagedEnvironmentsCollection.
func (m ManagedEnvironmentsCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", m.NextLink)
	populate(objectMap, "value", m.Value)
	return json.Marshal(objectMap)
}

// ManagedEnvironmentsStoragesClientCreateOrUpdateOptions contains the optional parameters for the ManagedEnvironmentsStoragesClient.CreateOrUpdate
// method.
type ManagedEnvironmentsStoragesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsStoragesClientDeleteOptions contains the optional parameters for the ManagedEnvironmentsStoragesClient.Delete
// method.
type ManagedEnvironmentsStoragesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsStoragesClientGetOptions contains the optional parameters for the ManagedEnvironmentsStoragesClient.Get
// method.
type ManagedEnvironmentsStoragesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedEnvironmentsStoragesClientListOptions contains the optional parameters for the ManagedEnvironmentsStoragesClient.List
// method.
type ManagedEnvironmentsStoragesClientListOptions struct {
	// placeholder for future optional parameters
}

// ManagedServiceIdentity - Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// REQUIRED; Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type *ManagedServiceIdentityType `json:"type,omitempty"`

	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
	// resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
	// The dictionary values can be empty objects ({}) in
	// requests.
	UserAssignedIdentities map[string]*UserAssignedIdentity `json:"userAssignedIdentities,omitempty"`

	// READ-ONLY; The service principal ID of the system assigned identity. This property will only be provided for a system assigned
	// identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ManagedServiceIdentity.
func (m ManagedServiceIdentity) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "principalId", m.PrincipalID)
	populate(objectMap, "tenantId", m.TenantID)
	populate(objectMap, "type", m.Type)
	populate(objectMap, "userAssignedIdentities", m.UserAssignedIdentities)
	return json.Marshal(objectMap)
}

// OpenIDConnectClientCredential - The authentication client credentials of the custom Open ID Connect provider.
type OpenIDConnectClientCredential struct {
	// The app setting that contains the client secret for the custom Open ID Connect provider.
	ClientSecretRefName *string `json:"clientSecretRefName,omitempty"`
}

// OpenIDConnectConfig - The configuration settings of the endpoints used for the custom Open ID Connect provider.
type OpenIDConnectConfig struct {
	// The endpoint to be used to make an authorization request.
	AuthorizationEndpoint *string `json:"authorizationEndpoint,omitempty"`

	// The endpoint that provides the keys necessary to validate the token.
	CertificationURI *string `json:"certificationUri,omitempty"`

	// The endpoint that issues the token.
	Issuer *string `json:"issuer,omitempty"`

	// The endpoint to be used to request a token.
	TokenEndpoint *string `json:"tokenEndpoint,omitempty"`

	// The endpoint that contains all the configuration endpoints for the provider.
	WellKnownOpenIDConfiguration *string `json:"wellKnownOpenIdConfiguration,omitempty"`
}

// OpenIDConnectLogin - The configuration settings of the login flow of the custom Open ID Connect provider.
type OpenIDConnectLogin struct {
	// The name of the claim that contains the users name.
	NameClaimType *string `json:"nameClaimType,omitempty"`

	// A list of the scopes that should be requested while authenticating.
	Scopes []*string `json:"scopes,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OpenIDConnectLogin.
func (o OpenIDConnectLogin) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nameClaimType", o.NameClaimType)
	populate(objectMap, "scopes", o.Scopes)
	return json.Marshal(objectMap)
}

// OpenIDConnectRegistration - The configuration settings of the app registration for the custom Open ID Connect provider.
type OpenIDConnectRegistration struct {
	// The authentication credentials of the custom Open ID Connect provider.
	ClientCredential *OpenIDConnectClientCredential `json:"clientCredential,omitempty"`

	// The client id of the custom Open ID Connect provider.
	ClientID *string `json:"clientId,omitempty"`

	// The configuration settings of the endpoints used for the custom Open ID Connect provider.
	OpenIDConnectConfiguration *OpenIDConnectConfig `json:"openIdConnectConfiguration,omitempty"`
}

// OperationDetail - Operation detail payload
type OperationDetail struct {
	// Display of the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Name of the operation
	Name *string `json:"name,omitempty"`

	// Origin of the operation
	Origin *string `json:"origin,omitempty"`
}

// OperationDisplay - Operation display payload
type OperationDisplay struct {
	// Localized friendly description for the operation
	Description *string `json:"description,omitempty"`

	// Localized friendly name for the operation
	Operation *string `json:"operation,omitempty"`

	// Resource provider of the operation
	Provider *string `json:"provider,omitempty"`

	// Resource of the operation
	Resource *string `json:"resource,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// QueueScaleRule - Container App container Azure Queue based scaling rule.
type QueueScaleRule struct {
	// Authentication secrets for the queue scale rule.
	Auth []*ScaleRuleAuth `json:"auth,omitempty"`

	// Queue length.
	QueueLength *int32 `json:"queueLength,omitempty"`

	// Queue name.
	QueueName *string `json:"queueName,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type QueueScaleRule.
func (q QueueScaleRule) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "auth", q.Auth)
	populate(objectMap, "queueLength", q.QueueLength)
	populate(objectMap, "queueName", q.QueueName)
	return json.Marshal(objectMap)
}

// Registration - The configuration settings of the app registration for providers that have app ids and app secrets
type Registration struct {
	// The App ID of the app used for login.
	AppID *string `json:"appId,omitempty"`

	// The app secret ref name that contains the app secret.
	AppSecretRefName *string `json:"appSecretRefName,omitempty"`
}

// RegistryCredentials - Container App Private Registry
type RegistryCredentials struct {
	// The name of the Secret that contains the registry login password
	PasswordSecretRef *string `json:"passwordSecretRef,omitempty"`

	// Container Registry Server
	Server *string `json:"server,omitempty"`

	// Container Registry Username
	Username *string `json:"username,omitempty"`
}

// RegistryInfo - Container App registry information.
type RegistryInfo struct {
	// registry secret.
	RegistryPassword *string `json:"registryPassword,omitempty"`

	// registry server Url.
	RegistryURL *string `json:"registryUrl,omitempty"`

	// registry username.
	RegistryUserName *string `json:"registryUserName,omitempty"`
}

// Replica - Container App Revision Replica.
type Replica struct {
	// Replica resource specific properties
	Properties *ReplicaProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ReplicaCollection - Container App Revision Replicas collection ARM resource.
type ReplicaCollection struct {
	// REQUIRED; Collection of resources.
	Value []*Replica `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ReplicaCollection.
func (r ReplicaCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", r.Value)
	return json.Marshal(objectMap)
}

// ReplicaContainer - Container object under Container App Revision Replica.
type ReplicaContainer struct {
	// The Id of the Container
	ContainerID *string `json:"containerId,omitempty"`

	// The Name of the Container
	Name *string `json:"name,omitempty"`

	// The container ready status
	Ready *bool `json:"ready,omitempty"`

	// The container restart count
	RestartCount *int32 `json:"restartCount,omitempty"`

	// The container start status
	Started *bool `json:"started,omitempty"`
}

// ReplicaProperties - Replica resource specific properties
type ReplicaProperties struct {
	// The containers collection under a replica.
	Containers []*ReplicaContainer `json:"containers,omitempty"`

	// READ-ONLY; Timestamp describing when the pod was created by controller
	CreatedTime *time.Time `json:"createdTime,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ReplicaProperties.
func (r ReplicaProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "containers", r.Containers)
	populateTimeRFC3339(objectMap, "createdTime", r.CreatedTime)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type ReplicaProperties.
func (r *ReplicaProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "containers":
			err = unpopulate(val, &r.Containers)
			delete(rawMsg, key)
		case "createdTime":
			err = unpopulateTimeRFC3339(val, &r.CreatedTime)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// Revision - Container App Revision.
type Revision struct {
	// Revision resource specific properties
	Properties *RevisionProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RevisionCollection - Container App Revisions collection ARM resource.
type RevisionCollection struct {
	// REQUIRED; Collection of resources.
	Value []*Revision `json:"value,omitempty"`

	// READ-ONLY; Link to next page of resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type RevisionCollection.
func (r RevisionCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", r.NextLink)
	populate(objectMap, "value", r.Value)
	return json.Marshal(objectMap)
}

// RevisionProperties - Revision resource specific properties
type RevisionProperties struct {
	// READ-ONLY; Boolean describing if the Revision is Active
	Active *bool `json:"active,omitempty" azure:"ro"`

	// READ-ONLY; Timestamp describing when the revision was created by controller
	CreatedTime *time.Time `json:"createdTime,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified domain name of the revision
	Fqdn *string `json:"fqdn,omitempty" azure:"ro"`

	// READ-ONLY; Current health State of the revision
	HealthState *RevisionHealthState `json:"healthState,omitempty" azure:"ro"`

	// READ-ONLY; Optional Field - Platform Error Message
	ProvisioningError *string `json:"provisioningError,omitempty" azure:"ro"`

	// READ-ONLY; Current provisioning State of the revision
	ProvisioningState *RevisionProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Number of pods currently running for this revision
	Replicas *int32 `json:"replicas,omitempty" azure:"ro"`

	// READ-ONLY; Container App Revision Template with all possible settings and the defaults if user did not provide them. The
	// defaults are populated as they were at the creation time
	Template *Template `json:"template,omitempty" azure:"ro"`

	// READ-ONLY; Traffic weight assigned to this revision
	TrafficWeight *int32 `json:"trafficWeight,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type RevisionProperties.
func (r RevisionProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "active", r.Active)
	populateTimeRFC3339(objectMap, "createdTime", r.CreatedTime)
	populate(objectMap, "fqdn", r.Fqdn)
	populate(objectMap, "healthState", r.HealthState)
	populate(objectMap, "provisioningError", r.ProvisioningError)
	populate(objectMap, "provisioningState", r.ProvisioningState)
	populate(objectMap, "replicas", r.Replicas)
	populate(objectMap, "template", r.Template)
	populate(objectMap, "trafficWeight", r.TrafficWeight)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type RevisionProperties.
func (r *RevisionProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "active":
			err = unpopulate(val, &r.Active)
			delete(rawMsg, key)
		case "createdTime":
			err = unpopulateTimeRFC3339(val, &r.CreatedTime)
			delete(rawMsg, key)
		case "fqdn":
			err = unpopulate(val, &r.Fqdn)
			delete(rawMsg, key)
		case "healthState":
			err = unpopulate(val, &r.HealthState)
			delete(rawMsg, key)
		case "provisioningError":
			err = unpopulate(val, &r.ProvisioningError)
			delete(rawMsg, key)
		case "provisioningState":
			err = unpopulate(val, &r.ProvisioningState)
			delete(rawMsg, key)
		case "replicas":
			err = unpopulate(val, &r.Replicas)
			delete(rawMsg, key)
		case "template":
			err = unpopulate(val, &r.Template)
			delete(rawMsg, key)
		case "trafficWeight":
			err = unpopulate(val, &r.TrafficWeight)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// Scale - Container App scaling configurations.
type Scale struct {
	// Optional. Maximum number of container replicas. Defaults to 10 if not set.
	MaxReplicas *int32 `json:"maxReplicas,omitempty"`

	// Optional. Minimum number of container replicas.
	MinReplicas *int32 `json:"minReplicas,omitempty"`

	// Scaling rules.
	Rules []*ScaleRule `json:"rules,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type Scale.
func (s Scale) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "maxReplicas", s.MaxReplicas)
	populate(objectMap, "minReplicas", s.MinReplicas)
	populate(objectMap, "rules", s.Rules)
	return json.Marshal(objectMap)
}

// ScaleRule - Container App container scaling rule.
type ScaleRule struct {
	// Azure Queue based scaling.
	AzureQueue *QueueScaleRule `json:"azureQueue,omitempty"`

	// Custom scale rule.
	Custom *CustomScaleRule `json:"custom,omitempty"`

	// HTTP requests based scaling.
	HTTP *HTTPScaleRule `json:"http,omitempty"`

	// Scale Rule Name
	Name *string `json:"name,omitempty"`
}

// ScaleRuleAuth - Auth Secrets for Container App Scale Rule
type ScaleRuleAuth struct {
	// Name of the Container App secret from which to pull the auth params.
	SecretRef *string `json:"secretRef,omitempty"`

	// Trigger Parameter that uses the secret
	TriggerParameter *string `json:"triggerParameter,omitempty"`
}

// Secret definition.
type Secret struct {
	// Secret Name.
	Name *string `json:"name,omitempty"`

	// Secret Value.
	Value *string `json:"value,omitempty"`
}

// SecretsCollection - Container App Secrets Collection ARM resource.
type SecretsCollection struct {
	// REQUIRED; Collection of resources.
	Value []*ContainerAppSecret `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SecretsCollection.
func (s SecretsCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// SourceControl - Container App SourceControl.
type SourceControl struct {
	// SourceControl resource specific properties
	Properties *SourceControlProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SourceControlCollection - SourceControl collection ARM resource.
type SourceControlCollection struct {
	// REQUIRED; Collection of resources.
	Value []*SourceControl `json:"value,omitempty"`

	// READ-ONLY; Link to next page of resources.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SourceControlCollection.
func (s SourceControlCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", s.NextLink)
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// SourceControlProperties - SourceControl resource specific properties
type SourceControlProperties struct {
	// The branch which will trigger the auto deployment
	Branch *string `json:"branch,omitempty"`

	// Container App Revision Template with all possible settings and the defaults if user did not provide them. The defaults
	// are populated as they were at the creation time
	GithubActionConfiguration *GithubActionConfiguration `json:"githubActionConfiguration,omitempty"`

	// The repo url which will be integrated to ContainerApp.
	RepoURL *string `json:"repoUrl,omitempty"`

	// READ-ONLY; Current provisioning State of the operation
	OperationState *SourceControlOperationState `json:"operationState,omitempty" azure:"ro"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populateTimeRFC3339(objectMap, "createdAt", s.CreatedAt)
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populateTimeRFC3339(objectMap, "lastModifiedAt", s.LastModifiedAt)
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &s.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			err = unpopulateTimeRFC3339(val, &s.LastModifiedAt)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// Template - Container App versioned application definition. Defines the desired state of an immutable revision. Any changes
// to this section Will result in a new revision being created
type Template struct {
	// List of container definitions for the Container App.
	Containers []*Container `json:"containers,omitempty"`

	// Dapr configuration for the Container App.
	Dapr *Dapr `json:"dapr,omitempty"`

	// User friendly suffix that is appended to the revision name
	RevisionSuffix *string `json:"revisionSuffix,omitempty"`

	// Scaling properties for the Container App.
	Scale *Scale `json:"scale,omitempty"`

	// List of volume definitions for the Container App.
	Volumes []*Volume `json:"volumes,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type Template.
func (t Template) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "containers", t.Containers)
	populate(objectMap, "dapr", t.Dapr)
	populate(objectMap, "revisionSuffix", t.RevisionSuffix)
	populate(objectMap, "scale", t.Scale)
	populate(objectMap, "volumes", t.Volumes)
	return json.Marshal(objectMap)
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type TrackedResource.
func (t TrackedResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", t.ID)
	populate(objectMap, "location", t.Location)
	populate(objectMap, "name", t.Name)
	populate(objectMap, "systemData", t.SystemData)
	populate(objectMap, "tags", t.Tags)
	populate(objectMap, "type", t.Type)
	return json.Marshal(objectMap)
}

// TrafficWeight - Traffic weight assigned to a revision
type TrafficWeight struct {
	// Indicates that the traffic weight belongs to a latest stable revision
	LatestRevision *bool `json:"latestRevision,omitempty"`

	// Name of a revision
	RevisionName *string `json:"revisionName,omitempty"`

	// Traffic weight assigned to a revision
	Weight *int32 `json:"weight,omitempty"`
}

// Twitter - The configuration settings of the Twitter provider.
type Twitter struct {
	// The configuration settings of the app registration for the Twitter provider.
	Registration *TwitterRegistration `json:"registration,omitempty"`

	// Disabled if the Twitter provider should not be enabled despite the set registration; otherwise, Enabled.
	State *IdentityProviderState `json:"state,omitempty"`
}

// TwitterRegistration - The configuration settings of the app registration for the Twitter provider.
type TwitterRegistration struct {
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in. This setting is required for enabling Twitter
	// Sign-In. Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	ConsumerKey *string `json:"consumerKey,omitempty"`

	// The app secret ref name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	ConsumerSecretRefName *string `json:"consumerSecretRefName,omitempty"`
}

// UserAssignedIdentity - User assigned identity properties
type UserAssignedIdentity struct {
	// READ-ONLY; The client ID of the assigned identity.
	ClientID *string `json:"clientId,omitempty" azure:"ro"`

	// READ-ONLY; The principal ID of the assigned identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`
}

// VnetConfiguration - Configuration properties for apps environment to join a Virtual Network
type VnetConfiguration struct {
	// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
	DockerBridgeCidr *string `json:"dockerBridgeCidr,omitempty"`

	// Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId.
	// Must not overlap with any other provided IP ranges.
	InfrastructureSubnetID *string `json:"infrastructureSubnetId,omitempty"`

	// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP
	// resource, must provide ControlPlaneSubnetResourceId and AppSubnetResourceId if
	// enabling this property
	Internal *bool `json:"internal,omitempty"`

	// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other
	// provided IP ranges.
	PlatformReservedCidr *string `json:"platformReservedCidr,omitempty"`

	// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
	PlatformReservedDNSIP *string `json:"platformReservedDnsIP,omitempty"`

	// Resource ID of a subnet that Container App containers are injected into. This subnet must be in the same VNET as the subnet
	// defined in infrastructureSubnetId. Must not overlap with any other provided
	// IP ranges.
	RuntimeSubnetID *string `json:"runtimeSubnetId,omitempty"`
}

// Volume definitions for the Container App.
type Volume struct {
	// Volume name.
	Name *string `json:"name,omitempty"`

	// Name of storage resource. No need to provide for EmptyDir.
	StorageName *string `json:"storageName,omitempty"`

	// Storage type for the volume. If not provided, use EmptyDir.
	StorageType *StorageType `json:"storageType,omitempty"`
}

// VolumeMount - Volume mount for the Container App.
type VolumeMount struct {
	// Path within the container at which the volume should be mounted.Must not contain ':'.
	MountPath *string `json:"mountPath,omitempty"`

	// This must match the Name of a Volume.
	VolumeName *string `json:"volumeName,omitempty"`
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func populateByteArray(m map[string]interface{}, k string, b []byte, f runtime.Base64Encoding) {
	if azcore.IsNullValue(b) {
		m[k] = nil
	} else if len(b) == 0 {
		return
	} else {
		m[k] = runtime.EncodeByteArray(b, f)
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
