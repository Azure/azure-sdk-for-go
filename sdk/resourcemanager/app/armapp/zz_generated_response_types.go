//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armapp

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// CertificatesClientCreateOrUpdateResponse contains the response from method CertificatesClient.CreateOrUpdate.
type CertificatesClientCreateOrUpdateResponse struct {
	CertificatesClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesClientCreateOrUpdateResult contains the result from method CertificatesClient.CreateOrUpdate.
type CertificatesClientCreateOrUpdateResult struct {
	Certificate
}

// CertificatesClientDeleteResponse contains the response from method CertificatesClient.Delete.
type CertificatesClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesClientGetResponse contains the response from method CertificatesClient.Get.
type CertificatesClientGetResponse struct {
	CertificatesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesClientGetResult contains the result from method CertificatesClient.Get.
type CertificatesClientGetResult struct {
	Certificate
}

// CertificatesClientListResponse contains the response from method CertificatesClient.List.
type CertificatesClientListResponse struct {
	CertificatesClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesClientListResult contains the result from method CertificatesClient.List.
type CertificatesClientListResult struct {
	CertificateCollection
}

// CertificatesClientUpdateResponse contains the response from method CertificatesClient.Update.
type CertificatesClientUpdateResponse struct {
	CertificatesClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesClientUpdateResult contains the result from method CertificatesClient.Update.
type CertificatesClientUpdateResult struct {
	Certificate
}

// ContainerAppsAuthConfigsClientCreateOrUpdateResponse contains the response from method ContainerAppsAuthConfigsClient.CreateOrUpdate.
type ContainerAppsAuthConfigsClientCreateOrUpdateResponse struct {
	ContainerAppsAuthConfigsClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsAuthConfigsClientCreateOrUpdateResult contains the result from method ContainerAppsAuthConfigsClient.CreateOrUpdate.
type ContainerAppsAuthConfigsClientCreateOrUpdateResult struct {
	AuthConfig
}

// ContainerAppsAuthConfigsClientDeleteResponse contains the response from method ContainerAppsAuthConfigsClient.Delete.
type ContainerAppsAuthConfigsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsAuthConfigsClientGetResponse contains the response from method ContainerAppsAuthConfigsClient.Get.
type ContainerAppsAuthConfigsClientGetResponse struct {
	ContainerAppsAuthConfigsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsAuthConfigsClientGetResult contains the result from method ContainerAppsAuthConfigsClient.Get.
type ContainerAppsAuthConfigsClientGetResult struct {
	AuthConfig
}

// ContainerAppsAuthConfigsClientListByContainerAppResponse contains the response from method ContainerAppsAuthConfigsClient.ListByContainerApp.
type ContainerAppsAuthConfigsClientListByContainerAppResponse struct {
	ContainerAppsAuthConfigsClientListByContainerAppResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsAuthConfigsClientListByContainerAppResult contains the result from method ContainerAppsAuthConfigsClient.ListByContainerApp.
type ContainerAppsAuthConfigsClientListByContainerAppResult struct {
	AuthConfigCollection
}

// ContainerAppsClientCreateOrUpdatePollerResponse contains the response from method ContainerAppsClient.CreateOrUpdate.
type ContainerAppsClientCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ContainerAppsClientCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ContainerAppsClientCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ContainerAppsClientCreateOrUpdateResponse, error) {
	respType := ContainerAppsClientCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.ContainerApp)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ContainerAppsClientCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *ContainerAppsClientCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *ContainerAppsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ContainerAppsClient.CreateOrUpdate", token, client.pl)
	if err != nil {
		return err
	}
	poller := &ContainerAppsClientCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ContainerAppsClientCreateOrUpdateResponse contains the response from method ContainerAppsClient.CreateOrUpdate.
type ContainerAppsClientCreateOrUpdateResponse struct {
	ContainerAppsClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientCreateOrUpdateResult contains the result from method ContainerAppsClient.CreateOrUpdate.
type ContainerAppsClientCreateOrUpdateResult struct {
	ContainerApp
}

// ContainerAppsClientDeletePollerResponse contains the response from method ContainerAppsClient.Delete.
type ContainerAppsClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ContainerAppsClientDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ContainerAppsClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ContainerAppsClientDeleteResponse, error) {
	respType := ContainerAppsClientDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ContainerAppsClientDeletePollerResponse from the provided client and resume token.
func (l *ContainerAppsClientDeletePollerResponse) Resume(ctx context.Context, client *ContainerAppsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ContainerAppsClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &ContainerAppsClientDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ContainerAppsClientDeleteResponse contains the response from method ContainerAppsClient.Delete.
type ContainerAppsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientGetResponse contains the response from method ContainerAppsClient.Get.
type ContainerAppsClientGetResponse struct {
	ContainerAppsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientGetResult contains the result from method ContainerAppsClient.Get.
type ContainerAppsClientGetResult struct {
	ContainerApp
}

// ContainerAppsClientListByResourceGroupResponse contains the response from method ContainerAppsClient.ListByResourceGroup.
type ContainerAppsClientListByResourceGroupResponse struct {
	ContainerAppsClientListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientListByResourceGroupResult contains the result from method ContainerAppsClient.ListByResourceGroup.
type ContainerAppsClientListByResourceGroupResult struct {
	ContainerAppCollection
}

// ContainerAppsClientListBySubscriptionResponse contains the response from method ContainerAppsClient.ListBySubscription.
type ContainerAppsClientListBySubscriptionResponse struct {
	ContainerAppsClientListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientListBySubscriptionResult contains the result from method ContainerAppsClient.ListBySubscription.
type ContainerAppsClientListBySubscriptionResult struct {
	ContainerAppCollection
}

// ContainerAppsClientListCustomHostNameAnalysisResponse contains the response from method ContainerAppsClient.ListCustomHostNameAnalysis.
type ContainerAppsClientListCustomHostNameAnalysisResponse struct {
	ContainerAppsClientListCustomHostNameAnalysisResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientListCustomHostNameAnalysisResult contains the result from method ContainerAppsClient.ListCustomHostNameAnalysis.
type ContainerAppsClientListCustomHostNameAnalysisResult struct {
	CustomHostnameAnalysisResult
}

// ContainerAppsClientListSecretsResponse contains the response from method ContainerAppsClient.ListSecrets.
type ContainerAppsClientListSecretsResponse struct {
	ContainerAppsClientListSecretsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientListSecretsResult contains the result from method ContainerAppsClient.ListSecrets.
type ContainerAppsClientListSecretsResult struct {
	SecretsCollection
}

// ContainerAppsClientUpdateResponse contains the response from method ContainerAppsClient.Update.
type ContainerAppsClientUpdateResponse struct {
	ContainerAppsClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsClientUpdateResult contains the result from method ContainerAppsClient.Update.
type ContainerAppsClientUpdateResult struct {
	ContainerApp
}

// ContainerAppsRevisionReplicasClientGetReplicaResponse contains the response from method ContainerAppsRevisionReplicasClient.GetReplica.
type ContainerAppsRevisionReplicasClientGetReplicaResponse struct {
	ContainerAppsRevisionReplicasClientGetReplicaResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsRevisionReplicasClientGetReplicaResult contains the result from method ContainerAppsRevisionReplicasClient.GetReplica.
type ContainerAppsRevisionReplicasClientGetReplicaResult struct {
	Replica
}

// ContainerAppsRevisionReplicasClientListReplicasResponse contains the response from method ContainerAppsRevisionReplicasClient.ListReplicas.
type ContainerAppsRevisionReplicasClientListReplicasResponse struct {
	ContainerAppsRevisionReplicasClientListReplicasResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsRevisionReplicasClientListReplicasResult contains the result from method ContainerAppsRevisionReplicasClient.ListReplicas.
type ContainerAppsRevisionReplicasClientListReplicasResult struct {
	ReplicaCollection
}

// ContainerAppsRevisionsClientActivateRevisionResponse contains the response from method ContainerAppsRevisionsClient.ActivateRevision.
type ContainerAppsRevisionsClientActivateRevisionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsRevisionsClientDeactivateRevisionResponse contains the response from method ContainerAppsRevisionsClient.DeactivateRevision.
type ContainerAppsRevisionsClientDeactivateRevisionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsRevisionsClientGetRevisionResponse contains the response from method ContainerAppsRevisionsClient.GetRevision.
type ContainerAppsRevisionsClientGetRevisionResponse struct {
	ContainerAppsRevisionsClientGetRevisionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsRevisionsClientGetRevisionResult contains the result from method ContainerAppsRevisionsClient.GetRevision.
type ContainerAppsRevisionsClientGetRevisionResult struct {
	Revision
}

// ContainerAppsRevisionsClientListRevisionsResponse contains the response from method ContainerAppsRevisionsClient.ListRevisions.
type ContainerAppsRevisionsClientListRevisionsResponse struct {
	ContainerAppsRevisionsClientListRevisionsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsRevisionsClientListRevisionsResult contains the result from method ContainerAppsRevisionsClient.ListRevisions.
type ContainerAppsRevisionsClientListRevisionsResult struct {
	RevisionCollection
}

// ContainerAppsRevisionsClientRestartRevisionResponse contains the response from method ContainerAppsRevisionsClient.RestartRevision.
type ContainerAppsRevisionsClientRestartRevisionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsSourceControlsClientCreateOrUpdatePollerResponse contains the response from method ContainerAppsSourceControlsClient.CreateOrUpdate.
type ContainerAppsSourceControlsClientCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ContainerAppsSourceControlsClientCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ContainerAppsSourceControlsClientCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ContainerAppsSourceControlsClientCreateOrUpdateResponse, error) {
	respType := ContainerAppsSourceControlsClientCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.SourceControl)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ContainerAppsSourceControlsClientCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *ContainerAppsSourceControlsClientCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *ContainerAppsSourceControlsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ContainerAppsSourceControlsClient.CreateOrUpdate", token, client.pl)
	if err != nil {
		return err
	}
	poller := &ContainerAppsSourceControlsClientCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ContainerAppsSourceControlsClientCreateOrUpdateResponse contains the response from method ContainerAppsSourceControlsClient.CreateOrUpdate.
type ContainerAppsSourceControlsClientCreateOrUpdateResponse struct {
	ContainerAppsSourceControlsClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsSourceControlsClientCreateOrUpdateResult contains the result from method ContainerAppsSourceControlsClient.CreateOrUpdate.
type ContainerAppsSourceControlsClientCreateOrUpdateResult struct {
	SourceControl
}

// ContainerAppsSourceControlsClientDeletePollerResponse contains the response from method ContainerAppsSourceControlsClient.Delete.
type ContainerAppsSourceControlsClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ContainerAppsSourceControlsClientDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ContainerAppsSourceControlsClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ContainerAppsSourceControlsClientDeleteResponse, error) {
	respType := ContainerAppsSourceControlsClientDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ContainerAppsSourceControlsClientDeletePollerResponse from the provided client and resume token.
func (l *ContainerAppsSourceControlsClientDeletePollerResponse) Resume(ctx context.Context, client *ContainerAppsSourceControlsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ContainerAppsSourceControlsClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &ContainerAppsSourceControlsClientDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ContainerAppsSourceControlsClientDeleteResponse contains the response from method ContainerAppsSourceControlsClient.Delete.
type ContainerAppsSourceControlsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsSourceControlsClientGetResponse contains the response from method ContainerAppsSourceControlsClient.Get.
type ContainerAppsSourceControlsClientGetResponse struct {
	ContainerAppsSourceControlsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsSourceControlsClientGetResult contains the result from method ContainerAppsSourceControlsClient.Get.
type ContainerAppsSourceControlsClientGetResult struct {
	SourceControl
}

// ContainerAppsSourceControlsClientListByContainerAppResponse contains the response from method ContainerAppsSourceControlsClient.ListByContainerApp.
type ContainerAppsSourceControlsClientListByContainerAppResponse struct {
	ContainerAppsSourceControlsClientListByContainerAppResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ContainerAppsSourceControlsClientListByContainerAppResult contains the result from method ContainerAppsSourceControlsClient.ListByContainerApp.
type ContainerAppsSourceControlsClientListByContainerAppResult struct {
	SourceControlCollection
}

// DaprComponentsClientCreateOrUpdateResponse contains the response from method DaprComponentsClient.CreateOrUpdate.
type DaprComponentsClientCreateOrUpdateResponse struct {
	DaprComponentsClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DaprComponentsClientCreateOrUpdateResult contains the result from method DaprComponentsClient.CreateOrUpdate.
type DaprComponentsClientCreateOrUpdateResult struct {
	DaprComponent
}

// DaprComponentsClientDeleteResponse contains the response from method DaprComponentsClient.Delete.
type DaprComponentsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DaprComponentsClientGetResponse contains the response from method DaprComponentsClient.Get.
type DaprComponentsClientGetResponse struct {
	DaprComponentsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DaprComponentsClientGetResult contains the result from method DaprComponentsClient.Get.
type DaprComponentsClientGetResult struct {
	DaprComponent
}

// DaprComponentsClientListResponse contains the response from method DaprComponentsClient.List.
type DaprComponentsClientListResponse struct {
	DaprComponentsClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DaprComponentsClientListResult contains the result from method DaprComponentsClient.List.
type DaprComponentsClientListResult struct {
	DaprComponentsCollection
}

// ManagedEnvironmentsClientCreateOrUpdatePollerResponse contains the response from method ManagedEnvironmentsClient.CreateOrUpdate.
type ManagedEnvironmentsClientCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ManagedEnvironmentsClientCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ManagedEnvironmentsClientCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ManagedEnvironmentsClientCreateOrUpdateResponse, error) {
	respType := ManagedEnvironmentsClientCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.ManagedEnvironment)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ManagedEnvironmentsClientCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *ManagedEnvironmentsClientCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *ManagedEnvironmentsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ManagedEnvironmentsClient.CreateOrUpdate", token, client.pl)
	if err != nil {
		return err
	}
	poller := &ManagedEnvironmentsClientCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ManagedEnvironmentsClientCreateOrUpdateResponse contains the response from method ManagedEnvironmentsClient.CreateOrUpdate.
type ManagedEnvironmentsClientCreateOrUpdateResponse struct {
	ManagedEnvironmentsClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsClientCreateOrUpdateResult contains the result from method ManagedEnvironmentsClient.CreateOrUpdate.
type ManagedEnvironmentsClientCreateOrUpdateResult struct {
	ManagedEnvironment
}

// ManagedEnvironmentsClientDeletePollerResponse contains the response from method ManagedEnvironmentsClient.Delete.
type ManagedEnvironmentsClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ManagedEnvironmentsClientDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ManagedEnvironmentsClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ManagedEnvironmentsClientDeleteResponse, error) {
	respType := ManagedEnvironmentsClientDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ManagedEnvironmentsClientDeletePollerResponse from the provided client and resume token.
func (l *ManagedEnvironmentsClientDeletePollerResponse) Resume(ctx context.Context, client *ManagedEnvironmentsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ManagedEnvironmentsClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &ManagedEnvironmentsClientDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ManagedEnvironmentsClientDeleteResponse contains the response from method ManagedEnvironmentsClient.Delete.
type ManagedEnvironmentsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsClientGetResponse contains the response from method ManagedEnvironmentsClient.Get.
type ManagedEnvironmentsClientGetResponse struct {
	ManagedEnvironmentsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsClientGetResult contains the result from method ManagedEnvironmentsClient.Get.
type ManagedEnvironmentsClientGetResult struct {
	ManagedEnvironment
}

// ManagedEnvironmentsClientListByResourceGroupResponse contains the response from method ManagedEnvironmentsClient.ListByResourceGroup.
type ManagedEnvironmentsClientListByResourceGroupResponse struct {
	ManagedEnvironmentsClientListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsClientListByResourceGroupResult contains the result from method ManagedEnvironmentsClient.ListByResourceGroup.
type ManagedEnvironmentsClientListByResourceGroupResult struct {
	ManagedEnvironmentsCollection
}

// ManagedEnvironmentsClientListBySubscriptionResponse contains the response from method ManagedEnvironmentsClient.ListBySubscription.
type ManagedEnvironmentsClientListBySubscriptionResponse struct {
	ManagedEnvironmentsClientListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsClientListBySubscriptionResult contains the result from method ManagedEnvironmentsClient.ListBySubscription.
type ManagedEnvironmentsClientListBySubscriptionResult struct {
	ManagedEnvironmentsCollection
}

// ManagedEnvironmentsClientUpdateResponse contains the response from method ManagedEnvironmentsClient.Update.
type ManagedEnvironmentsClientUpdateResponse struct {
	ManagedEnvironmentsClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsClientUpdateResult contains the result from method ManagedEnvironmentsClient.Update.
type ManagedEnvironmentsClientUpdateResult struct {
	ManagedEnvironment
}

// ManagedEnvironmentsStoragesClientCreateOrUpdateResponse contains the response from method ManagedEnvironmentsStoragesClient.CreateOrUpdate.
type ManagedEnvironmentsStoragesClientCreateOrUpdateResponse struct {
	ManagedEnvironmentsStoragesClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsStoragesClientCreateOrUpdateResult contains the result from method ManagedEnvironmentsStoragesClient.CreateOrUpdate.
type ManagedEnvironmentsStoragesClientCreateOrUpdateResult struct {
	ManagedEnvironmentStorage
}

// ManagedEnvironmentsStoragesClientDeleteResponse contains the response from method ManagedEnvironmentsStoragesClient.Delete.
type ManagedEnvironmentsStoragesClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsStoragesClientGetResponse contains the response from method ManagedEnvironmentsStoragesClient.Get.
type ManagedEnvironmentsStoragesClientGetResponse struct {
	ManagedEnvironmentsStoragesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsStoragesClientGetResult contains the result from method ManagedEnvironmentsStoragesClient.Get.
type ManagedEnvironmentsStoragesClientGetResult struct {
	ManagedEnvironmentStorage
}

// ManagedEnvironmentsStoragesClientListResponse contains the response from method ManagedEnvironmentsStoragesClient.List.
type ManagedEnvironmentsStoragesClientListResponse struct {
	ManagedEnvironmentsStoragesClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ManagedEnvironmentsStoragesClientListResult contains the result from method ManagedEnvironmentsStoragesClient.List.
type ManagedEnvironmentsStoragesClientListResult struct {
	ManagedEnvironmentStoragesCollection
}

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationsClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsClientListResult contains the result from method OperationsClient.List.
type OperationsClientListResult struct {
	AvailableOperations
}
