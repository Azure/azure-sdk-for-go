//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armapplicationinsights

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
	"time"
)

// APIKeyRequest - An Application Insights component API Key creation request definition.
type APIKeyRequest struct {
	// The read access rights of this API Key.
	LinkedReadProperties []*string `json:"linkedReadProperties,omitempty"`

	// The write access rights of this API Key.
	LinkedWriteProperties []*string `json:"linkedWriteProperties,omitempty"`

	// The name of the API Key.
	Name *string `json:"name,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type APIKeyRequest.
func (a APIKeyRequest) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "linkedReadProperties", a.LinkedReadProperties)
	populate(objectMap, "linkedWriteProperties", a.LinkedWriteProperties)
	populate(objectMap, "name", a.Name)
	return json.Marshal(objectMap)
}

// APIKeysCreateOptions contains the optional parameters for the APIKeys.Create method.
type APIKeysCreateOptions struct {
	// placeholder for future optional parameters
}

// APIKeysDeleteOptions contains the optional parameters for the APIKeys.Delete method.
type APIKeysDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIKeysGetOptions contains the optional parameters for the APIKeys.Get method.
type APIKeysGetOptions struct {
	// placeholder for future optional parameters
}

// APIKeysListOptions contains the optional parameters for the APIKeys.List method.
type APIKeysListOptions struct {
	// placeholder for future optional parameters
}

// AnalyticsItemsDeleteOptions contains the optional parameters for the AnalyticsItems.Delete method.
type AnalyticsItemsDeleteOptions struct {
	// The Id of a specific item defined in the Application Insights component
	ID *string
	// The name of a specific item defined in the Application Insights component
	Name *string
}

// AnalyticsItemsGetOptions contains the optional parameters for the AnalyticsItems.Get method.
type AnalyticsItemsGetOptions struct {
	// The Id of a specific item defined in the Application Insights component
	ID *string
	// The name of a specific item defined in the Application Insights component
	Name *string
}

// AnalyticsItemsListOptions contains the optional parameters for the AnalyticsItems.List method.
type AnalyticsItemsListOptions struct {
	// Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.
	IncludeContent *bool
	// Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Scope *ItemScope
	// Enum indicating the type of the Analytics item.
	Type *ItemTypeParameter
}

// AnalyticsItemsPutOptions contains the optional parameters for the AnalyticsItems.Put method.
type AnalyticsItemsPutOptions struct {
	// Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.
	OverrideItem *bool
}

// Annotation associated with an application insights resource.
type Annotation struct {
	// Name of annotation
	AnnotationName *string `json:"AnnotationName,omitempty"`

	// Category of annotation, free form
	Category *string `json:"Category,omitempty"`

	// Time when event occurred
	EventTime *time.Time `json:"EventTime,omitempty"`

	// Unique Id for annotation
	ID *string `json:"Id,omitempty"`

	// Serialized JSON object for detailed properties
	Properties *string `json:"Properties,omitempty"`

	// Related parent annotation if any
	RelatedAnnotation *string `json:"RelatedAnnotation,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type Annotation.
func (a Annotation) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "AnnotationName", a.AnnotationName)
	populate(objectMap, "Category", a.Category)
	populateTimeRFC3339(objectMap, "EventTime", a.EventTime)
	populate(objectMap, "Id", a.ID)
	populate(objectMap, "Properties", a.Properties)
	populate(objectMap, "RelatedAnnotation", a.RelatedAnnotation)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type Annotation.
func (a *Annotation) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "AnnotationName":
			err = unpopulate(val, &a.AnnotationName)
			delete(rawMsg, key)
		case "Category":
			err = unpopulate(val, &a.Category)
			delete(rawMsg, key)
		case "EventTime":
			err = unpopulateTimeRFC3339(val, &a.EventTime)
			delete(rawMsg, key)
		case "Id":
			err = unpopulate(val, &a.ID)
			delete(rawMsg, key)
		case "Properties":
			err = unpopulate(val, &a.Properties)
			delete(rawMsg, key)
		case "RelatedAnnotation":
			err = unpopulate(val, &a.RelatedAnnotation)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// AnnotationError - Error associated with trying to create annotation with Id that already exist
// Implements the error and azcore.HTTPResponse interfaces.
type AnnotationError struct {
	raw string
	// Error detail code and explanation
	Code *string `json:"code,omitempty"`

	// Inner error
	Innererror *InnerError `json:"innererror,omitempty"`

	// Error message
	Message *string `json:"message,omitempty"`
}

// Error implements the error interface for type AnnotationError.
// The contents of the error text are not contractual and subject to change.
func (e AnnotationError) Error() string {
	return e.raw
}

// AnnotationsCreateOptions contains the optional parameters for the Annotations.Create method.
type AnnotationsCreateOptions struct {
	// placeholder for future optional parameters
}

// AnnotationsDeleteOptions contains the optional parameters for the Annotations.Delete method.
type AnnotationsDeleteOptions struct {
	// placeholder for future optional parameters
}

// AnnotationsGetOptions contains the optional parameters for the Annotations.Get method.
type AnnotationsGetOptions struct {
	// placeholder for future optional parameters
}

// AnnotationsListOptions contains the optional parameters for the Annotations.List method.
type AnnotationsListOptions struct {
	// placeholder for future optional parameters
}

// AnnotationsListResult - Annotations list result.
type AnnotationsListResult struct {
	// READ-ONLY; An array of annotations.
	Value []*Annotation `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AnnotationsListResult.
func (a AnnotationsListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponent - An Application Insights component definition.
type ApplicationInsightsComponent struct {
	ComponentsResource
	// REQUIRED; The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one
	// of the following: web, ios, other, store, java, phone.
	Kind *string `json:"kind,omitempty"`

	// Properties that define an Application Insights component resource.
	Properties *ApplicationInsightsComponentProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponent.
func (a ApplicationInsightsComponent) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	a.ComponentsResource.marshalInternal(objectMap)
	populate(objectMap, "kind", a.Kind)
	populate(objectMap, "properties", a.Properties)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentAPIKey - Properties that define an API key of an Application Insights Component.
type ApplicationInsightsComponentAPIKey struct {
	// The create date of this API key.
	CreatedDate *string `json:"createdDate,omitempty"`

	// The read access rights of this API Key.
	LinkedReadProperties []*string `json:"linkedReadProperties,omitempty"`

	// The write access rights of this API Key.
	LinkedWriteProperties []*string `json:"linkedWriteProperties,omitempty"`

	// The name of the API key.
	Name *string `json:"name,omitempty"`

	// READ-ONLY; The API key value. It will be only return once when the API Key was created.
	APIKey *string `json:"apiKey,omitempty" azure:"ro"`

	// READ-ONLY; The unique ID of the API key inside an Application Insights component. It is auto generated when the API key is created.
	ID *string `json:"id,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentAPIKey.
func (a ApplicationInsightsComponentAPIKey) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "apiKey", a.APIKey)
	populate(objectMap, "createdDate", a.CreatedDate)
	populate(objectMap, "id", a.ID)
	populate(objectMap, "linkedReadProperties", a.LinkedReadProperties)
	populate(objectMap, "linkedWriteProperties", a.LinkedWriteProperties)
	populate(objectMap, "name", a.Name)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentAPIKeyListResult - Describes the list of API Keys of an Application Insights Component.
type ApplicationInsightsComponentAPIKeyListResult struct {
	// REQUIRED; List of API Key definitions.
	Value []*ApplicationInsightsComponentAPIKey `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentAPIKeyListResult.
func (a ApplicationInsightsComponentAPIKeyListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentAnalyticsItem - Properties that define an Analytics item that is associated to an Application Insights component.
type ApplicationInsightsComponentAnalyticsItem struct {
	// The content of this item
	Content *string `json:"Content,omitempty"`

	// Internally assigned unique id of the item definition.
	ID *string `json:"Id,omitempty"`

	// The user-defined name of the item.
	Name *string `json:"Name,omitempty"`

	// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
	Properties *ApplicationInsightsComponentAnalyticsItemProperties `json:"Properties,omitempty"`

	// Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	Scope *ItemScope `json:"Scope,omitempty"`

	// Enum indicating the type of the Analytics item.
	Type *ItemType `json:"Type,omitempty"`

	// READ-ONLY; Date and time in UTC when this item was created.
	TimeCreated *string `json:"TimeCreated,omitempty" azure:"ro"`

	// READ-ONLY; Date and time in UTC of the last modification that was made to this item.
	TimeModified *string `json:"TimeModified,omitempty" azure:"ro"`

	// READ-ONLY; This instance's version of the data model. This can change as new features are added.
	Version *string `json:"Version,omitempty" azure:"ro"`
}

// ApplicationInsightsComponentAnalyticsItemProperties - A set of properties that can be defined in the context of a specific item type. Each type may have
// its own properties.
type ApplicationInsightsComponentAnalyticsItemProperties struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias *string `json:"functionAlias,omitempty"`
}

// ApplicationInsightsComponentAvailableFeatures - An Application Insights component available features.
type ApplicationInsightsComponentAvailableFeatures struct {
	// READ-ONLY; A list of Application Insights component feature.
	Result []*ApplicationInsightsComponentFeature `json:"Result,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentAvailableFeatures.
func (a ApplicationInsightsComponentAvailableFeatures) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "Result", a.Result)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentBillingFeatures - An Application Insights component billing features
type ApplicationInsightsComponentBillingFeatures struct {
	// Current enabled pricing plan. When the component is in the Enterprise plan, this will list both 'Basic' and 'Application Insights Enterprise'.
	CurrentBillingFeatures []*string `json:"CurrentBillingFeatures,omitempty"`

	// An Application Insights component daily data volume cap
	DataVolumeCap *ApplicationInsightsComponentDataVolumeCap `json:"DataVolumeCap,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentBillingFeatures.
func (a ApplicationInsightsComponentBillingFeatures) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "CurrentBillingFeatures", a.CurrentBillingFeatures)
	populate(objectMap, "DataVolumeCap", a.DataVolumeCap)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentDataVolumeCap - An Application Insights component daily data volume cap
type ApplicationInsightsComponentDataVolumeCap struct {
	// Daily data volume cap in GB.
	Cap *float32 `json:"Cap,omitempty"`

	// Do not send a notification email when the daily data volume cap is met.
	StopSendNotificationWhenHitCap *bool `json:"StopSendNotificationWhenHitCap,omitempty"`

	// Reserved, not used for now.
	StopSendNotificationWhenHitThreshold *bool `json:"StopSendNotificationWhenHitThreshold,omitempty"`

	// Reserved, not used for now.
	WarningThreshold *int32 `json:"WarningThreshold,omitempty"`

	// READ-ONLY; Maximum daily data volume cap that the user can set for this component.
	MaxHistoryCap *float32 `json:"MaxHistoryCap,omitempty" azure:"ro"`

	// READ-ONLY; Daily data volume cap UTC reset hour.
	ResetTime *int32 `json:"ResetTime,omitempty" azure:"ro"`
}

// ApplicationInsightsComponentExportConfiguration - Properties that define a Continuous Export configuration.
type ApplicationInsightsComponentExportConfiguration struct {
	// Deprecated
	NotificationQueueEnabled *string `json:"NotificationQueueEnabled,omitempty"`

	// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews',
	// 'PageViewPerformance', 'Rdd',
	// 'PerformanceCounters', 'Availability', 'Messages'.
	RecordTypes *string `json:"RecordTypes,omitempty"`

	// READ-ONLY; The name of the Application Insights component.
	ApplicationName *string `json:"ApplicationName,omitempty" azure:"ro"`

	// READ-ONLY; The name of the destination storage container.
	ContainerName *string `json:"ContainerName,omitempty" azure:"ro"`

	// READ-ONLY; The name of destination account.
	DestinationAccountID *string `json:"DestinationAccountId,omitempty" azure:"ro"`

	// READ-ONLY; The destination account location ID.
	DestinationStorageLocationID *string `json:"DestinationStorageLocationId,omitempty" azure:"ro"`

	// READ-ONLY; The destination storage account subscription ID.
	DestinationStorageSubscriptionID *string `json:"DestinationStorageSubscriptionId,omitempty" azure:"ro"`

	// READ-ONLY; The destination type.
	DestinationType *string `json:"DestinationType,omitempty" azure:"ro"`

	// READ-ONLY; The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration
	// is created.
	ExportID *string `json:"ExportId,omitempty" azure:"ro"`

	// READ-ONLY; This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
	ExportStatus *string `json:"ExportStatus,omitempty" azure:"ro"`

	// READ-ONLY; The instrumentation key of the Application Insights component.
	InstrumentationKey *string `json:"InstrumentationKey,omitempty" azure:"ro"`

	// READ-ONLY; This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
	IsUserEnabled *string `json:"IsUserEnabled,omitempty" azure:"ro"`

	// READ-ONLY; The last time the Continuous Export configuration started failing.
	LastGapTime *string `json:"LastGapTime,omitempty" azure:"ro"`

	// READ-ONLY; The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
	LastSuccessTime *string `json:"LastSuccessTime,omitempty" azure:"ro"`

	// READ-ONLY; Last time the Continuous Export configuration was updated.
	LastUserUpdate *string `json:"LastUserUpdate,omitempty" azure:"ro"`

	// READ-ONLY; This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
	PermanentErrorReason *string `json:"PermanentErrorReason,omitempty" azure:"ro"`

	// READ-ONLY; The resource group of the Application Insights component.
	ResourceGroup *string `json:"ResourceGroup,omitempty" azure:"ro"`

	// READ-ONLY; The name of the destination storage account.
	StorageName *string `json:"StorageName,omitempty" azure:"ro"`

	// READ-ONLY; The subscription of the Application Insights component.
	SubscriptionID *string `json:"SubscriptionId,omitempty" azure:"ro"`
}

// ApplicationInsightsComponentExportRequest - An Application Insights component Continuous Export configuration request definition.
type ApplicationInsightsComponentExportRequest struct {
	// The name of destination storage account.
	DestinationAccountID *string `json:"DestinationAccountId,omitempty"`

	// The SAS URL for the destination storage container. It must grant write permission.
	DestinationAddress *string `json:"DestinationAddress,omitempty"`

	// The location ID of the destination storage container.
	DestinationStorageLocationID *string `json:"DestinationStorageLocationId,omitempty"`

	// The subscription ID of the destination storage container.
	DestinationStorageSubscriptionID *string `json:"DestinationStorageSubscriptionId,omitempty"`

	// The Continuous Export destination type. This has to be 'Blob'.
	DestinationType *string `json:"DestinationType,omitempty"`

	// Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'.
	IsEnabled *string `json:"IsEnabled,omitempty"`

	// Deprecated
	NotificationQueueEnabled *string `json:"NotificationQueueEnabled,omitempty"`

	// Deprecated
	NotificationQueueURI *string `json:"NotificationQueueUri,omitempty"`

	// The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance',
	// 'Rdd', 'PerformanceCounters',
	// 'Availability', 'Messages'.
	RecordTypes *string `json:"RecordTypes,omitempty"`
}

// ApplicationInsightsComponentFavorite - Properties that define a favorite that is associated to an Application Insights component.
type ApplicationInsightsComponentFavorite struct {
	// Favorite category, as defined by the user at creation time.
	Category *string `json:"Category,omitempty"`

	// Configuration of this particular favorite, which are driven by the Azure portal UX. Configuration data is a string containing valid JSON
	Config *string `json:"Config,omitempty"`

	// Enum indicating if this favorite definition is owned by a specific user or is shared between all users with access to the Application Insights component.
	FavoriteType *FavoriteType `json:"FavoriteType,omitempty"`

	// Flag denoting wether or not this favorite was generated from a template.
	IsGeneratedFromTemplate *bool `json:"IsGeneratedFromTemplate,omitempty"`

	// The user-defined name of the favorite.
	Name *string `json:"Name,omitempty"`

	// The source of the favorite definition.
	SourceType *string `json:"SourceType,omitempty"`

	// A list of 0 or more tags that are associated with this favorite definition
	Tags []*string `json:"Tags,omitempty"`

	// This instance's version of the data model. This can change as new features are added that can be marked favorite. Current examples include MetricsExplorer
	// (ME) and Search.
	Version *string `json:"Version,omitempty"`

	// READ-ONLY; Internally assigned unique id of the favorite definition.
	FavoriteID *string `json:"FavoriteId,omitempty" azure:"ro"`

	// READ-ONLY; Date and time in UTC of the last modification that was made to this favorite definition.
	TimeModified *string `json:"TimeModified,omitempty" azure:"ro"`

	// READ-ONLY; Unique user id of the specific user that owns this favorite.
	UserID *string `json:"UserId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentFavorite.
func (a ApplicationInsightsComponentFavorite) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "Category", a.Category)
	populate(objectMap, "Config", a.Config)
	populate(objectMap, "FavoriteId", a.FavoriteID)
	populate(objectMap, "FavoriteType", a.FavoriteType)
	populate(objectMap, "IsGeneratedFromTemplate", a.IsGeneratedFromTemplate)
	populate(objectMap, "Name", a.Name)
	populate(objectMap, "SourceType", a.SourceType)
	populate(objectMap, "Tags", a.Tags)
	populate(objectMap, "TimeModified", a.TimeModified)
	populate(objectMap, "UserId", a.UserID)
	populate(objectMap, "Version", a.Version)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentFeature - An Application Insights component daily data volume cap status
type ApplicationInsightsComponentFeature struct {
	// READ-ONLY; A list of Application Insights component feature capability.
	Capabilities []*ApplicationInsightsComponentFeatureCapability `json:"Capabilities,omitempty" azure:"ro"`

	// READ-ONLY; The pricing feature name.
	FeatureName *string `json:"FeatureName,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	IsHidden *bool `json:"IsHidden,omitempty" azure:"ro"`

	// READ-ONLY; Whether can apply addon feature on to it.
	IsMainFeature *bool `json:"IsMainFeature,omitempty" azure:"ro"`

	// READ-ONLY; The meter id used for the feature.
	MeterID *string `json:"MeterId,omitempty" azure:"ro"`

	// READ-ONLY; The meter rate for the feature's meter.
	MeterRateFrequency *string `json:"MeterRateFrequency,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	ResouceID *string `json:"ResouceId,omitempty" azure:"ro"`

	// READ-ONLY; The add on features on main feature.
	SupportedAddonFeatures *string `json:"SupportedAddonFeatures,omitempty" azure:"ro"`

	// READ-ONLY; Display name of the feature.
	Title *string `json:"Title,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentFeature.
func (a ApplicationInsightsComponentFeature) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "Capabilities", a.Capabilities)
	populate(objectMap, "FeatureName", a.FeatureName)
	populate(objectMap, "IsHidden", a.IsHidden)
	populate(objectMap, "IsMainFeature", a.IsMainFeature)
	populate(objectMap, "MeterId", a.MeterID)
	populate(objectMap, "MeterRateFrequency", a.MeterRateFrequency)
	populate(objectMap, "ResouceId", a.ResouceID)
	populate(objectMap, "SupportedAddonFeatures", a.SupportedAddonFeatures)
	populate(objectMap, "Title", a.Title)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentFeatureCapabilities - An Application Insights component feature capabilities
type ApplicationInsightsComponentFeatureCapabilities struct {
	// READ-ONLY; Reserved, not used now.
	APIAccessLevel *string `json:"ApiAccessLevel,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	AnalyticsIntegration *bool `json:"AnalyticsIntegration,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	ApplicationMap *bool `json:"ApplicationMap,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	BurstThrottlePolicy *string `json:"BurstThrottlePolicy,omitempty" azure:"ro"`

	// READ-ONLY; Daily data volume cap in GB.
	DailyCap *float32 `json:"DailyCap,omitempty" azure:"ro"`

	// READ-ONLY; Daily data volume cap UTC reset hour.
	DailyCapResetTime *float32 `json:"DailyCapResetTime,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	LiveStreamMetrics *bool `json:"LiveStreamMetrics,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	MetadataClass *string `json:"MetadataClass,omitempty" azure:"ro"`

	// READ-ONLY; Whether allow to use multiple steps web test feature.
	MultipleStepWebTest *bool `json:"MultipleStepWebTest,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	OpenSchema *bool `json:"OpenSchema,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	PowerBIIntegration *bool `json:"PowerBIIntegration,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	ProactiveDetection *bool `json:"ProactiveDetection,omitempty" azure:"ro"`

	// READ-ONLY; Whether allow to use continuous export feature.
	SupportExportData *bool `json:"SupportExportData,omitempty" azure:"ro"`

	// READ-ONLY; Reserved, not used now.
	ThrottleRate *float32 `json:"ThrottleRate,omitempty" azure:"ro"`

	// READ-ONLY; The application insights component used tracking type.
	TrackingType *string `json:"TrackingType,omitempty" azure:"ro"`

	// READ-ONLY; Whether allow to use work item integration feature.
	WorkItemIntegration *bool `json:"WorkItemIntegration,omitempty" azure:"ro"`
}

// ApplicationInsightsComponentFeatureCapability - An Application Insights component feature capability
type ApplicationInsightsComponentFeatureCapability struct {
	// READ-ONLY; The description of the capability.
	Description *string `json:"Description,omitempty" azure:"ro"`

	// READ-ONLY; The meter used for the capability.
	MeterID *string `json:"MeterId,omitempty" azure:"ro"`

	// READ-ONLY; The meter rate of the meter.
	MeterRateFrequency *string `json:"MeterRateFrequency,omitempty" azure:"ro"`

	// READ-ONLY; The name of the capability.
	Name *string `json:"Name,omitempty" azure:"ro"`

	// READ-ONLY; The unit of the capability.
	Unit *string `json:"Unit,omitempty" azure:"ro"`

	// READ-ONLY; The value of the capability.
	Value *string `json:"Value,omitempty" azure:"ro"`
}

// ApplicationInsightsComponentListResult - Describes the list of Application Insights Resources.
type ApplicationInsightsComponentListResult struct {
	// REQUIRED; List of Application Insights component definitions.
	Value []*ApplicationInsightsComponent `json:"value,omitempty"`

	// The URI to get the next set of Application Insights component definitions if too many components where returned in the result set.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentListResult.
func (a ApplicationInsightsComponentListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", a.NextLink)
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentProactiveDetectionConfiguration - Properties that define a ProactiveDetection configuration.
type ApplicationInsightsComponentProactiveDetectionConfiguration struct {
	// Custom email addresses for this rule notifications
	CustomEmails []*string `json:"CustomEmails,omitempty"`

	// A flag that indicates whether this rule is enabled by the user
	Enabled *bool `json:"Enabled,omitempty"`

	// The last time this rule was updated
	LastUpdatedTime *string `json:"LastUpdatedTime,omitempty"`

	// The rule name
	Name *string `json:"Name,omitempty"`

	// Static definitions of the ProactiveDetection configuration rule (same values for all components).
	RuleDefinitions *ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions `json:"RuleDefinitions,omitempty"`

	// A flag that indicated whether notifications on this rule should be sent to subscription owners
	SendEmailsToSubscriptionOwners *bool `json:"SendEmailsToSubscriptionOwners,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentProactiveDetectionConfiguration.
func (a ApplicationInsightsComponentProactiveDetectionConfiguration) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "CustomEmails", a.CustomEmails)
	populate(objectMap, "Enabled", a.Enabled)
	populate(objectMap, "LastUpdatedTime", a.LastUpdatedTime)
	populate(objectMap, "Name", a.Name)
	populate(objectMap, "RuleDefinitions", a.RuleDefinitions)
	populate(objectMap, "SendEmailsToSubscriptionOwners", a.SendEmailsToSubscriptionOwners)
	return json.Marshal(objectMap)
}

// ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions - Static definitions of the ProactiveDetection configuration rule (same values
// for all components).
type ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions struct {
	// The rule description
	Description *string `json:"Description,omitempty"`

	// The rule name as it is displayed in UI
	DisplayName *string `json:"DisplayName,omitempty"`

	// URL which displays additional info about the proactive detection rule
	HelpURL *string `json:"HelpUrl,omitempty"`

	// A flag indicating whether the rule is enabled by default
	IsEnabledByDefault *bool `json:"IsEnabledByDefault,omitempty"`

	// A flag indicating whether the rule is hidden (from the UI)
	IsHidden *bool `json:"IsHidden,omitempty"`

	// A flag indicating whether the rule is in preview
	IsInPreview *bool `json:"IsInPreview,omitempty"`

	// The rule name
	Name *string `json:"Name,omitempty"`

	// A flag indicating whether email notifications are supported for detections for this rule
	SupportsEmailNotifications *bool `json:"SupportsEmailNotifications,omitempty"`
}

// ApplicationInsightsComponentProperties - Properties that define an Application Insights component resource.
type ApplicationInsightsComponentProperties struct {
	// REQUIRED; Type of application being monitored.
	ApplicationType *ApplicationType `json:"Application_Type,omitempty"`

	// Disable IP masking.
	DisableIPMasking *bool `json:"DisableIpMasking,omitempty"`

	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating
	// a component via the REST API.
	FlowType *FlowType `json:"Flow_Type,omitempty"`

	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppID *string `json:"HockeyAppId,omitempty"`

	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days *bool `json:"ImmediatePurgeDataOn30Days,omitempty"`

	// Indicates the flow of the ingestion.
	IngestionMode *IngestionMode `json:"IngestionMode,omitempty"`

	// The network access type for accessing Application Insights ingestion.
	PublicNetworkAccessForIngestion *PublicNetworkAccessType `json:"publicNetworkAccessForIngestion,omitempty"`

	// The network access type for accessing Application Insights query.
	PublicNetworkAccessForQuery *PublicNetworkAccessType `json:"publicNetworkAccessForQuery,omitempty"`

	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	RequestSource *RequestSource `json:"Request_Source,omitempty"`

	// Retention period in days.
	RetentionInDays *int32 `json:"RetentionInDays,omitempty"`

	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage *float64 `json:"SamplingPercentage,omitempty"`

	// READ-ONLY; Application Insights Unique ID for your Application.
	AppID *string `json:"AppId,omitempty" azure:"ro"`

	// READ-ONLY; The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
	ApplicationID *string `json:"ApplicationId,omitempty" azure:"ro"`

	// READ-ONLY; Application Insights component connection string.
	ConnectionString *string `json:"ConnectionString,omitempty" azure:"ro"`

	// READ-ONLY; Creation Date for the Application Insights component, in ISO 8601 format.
	CreationDate *time.Time `json:"CreationDate,omitempty" azure:"ro"`

	// READ-ONLY; Token used to authenticate communications with between Application Insights and HockeyApp.
	HockeyAppToken *string `json:"HockeyAppToken,omitempty" azure:"ro"`

	// READ-ONLY; Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to
	// Azure Application Insights. This value will be supplied upon
	// construction of each new Application Insights component.
	InstrumentationKey *string `json:"InstrumentationKey,omitempty" azure:"ro"`

	// READ-ONLY; List of linked private link scope resources.
	PrivateLinkScopedResources []*PrivateLinkScopedResource `json:"PrivateLinkScopedResources,omitempty" azure:"ro"`

	// READ-ONLY; Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this
	// value but are able to read from it. Values will include
	// Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Azure Tenant Id.
	TenantID *string `json:"TenantId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsComponentProperties.
func (a ApplicationInsightsComponentProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "AppId", a.AppID)
	populate(objectMap, "ApplicationId", a.ApplicationID)
	populate(objectMap, "Application_Type", a.ApplicationType)
	populate(objectMap, "ConnectionString", a.ConnectionString)
	populateTimeRFC3339(objectMap, "CreationDate", a.CreationDate)
	populate(objectMap, "DisableIpMasking", a.DisableIPMasking)
	populate(objectMap, "Flow_Type", a.FlowType)
	populate(objectMap, "HockeyAppId", a.HockeyAppID)
	populate(objectMap, "HockeyAppToken", a.HockeyAppToken)
	populate(objectMap, "ImmediatePurgeDataOn30Days", a.ImmediatePurgeDataOn30Days)
	populate(objectMap, "IngestionMode", a.IngestionMode)
	populate(objectMap, "InstrumentationKey", a.InstrumentationKey)
	populate(objectMap, "PrivateLinkScopedResources", a.PrivateLinkScopedResources)
	populate(objectMap, "provisioningState", a.ProvisioningState)
	populate(objectMap, "publicNetworkAccessForIngestion", a.PublicNetworkAccessForIngestion)
	populate(objectMap, "publicNetworkAccessForQuery", a.PublicNetworkAccessForQuery)
	populate(objectMap, "Request_Source", a.RequestSource)
	populate(objectMap, "RetentionInDays", a.RetentionInDays)
	populate(objectMap, "SamplingPercentage", a.SamplingPercentage)
	populate(objectMap, "TenantId", a.TenantID)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type ApplicationInsightsComponentProperties.
func (a *ApplicationInsightsComponentProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "AppId":
			err = unpopulate(val, &a.AppID)
			delete(rawMsg, key)
		case "ApplicationId":
			err = unpopulate(val, &a.ApplicationID)
			delete(rawMsg, key)
		case "Application_Type":
			err = unpopulate(val, &a.ApplicationType)
			delete(rawMsg, key)
		case "ConnectionString":
			err = unpopulate(val, &a.ConnectionString)
			delete(rawMsg, key)
		case "CreationDate":
			err = unpopulateTimeRFC3339(val, &a.CreationDate)
			delete(rawMsg, key)
		case "DisableIpMasking":
			err = unpopulate(val, &a.DisableIPMasking)
			delete(rawMsg, key)
		case "Flow_Type":
			err = unpopulate(val, &a.FlowType)
			delete(rawMsg, key)
		case "HockeyAppId":
			err = unpopulate(val, &a.HockeyAppID)
			delete(rawMsg, key)
		case "HockeyAppToken":
			err = unpopulate(val, &a.HockeyAppToken)
			delete(rawMsg, key)
		case "ImmediatePurgeDataOn30Days":
			err = unpopulate(val, &a.ImmediatePurgeDataOn30Days)
			delete(rawMsg, key)
		case "IngestionMode":
			err = unpopulate(val, &a.IngestionMode)
			delete(rawMsg, key)
		case "InstrumentationKey":
			err = unpopulate(val, &a.InstrumentationKey)
			delete(rawMsg, key)
		case "PrivateLinkScopedResources":
			err = unpopulate(val, &a.PrivateLinkScopedResources)
			delete(rawMsg, key)
		case "provisioningState":
			err = unpopulate(val, &a.ProvisioningState)
			delete(rawMsg, key)
		case "publicNetworkAccessForIngestion":
			err = unpopulate(val, &a.PublicNetworkAccessForIngestion)
			delete(rawMsg, key)
		case "publicNetworkAccessForQuery":
			err = unpopulate(val, &a.PublicNetworkAccessForQuery)
			delete(rawMsg, key)
		case "Request_Source":
			err = unpopulate(val, &a.RequestSource)
			delete(rawMsg, key)
		case "RetentionInDays":
			err = unpopulate(val, &a.RetentionInDays)
			delete(rawMsg, key)
		case "SamplingPercentage":
			err = unpopulate(val, &a.SamplingPercentage)
			delete(rawMsg, key)
		case "TenantId":
			err = unpopulate(val, &a.TenantID)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// ApplicationInsightsComponentQuotaStatus - An Application Insights component daily data volume cap status
type ApplicationInsightsComponentQuotaStatus struct {
	// READ-ONLY; The Application ID for the Application Insights component.
	AppID *string `json:"AppId,omitempty" azure:"ro"`

	// READ-ONLY; Date and time when the daily data volume cap will be reset, and data ingestion will resume.
	ExpirationTime *string `json:"ExpirationTime,omitempty" azure:"ro"`

	// READ-ONLY; The daily data volume cap is met, and data ingestion will be stopped.
	ShouldBeThrottled *bool `json:"ShouldBeThrottled,omitempty" azure:"ro"`
}

// ApplicationInsightsComponentWebTestLocation - Properties that define a web test location available to an Application Insights Component.
type ApplicationInsightsComponentWebTestLocation struct {
	// READ-ONLY; The display name of the web test location.
	DisplayName *string `json:"DisplayName,omitempty" azure:"ro"`

	// READ-ONLY; Internally defined geographic location tag.
	Tag *string `json:"Tag,omitempty" azure:"ro"`
}

// ApplicationInsightsWebTestLocationsListResult - Describes the list of web test locations available to an Application Insights Component.
type ApplicationInsightsWebTestLocationsListResult struct {
	// REQUIRED; List of web test locations.
	Value []*ApplicationInsightsComponentWebTestLocation `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ApplicationInsightsWebTestLocationsListResult.
func (a ApplicationInsightsWebTestLocationsListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// ComponentAvailableFeaturesGetOptions contains the optional parameters for the ComponentAvailableFeatures.Get method.
type ComponentAvailableFeaturesGetOptions struct {
	// placeholder for future optional parameters
}

// ComponentCurrentBillingFeaturesGetOptions contains the optional parameters for the ComponentCurrentBillingFeatures.Get method.
type ComponentCurrentBillingFeaturesGetOptions struct {
	// placeholder for future optional parameters
}

// ComponentCurrentBillingFeaturesUpdateOptions contains the optional parameters for the ComponentCurrentBillingFeatures.Update method.
type ComponentCurrentBillingFeaturesUpdateOptions struct {
	// placeholder for future optional parameters
}

// ComponentFeatureCapabilitiesGetOptions contains the optional parameters for the ComponentFeatureCapabilities.Get method.
type ComponentFeatureCapabilitiesGetOptions struct {
	// placeholder for future optional parameters
}

// ComponentLinkedStorageAccounts - An Application Insights component linked storage accounts
type ComponentLinkedStorageAccounts struct {
	ProxyResource
	// The properties of the linked storage accounts.
	Properties *LinkedStorageAccountsProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ComponentLinkedStorageAccounts.
func (c ComponentLinkedStorageAccounts) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	c.ProxyResource.marshalInternal(objectMap)
	populate(objectMap, "properties", c.Properties)
	return json.Marshal(objectMap)
}

// ComponentLinkedStorageAccountsCreateAndUpdateOptions contains the optional parameters for the ComponentLinkedStorageAccounts.CreateAndUpdate method.
type ComponentLinkedStorageAccountsCreateAndUpdateOptions struct {
	// placeholder for future optional parameters
}

// ComponentLinkedStorageAccountsDeleteOptions contains the optional parameters for the ComponentLinkedStorageAccounts.Delete method.
type ComponentLinkedStorageAccountsDeleteOptions struct {
	// placeholder for future optional parameters
}

// ComponentLinkedStorageAccountsGetOptions contains the optional parameters for the ComponentLinkedStorageAccounts.Get method.
type ComponentLinkedStorageAccountsGetOptions struct {
	// placeholder for future optional parameters
}

// ComponentLinkedStorageAccountsPatch - An Application Insights component linked storage accounts patch
type ComponentLinkedStorageAccountsPatch struct {
	// The properties of the linked storage accounts.
	Properties *LinkedStorageAccountsProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ComponentLinkedStorageAccountsPatch.
func (c ComponentLinkedStorageAccountsPatch) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", c.Properties)
	return json.Marshal(objectMap)
}

// ComponentLinkedStorageAccountsUpdateOptions contains the optional parameters for the ComponentLinkedStorageAccounts.Update method.
type ComponentLinkedStorageAccountsUpdateOptions struct {
	// placeholder for future optional parameters
}

// ComponentPurgeBody - Describes the body of a purge request for an App Insights component
type ComponentPurgeBody struct {
	// REQUIRED; The set of columns and filters (queries) to run over them to purge the resulting data.
	Filters []*ComponentPurgeBodyFilters `json:"filters,omitempty"`

	// REQUIRED; Table from which to purge data.
	Table *string `json:"table,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ComponentPurgeBody.
func (c ComponentPurgeBody) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "filters", c.Filters)
	populate(objectMap, "table", c.Table)
	return json.Marshal(objectMap)
}

// ComponentPurgeBodyFilters - User-defined filters to return data which will be purged from the table.
type ComponentPurgeBodyFilters struct {
	// The column of the table over which the given query should run
	Column *string `json:"column,omitempty"`

	// When filtering over custom dimensions, this key will be used as the name of the custom dimension.
	Key *string `json:"key,omitempty"`

	// A query operator to evaluate over the provided column and value(s). Supported operators are ==, =~, in, in~, >, >=, <, <=, between, and have the same
	// behavior as they would in a KQL query.
	Operator *string `json:"operator,omitempty"`

	// the value for the operator to function over. This can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or array of values.
	Value interface{} `json:"value,omitempty"`
}

// ComponentPurgeResponse - Response containing operationId for a specific purge action.
type ComponentPurgeResponse struct {
	// REQUIRED; Id to use when querying for status for a particular purge operation.
	OperationID *string `json:"operationId,omitempty"`
}

// ComponentPurgeStatusResponse - Response containing status for a specific purge operation.
type ComponentPurgeStatusResponse struct {
	// REQUIRED; Status of the operation represented by the requested Id.
	Status *PurgeState `json:"status,omitempty"`
}

// ComponentQuotaStatusGetOptions contains the optional parameters for the ComponentQuotaStatus.Get method.
type ComponentQuotaStatusGetOptions struct {
	// placeholder for future optional parameters
}

// ComponentsCreateOrUpdateOptions contains the optional parameters for the Components.CreateOrUpdate method.
type ComponentsCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ComponentsDeleteOptions contains the optional parameters for the Components.Delete method.
type ComponentsDeleteOptions struct {
	// placeholder for future optional parameters
}

// ComponentsGetOptions contains the optional parameters for the Components.Get method.
type ComponentsGetOptions struct {
	// placeholder for future optional parameters
}

// ComponentsGetPurgeStatusOptions contains the optional parameters for the Components.GetPurgeStatus method.
type ComponentsGetPurgeStatusOptions struct {
	// placeholder for future optional parameters
}

// ComponentsListByResourceGroupOptions contains the optional parameters for the Components.ListByResourceGroup method.
type ComponentsListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ComponentsListOptions contains the optional parameters for the Components.List method.
type ComponentsListOptions struct {
	// placeholder for future optional parameters
}

// ComponentsPurgeOptions contains the optional parameters for the Components.Purge method.
type ComponentsPurgeOptions struct {
	// placeholder for future optional parameters
}

// ComponentsResource - An azure resource object
type ComponentsResource struct {
	// REQUIRED; Resource location
	Location *string `json:"location,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ComponentsResource.
func (c ComponentsResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	c.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (c ComponentsResource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", c.ID)
	populate(objectMap, "location", c.Location)
	populate(objectMap, "name", c.Name)
	populate(objectMap, "tags", c.Tags)
	populate(objectMap, "type", c.Type)
}

// ComponentsUpdateTagsOptions contains the optional parameters for the Components.UpdateTags method.
type ComponentsUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ErrorDefinition - Error definition.
type ErrorDefinition struct {
	// READ-ONLY; Service specific error code which serves as the substatus for the HTTP error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Internal error details.
	Innererror interface{} `json:"innererror,omitempty" azure:"ro"`

	// READ-ONLY; Description of the error.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// ErrorResponse - Error response indicates Insights service is not able to process the incoming request. The reason is provided in the error message.
type ErrorResponse struct {
	// Error code.
	Code *string `json:"code,omitempty"`

	// Error message indicating why the operation failed.
	Message *string `json:"message,omitempty"`
}

// Implements the error and azcore.HTTPResponse interfaces.
type ErrorResponseLinkedStorage struct {
	raw string
	// Error response indicates Insights service is not able to process the incoming request. The reason is provided in the error message.
	InnerError *ErrorResponseLinkedStorageError `json:"error,omitempty"`
}

// Error implements the error interface for type ErrorResponseLinkedStorage.
// The contents of the error text are not contractual and subject to change.
func (e ErrorResponseLinkedStorage) Error() string {
	return e.raw
}

// ErrorResponseLinkedStorageError - Error response indicates Insights service is not able to process the incoming request. The reason is provided in the
// error message.
type ErrorResponseLinkedStorageError struct {
	// READ-ONLY; Error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Error message indicating why the operation failed.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// ExportConfigurationsCreateOptions contains the optional parameters for the ExportConfigurations.Create method.
type ExportConfigurationsCreateOptions struct {
	// placeholder for future optional parameters
}

// ExportConfigurationsDeleteOptions contains the optional parameters for the ExportConfigurations.Delete method.
type ExportConfigurationsDeleteOptions struct {
	// placeholder for future optional parameters
}

// ExportConfigurationsGetOptions contains the optional parameters for the ExportConfigurations.Get method.
type ExportConfigurationsGetOptions struct {
	// placeholder for future optional parameters
}

// ExportConfigurationsListOptions contains the optional parameters for the ExportConfigurations.List method.
type ExportConfigurationsListOptions struct {
	// placeholder for future optional parameters
}

// ExportConfigurationsUpdateOptions contains the optional parameters for the ExportConfigurations.Update method.
type ExportConfigurationsUpdateOptions struct {
	// placeholder for future optional parameters
}

// FavoritesAddOptions contains the optional parameters for the Favorites.Add method.
type FavoritesAddOptions struct {
	// placeholder for future optional parameters
}

// FavoritesDeleteOptions contains the optional parameters for the Favorites.Delete method.
type FavoritesDeleteOptions struct {
	// placeholder for future optional parameters
}

// FavoritesGetOptions contains the optional parameters for the Favorites.Get method.
type FavoritesGetOptions struct {
	// placeholder for future optional parameters
}

// FavoritesListOptions contains the optional parameters for the Favorites.List method.
type FavoritesListOptions struct {
	// Flag indicating whether or not to return the full content for each applicable favorite. If false, only return summary content for favorites.
	CanFetchContent *bool
	// The type of favorite. Value can be either shared or user.
	FavoriteType *FavoriteType
	// Source type of favorite to return. When left out, the source type defaults to 'other' (not present in this enum).
	SourceType *FavoriteSourceType
	// Tags that must be present on each favorite returned.
	Tags []string
}

// FavoritesUpdateOptions contains the optional parameters for the Favorites.Update method.
type FavoritesUpdateOptions struct {
	// placeholder for future optional parameters
}

// InnerError - Inner error
type InnerError struct {
	// Provides correlation for request
	Diagnosticcontext *string `json:"diagnosticcontext,omitempty"`

	// Request time
	Time *time.Time `json:"time,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type InnerError.
func (i InnerError) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "diagnosticcontext", i.Diagnosticcontext)
	populateTimeRFC3339(objectMap, "time", i.Time)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type InnerError.
func (i *InnerError) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "diagnosticcontext":
			err = unpopulate(val, &i.Diagnosticcontext)
			delete(rawMsg, key)
		case "time":
			err = unpopulateTimeRFC3339(val, &i.Time)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// InnerErrorTrace - Error details
type InnerErrorTrace struct {
	// READ-ONLY; detailed error trace
	Trace []*string `json:"trace,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type InnerErrorTrace.
func (i InnerErrorTrace) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "trace", i.Trace)
	return json.Marshal(objectMap)
}

// LinkedStorageAccountsProperties - An Application Insights component linked storage account
type LinkedStorageAccountsProperties struct {
	// Linked storage account resource ID
	LinkedStorageAccount *string `json:"linkedStorageAccount,omitempty"`
}

// LiveTokenGetOptions contains the optional parameters for the LiveToken.Get method.
type LiveTokenGetOptions struct {
	// placeholder for future optional parameters
}

// LiveTokenResponse - The response to a live token query.
type LiveTokenResponse struct {
	// READ-ONLY; JWT token for accessing live metrics stream data.
	LiveToken *string `json:"liveToken,omitempty" azure:"ro"`
}

// ManagedServiceIdentity - Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// REQUIRED; Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type *ManagedServiceIdentityType `json:"type,omitempty"`

	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary
	// values can be empty objects ({}) in
	// requests.
	UserAssignedIdentities map[string]*UserAssignedIdentity `json:"userAssignedIdentities,omitempty"`

	// READ-ONLY; The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ManagedServiceIdentity.
func (m ManagedServiceIdentity) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	m.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (m ManagedServiceIdentity) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "principalId", m.PrincipalID)
	populate(objectMap, "tenantId", m.TenantID)
	populate(objectMap, "type", m.Type)
	populate(objectMap, "userAssignedIdentities", m.UserAssignedIdentities)
}

// MyWorkbook - An Application Insights private workbook definition.
type MyWorkbook struct {
	MyWorkbookResource
	// The kind of workbook. Choices are user and shared.
	Kind *Kind `json:"kind,omitempty"`

	// Metadata describing a workbook for an Azure resource.
	Properties *MyWorkbookProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type MyWorkbook.
func (m MyWorkbook) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	m.MyWorkbookResource.marshalInternal(objectMap)
	populate(objectMap, "kind", m.Kind)
	populate(objectMap, "properties", m.Properties)
	populate(objectMap, "systemData", m.SystemData)
	return json.Marshal(objectMap)
}

// MyWorkbookError - Error response.
// Implements the error and azcore.HTTPResponse interfaces.
type MyWorkbookError struct {
	raw string
	// The error details.
	InnerError *ErrorDefinition `json:"error,omitempty"`
}

// Error implements the error interface for type MyWorkbookError.
// The contents of the error text are not contractual and subject to change.
func (e MyWorkbookError) Error() string {
	return e.raw
}

// MyWorkbookManagedIdentity - Customer Managed Identity
type MyWorkbookManagedIdentity struct {
	// The identity type.
	Type *MyWorkbookManagedIdentityType `json:"type,omitempty"`

	// Customer Managed Identity
	UserAssignedIdentities *MyWorkbookUserAssignedIdentities `json:"userAssignedIdentities,omitempty"`
}

// MyWorkbookProperties - Properties that contain a private workbook.
type MyWorkbookProperties struct {
	// REQUIRED; Workbook category, as defined by the user at creation time.
	Category *string `json:"category,omitempty"`

	// REQUIRED; The user-defined name of the private workbook.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; Configuration of this particular private workbook. Configuration data is a string containing valid JSON
	SerializedData *string `json:"serializedData,omitempty"`

	// Optional resourceId for a source resource.
	SourceID *string `json:"sourceId,omitempty"`

	// BYOS Storage Account URI
	StorageURI *string `json:"storageUri,omitempty"`

	// A list of 0 or more tags that are associated with this private workbook definition
	Tags []*string `json:"tags,omitempty"`

	// This instance's version of the data model. This can change as new features are added that can be marked private workbook.
	Version *string `json:"version,omitempty"`

	// READ-ONLY; Date and time in UTC of the last modification that was made to this private workbook definition.
	TimeModified *string `json:"timeModified,omitempty" azure:"ro"`

	// READ-ONLY; Unique user id of the specific user that owns this private workbook.
	UserID *string `json:"userId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type MyWorkbookProperties.
func (m MyWorkbookProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "category", m.Category)
	populate(objectMap, "displayName", m.DisplayName)
	populate(objectMap, "serializedData", m.SerializedData)
	populate(objectMap, "sourceId", m.SourceID)
	populate(objectMap, "storageUri", m.StorageURI)
	populate(objectMap, "tags", m.Tags)
	populate(objectMap, "timeModified", m.TimeModified)
	populate(objectMap, "userId", m.UserID)
	populate(objectMap, "version", m.Version)
	return json.Marshal(objectMap)
}

// MyWorkbookResource - An azure resource object
type MyWorkbookResource struct {
	// Resource etag
	Etag map[string]*string `json:"etag,omitempty"`

	// Azure resource Id
	ID *string `json:"id,omitempty"`

	// Identity used for BYOS
	Identity *MyWorkbookManagedIdentity `json:"identity,omitempty"`

	// Resource location
	Location *string `json:"location,omitempty"`

	// Azure resource name
	Name *string `json:"name,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// Azure resource type
	Type *string `json:"type,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type MyWorkbookResource.
func (m MyWorkbookResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	m.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (m MyWorkbookResource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "etag", m.Etag)
	populate(objectMap, "id", m.ID)
	populate(objectMap, "identity", m.Identity)
	populate(objectMap, "location", m.Location)
	populate(objectMap, "name", m.Name)
	populate(objectMap, "tags", m.Tags)
	populate(objectMap, "type", m.Type)
}

// MyWorkbookUserAssignedIdentities - Customer Managed Identity
type MyWorkbookUserAssignedIdentities struct {
	// READ-ONLY; The principal ID of resource identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of resource.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// MyWorkbooksCreateOrUpdateOptions contains the optional parameters for the MyWorkbooks.CreateOrUpdate method.
type MyWorkbooksCreateOrUpdateOptions struct {
	// Azure Resource Id that will fetch all linked workbooks.
	SourceID *string
}

// MyWorkbooksDeleteOptions contains the optional parameters for the MyWorkbooks.Delete method.
type MyWorkbooksDeleteOptions struct {
	// placeholder for future optional parameters
}

// MyWorkbooksGetOptions contains the optional parameters for the MyWorkbooks.Get method.
type MyWorkbooksGetOptions struct {
	// placeholder for future optional parameters
}

// MyWorkbooksListByResourceGroupOptions contains the optional parameters for the MyWorkbooks.ListByResourceGroup method.
type MyWorkbooksListByResourceGroupOptions struct {
	// Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks.
	CanFetchContent *bool
	// Azure Resource Id that will fetch all linked workbooks.
	SourceID *string
	// Tags presents on each workbook returned.
	Tags []string
}

// MyWorkbooksListBySubscriptionOptions contains the optional parameters for the MyWorkbooks.ListBySubscription method.
type MyWorkbooksListBySubscriptionOptions struct {
	// Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks.
	CanFetchContent *bool
	// Tags presents on each workbook returned.
	Tags []string
}

// MyWorkbooksListResult - Workbook list result.
type MyWorkbooksListResult struct {
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; An array of private workbooks.
	Value []*MyWorkbook `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type MyWorkbooksListResult.
func (m MyWorkbooksListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", m.NextLink)
	populate(objectMap, "value", m.Value)
	return json.Marshal(objectMap)
}

// MyWorkbooksUpdateOptions contains the optional parameters for the MyWorkbooks.Update method.
type MyWorkbooksUpdateOptions struct {
	// Azure Resource Id that will fetch all linked workbooks.
	SourceID *string
}

// Operation - CDN REST API operation
type Operation struct {
	// The object that represents the operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// Operation name: {provider}/{resource}/{operation}
	Name *string `json:"name,omitempty"`
}

// OperationDisplay - The object that represents the operation.
type OperationDisplay struct {
	// Operation type: Read, write, delete, etc.
	Operation *string `json:"operation,omitempty"`

	// Service provider: Microsoft.Cdn
	Provider *string `json:"provider,omitempty"`

	// Resource on which the operation is performed: Profile, endpoint, etc.
	Resource *string `json:"resource,omitempty"`
}

// OperationInfo - Information about an operation
type OperationInfo struct {
	// Description of the operation
	Description *string `json:"description,omitempty"`

	// Name of the operation
	Operation *string `json:"operation,omitempty"`

	// Name of the provider
	Provider *string `json:"provider,omitempty"`

	// Name of the resource type
	Resource *string `json:"resource,omitempty"`
}

// OperationListResult - Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results.
type OperationListResult struct {
	// URL to get the next set of operation list results if there are any.
	NextLink *string `json:"nextLink,omitempty"`

	// List of CDN operations supported by the CDN resource provider.
	Value []*Operation `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationListResult.
func (o OperationListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", o.NextLink)
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationLive - Represents an operation returned by the GetOperations request
type OperationLive struct {
	// Display name of the operation
	Display *OperationInfo `json:"display,omitempty"`

	// Name of the operation
	Name *string `json:"name,omitempty"`

	// Origin of the operation
	Origin *string `json:"origin,omitempty"`

	// Properties of the operation
	Properties map[string]interface{} `json:"properties,omitempty"`
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// OperationsListResult - Result of the List Operations operation
type OperationsListResult struct {
	// URL to get the next set of operation list results if there are any.
	NextLink *string `json:"nextLink,omitempty"`

	// A collection of operations
	Value []*OperationLive `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationsListResult.
func (o OperationsListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", o.NextLink)
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// PrivateLinkScopedResource - The private link scope resource reference.
type PrivateLinkScopedResource struct {
	// The full resource Id of the private link scope resource.
	ResourceID *string `json:"ResourceId,omitempty"`

	// The private link scope unique Identifier.
	ScopeID *string `json:"ScopeId,omitempty"`
}

// ProactiveDetectionConfigurationsGetOptions contains the optional parameters for the ProactiveDetectionConfigurations.Get method.
type ProactiveDetectionConfigurationsGetOptions struct {
	// placeholder for future optional parameters
}

// ProactiveDetectionConfigurationsListOptions contains the optional parameters for the ProactiveDetectionConfigurations.List method.
type ProactiveDetectionConfigurationsListOptions struct {
	// placeholder for future optional parameters
}

// ProactiveDetectionConfigurationsUpdateOptions contains the optional parameters for the ProactiveDetectionConfigurations.Update method.
type ProactiveDetectionConfigurationsUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
type ProxyResource struct {
	Resource
}

func (p ProxyResource) marshalInternal(objectMap map[string]interface{}) {
	p.Resource.marshalInternal(objectMap)
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Resource.
func (r Resource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	r.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (r Resource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", r.ID)
	populate(objectMap, "name", r.Name)
	populate(objectMap, "type", r.Type)
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populateTimeRFC3339(objectMap, "createdAt", s.CreatedAt)
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populateTimeRFC3339(objectMap, "lastModifiedAt", s.LastModifiedAt)
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &s.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			err = unpopulateTimeRFC3339(val, &s.LastModifiedAt)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// TagsResource - A container holding only the Tags for a resource, allowing the user to update the tags on a WebTest instance.
type TagsResource struct {
	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type TagsResource.
func (t TagsResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "tags", t.Tags)
	return json.Marshal(objectMap)
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
type TrackedResource struct {
	Resource
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type TrackedResource.
func (t TrackedResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	t.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (t TrackedResource) marshalInternal(objectMap map[string]interface{}) {
	t.Resource.marshalInternal(objectMap)
	populate(objectMap, "location", t.Location)
	populate(objectMap, "tags", t.Tags)
}

// UserAssignedIdentity - User assigned identity properties
type UserAssignedIdentity struct {
	// READ-ONLY; The client ID of the assigned identity.
	ClientID *string `json:"clientId,omitempty" azure:"ro"`

	// READ-ONLY; The principal ID of the assigned identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`
}

// WebTest - An Application Insights web test definition.
type WebTest struct {
	WebtestsResource
	// The kind of web test that this web test watches. Choices are ping and multistep.
	Kind *WebTestKind `json:"kind,omitempty"`

	// Metadata describing a web test for an Azure resource.
	Properties *WebTestProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WebTest.
func (w WebTest) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	w.WebtestsResource.marshalInternal(objectMap)
	populate(objectMap, "kind", w.Kind)
	populate(objectMap, "properties", w.Properties)
	return json.Marshal(objectMap)
}

// WebTestGeolocation - Geo-physical location to run a web test from. You must specify one or more locations for the test to run from.
type WebTestGeolocation struct {
	// Location ID for the webtest to run from.
	Location *string `json:"Id,omitempty"`
}

// WebTestListResult - A list of 0 or more Application Insights web test definitions.
type WebTestListResult struct {
	// REQUIRED; Set of Application Insights web test definitions.
	Value []*WebTest `json:"value,omitempty"`

	// The link to get the next part of the returned list of web tests, should the return set be too large for a single request. May be null.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WebTestListResult.
func (w WebTestListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", w.NextLink)
	populate(objectMap, "value", w.Value)
	return json.Marshal(objectMap)
}

// WebTestLocationsListOptions contains the optional parameters for the WebTestLocations.List method.
type WebTestLocationsListOptions struct {
	// placeholder for future optional parameters
}

// WebTestProperties - Metadata describing a web test for an Azure resource.
type WebTestProperties struct {
	// REQUIRED; A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations []*WebTestGeolocation `json:"Locations,omitempty"`

	// REQUIRED; Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorID *string `json:"SyntheticMonitorId,omitempty"`

	// REQUIRED; The kind of web test this is, valid choices are ping and multistep.
	WebTestKind *WebTestKind `json:"Kind,omitempty"`

	// REQUIRED; User defined name if this WebTest.
	WebTestName *string `json:"Name,omitempty"`

	// An XML configuration specification for a WebTest.
	Configuration *WebTestPropertiesConfiguration `json:"Configuration,omitempty"`

	// Purpose/user defined descriptive test for this WebTest.
	Description *string `json:"Description,omitempty"`

	// Is the test actively being monitored.
	Enabled *bool `json:"Enabled,omitempty"`

	// Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency *int32 `json:"Frequency,omitempty"`

	// Allow for retries should this WebTest fail.
	RetryEnabled *bool `json:"RetryEnabled,omitempty"`

	// Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout *int32 `json:"Timeout,omitempty"`

	// READ-ONLY; Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this
	// value but are able to read from it. Values will include
	// Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type WebTestProperties.
func (w WebTestProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "Configuration", w.Configuration)
	populate(objectMap, "Description", w.Description)
	populate(objectMap, "Enabled", w.Enabled)
	populate(objectMap, "Frequency", w.Frequency)
	populate(objectMap, "Locations", w.Locations)
	populate(objectMap, "provisioningState", w.ProvisioningState)
	populate(objectMap, "RetryEnabled", w.RetryEnabled)
	populate(objectMap, "SyntheticMonitorId", w.SyntheticMonitorID)
	populate(objectMap, "Timeout", w.Timeout)
	populate(objectMap, "Kind", w.WebTestKind)
	populate(objectMap, "Name", w.WebTestName)
	return json.Marshal(objectMap)
}

// WebTestPropertiesConfiguration - An XML configuration specification for a WebTest.
type WebTestPropertiesConfiguration struct {
	// The XML specification of a WebTest to run against an application.
	WebTest *string `json:"WebTest,omitempty"`
}

// WebTestsCreateOrUpdateOptions contains the optional parameters for the WebTests.CreateOrUpdate method.
type WebTestsCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WebTestsDeleteOptions contains the optional parameters for the WebTests.Delete method.
type WebTestsDeleteOptions struct {
	// placeholder for future optional parameters
}

// WebTestsGetOptions contains the optional parameters for the WebTests.Get method.
type WebTestsGetOptions struct {
	// placeholder for future optional parameters
}

// WebTestsListByComponentOptions contains the optional parameters for the WebTests.ListByComponent method.
type WebTestsListByComponentOptions struct {
	// placeholder for future optional parameters
}

// WebTestsListByResourceGroupOptions contains the optional parameters for the WebTests.ListByResourceGroup method.
type WebTestsListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// WebTestsListOptions contains the optional parameters for the WebTests.List method.
type WebTestsListOptions struct {
	// placeholder for future optional parameters
}

// WebTestsUpdateTagsOptions contains the optional parameters for the WebTests.UpdateTags method.
type WebTestsUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// WebtestsResource - An azure resource object
type WebtestsResource struct {
	// REQUIRED; Resource location
	Location *string `json:"location,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type WebtestsResource.
func (w WebtestsResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	w.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (w WebtestsResource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", w.ID)
	populate(objectMap, "location", w.Location)
	populate(objectMap, "name", w.Name)
	populate(objectMap, "tags", w.Tags)
	populate(objectMap, "type", w.Type)
}

// WorkItemConfiguration - Work item configuration associated with an application insights resource.
type WorkItemConfiguration struct {
	// Configuration friendly name
	ConfigDisplayName *string `json:"ConfigDisplayName,omitempty"`

	// Serialized JSON object for detailed properties
	ConfigProperties *string `json:"ConfigProperties,omitempty"`

	// Connector identifier where work item is created
	ConnectorID *string `json:"ConnectorId,omitempty"`

	// Unique Id for work item
	ID *string `json:"Id,omitempty"`

	// Boolean value indicating whether configuration is default
	IsDefault *bool `json:"IsDefault,omitempty"`
}

// WorkItemConfigurationError - Error associated with trying to get work item configuration or configurations
// Implements the error and azcore.HTTPResponse interfaces.
type WorkItemConfigurationError struct {
	raw string
	// Error detail code and explanation
	Code *string `json:"code,omitempty"`

	// Inner error
	Innererror *InnerError `json:"innererror,omitempty"`

	// Error message
	Message *string `json:"message,omitempty"`
}

// Error implements the error interface for type WorkItemConfigurationError.
// The contents of the error text are not contractual and subject to change.
func (e WorkItemConfigurationError) Error() string {
	return e.raw
}

// WorkItemConfigurationsCreateOptions contains the optional parameters for the WorkItemConfigurations.Create method.
type WorkItemConfigurationsCreateOptions struct {
	// placeholder for future optional parameters
}

// WorkItemConfigurationsDeleteOptions contains the optional parameters for the WorkItemConfigurations.Delete method.
type WorkItemConfigurationsDeleteOptions struct {
	// placeholder for future optional parameters
}

// WorkItemConfigurationsGetDefaultOptions contains the optional parameters for the WorkItemConfigurations.GetDefault method.
type WorkItemConfigurationsGetDefaultOptions struct {
	// placeholder for future optional parameters
}

// WorkItemConfigurationsGetItemOptions contains the optional parameters for the WorkItemConfigurations.GetItem method.
type WorkItemConfigurationsGetItemOptions struct {
	// placeholder for future optional parameters
}

// WorkItemConfigurationsListOptions contains the optional parameters for the WorkItemConfigurations.List method.
type WorkItemConfigurationsListOptions struct {
	// placeholder for future optional parameters
}

// WorkItemConfigurationsListResult - Work item configuration list result.
type WorkItemConfigurationsListResult struct {
	// READ-ONLY; An array of work item configurations.
	Value []*WorkItemConfiguration `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkItemConfigurationsListResult.
func (w WorkItemConfigurationsListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", w.Value)
	return json.Marshal(objectMap)
}

// WorkItemConfigurationsUpdateItemOptions contains the optional parameters for the WorkItemConfigurations.UpdateItem method.
type WorkItemConfigurationsUpdateItemOptions struct {
	// placeholder for future optional parameters
}

// WorkItemCreateConfiguration - Work item configuration creation payload
type WorkItemCreateConfiguration struct {
	// Serialized JSON object for detailed properties
	ConnectorDataConfiguration *string `json:"ConnectorDataConfiguration,omitempty"`

	// Unique connector id
	ConnectorID *string `json:"ConnectorId,omitempty"`

	// Boolean indicating validate only
	ValidateOnly *bool `json:"ValidateOnly,omitempty"`

	// Custom work item properties
	WorkItemProperties map[string]*string `json:"WorkItemProperties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkItemCreateConfiguration.
func (w WorkItemCreateConfiguration) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "ConnectorDataConfiguration", w.ConnectorDataConfiguration)
	populate(objectMap, "ConnectorId", w.ConnectorID)
	populate(objectMap, "ValidateOnly", w.ValidateOnly)
	populate(objectMap, "WorkItemProperties", w.WorkItemProperties)
	return json.Marshal(objectMap)
}

// Workbook - An Application Insights workbook definition.
type Workbook struct {
	WorkbookResource
	// Metadata describing a workbook for an Azure resource.
	Properties *WorkbookProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Workbook.
func (w Workbook) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	w.WorkbookResource.marshalInternal(objectMap)
	populate(objectMap, "properties", w.Properties)
	populate(objectMap, "systemData", w.SystemData)
	return json.Marshal(objectMap)
}

// WorkbookError - Error response.
// Implements the error and azcore.HTTPResponse interfaces.
type WorkbookError struct {
	raw string
	// The error details.
	InnerError *WorkbookErrorDefinition `json:"error,omitempty"`
}

// Error implements the error interface for type WorkbookError.
// The contents of the error text are not contractual and subject to change.
func (e WorkbookError) Error() string {
	return e.raw
}

// WorkbookErrorDefinition - Error definition.
type WorkbookErrorDefinition struct {
	// READ-ONLY; Service specific error code which serves as the substatus for the HTTP error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Internal error details.
	InnerError interface{} `json:"innerError,omitempty" azure:"ro"`

	// READ-ONLY; Description of the error.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// WorkbookInnerErrorTrace - Error details
type WorkbookInnerErrorTrace struct {
	// READ-ONLY; detailed error trace
	Trace []*string `json:"trace,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookInnerErrorTrace.
func (w WorkbookInnerErrorTrace) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "trace", w.Trace)
	return json.Marshal(objectMap)
}

// WorkbookProperties - Properties that contain a workbook.
type WorkbookProperties struct {
	// REQUIRED; Workbook category, as defined by the user at creation time.
	Category *string `json:"category,omitempty"`

	// REQUIRED; The user-defined name (display name) of the workbook.
	DisplayName *string `json:"displayName,omitempty"`

	// REQUIRED; Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData *string `json:"serializedData,omitempty"`

	// The description of the workbook.
	Description *string `json:"description,omitempty"`

	// ResourceId for a source resource.
	SourceID *string `json:"sourceId,omitempty"`

	// The resourceId to the storage account when bring your own storage is used
	StorageURI *string `json:"storageUri,omitempty"`

	// Being deprecated, please use the other tags field
	Tags []*string `json:"tags,omitempty"`

	// Workbook schema version format, like 'Notebook/1.0', which should match the workbook in serializedData
	Version *string `json:"version,omitempty"`

	// READ-ONLY; The unique revision id for this workbook definition
	Revision *string `json:"revision,omitempty" azure:"ro"`

	// READ-ONLY; Date and time in UTC of the last modification that was made to this workbook definition.
	TimeModified *time.Time `json:"timeModified,omitempty" azure:"ro"`

	// READ-ONLY; Unique user id of the specific user that owns this workbook.
	UserID *string `json:"userId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookProperties.
func (w WorkbookProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "category", w.Category)
	populate(objectMap, "description", w.Description)
	populate(objectMap, "displayName", w.DisplayName)
	populate(objectMap, "revision", w.Revision)
	populate(objectMap, "serializedData", w.SerializedData)
	populate(objectMap, "sourceId", w.SourceID)
	populate(objectMap, "storageUri", w.StorageURI)
	populate(objectMap, "tags", w.Tags)
	populateTimeRFC3339(objectMap, "timeModified", w.TimeModified)
	populate(objectMap, "userId", w.UserID)
	populate(objectMap, "version", w.Version)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type WorkbookProperties.
func (w *WorkbookProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "category":
			err = unpopulate(val, &w.Category)
			delete(rawMsg, key)
		case "description":
			err = unpopulate(val, &w.Description)
			delete(rawMsg, key)
		case "displayName":
			err = unpopulate(val, &w.DisplayName)
			delete(rawMsg, key)
		case "revision":
			err = unpopulate(val, &w.Revision)
			delete(rawMsg, key)
		case "serializedData":
			err = unpopulate(val, &w.SerializedData)
			delete(rawMsg, key)
		case "sourceId":
			err = unpopulate(val, &w.SourceID)
			delete(rawMsg, key)
		case "storageUri":
			err = unpopulate(val, &w.StorageURI)
			delete(rawMsg, key)
		case "tags":
			err = unpopulate(val, &w.Tags)
			delete(rawMsg, key)
		case "timeModified":
			err = unpopulateTimeRFC3339(val, &w.TimeModified)
			delete(rawMsg, key)
		case "userId":
			err = unpopulate(val, &w.UserID)
			delete(rawMsg, key)
		case "version":
			err = unpopulate(val, &w.Version)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// WorkbookPropertiesUpdateParameters - Properties that contain a workbook for PATCH operation.
type WorkbookPropertiesUpdateParameters struct {
	// Workbook category, as defined by the user at creation time.
	Category *string `json:"category,omitempty"`

	// The description of the workbook.
	Description *string `json:"description,omitempty"`

	// The user-defined name (display name) of the workbook.
	DisplayName *string `json:"displayName,omitempty"`

	// The unique revision id for this workbook definition
	Revision *string `json:"revision,omitempty"`

	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData *string `json:"serializedData,omitempty"`

	// A list of 0 or more tags that are associated with this workbook definition
	Tags []*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookPropertiesUpdateParameters.
func (w WorkbookPropertiesUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "category", w.Category)
	populate(objectMap, "description", w.Description)
	populate(objectMap, "displayName", w.DisplayName)
	populate(objectMap, "revision", w.Revision)
	populate(objectMap, "serializedData", w.SerializedData)
	populate(objectMap, "tags", w.Tags)
	return json.Marshal(objectMap)
}

// WorkbookResource - An azure resource object
type WorkbookResource struct {
	TrackedResource
	// Resource etag
	Etag *string `json:"etag,omitempty"`

	// Identity used for BYOS
	Identity *WorkbookResourceIdentity `json:"identity,omitempty"`

	// The kind of workbook. Choices are user and shared.
	Kind *Kind `json:"kind,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookResource.
func (w WorkbookResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	w.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (w WorkbookResource) marshalInternal(objectMap map[string]interface{}) {
	w.TrackedResource.marshalInternal(objectMap)
	populate(objectMap, "etag", w.Etag)
	populate(objectMap, "identity", w.Identity)
	populate(objectMap, "kind", w.Kind)
}

// WorkbookResourceIdentity - Identity used for BYOS
type WorkbookResourceIdentity struct {
	ManagedServiceIdentity
}

// WorkbookTemplate - An Application Insights workbook template definition.
type WorkbookTemplate struct {
	WorkbookTemplateResource
	// Metadata describing a workbook template for an Azure resource.
	Properties *WorkbookTemplateProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookTemplate.
func (w WorkbookTemplate) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	w.WorkbookTemplateResource.marshalInternal(objectMap)
	populate(objectMap, "properties", w.Properties)
	return json.Marshal(objectMap)
}

// WorkbookTemplateError - Error message that will indicate why the operation failed.
// Implements the error and azcore.HTTPResponse interfaces.
type WorkbookTemplateError struct {
	raw string
	// Error message object that will indicate why the operation failed.
	InnerError *WorkbookTemplateErrorBody `json:"error,omitempty"`
}

// Error implements the error interface for type WorkbookTemplateError.
// The contents of the error text are not contractual and subject to change.
func (e WorkbookTemplateError) Error() string {
	return e.raw
}

// WorkbookTemplateErrorBody - Error message body that will indicate why the operation failed.
type WorkbookTemplateErrorBody struct {
	// Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
	Code *string `json:"code,omitempty"`

	// The list of invalid fields send in request, in case of validation error.
	Details []*WorkbookTemplateErrorFieldContract `json:"details,omitempty"`

	// Human-readable representation of the error.
	Message *string `json:"message,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookTemplateErrorBody.
func (w WorkbookTemplateErrorBody) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "code", w.Code)
	populate(objectMap, "details", w.Details)
	populate(objectMap, "message", w.Message)
	return json.Marshal(objectMap)
}

// WorkbookTemplateErrorFieldContract - Error Field contract.
type WorkbookTemplateErrorFieldContract struct {
	// Property level error code.
	Code *string `json:"code,omitempty"`

	// Human-readable representation of property-level error.
	Message *string `json:"message,omitempty"`

	// Property name.
	Target *string `json:"target,omitempty"`
}

// WorkbookTemplateGallery - Gallery information for a workbook template.
type WorkbookTemplateGallery struct {
	// Category for the gallery.
	Category *string `json:"category,omitempty"`

	// Name of the workbook template in the gallery.
	Name *string `json:"name,omitempty"`

	// Order of the template within the gallery.
	Order *int32 `json:"order,omitempty"`

	// Azure resource type supported by the gallery.
	ResourceType *string `json:"resourceType,omitempty"`

	// Type of workbook supported by the workbook template.
	Type *string `json:"type,omitempty"`
}

// WorkbookTemplateLocalizedGallery - Localized template data and gallery information.
type WorkbookTemplateLocalizedGallery struct {
	// Workbook galleries supported by the template.
	Galleries []*WorkbookTemplateGallery `json:"galleries,omitempty"`

	// Valid JSON object containing workbook template payload.
	TemplateData map[string]interface{} `json:"templateData,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookTemplateLocalizedGallery.
func (w WorkbookTemplateLocalizedGallery) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "galleries", w.Galleries)
	populate(objectMap, "templateData", w.TemplateData)
	return json.Marshal(objectMap)
}

// WorkbookTemplateProperties - Properties that contain a workbook template.
type WorkbookTemplateProperties struct {
	// REQUIRED; Workbook galleries supported by the template.
	Galleries []*WorkbookTemplateGallery `json:"galleries,omitempty"`

	// REQUIRED; Valid JSON object containing workbook template payload.
	TemplateData map[string]interface{} `json:"templateData,omitempty"`

	// Information about the author of the workbook template.
	Author *string `json:"author,omitempty"`

	// Key value pair of localized gallery. Each key is the locale code of languages supported by the Azure portal.
	Localized map[string][]*WorkbookTemplateLocalizedGallery `json:"localized,omitempty"`

	// Priority of the template. Determines which template to open when a workbook gallery is opened in viewer mode.
	Priority *int32 `json:"priority,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookTemplateProperties.
func (w WorkbookTemplateProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "author", w.Author)
	populate(objectMap, "galleries", w.Galleries)
	populate(objectMap, "localized", w.Localized)
	populate(objectMap, "priority", w.Priority)
	populate(objectMap, "templateData", w.TemplateData)
	return json.Marshal(objectMap)
}

// WorkbookTemplateResource - An azure resource object
type WorkbookTemplateResource struct {
	// REQUIRED; Resource location
	Location *string `json:"location,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Azure resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure resource type
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookTemplateResource.
func (w WorkbookTemplateResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	w.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (w WorkbookTemplateResource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", w.ID)
	populate(objectMap, "location", w.Location)
	populate(objectMap, "name", w.Name)
	populate(objectMap, "tags", w.Tags)
	populate(objectMap, "type", w.Type)
}

// WorkbookTemplateUpdateParameters - The parameters that can be provided when updating workbook template.
type WorkbookTemplateUpdateParameters struct {
	// Metadata describing a workbook for an Azure resource.
	Properties *WorkbookTemplateProperties `json:"properties,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookTemplateUpdateParameters.
func (w WorkbookTemplateUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", w.Properties)
	populate(objectMap, "tags", w.Tags)
	return json.Marshal(objectMap)
}

// WorkbookTemplatesCreateOrUpdateOptions contains the optional parameters for the WorkbookTemplates.CreateOrUpdate method.
type WorkbookTemplatesCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WorkbookTemplatesDeleteOptions contains the optional parameters for the WorkbookTemplates.Delete method.
type WorkbookTemplatesDeleteOptions struct {
	// placeholder for future optional parameters
}

// WorkbookTemplatesGetOptions contains the optional parameters for the WorkbookTemplates.Get method.
type WorkbookTemplatesGetOptions struct {
	// placeholder for future optional parameters
}

// WorkbookTemplatesListByResourceGroupOptions contains the optional parameters for the WorkbookTemplates.ListByResourceGroup method.
type WorkbookTemplatesListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// WorkbookTemplatesListResult - WorkbookTemplate list result.
type WorkbookTemplatesListResult struct {
	// An array of workbook templates.
	Value []*WorkbookTemplate `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookTemplatesListResult.
func (w WorkbookTemplatesListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", w.Value)
	return json.Marshal(objectMap)
}

// WorkbookTemplatesUpdateOptions contains the optional parameters for the WorkbookTemplates.Update method.
type WorkbookTemplatesUpdateOptions struct {
	// Properties that need to be specified to patch a workbook template.
	WorkbookTemplateUpdateParameters *WorkbookTemplateUpdateParameters
}

// WorkbookUpdateParameters - The parameters that can be provided when updating workbook properties properties.
type WorkbookUpdateParameters struct {
	// The kind of workbook. Choices are user and shared.
	Kind *SharedTypeKind `json:"kind,omitempty"`

	// Metadata describing a workbook for an Azure resource.
	Properties *WorkbookPropertiesUpdateParameters `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbookUpdateParameters.
func (w WorkbookUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "kind", w.Kind)
	populate(objectMap, "properties", w.Properties)
	populate(objectMap, "tags", w.Tags)
	return json.Marshal(objectMap)
}

// WorkbooksCreateOrUpdateOptions contains the optional parameters for the Workbooks.CreateOrUpdate method.
type WorkbooksCreateOrUpdateOptions struct {
	// Azure Resource Id that will fetch all linked workbooks.
	SourceID *string
}

// WorkbooksDeleteOptions contains the optional parameters for the Workbooks.Delete method.
type WorkbooksDeleteOptions struct {
	// placeholder for future optional parameters
}

// WorkbooksGetOptions contains the optional parameters for the Workbooks.Get method.
type WorkbooksGetOptions struct {
	// placeholder for future optional parameters
}

// WorkbooksListByResourceGroupOptions contains the optional parameters for the Workbooks.ListByResourceGroup method.
type WorkbooksListByResourceGroupOptions struct {
	// Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks.
	CanFetchContent *bool
	// Azure Resource Id that will fetch all linked workbooks.
	SourceID *string
	// Tags presents on each workbook returned.
	Tags []string
}

// WorkbooksListBySubscriptionOptions contains the optional parameters for the Workbooks.ListBySubscription method.
type WorkbooksListBySubscriptionOptions struct {
	// Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks.
	CanFetchContent *bool
	// Tags presents on each workbook returned.
	Tags []string
}

// WorkbooksListResult - Workbook list result.
type WorkbooksListResult struct {
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; An array of workbooks.
	Value []*Workbook `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkbooksListResult.
func (w WorkbooksListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", w.NextLink)
	populate(objectMap, "value", w.Value)
	return json.Marshal(objectMap)
}

// WorkbooksRevisionGetOptions contains the optional parameters for the Workbooks.RevisionGet method.
type WorkbooksRevisionGetOptions struct {
	// placeholder for future optional parameters
}

// WorkbooksRevisionsListOptions contains the optional parameters for the Workbooks.RevisionsList method.
type WorkbooksRevisionsListOptions struct {
	// placeholder for future optional parameters
}

// WorkbooksUpdateOptions contains the optional parameters for the Workbooks.Update method.
type WorkbooksUpdateOptions struct {
	// Azure Resource Id that will fetch all linked workbooks.
	SourceID *string
	// Properties that need to be specified to create a new workbook.
	WorkbookUpdateParameters *WorkbookUpdateParameters
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
