//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armappplatform

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	credential     azcore.TokenCredential
	options        *arm.ClientOptions
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms
//     part of the URI for every service call.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	_, err := arm.NewClient(moduleName+".ClientFactory", moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID, credential: credential,
		options: options.Clone(),
	}, nil
}

func (c *ClientFactory) NewServicesClient() *ServicesClient {
	subClient, _ := NewServicesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewConfigServersClient() *ConfigServersClient {
	subClient, _ := NewConfigServersClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewConfigurationServicesClient() *ConfigurationServicesClient {
	subClient, _ := NewConfigurationServicesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewServiceRegistriesClient() *ServiceRegistriesClient {
	subClient, _ := NewServiceRegistriesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewApplicationLiveViewsClient() *ApplicationLiveViewsClient {
	subClient, _ := NewApplicationLiveViewsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewDevToolPortalsClient() *DevToolPortalsClient {
	subClient, _ := NewDevToolPortalsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewBuildServiceClient() *BuildServiceClient {
	subClient, _ := NewBuildServiceClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewBuildpackBindingClient() *BuildpackBindingClient {
	subClient, _ := NewBuildpackBindingClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewBuildServiceBuilderClient() *BuildServiceBuilderClient {
	subClient, _ := NewBuildServiceBuilderClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewBuildServiceAgentPoolClient() *BuildServiceAgentPoolClient {
	subClient, _ := NewBuildServiceAgentPoolClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewMonitoringSettingsClient() *MonitoringSettingsClient {
	subClient, _ := NewMonitoringSettingsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewAppsClient() *AppsClient {
	subClient, _ := NewAppsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewBindingsClient() *BindingsClient {
	subClient, _ := NewBindingsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewStoragesClient() *StoragesClient {
	subClient, _ := NewStoragesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewCertificatesClient() *CertificatesClient {
	subClient, _ := NewCertificatesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewCustomDomainsClient() *CustomDomainsClient {
	subClient, _ := NewCustomDomainsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewDeploymentsClient() *DeploymentsClient {
	subClient, _ := NewDeploymentsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	subClient, _ := NewOperationsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewRuntimeVersionsClient() *RuntimeVersionsClient {
	subClient, _ := NewRuntimeVersionsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewSKUsClient() *SKUsClient {
	subClient, _ := NewSKUsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewGatewaysClient() *GatewaysClient {
	subClient, _ := NewGatewaysClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewGatewayRouteConfigsClient() *GatewayRouteConfigsClient {
	subClient, _ := NewGatewayRouteConfigsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewGatewayCustomDomainsClient() *GatewayCustomDomainsClient {
	subClient, _ := NewGatewayCustomDomainsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewAPIPortalsClient() *APIPortalsClient {
	subClient, _ := NewAPIPortalsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewAPIPortalCustomDomainsClient() *APIPortalCustomDomainsClient {
	subClient, _ := NewAPIPortalCustomDomainsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewApplicationAcceleratorsClient() *ApplicationAcceleratorsClient {
	subClient, _ := NewApplicationAcceleratorsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewCustomizedAcceleratorsClient() *CustomizedAcceleratorsClient {
	subClient, _ := NewCustomizedAcceleratorsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPredefinedAcceleratorsClient() *PredefinedAcceleratorsClient {
	subClient, _ := NewPredefinedAcceleratorsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}
