//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armappservice

import "time"

// CertificateOrdersClientBeginCreateOrUpdateCertificateOptions contains the optional parameters for the CertificateOrdersClient.BeginCreateOrUpdateCertificate
// method.
type CertificateOrdersClientBeginCreateOrUpdateCertificateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CertificateOrdersClientBeginCreateOrUpdateOptions contains the optional parameters for the CertificateOrdersClient.BeginCreateOrUpdate
// method.
type CertificateOrdersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CertificateOrdersClientDeleteCertificateOptions contains the optional parameters for the CertificateOrdersClient.DeleteCertificate
// method.
type CertificateOrdersClientDeleteCertificateOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientDeleteOptions contains the optional parameters for the CertificateOrdersClient.Delete method.
type CertificateOrdersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientGetCertificateOptions contains the optional parameters for the CertificateOrdersClient.GetCertificate
// method.
type CertificateOrdersClientGetCertificateOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientGetOptions contains the optional parameters for the CertificateOrdersClient.Get method.
type CertificateOrdersClientGetOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientListByResourceGroupOptions contains the optional parameters for the CertificateOrdersClient.NewListByResourceGroupPager
// method.
type CertificateOrdersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientListCertificatesOptions contains the optional parameters for the CertificateOrdersClient.NewListCertificatesPager
// method.
type CertificateOrdersClientListCertificatesOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientListOptions contains the optional parameters for the CertificateOrdersClient.NewListPager method.
type CertificateOrdersClientListOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientReissueOptions contains the optional parameters for the CertificateOrdersClient.Reissue method.
type CertificateOrdersClientReissueOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientRenewOptions contains the optional parameters for the CertificateOrdersClient.Renew method.
type CertificateOrdersClientRenewOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientResendEmailOptions contains the optional parameters for the CertificateOrdersClient.ResendEmail
// method.
type CertificateOrdersClientResendEmailOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientResendRequestEmailsOptions contains the optional parameters for the CertificateOrdersClient.ResendRequestEmails
// method.
type CertificateOrdersClientResendRequestEmailsOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientRetrieveCertificateActionsOptions contains the optional parameters for the CertificateOrdersClient.RetrieveCertificateActions
// method.
type CertificateOrdersClientRetrieveCertificateActionsOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientRetrieveCertificateEmailHistoryOptions contains the optional parameters for the CertificateOrdersClient.RetrieveCertificateEmailHistory
// method.
type CertificateOrdersClientRetrieveCertificateEmailHistoryOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientRetrieveSiteSealOptions contains the optional parameters for the CertificateOrdersClient.RetrieveSiteSeal
// method.
type CertificateOrdersClientRetrieveSiteSealOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientUpdateCertificateOptions contains the optional parameters for the CertificateOrdersClient.UpdateCertificate
// method.
type CertificateOrdersClientUpdateCertificateOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientUpdateOptions contains the optional parameters for the CertificateOrdersClient.Update method.
type CertificateOrdersClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientValidatePurchaseInformationOptions contains the optional parameters for the CertificateOrdersClient.ValidatePurchaseInformation
// method.
type CertificateOrdersClientValidatePurchaseInformationOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersClientVerifyDomainOwnershipOptions contains the optional parameters for the CertificateOrdersClient.VerifyDomainOwnership
// method.
type CertificateOrdersClientVerifyDomainOwnershipOptions struct {
	// placeholder for future optional parameters
}

// CertificateOrdersDiagnosticsClientGetAppServiceCertificateOrderDetectorResponseOptions contains the optional parameters
// for the CertificateOrdersDiagnosticsClient.GetAppServiceCertificateOrderDetectorResponse method.
type CertificateOrdersDiagnosticsClientGetAppServiceCertificateOrderDetectorResponseOptions struct {
	// The end time for the detector response.
	EndTime *time.Time

	// The start time for detector response.
	StartTime *time.Time

	// The time grain for the detector response.
	TimeGrain *string
}

// CertificateOrdersDiagnosticsClientListAppServiceCertificateOrderDetectorResponseOptions contains the optional parameters
// for the CertificateOrdersDiagnosticsClient.NewListAppServiceCertificateOrderDetectorResponsePager method.
type CertificateOrdersDiagnosticsClientListAppServiceCertificateOrderDetectorResponseOptions struct {
	// placeholder for future optional parameters
}

// CertificateRegistrationProviderClientListOperationsOptions contains the optional parameters for the CertificateRegistrationProviderClient.NewListOperationsPager
// method.
type CertificateRegistrationProviderClientListOperationsOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientCreateOrUpdateOptions contains the optional parameters for the CertificatesClient.CreateOrUpdate method.
type CertificatesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientDeleteOptions contains the optional parameters for the CertificatesClient.Delete method.
type CertificatesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientGetOptions contains the optional parameters for the CertificatesClient.Get method.
type CertificatesClientGetOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientListByResourceGroupOptions contains the optional parameters for the CertificatesClient.NewListByResourceGroupPager
// method.
type CertificatesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// CertificatesClientListOptions contains the optional parameters for the CertificatesClient.NewListPager method.
type CertificatesClientListOptions struct {
	// Return only information specified in the filter (using OData syntax). For example: $filter=KeyVaultId eq 'KeyVaultId'
	Filter *string
}

// CertificatesClientUpdateOptions contains the optional parameters for the CertificatesClient.Update method.
type CertificatesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientBeginCreateOrUpdateOptions contains the optional parameters for the ContainerAppsClient.BeginCreateOrUpdate
// method.
type ContainerAppsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ContainerAppsClientBeginDeleteOptions contains the optional parameters for the ContainerAppsClient.BeginDelete method.
type ContainerAppsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ContainerAppsClientGetOptions contains the optional parameters for the ContainerAppsClient.Get method.
type ContainerAppsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientListByResourceGroupOptions contains the optional parameters for the ContainerAppsClient.NewListByResourceGroupPager
// method.
type ContainerAppsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientListBySubscriptionOptions contains the optional parameters for the ContainerAppsClient.NewListBySubscriptionPager
// method.
type ContainerAppsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsClientListSecretsOptions contains the optional parameters for the ContainerAppsClient.ListSecrets method.
type ContainerAppsClientListSecretsOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientActivateRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.ActivateRevision
// method.
type ContainerAppsRevisionsClientActivateRevisionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientDeactivateRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.DeactivateRevision
// method.
type ContainerAppsRevisionsClientDeactivateRevisionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientGetRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.GetRevision
// method.
type ContainerAppsRevisionsClientGetRevisionOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientListRevisionsOptions contains the optional parameters for the ContainerAppsRevisionsClient.NewListRevisionsPager
// method.
type ContainerAppsRevisionsClientListRevisionsOptions struct {
	// placeholder for future optional parameters
}

// ContainerAppsRevisionsClientRestartRevisionOptions contains the optional parameters for the ContainerAppsRevisionsClient.RestartRevision
// method.
type ContainerAppsRevisionsClientRestartRevisionOptions struct {
	// placeholder for future optional parameters
}

// DeletedWebAppsClientGetDeletedWebAppByLocationOptions contains the optional parameters for the DeletedWebAppsClient.GetDeletedWebAppByLocation
// method.
type DeletedWebAppsClientGetDeletedWebAppByLocationOptions struct {
	// placeholder for future optional parameters
}

// DeletedWebAppsClientListByLocationOptions contains the optional parameters for the DeletedWebAppsClient.NewListByLocationPager
// method.
type DeletedWebAppsClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// DeletedWebAppsClientListOptions contains the optional parameters for the DeletedWebAppsClient.NewListPager method.
type DeletedWebAppsClientListOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientExecuteSiteAnalysisOptions contains the optional parameters for the DiagnosticsClient.ExecuteSiteAnalysis
// method.
type DiagnosticsClientExecuteSiteAnalysisOptions struct {
	// End Time
	EndTime *time.Time

	// Start Time
	StartTime *time.Time

	// Time Grain
	TimeGrain *string
}

// DiagnosticsClientExecuteSiteAnalysisSlotOptions contains the optional parameters for the DiagnosticsClient.ExecuteSiteAnalysisSlot
// method.
type DiagnosticsClientExecuteSiteAnalysisSlotOptions struct {
	// End Time
	EndTime *time.Time

	// Start Time
	StartTime *time.Time

	// Time Grain
	TimeGrain *string
}

// DiagnosticsClientExecuteSiteDetectorOptions contains the optional parameters for the DiagnosticsClient.ExecuteSiteDetector
// method.
type DiagnosticsClientExecuteSiteDetectorOptions struct {
	// End Time
	EndTime *time.Time

	// Start Time
	StartTime *time.Time

	// Time Grain
	TimeGrain *string
}

// DiagnosticsClientExecuteSiteDetectorSlotOptions contains the optional parameters for the DiagnosticsClient.ExecuteSiteDetectorSlot
// method.
type DiagnosticsClientExecuteSiteDetectorSlotOptions struct {
	// End Time
	EndTime *time.Time

	// Start Time
	StartTime *time.Time

	// Time Grain
	TimeGrain *string
}

// DiagnosticsClientGetHostingEnvironmentDetectorResponseOptions contains the optional parameters for the DiagnosticsClient.GetHostingEnvironmentDetectorResponse
// method.
type DiagnosticsClientGetHostingEnvironmentDetectorResponseOptions struct {
	// End Time
	EndTime *time.Time

	// Start Time
	StartTime *time.Time

	// Time Grain
	TimeGrain *string
}

// DiagnosticsClientGetSiteAnalysisOptions contains the optional parameters for the DiagnosticsClient.GetSiteAnalysis method.
type DiagnosticsClientGetSiteAnalysisOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientGetSiteAnalysisSlotOptions contains the optional parameters for the DiagnosticsClient.GetSiteAnalysisSlot
// method.
type DiagnosticsClientGetSiteAnalysisSlotOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientGetSiteDetectorOptions contains the optional parameters for the DiagnosticsClient.GetSiteDetector method.
type DiagnosticsClientGetSiteDetectorOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientGetSiteDetectorResponseOptions contains the optional parameters for the DiagnosticsClient.GetSiteDetectorResponse
// method.
type DiagnosticsClientGetSiteDetectorResponseOptions struct {
	// End Time
	EndTime *time.Time

	// Start Time
	StartTime *time.Time

	// Time Grain
	TimeGrain *string
}

// DiagnosticsClientGetSiteDetectorResponseSlotOptions contains the optional parameters for the DiagnosticsClient.GetSiteDetectorResponseSlot
// method.
type DiagnosticsClientGetSiteDetectorResponseSlotOptions struct {
	// End Time
	EndTime *time.Time

	// Start Time
	StartTime *time.Time

	// Time Grain
	TimeGrain *string
}

// DiagnosticsClientGetSiteDetectorSlotOptions contains the optional parameters for the DiagnosticsClient.GetSiteDetectorSlot
// method.
type DiagnosticsClientGetSiteDetectorSlotOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientGetSiteDiagnosticCategoryOptions contains the optional parameters for the DiagnosticsClient.GetSiteDiagnosticCategory
// method.
type DiagnosticsClientGetSiteDiagnosticCategoryOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientGetSiteDiagnosticCategorySlotOptions contains the optional parameters for the DiagnosticsClient.GetSiteDiagnosticCategorySlot
// method.
type DiagnosticsClientGetSiteDiagnosticCategorySlotOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListHostingEnvironmentDetectorResponsesOptions contains the optional parameters for the DiagnosticsClient.NewListHostingEnvironmentDetectorResponsesPager
// method.
type DiagnosticsClientListHostingEnvironmentDetectorResponsesOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteAnalysesOptions contains the optional parameters for the DiagnosticsClient.NewListSiteAnalysesPager
// method.
type DiagnosticsClientListSiteAnalysesOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteAnalysesSlotOptions contains the optional parameters for the DiagnosticsClient.NewListSiteAnalysesSlotPager
// method.
type DiagnosticsClientListSiteAnalysesSlotOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteDetectorResponsesOptions contains the optional parameters for the DiagnosticsClient.NewListSiteDetectorResponsesPager
// method.
type DiagnosticsClientListSiteDetectorResponsesOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteDetectorResponsesSlotOptions contains the optional parameters for the DiagnosticsClient.NewListSiteDetectorResponsesSlotPager
// method.
type DiagnosticsClientListSiteDetectorResponsesSlotOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteDetectorsOptions contains the optional parameters for the DiagnosticsClient.NewListSiteDetectorsPager
// method.
type DiagnosticsClientListSiteDetectorsOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteDetectorsSlotOptions contains the optional parameters for the DiagnosticsClient.NewListSiteDetectorsSlotPager
// method.
type DiagnosticsClientListSiteDetectorsSlotOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteDiagnosticCategoriesOptions contains the optional parameters for the DiagnosticsClient.NewListSiteDiagnosticCategoriesPager
// method.
type DiagnosticsClientListSiteDiagnosticCategoriesOptions struct {
	// placeholder for future optional parameters
}

// DiagnosticsClientListSiteDiagnosticCategoriesSlotOptions contains the optional parameters for the DiagnosticsClient.NewListSiteDiagnosticCategoriesSlotPager
// method.
type DiagnosticsClientListSiteDiagnosticCategoriesSlotOptions struct {
	// placeholder for future optional parameters
}

// DomainRegistrationProviderClientListOperationsOptions contains the optional parameters for the DomainRegistrationProviderClient.NewListOperationsPager
// method.
type DomainRegistrationProviderClientListOperationsOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientBeginCreateOrUpdateOptions contains the optional parameters for the DomainsClient.BeginCreateOrUpdate method.
type DomainsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DomainsClientCheckAvailabilityOptions contains the optional parameters for the DomainsClient.CheckAvailability method.
type DomainsClientCheckAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientCreateOrUpdateOwnershipIdentifierOptions contains the optional parameters for the DomainsClient.CreateOrUpdateOwnershipIdentifier
// method.
type DomainsClientCreateOrUpdateOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientDeleteOptions contains the optional parameters for the DomainsClient.Delete method.
type DomainsClientDeleteOptions struct {
	// Specify true to delete the domain immediately. The default is false which deletes the domain after 24 hours.
	ForceHardDeleteDomain *bool
}

// DomainsClientDeleteOwnershipIdentifierOptions contains the optional parameters for the DomainsClient.DeleteOwnershipIdentifier
// method.
type DomainsClientDeleteOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientGetControlCenterSsoRequestOptions contains the optional parameters for the DomainsClient.GetControlCenterSsoRequest
// method.
type DomainsClientGetControlCenterSsoRequestOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientGetOptions contains the optional parameters for the DomainsClient.Get method.
type DomainsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientGetOwnershipIdentifierOptions contains the optional parameters for the DomainsClient.GetOwnershipIdentifier
// method.
type DomainsClientGetOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientListByResourceGroupOptions contains the optional parameters for the DomainsClient.NewListByResourceGroupPager
// method.
type DomainsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientListOptions contains the optional parameters for the DomainsClient.NewListPager method.
type DomainsClientListOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientListOwnershipIdentifiersOptions contains the optional parameters for the DomainsClient.NewListOwnershipIdentifiersPager
// method.
type DomainsClientListOwnershipIdentifiersOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientListRecommendationsOptions contains the optional parameters for the DomainsClient.NewListRecommendationsPager
// method.
type DomainsClientListRecommendationsOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientRenewOptions contains the optional parameters for the DomainsClient.Renew method.
type DomainsClientRenewOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientTransferOutOptions contains the optional parameters for the DomainsClient.TransferOut method.
type DomainsClientTransferOutOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientUpdateOptions contains the optional parameters for the DomainsClient.Update method.
type DomainsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientUpdateOwnershipIdentifierOptions contains the optional parameters for the DomainsClient.UpdateOwnershipIdentifier
// method.
type DomainsClientUpdateOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientBeginApproveOrRejectPrivateEndpointConnectionOptions contains the optional parameters for the EnvironmentsClient.BeginApproveOrRejectPrivateEndpointConnection
// method.
type EnvironmentsClientBeginApproveOrRejectPrivateEndpointConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginChangeVnetOptions contains the optional parameters for the EnvironmentsClient.BeginChangeVnet method.
type EnvironmentsClientBeginChangeVnetOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginCreateOrUpdateMultiRolePoolOptions contains the optional parameters for the EnvironmentsClient.BeginCreateOrUpdateMultiRolePool
// method.
type EnvironmentsClientBeginCreateOrUpdateMultiRolePoolOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginCreateOrUpdateOptions contains the optional parameters for the EnvironmentsClient.BeginCreateOrUpdate
// method.
type EnvironmentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginCreateOrUpdateWorkerPoolOptions contains the optional parameters for the EnvironmentsClient.BeginCreateOrUpdateWorkerPool
// method.
type EnvironmentsClientBeginCreateOrUpdateWorkerPoolOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginDeleteOptions contains the optional parameters for the EnvironmentsClient.BeginDelete method.
type EnvironmentsClientBeginDeleteOptions struct {
	// Specify true to force the deletion even if the App Service Environment contains resources. The default is false.
	ForceDelete *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginDeletePrivateEndpointConnectionOptions contains the optional parameters for the EnvironmentsClient.BeginDeletePrivateEndpointConnection
// method.
type EnvironmentsClientBeginDeletePrivateEndpointConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginResumeOptions contains the optional parameters for the EnvironmentsClient.BeginResume method.
type EnvironmentsClientBeginResumeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginSuspendOptions contains the optional parameters for the EnvironmentsClient.BeginSuspend method.
type EnvironmentsClientBeginSuspendOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginUpgradeOptions contains the optional parameters for the EnvironmentsClient.BeginUpgrade method.
type EnvironmentsClientBeginUpgradeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientDeleteAseCustomDNSSuffixConfigurationOptions contains the optional parameters for the EnvironmentsClient.DeleteAseCustomDNSSuffixConfiguration
// method.
type EnvironmentsClientDeleteAseCustomDNSSuffixConfigurationOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetAseCustomDNSSuffixConfigurationOptions contains the optional parameters for the EnvironmentsClient.GetAseCustomDNSSuffixConfiguration
// method.
type EnvironmentsClientGetAseCustomDNSSuffixConfigurationOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetAseV3NetworkingConfigurationOptions contains the optional parameters for the EnvironmentsClient.GetAseV3NetworkingConfiguration
// method.
type EnvironmentsClientGetAseV3NetworkingConfigurationOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetDiagnosticsItemOptions contains the optional parameters for the EnvironmentsClient.GetDiagnosticsItem
// method.
type EnvironmentsClientGetDiagnosticsItemOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetInboundNetworkDependenciesEndpointsOptions contains the optional parameters for the EnvironmentsClient.NewGetInboundNetworkDependenciesEndpointsPager
// method.
type EnvironmentsClientGetInboundNetworkDependenciesEndpointsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetMultiRolePoolOptions contains the optional parameters for the EnvironmentsClient.GetMultiRolePool
// method.
type EnvironmentsClientGetMultiRolePoolOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetOptions contains the optional parameters for the EnvironmentsClient.Get method.
type EnvironmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetOutboundNetworkDependenciesEndpointsOptions contains the optional parameters for the EnvironmentsClient.NewGetOutboundNetworkDependenciesEndpointsPager
// method.
type EnvironmentsClientGetOutboundNetworkDependenciesEndpointsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetPrivateEndpointConnectionListOptions contains the optional parameters for the EnvironmentsClient.NewGetPrivateEndpointConnectionListPager
// method.
type EnvironmentsClientGetPrivateEndpointConnectionListOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetPrivateEndpointConnectionOptions contains the optional parameters for the EnvironmentsClient.GetPrivateEndpointConnection
// method.
type EnvironmentsClientGetPrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetPrivateLinkResourcesOptions contains the optional parameters for the EnvironmentsClient.GetPrivateLinkResources
// method.
type EnvironmentsClientGetPrivateLinkResourcesOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetVipInfoOptions contains the optional parameters for the EnvironmentsClient.GetVipInfo method.
type EnvironmentsClientGetVipInfoOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetWorkerPoolOptions contains the optional parameters for the EnvironmentsClient.GetWorkerPool method.
type EnvironmentsClientGetWorkerPoolOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListAppServicePlansOptions contains the optional parameters for the EnvironmentsClient.NewListAppServicePlansPager
// method.
type EnvironmentsClientListAppServicePlansOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListByResourceGroupOptions contains the optional parameters for the EnvironmentsClient.NewListByResourceGroupPager
// method.
type EnvironmentsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListCapacitiesOptions contains the optional parameters for the EnvironmentsClient.NewListCapacitiesPager
// method.
type EnvironmentsClientListCapacitiesOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListDiagnosticsOptions contains the optional parameters for the EnvironmentsClient.ListDiagnostics method.
type EnvironmentsClientListDiagnosticsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListMultiRoleMetricDefinitionsOptions contains the optional parameters for the EnvironmentsClient.NewListMultiRoleMetricDefinitionsPager
// method.
type EnvironmentsClientListMultiRoleMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListMultiRolePoolInstanceMetricDefinitionsOptions contains the optional parameters for the EnvironmentsClient.NewListMultiRolePoolInstanceMetricDefinitionsPager
// method.
type EnvironmentsClientListMultiRolePoolInstanceMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListMultiRolePoolSKUsOptions contains the optional parameters for the EnvironmentsClient.NewListMultiRolePoolSKUsPager
// method.
type EnvironmentsClientListMultiRolePoolSKUsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListMultiRolePoolsOptions contains the optional parameters for the EnvironmentsClient.NewListMultiRolePoolsPager
// method.
type EnvironmentsClientListMultiRolePoolsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListMultiRoleUsagesOptions contains the optional parameters for the EnvironmentsClient.NewListMultiRoleUsagesPager
// method.
type EnvironmentsClientListMultiRoleUsagesOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListOperationsOptions contains the optional parameters for the EnvironmentsClient.ListOperations method.
type EnvironmentsClientListOperationsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListOptions contains the optional parameters for the EnvironmentsClient.NewListPager method.
type EnvironmentsClientListOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListUsagesOptions contains the optional parameters for the EnvironmentsClient.NewListUsagesPager method.
type EnvironmentsClientListUsagesOptions struct {
	// Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1'
	// or name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and
	// endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
	Filter *string
}

// EnvironmentsClientListWebAppsOptions contains the optional parameters for the EnvironmentsClient.NewListWebAppsPager method.
type EnvironmentsClientListWebAppsOptions struct {
	// Comma separated list of app properties to include.
	PropertiesToInclude *string
}

// EnvironmentsClientListWebWorkerMetricDefinitionsOptions contains the optional parameters for the EnvironmentsClient.NewListWebWorkerMetricDefinitionsPager
// method.
type EnvironmentsClientListWebWorkerMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListWebWorkerUsagesOptions contains the optional parameters for the EnvironmentsClient.NewListWebWorkerUsagesPager
// method.
type EnvironmentsClientListWebWorkerUsagesOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListWorkerPoolInstanceMetricDefinitionsOptions contains the optional parameters for the EnvironmentsClient.NewListWorkerPoolInstanceMetricDefinitionsPager
// method.
type EnvironmentsClientListWorkerPoolInstanceMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListWorkerPoolSKUsOptions contains the optional parameters for the EnvironmentsClient.NewListWorkerPoolSKUsPager
// method.
type EnvironmentsClientListWorkerPoolSKUsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListWorkerPoolsOptions contains the optional parameters for the EnvironmentsClient.NewListWorkerPoolsPager
// method.
type EnvironmentsClientListWorkerPoolsOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientRebootOptions contains the optional parameters for the EnvironmentsClient.Reboot method.
type EnvironmentsClientRebootOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientTestUpgradeAvailableNotificationOptions contains the optional parameters for the EnvironmentsClient.TestUpgradeAvailableNotification
// method.
type EnvironmentsClientTestUpgradeAvailableNotificationOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientUpdateAseCustomDNSSuffixConfigurationOptions contains the optional parameters for the EnvironmentsClient.UpdateAseCustomDNSSuffixConfiguration
// method.
type EnvironmentsClientUpdateAseCustomDNSSuffixConfigurationOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientUpdateAseNetworkingConfigurationOptions contains the optional parameters for the EnvironmentsClient.UpdateAseNetworkingConfiguration
// method.
type EnvironmentsClientUpdateAseNetworkingConfigurationOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientUpdateMultiRolePoolOptions contains the optional parameters for the EnvironmentsClient.UpdateMultiRolePool
// method.
type EnvironmentsClientUpdateMultiRolePoolOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientUpdateOptions contains the optional parameters for the EnvironmentsClient.Update method.
type EnvironmentsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientUpdateWorkerPoolOptions contains the optional parameters for the EnvironmentsClient.UpdateWorkerPool
// method.
type EnvironmentsClientUpdateWorkerPoolOptions struct {
	// placeholder for future optional parameters
}

// GetUsagesInLocationClientListOptions contains the optional parameters for the GetUsagesInLocationClient.NewListPager method.
type GetUsagesInLocationClientListOptions struct {
	// placeholder for future optional parameters
}

// GlobalClientGetDeletedWebAppOptions contains the optional parameters for the GlobalClient.GetDeletedWebApp method.
type GlobalClientGetDeletedWebAppOptions struct {
	// placeholder for future optional parameters
}

// GlobalClientGetDeletedWebAppSnapshotsOptions contains the optional parameters for the GlobalClient.GetDeletedWebAppSnapshots
// method.
type GlobalClientGetDeletedWebAppSnapshotsOptions struct {
	// placeholder for future optional parameters
}

// GlobalClientGetSubscriptionOperationWithAsyncResponseOptions contains the optional parameters for the GlobalClient.GetSubscriptionOperationWithAsyncResponse
// method.
type GlobalClientGetSubscriptionOperationWithAsyncResponseOptions struct {
	// placeholder for future optional parameters
}

// KubeEnvironmentsClientBeginCreateOrUpdateOptions contains the optional parameters for the KubeEnvironmentsClient.BeginCreateOrUpdate
// method.
type KubeEnvironmentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// KubeEnvironmentsClientBeginDeleteOptions contains the optional parameters for the KubeEnvironmentsClient.BeginDelete method.
type KubeEnvironmentsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// KubeEnvironmentsClientGetOptions contains the optional parameters for the KubeEnvironmentsClient.Get method.
type KubeEnvironmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// KubeEnvironmentsClientListByResourceGroupOptions contains the optional parameters for the KubeEnvironmentsClient.NewListByResourceGroupPager
// method.
type KubeEnvironmentsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// KubeEnvironmentsClientListBySubscriptionOptions contains the optional parameters for the KubeEnvironmentsClient.NewListBySubscriptionPager
// method.
type KubeEnvironmentsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// KubeEnvironmentsClientUpdateOptions contains the optional parameters for the KubeEnvironmentsClient.Update method.
type KubeEnvironmentsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PlansClientBeginCreateOrUpdateOptions contains the optional parameters for the PlansClient.BeginCreateOrUpdate method.
type PlansClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PlansClientCreateOrUpdateVnetRouteOptions contains the optional parameters for the PlansClient.CreateOrUpdateVnetRoute
// method.
type PlansClientCreateOrUpdateVnetRouteOptions struct {
	// placeholder for future optional parameters
}

// PlansClientDeleteHybridConnectionOptions contains the optional parameters for the PlansClient.DeleteHybridConnection method.
type PlansClientDeleteHybridConnectionOptions struct {
	// placeholder for future optional parameters
}

// PlansClientDeleteOptions contains the optional parameters for the PlansClient.Delete method.
type PlansClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PlansClientDeleteVnetRouteOptions contains the optional parameters for the PlansClient.DeleteVnetRoute method.
type PlansClientDeleteVnetRouteOptions struct {
	// placeholder for future optional parameters
}

// PlansClientGetHybridConnectionOptions contains the optional parameters for the PlansClient.GetHybridConnection method.
type PlansClientGetHybridConnectionOptions struct {
	// placeholder for future optional parameters
}

// PlansClientGetHybridConnectionPlanLimitOptions contains the optional parameters for the PlansClient.GetHybridConnectionPlanLimit
// method.
type PlansClientGetHybridConnectionPlanLimitOptions struct {
	// placeholder for future optional parameters
}

// PlansClientGetOptions contains the optional parameters for the PlansClient.Get method.
type PlansClientGetOptions struct {
	// placeholder for future optional parameters
}

// PlansClientGetRouteForVnetOptions contains the optional parameters for the PlansClient.GetRouteForVnet method.
type PlansClientGetRouteForVnetOptions struct {
	// placeholder for future optional parameters
}

// PlansClientGetServerFarmSKUsOptions contains the optional parameters for the PlansClient.GetServerFarmSKUs method.
type PlansClientGetServerFarmSKUsOptions struct {
	// placeholder for future optional parameters
}

// PlansClientGetVnetFromServerFarmOptions contains the optional parameters for the PlansClient.GetVnetFromServerFarm method.
type PlansClientGetVnetFromServerFarmOptions struct {
	// placeholder for future optional parameters
}

// PlansClientGetVnetGatewayOptions contains the optional parameters for the PlansClient.GetVnetGateway method.
type PlansClientGetVnetGatewayOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListByResourceGroupOptions contains the optional parameters for the PlansClient.NewListByResourceGroupPager
// method.
type PlansClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListCapabilitiesOptions contains the optional parameters for the PlansClient.ListCapabilities method.
type PlansClientListCapabilitiesOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListHybridConnectionKeysOptions contains the optional parameters for the PlansClient.ListHybridConnectionKeys
// method.
type PlansClientListHybridConnectionKeysOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListHybridConnectionsOptions contains the optional parameters for the PlansClient.NewListHybridConnectionsPager
// method.
type PlansClientListHybridConnectionsOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListOptions contains the optional parameters for the PlansClient.NewListPager method.
type PlansClientListOptions struct {
	// Specify true to return all App Service plan properties. The default is false, which returns a subset of the properties.
	// Retrieval of all properties may increase the API latency.
	Detailed *bool
}

// PlansClientListRoutesForVnetOptions contains the optional parameters for the PlansClient.ListRoutesForVnet method.
type PlansClientListRoutesForVnetOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListUsagesOptions contains the optional parameters for the PlansClient.NewListUsagesPager method.
type PlansClientListUsagesOptions struct {
	// Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1'
	// or name.value eq 'Metric2').
	Filter *string
}

// PlansClientListVnetsOptions contains the optional parameters for the PlansClient.ListVnets method.
type PlansClientListVnetsOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListWebAppsByHybridConnectionOptions contains the optional parameters for the PlansClient.NewListWebAppsByHybridConnectionPager
// method.
type PlansClientListWebAppsByHybridConnectionOptions struct {
	// placeholder for future optional parameters
}

// PlansClientListWebAppsOptions contains the optional parameters for the PlansClient.NewListWebAppsPager method.
type PlansClientListWebAppsOptions struct {
	// Supported filter: $filter=state eq running. Returns only web apps that are currently running
	Filter *string

	// Skip to a web app in the list of webapps associated with app service plan. If specified, the resulting list will contain
	// web apps starting from (including) the skipToken. Otherwise, the resulting list
	// contains web apps from the start of the list
	SkipToken *string

	// List page size. If specified, results are paged.
	Top *string
}

// PlansClientRebootWorkerOptions contains the optional parameters for the PlansClient.RebootWorker method.
type PlansClientRebootWorkerOptions struct {
	// placeholder for future optional parameters
}

// PlansClientRestartWebAppsOptions contains the optional parameters for the PlansClient.RestartWebApps method.
type PlansClientRestartWebAppsOptions struct {
	// Specify true to perform a soft restart, applies the configuration settings and restarts the apps if necessary. The default
	// is false, which always restarts and reprovisions the apps
	SoftRestart *bool
}

// PlansClientUpdateOptions contains the optional parameters for the PlansClient.Update method.
type PlansClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PlansClientUpdateVnetGatewayOptions contains the optional parameters for the PlansClient.UpdateVnetGateway method.
type PlansClientUpdateVnetGatewayOptions struct {
	// placeholder for future optional parameters
}

// PlansClientUpdateVnetRouteOptions contains the optional parameters for the PlansClient.UpdateVnetRoute method.
type PlansClientUpdateVnetRouteOptions struct {
	// placeholder for future optional parameters
}

// ProviderClientGetAvailableStacksOnPremOptions contains the optional parameters for the ProviderClient.NewGetAvailableStacksOnPremPager
// method.
type ProviderClientGetAvailableStacksOnPremOptions struct {
	OSTypeSelected *ProviderOsTypeSelected
}

// ProviderClientGetAvailableStacksOptions contains the optional parameters for the ProviderClient.NewGetAvailableStacksPager
// method.
type ProviderClientGetAvailableStacksOptions struct {
	OSTypeSelected *ProviderOsTypeSelected
}

// ProviderClientGetFunctionAppStacksForLocationOptions contains the optional parameters for the ProviderClient.NewGetFunctionAppStacksForLocationPager
// method.
type ProviderClientGetFunctionAppStacksForLocationOptions struct {
	// Stack OS Type
	StackOsType *ProviderStackOsType
}

// ProviderClientGetFunctionAppStacksOptions contains the optional parameters for the ProviderClient.NewGetFunctionAppStacksPager
// method.
type ProviderClientGetFunctionAppStacksOptions struct {
	// Stack OS Type
	StackOsType *ProviderStackOsType
}

// ProviderClientGetWebAppStacksForLocationOptions contains the optional parameters for the ProviderClient.NewGetWebAppStacksForLocationPager
// method.
type ProviderClientGetWebAppStacksForLocationOptions struct {
	// Stack OS Type
	StackOsType *ProviderStackOsType
}

// ProviderClientGetWebAppStacksOptions contains the optional parameters for the ProviderClient.NewGetWebAppStacksPager method.
type ProviderClientGetWebAppStacksOptions struct {
	// Stack OS Type
	StackOsType *ProviderStackOsType
}

// ProviderClientListOperationsOptions contains the optional parameters for the ProviderClient.NewListOperationsPager method.
type ProviderClientListOperationsOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientDisableAllForHostingEnvironmentOptions contains the optional parameters for the RecommendationsClient.DisableAllForHostingEnvironment
// method.
type RecommendationsClientDisableAllForHostingEnvironmentOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientDisableAllForWebAppOptions contains the optional parameters for the RecommendationsClient.DisableAllForWebApp
// method.
type RecommendationsClientDisableAllForWebAppOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientDisableRecommendationForHostingEnvironmentOptions contains the optional parameters for the RecommendationsClient.DisableRecommendationForHostingEnvironment
// method.
type RecommendationsClientDisableRecommendationForHostingEnvironmentOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientDisableRecommendationForSiteOptions contains the optional parameters for the RecommendationsClient.DisableRecommendationForSite
// method.
type RecommendationsClientDisableRecommendationForSiteOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientDisableRecommendationForSubscriptionOptions contains the optional parameters for the RecommendationsClient.DisableRecommendationForSubscription
// method.
type RecommendationsClientDisableRecommendationForSubscriptionOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientGetRuleDetailsByHostingEnvironmentOptions contains the optional parameters for the RecommendationsClient.GetRuleDetailsByHostingEnvironment
// method.
type RecommendationsClientGetRuleDetailsByHostingEnvironmentOptions struct {
	// The GUID of the recommendation object if you query an expired one. You don't need to specify it to query an active entry.
	RecommendationID *string

	// Specify true to update the last-seen timestamp of the recommendation object.
	UpdateSeen *bool
}

// RecommendationsClientGetRuleDetailsByWebAppOptions contains the optional parameters for the RecommendationsClient.GetRuleDetailsByWebApp
// method.
type RecommendationsClientGetRuleDetailsByWebAppOptions struct {
	// The GUID of the recommendation object if you query an expired one. You don't need to specify it to query an active entry.
	RecommendationID *string

	// Specify true to update the last-seen timestamp of the recommendation object.
	UpdateSeen *bool
}

// RecommendationsClientListHistoryForHostingEnvironmentOptions contains the optional parameters for the RecommendationsClient.NewListHistoryForHostingEnvironmentPager
// method.
type RecommendationsClientListHistoryForHostingEnvironmentOptions struct {
	// Specify false to return all recommendations. The default is true, which returns only expired recommendations.
	ExpiredOnly *bool

	// Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime
	// eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
	// duration'[PT1H|PT1M|P1D]
	Filter *string
}

// RecommendationsClientListHistoryForWebAppOptions contains the optional parameters for the RecommendationsClient.NewListHistoryForWebAppPager
// method.
type RecommendationsClientListHistoryForWebAppOptions struct {
	// Specify false to return all recommendations. The default is true, which returns only expired recommendations.
	ExpiredOnly *bool

	// Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime
	// eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
	// duration'[PT1H|PT1M|P1D]
	Filter *string
}

// RecommendationsClientListOptions contains the optional parameters for the RecommendationsClient.NewListPager method.
type RecommendationsClientListOptions struct {
	// Specify true to return only the most critical recommendations. The default is false, which returns all recommendations.
	Featured *bool

	// Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime
	// eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
	// duration'[PT1H|PT1M|P1D]
	Filter *string
}

// RecommendationsClientListRecommendedRulesForHostingEnvironmentOptions contains the optional parameters for the RecommendationsClient.NewListRecommendedRulesForHostingEnvironmentPager
// method.
type RecommendationsClientListRecommendedRulesForHostingEnvironmentOptions struct {
	// Specify true to return only the most critical recommendations. The default is false, which returns all recommendations.
	Featured *bool

	// Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channel eq 'Api'
	// or channel eq 'Notification'
	Filter *string
}

// RecommendationsClientListRecommendedRulesForWebAppOptions contains the optional parameters for the RecommendationsClient.NewListRecommendedRulesForWebAppPager
// method.
type RecommendationsClientListRecommendedRulesForWebAppOptions struct {
	// Specify true to return only the most critical recommendations. The default is false, which returns all recommendations.
	Featured *bool

	// Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channel eq 'Api'
	// or channel eq 'Notification'
	Filter *string
}

// RecommendationsClientResetAllFiltersForHostingEnvironmentOptions contains the optional parameters for the RecommendationsClient.ResetAllFiltersForHostingEnvironment
// method.
type RecommendationsClientResetAllFiltersForHostingEnvironmentOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientResetAllFiltersForWebAppOptions contains the optional parameters for the RecommendationsClient.ResetAllFiltersForWebApp
// method.
type RecommendationsClientResetAllFiltersForWebAppOptions struct {
	// placeholder for future optional parameters
}

// RecommendationsClientResetAllFiltersOptions contains the optional parameters for the RecommendationsClient.ResetAllFilters
// method.
type RecommendationsClientResetAllFiltersOptions struct {
	// placeholder for future optional parameters
}

// ResourceHealthMetadataClientGetBySiteOptions contains the optional parameters for the ResourceHealthMetadataClient.GetBySite
// method.
type ResourceHealthMetadataClientGetBySiteOptions struct {
	// placeholder for future optional parameters
}

// ResourceHealthMetadataClientGetBySiteSlotOptions contains the optional parameters for the ResourceHealthMetadataClient.GetBySiteSlot
// method.
type ResourceHealthMetadataClientGetBySiteSlotOptions struct {
	// placeholder for future optional parameters
}

// ResourceHealthMetadataClientListByResourceGroupOptions contains the optional parameters for the ResourceHealthMetadataClient.NewListByResourceGroupPager
// method.
type ResourceHealthMetadataClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ResourceHealthMetadataClientListBySiteOptions contains the optional parameters for the ResourceHealthMetadataClient.NewListBySitePager
// method.
type ResourceHealthMetadataClientListBySiteOptions struct {
	// placeholder for future optional parameters
}

// ResourceHealthMetadataClientListBySiteSlotOptions contains the optional parameters for the ResourceHealthMetadataClient.NewListBySiteSlotPager
// method.
type ResourceHealthMetadataClientListBySiteSlotOptions struct {
	// placeholder for future optional parameters
}

// ResourceHealthMetadataClientListOptions contains the optional parameters for the ResourceHealthMetadataClient.NewListPager
// method.
type ResourceHealthMetadataClientListOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientBeginApproveOrRejectPrivateEndpointConnectionOptions contains the optional parameters for the StaticSitesClient.BeginApproveOrRejectPrivateEndpointConnection
// method.
type StaticSitesClientBeginApproveOrRejectPrivateEndpointConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginCreateOrUpdateStaticSiteCustomDomainOptions contains the optional parameters for the StaticSitesClient.BeginCreateOrUpdateStaticSiteCustomDomain
// method.
type StaticSitesClientBeginCreateOrUpdateStaticSiteCustomDomainOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginCreateOrUpdateStaticSiteOptions contains the optional parameters for the StaticSitesClient.BeginCreateOrUpdateStaticSite
// method.
type StaticSitesClientBeginCreateOrUpdateStaticSiteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginCreateZipDeploymentForStaticSiteBuildOptions contains the optional parameters for the StaticSitesClient.BeginCreateZipDeploymentForStaticSiteBuild
// method.
type StaticSitesClientBeginCreateZipDeploymentForStaticSiteBuildOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginCreateZipDeploymentForStaticSiteOptions contains the optional parameters for the StaticSitesClient.BeginCreateZipDeploymentForStaticSite
// method.
type StaticSitesClientBeginCreateZipDeploymentForStaticSiteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginDeletePrivateEndpointConnectionOptions contains the optional parameters for the StaticSitesClient.BeginDeletePrivateEndpointConnection
// method.
type StaticSitesClientBeginDeletePrivateEndpointConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginDeleteStaticSiteBuildOptions contains the optional parameters for the StaticSitesClient.BeginDeleteStaticSiteBuild
// method.
type StaticSitesClientBeginDeleteStaticSiteBuildOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginDeleteStaticSiteCustomDomainOptions contains the optional parameters for the StaticSitesClient.BeginDeleteStaticSiteCustomDomain
// method.
type StaticSitesClientBeginDeleteStaticSiteCustomDomainOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginDeleteStaticSiteOptions contains the optional parameters for the StaticSitesClient.BeginDeleteStaticSite
// method.
type StaticSitesClientBeginDeleteStaticSiteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginDetachStaticSiteOptions contains the optional parameters for the StaticSitesClient.BeginDetachStaticSite
// method.
type StaticSitesClientBeginDetachStaticSiteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginLinkBackendOptions contains the optional parameters for the StaticSitesClient.BeginLinkBackend method.
type StaticSitesClientBeginLinkBackendOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginLinkBackendToBuildOptions contains the optional parameters for the StaticSitesClient.BeginLinkBackendToBuild
// method.
type StaticSitesClientBeginLinkBackendToBuildOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginRegisterUserProvidedFunctionAppWithStaticSiteBuildOptions contains the optional parameters for the
// StaticSitesClient.BeginRegisterUserProvidedFunctionAppWithStaticSiteBuild method.
type StaticSitesClientBeginRegisterUserProvidedFunctionAppWithStaticSiteBuildOptions struct {
	// Specify true to force the update of the auth configuration on the function app even if an AzureStaticWebApps provider is
	// already configured on the function app. The default is false.
	IsForced *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginRegisterUserProvidedFunctionAppWithStaticSiteOptions contains the optional parameters for the StaticSitesClient.BeginRegisterUserProvidedFunctionAppWithStaticSite
// method.
type StaticSitesClientBeginRegisterUserProvidedFunctionAppWithStaticSiteOptions struct {
	// Specify true to force the update of the auth configuration on the function app even if an AzureStaticWebApps provider is
	// already configured on the function app. The default is false.
	IsForced *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginValidateBackendForBuildOptions contains the optional parameters for the StaticSitesClient.BeginValidateBackendForBuild
// method.
type StaticSitesClientBeginValidateBackendForBuildOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginValidateBackendOptions contains the optional parameters for the StaticSitesClient.BeginValidateBackend
// method.
type StaticSitesClientBeginValidateBackendOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientBeginValidateCustomDomainCanBeAddedToStaticSiteOptions contains the optional parameters for the StaticSitesClient.BeginValidateCustomDomainCanBeAddedToStaticSite
// method.
type StaticSitesClientBeginValidateCustomDomainCanBeAddedToStaticSiteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// StaticSitesClientCreateOrUpdateBasicAuthOptions contains the optional parameters for the StaticSitesClient.CreateOrUpdateBasicAuth
// method.
type StaticSitesClientCreateOrUpdateBasicAuthOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientCreateOrUpdateBuildDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.CreateOrUpdateBuildDatabaseConnection
// method.
type StaticSitesClientCreateOrUpdateBuildDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientCreateOrUpdateDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.CreateOrUpdateDatabaseConnection
// method.
type StaticSitesClientCreateOrUpdateDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientCreateOrUpdateStaticSiteAppSettingsOptions contains the optional parameters for the StaticSitesClient.CreateOrUpdateStaticSiteAppSettings
// method.
type StaticSitesClientCreateOrUpdateStaticSiteAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientCreateOrUpdateStaticSiteBuildAppSettingsOptions contains the optional parameters for the StaticSitesClient.CreateOrUpdateStaticSiteBuildAppSettings
// method.
type StaticSitesClientCreateOrUpdateStaticSiteBuildAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientCreateOrUpdateStaticSiteBuildFunctionAppSettingsOptions contains the optional parameters for the StaticSitesClient.CreateOrUpdateStaticSiteBuildFunctionAppSettings
// method.
type StaticSitesClientCreateOrUpdateStaticSiteBuildFunctionAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientCreateOrUpdateStaticSiteFunctionAppSettingsOptions contains the optional parameters for the StaticSitesClient.CreateOrUpdateStaticSiteFunctionAppSettings
// method.
type StaticSitesClientCreateOrUpdateStaticSiteFunctionAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientCreateUserRolesInvitationLinkOptions contains the optional parameters for the StaticSitesClient.CreateUserRolesInvitationLink
// method.
type StaticSitesClientCreateUserRolesInvitationLinkOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientDeleteBuildDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.DeleteBuildDatabaseConnection
// method.
type StaticSitesClientDeleteBuildDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientDeleteDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.DeleteDatabaseConnection
// method.
type StaticSitesClientDeleteDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientDeleteStaticSiteUserOptions contains the optional parameters for the StaticSitesClient.DeleteStaticSiteUser
// method.
type StaticSitesClientDeleteStaticSiteUserOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientDetachUserProvidedFunctionAppFromStaticSiteBuildOptions contains the optional parameters for the StaticSitesClient.DetachUserProvidedFunctionAppFromStaticSiteBuild
// method.
type StaticSitesClientDetachUserProvidedFunctionAppFromStaticSiteBuildOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientDetachUserProvidedFunctionAppFromStaticSiteOptions contains the optional parameters for the StaticSitesClient.DetachUserProvidedFunctionAppFromStaticSite
// method.
type StaticSitesClientDetachUserProvidedFunctionAppFromStaticSiteOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetBasicAuthOptions contains the optional parameters for the StaticSitesClient.GetBasicAuth method.
type StaticSitesClientGetBasicAuthOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetBuildDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.GetBuildDatabaseConnection
// method.
type StaticSitesClientGetBuildDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetBuildDatabaseConnectionWithDetailsOptions contains the optional parameters for the StaticSitesClient.GetBuildDatabaseConnectionWithDetails
// method.
type StaticSitesClientGetBuildDatabaseConnectionWithDetailsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetBuildDatabaseConnectionsOptions contains the optional parameters for the StaticSitesClient.NewGetBuildDatabaseConnectionsPager
// method.
type StaticSitesClientGetBuildDatabaseConnectionsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetBuildDatabaseConnectionsWithDetailsOptions contains the optional parameters for the StaticSitesClient.NewGetBuildDatabaseConnectionsWithDetailsPager
// method.
type StaticSitesClientGetBuildDatabaseConnectionsWithDetailsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.GetDatabaseConnection
// method.
type StaticSitesClientGetDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetDatabaseConnectionWithDetailsOptions contains the optional parameters for the StaticSitesClient.GetDatabaseConnectionWithDetails
// method.
type StaticSitesClientGetDatabaseConnectionWithDetailsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetDatabaseConnectionsOptions contains the optional parameters for the StaticSitesClient.NewGetDatabaseConnectionsPager
// method.
type StaticSitesClientGetDatabaseConnectionsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetDatabaseConnectionsWithDetailsOptions contains the optional parameters for the StaticSitesClient.NewGetDatabaseConnectionsWithDetailsPager
// method.
type StaticSitesClientGetDatabaseConnectionsWithDetailsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetLinkedBackendForBuildOptions contains the optional parameters for the StaticSitesClient.GetLinkedBackendForBuild
// method.
type StaticSitesClientGetLinkedBackendForBuildOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetLinkedBackendOptions contains the optional parameters for the StaticSitesClient.GetLinkedBackend method.
type StaticSitesClientGetLinkedBackendOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetLinkedBackendsForBuildOptions contains the optional parameters for the StaticSitesClient.NewGetLinkedBackendsForBuildPager
// method.
type StaticSitesClientGetLinkedBackendsForBuildOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetLinkedBackendsOptions contains the optional parameters for the StaticSitesClient.NewGetLinkedBackendsPager
// method.
type StaticSitesClientGetLinkedBackendsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetPrivateEndpointConnectionListOptions contains the optional parameters for the StaticSitesClient.NewGetPrivateEndpointConnectionListPager
// method.
type StaticSitesClientGetPrivateEndpointConnectionListOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetPrivateEndpointConnectionOptions contains the optional parameters for the StaticSitesClient.GetPrivateEndpointConnection
// method.
type StaticSitesClientGetPrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetPrivateLinkResourcesOptions contains the optional parameters for the StaticSitesClient.GetPrivateLinkResources
// method.
type StaticSitesClientGetPrivateLinkResourcesOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetStaticSiteBuildOptions contains the optional parameters for the StaticSitesClient.GetStaticSiteBuild
// method.
type StaticSitesClientGetStaticSiteBuildOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetStaticSiteBuildsOptions contains the optional parameters for the StaticSitesClient.NewGetStaticSiteBuildsPager
// method.
type StaticSitesClientGetStaticSiteBuildsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetStaticSiteCustomDomainOptions contains the optional parameters for the StaticSitesClient.GetStaticSiteCustomDomain
// method.
type StaticSitesClientGetStaticSiteCustomDomainOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetStaticSiteOptions contains the optional parameters for the StaticSitesClient.GetStaticSite method.
type StaticSitesClientGetStaticSiteOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetStaticSitesByResourceGroupOptions contains the optional parameters for the StaticSitesClient.NewGetStaticSitesByResourceGroupPager
// method.
type StaticSitesClientGetStaticSitesByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetUserProvidedFunctionAppForStaticSiteBuildOptions contains the optional parameters for the StaticSitesClient.GetUserProvidedFunctionAppForStaticSiteBuild
// method.
type StaticSitesClientGetUserProvidedFunctionAppForStaticSiteBuildOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetUserProvidedFunctionAppForStaticSiteOptions contains the optional parameters for the StaticSitesClient.GetUserProvidedFunctionAppForStaticSite
// method.
type StaticSitesClientGetUserProvidedFunctionAppForStaticSiteOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetUserProvidedFunctionAppsForStaticSiteBuildOptions contains the optional parameters for the StaticSitesClient.NewGetUserProvidedFunctionAppsForStaticSiteBuildPager
// method.
type StaticSitesClientGetUserProvidedFunctionAppsForStaticSiteBuildOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientGetUserProvidedFunctionAppsForStaticSiteOptions contains the optional parameters for the StaticSitesClient.NewGetUserProvidedFunctionAppsForStaticSitePager
// method.
type StaticSitesClientGetUserProvidedFunctionAppsForStaticSiteOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListBasicAuthOptions contains the optional parameters for the StaticSitesClient.NewListBasicAuthPager
// method.
type StaticSitesClientListBasicAuthOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListOptions contains the optional parameters for the StaticSitesClient.NewListPager method.
type StaticSitesClientListOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteAppSettingsOptions contains the optional parameters for the StaticSitesClient.ListStaticSiteAppSettings
// method.
type StaticSitesClientListStaticSiteAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteBuildAppSettingsOptions contains the optional parameters for the StaticSitesClient.ListStaticSiteBuildAppSettings
// method.
type StaticSitesClientListStaticSiteBuildAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteBuildFunctionAppSettingsOptions contains the optional parameters for the StaticSitesClient.ListStaticSiteBuildFunctionAppSettings
// method.
type StaticSitesClientListStaticSiteBuildFunctionAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteBuildFunctionsOptions contains the optional parameters for the StaticSitesClient.NewListStaticSiteBuildFunctionsPager
// method.
type StaticSitesClientListStaticSiteBuildFunctionsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteConfiguredRolesOptions contains the optional parameters for the StaticSitesClient.ListStaticSiteConfiguredRoles
// method.
type StaticSitesClientListStaticSiteConfiguredRolesOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteCustomDomainsOptions contains the optional parameters for the StaticSitesClient.NewListStaticSiteCustomDomainsPager
// method.
type StaticSitesClientListStaticSiteCustomDomainsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteFunctionAppSettingsOptions contains the optional parameters for the StaticSitesClient.ListStaticSiteFunctionAppSettings
// method.
type StaticSitesClientListStaticSiteFunctionAppSettingsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteFunctionsOptions contains the optional parameters for the StaticSitesClient.NewListStaticSiteFunctionsPager
// method.
type StaticSitesClientListStaticSiteFunctionsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteSecretsOptions contains the optional parameters for the StaticSitesClient.ListStaticSiteSecrets
// method.
type StaticSitesClientListStaticSiteSecretsOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientListStaticSiteUsersOptions contains the optional parameters for the StaticSitesClient.NewListStaticSiteUsersPager
// method.
type StaticSitesClientListStaticSiteUsersOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientPreviewWorkflowOptions contains the optional parameters for the StaticSitesClient.PreviewWorkflow method.
type StaticSitesClientPreviewWorkflowOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientResetStaticSiteAPIKeyOptions contains the optional parameters for the StaticSitesClient.ResetStaticSiteAPIKey
// method.
type StaticSitesClientResetStaticSiteAPIKeyOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientUnlinkBackendFromBuildOptions contains the optional parameters for the StaticSitesClient.UnlinkBackendFromBuild
// method.
type StaticSitesClientUnlinkBackendFromBuildOptions struct {
	// Decides if auth will be removed from backend configuration
	IsCleaningAuthConfig *bool
}

// StaticSitesClientUnlinkBackendOptions contains the optional parameters for the StaticSitesClient.UnlinkBackend method.
type StaticSitesClientUnlinkBackendOptions struct {
	// Decides if Easy Auth configuration will be removed from backend configuration
	IsCleaningAuthConfig *bool
}

// StaticSitesClientUpdateBuildDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.UpdateBuildDatabaseConnection
// method.
type StaticSitesClientUpdateBuildDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientUpdateDatabaseConnectionOptions contains the optional parameters for the StaticSitesClient.UpdateDatabaseConnection
// method.
type StaticSitesClientUpdateDatabaseConnectionOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientUpdateStaticSiteOptions contains the optional parameters for the StaticSitesClient.UpdateStaticSite method.
type StaticSitesClientUpdateStaticSiteOptions struct {
	// placeholder for future optional parameters
}

// StaticSitesClientUpdateStaticSiteUserOptions contains the optional parameters for the StaticSitesClient.UpdateStaticSiteUser
// method.
type StaticSitesClientUpdateStaticSiteUserOptions struct {
	// placeholder for future optional parameters
}

// TopLevelDomainsClientGetOptions contains the optional parameters for the TopLevelDomainsClient.Get method.
type TopLevelDomainsClientGetOptions struct {
	// placeholder for future optional parameters
}

// TopLevelDomainsClientListAgreementsOptions contains the optional parameters for the TopLevelDomainsClient.NewListAgreementsPager
// method.
type TopLevelDomainsClientListAgreementsOptions struct {
	// placeholder for future optional parameters
}

// TopLevelDomainsClientListOptions contains the optional parameters for the TopLevelDomainsClient.NewListPager method.
type TopLevelDomainsClientListOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientAddPremierAddOnOptions contains the optional parameters for the WebAppsClient.AddPremierAddOn method.
type WebAppsClientAddPremierAddOnOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientAddPremierAddOnSlotOptions contains the optional parameters for the WebAppsClient.AddPremierAddOnSlot method.
type WebAppsClientAddPremierAddOnSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientAnalyzeCustomHostnameOptions contains the optional parameters for the WebAppsClient.AnalyzeCustomHostname
// method.
type WebAppsClientAnalyzeCustomHostnameOptions struct {
	// Custom hostname.
	HostName *string
}

// WebAppsClientAnalyzeCustomHostnameSlotOptions contains the optional parameters for the WebAppsClient.AnalyzeCustomHostnameSlot
// method.
type WebAppsClientAnalyzeCustomHostnameSlotOptions struct {
	// Custom hostname.
	HostName *string
}

// WebAppsClientApplySlotConfigToProductionOptions contains the optional parameters for the WebAppsClient.ApplySlotConfigToProduction
// method.
type WebAppsClientApplySlotConfigToProductionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientApplySlotConfigurationSlotOptions contains the optional parameters for the WebAppsClient.ApplySlotConfigurationSlot
// method.
type WebAppsClientApplySlotConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientBackupOptions contains the optional parameters for the WebAppsClient.Backup method.
type WebAppsClientBackupOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientBackupSlotOptions contains the optional parameters for the WebAppsClient.BackupSlot method.
type WebAppsClientBackupSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientBeginApproveOrRejectPrivateEndpointConnectionOptions contains the optional parameters for the WebAppsClient.BeginApproveOrRejectPrivateEndpointConnection
// method.
type WebAppsClientBeginApproveOrRejectPrivateEndpointConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginApproveOrRejectPrivateEndpointConnectionSlotOptions contains the optional parameters for the WebAppsClient.BeginApproveOrRejectPrivateEndpointConnectionSlot
// method.
type WebAppsClientBeginApproveOrRejectPrivateEndpointConnectionSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateFunctionOptions contains the optional parameters for the WebAppsClient.BeginCreateFunction method.
type WebAppsClientBeginCreateFunctionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateInstanceFunctionSlotOptions contains the optional parameters for the WebAppsClient.BeginCreateInstanceFunctionSlot
// method.
type WebAppsClientBeginCreateInstanceFunctionSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateInstanceMSDeployOperationOptions contains the optional parameters for the WebAppsClient.BeginCreateInstanceMSDeployOperation
// method.
type WebAppsClientBeginCreateInstanceMSDeployOperationOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateInstanceMSDeployOperationSlotOptions contains the optional parameters for the WebAppsClient.BeginCreateInstanceMSDeployOperationSlot
// method.
type WebAppsClientBeginCreateInstanceMSDeployOperationSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateMSDeployOperationOptions contains the optional parameters for the WebAppsClient.BeginCreateMSDeployOperation
// method.
type WebAppsClientBeginCreateMSDeployOperationOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateMSDeployOperationSlotOptions contains the optional parameters for the WebAppsClient.BeginCreateMSDeployOperationSlot
// method.
type WebAppsClientBeginCreateMSDeployOperationSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateOrUpdateOptions contains the optional parameters for the WebAppsClient.BeginCreateOrUpdate method.
type WebAppsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateOrUpdateSlotOptions contains the optional parameters for the WebAppsClient.BeginCreateOrUpdateSlot
// method.
type WebAppsClientBeginCreateOrUpdateSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateOrUpdateSourceControlOptions contains the optional parameters for the WebAppsClient.BeginCreateOrUpdateSourceControl
// method.
type WebAppsClientBeginCreateOrUpdateSourceControlOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginCreateOrUpdateSourceControlSlotOptions contains the optional parameters for the WebAppsClient.BeginCreateOrUpdateSourceControlSlot
// method.
type WebAppsClientBeginCreateOrUpdateSourceControlSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginDeletePrivateEndpointConnectionOptions contains the optional parameters for the WebAppsClient.BeginDeletePrivateEndpointConnection
// method.
type WebAppsClientBeginDeletePrivateEndpointConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginDeletePrivateEndpointConnectionSlotOptions contains the optional parameters for the WebAppsClient.BeginDeletePrivateEndpointConnectionSlot
// method.
type WebAppsClientBeginDeletePrivateEndpointConnectionSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginGetProductionSiteDeploymentStatusOptions contains the optional parameters for the WebAppsClient.BeginGetProductionSiteDeploymentStatus
// method.
type WebAppsClientBeginGetProductionSiteDeploymentStatusOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginGetSlotSiteDeploymentStatusSlotOptions contains the optional parameters for the WebAppsClient.BeginGetSlotSiteDeploymentStatusSlot
// method.
type WebAppsClientBeginGetSlotSiteDeploymentStatusSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginInstallSiteExtensionOptions contains the optional parameters for the WebAppsClient.BeginInstallSiteExtension
// method.
type WebAppsClientBeginInstallSiteExtensionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginInstallSiteExtensionSlotOptions contains the optional parameters for the WebAppsClient.BeginInstallSiteExtensionSlot
// method.
type WebAppsClientBeginInstallSiteExtensionSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginListPublishingCredentialsOptions contains the optional parameters for the WebAppsClient.BeginListPublishingCredentials
// method.
type WebAppsClientBeginListPublishingCredentialsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginListPublishingCredentialsSlotOptions contains the optional parameters for the WebAppsClient.BeginListPublishingCredentialsSlot
// method.
type WebAppsClientBeginListPublishingCredentialsSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginMigrateMySQLOptions contains the optional parameters for the WebAppsClient.BeginMigrateMySQL method.
type WebAppsClientBeginMigrateMySQLOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginMigrateStorageOptions contains the optional parameters for the WebAppsClient.BeginMigrateStorage method.
type WebAppsClientBeginMigrateStorageOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreFromBackupBlobOptions contains the optional parameters for the WebAppsClient.BeginRestoreFromBackupBlob
// method.
type WebAppsClientBeginRestoreFromBackupBlobOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreFromBackupBlobSlotOptions contains the optional parameters for the WebAppsClient.BeginRestoreFromBackupBlobSlot
// method.
type WebAppsClientBeginRestoreFromBackupBlobSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreFromDeletedAppOptions contains the optional parameters for the WebAppsClient.BeginRestoreFromDeletedApp
// method.
type WebAppsClientBeginRestoreFromDeletedAppOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreFromDeletedAppSlotOptions contains the optional parameters for the WebAppsClient.BeginRestoreFromDeletedAppSlot
// method.
type WebAppsClientBeginRestoreFromDeletedAppSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreOptions contains the optional parameters for the WebAppsClient.BeginRestore method.
type WebAppsClientBeginRestoreOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreSlotOptions contains the optional parameters for the WebAppsClient.BeginRestoreSlot method.
type WebAppsClientBeginRestoreSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreSnapshotOptions contains the optional parameters for the WebAppsClient.BeginRestoreSnapshot method.
type WebAppsClientBeginRestoreSnapshotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginRestoreSnapshotSlotOptions contains the optional parameters for the WebAppsClient.BeginRestoreSnapshotSlot
// method.
type WebAppsClientBeginRestoreSnapshotSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginStartNetworkTraceOptions contains the optional parameters for the WebAppsClient.BeginStartNetworkTrace
// method.
type WebAppsClientBeginStartNetworkTraceOptions struct {
	// The duration to keep capturing in seconds.
	DurationInSeconds *int32

	// The maximum frame length in bytes (Optional).
	MaxFrameLength *int32

	// Resumes the LRO from the provided token.
	ResumeToken string

	// The Blob URL to store capture file.
	SasURL *string
}

// WebAppsClientBeginStartNetworkTraceSlotOptions contains the optional parameters for the WebAppsClient.BeginStartNetworkTraceSlot
// method.
type WebAppsClientBeginStartNetworkTraceSlotOptions struct {
	// The duration to keep capturing in seconds.
	DurationInSeconds *int32

	// The maximum frame length in bytes (Optional).
	MaxFrameLength *int32

	// Resumes the LRO from the provided token.
	ResumeToken string

	// The Blob URL to store capture file.
	SasURL *string
}

// WebAppsClientBeginStartWebSiteNetworkTraceOperationOptions contains the optional parameters for the WebAppsClient.BeginStartWebSiteNetworkTraceOperation
// method.
type WebAppsClientBeginStartWebSiteNetworkTraceOperationOptions struct {
	// The duration to keep capturing in seconds.
	DurationInSeconds *int32

	// The maximum frame length in bytes (Optional).
	MaxFrameLength *int32

	// Resumes the LRO from the provided token.
	ResumeToken string

	// The Blob URL to store capture file.
	SasURL *string
}

// WebAppsClientBeginStartWebSiteNetworkTraceOperationSlotOptions contains the optional parameters for the WebAppsClient.BeginStartWebSiteNetworkTraceOperationSlot
// method.
type WebAppsClientBeginStartWebSiteNetworkTraceOperationSlotOptions struct {
	// The duration to keep capturing in seconds.
	DurationInSeconds *int32

	// The maximum frame length in bytes (Optional).
	MaxFrameLength *int32

	// Resumes the LRO from the provided token.
	ResumeToken string

	// The Blob URL to store capture file.
	SasURL *string
}

// WebAppsClientBeginSwapSlotOptions contains the optional parameters for the WebAppsClient.BeginSwapSlot method.
type WebAppsClientBeginSwapSlotOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientBeginSwapSlotWithProductionOptions contains the optional parameters for the WebAppsClient.BeginSwapSlotWithProduction
// method.
type WebAppsClientBeginSwapSlotWithProductionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebAppsClientCreateDeploymentOptions contains the optional parameters for the WebAppsClient.CreateDeployment method.
type WebAppsClientCreateDeploymentOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateDeploymentSlotOptions contains the optional parameters for the WebAppsClient.CreateDeploymentSlot method.
type WebAppsClientCreateDeploymentSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOneDeployOperationOptions contains the optional parameters for the WebAppsClient.CreateOneDeployOperation
// method.
type WebAppsClientCreateOneDeployOperationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateConfigurationOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateConfiguration
// method.
type WebAppsClientCreateOrUpdateConfigurationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateConfigurationSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateConfigurationSlot
// method.
type WebAppsClientCreateOrUpdateConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateDomainOwnershipIdentifierOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateDomainOwnershipIdentifier
// method.
type WebAppsClientCreateOrUpdateDomainOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateDomainOwnershipIdentifierSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateDomainOwnershipIdentifierSlot
// method.
type WebAppsClientCreateOrUpdateDomainOwnershipIdentifierSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateFunctionSecretOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateFunctionSecret
// method.
type WebAppsClientCreateOrUpdateFunctionSecretOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateFunctionSecretSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateFunctionSecretSlot
// method.
type WebAppsClientCreateOrUpdateFunctionSecretSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateHostNameBindingOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateHostNameBinding
// method.
type WebAppsClientCreateOrUpdateHostNameBindingOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateHostNameBindingSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateHostNameBindingSlot
// method.
type WebAppsClientCreateOrUpdateHostNameBindingSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateHostSecretOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateHostSecret
// method.
type WebAppsClientCreateOrUpdateHostSecretOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateHostSecretSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateHostSecretSlot
// method.
type WebAppsClientCreateOrUpdateHostSecretSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateHybridConnectionOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateHybridConnection
// method.
type WebAppsClientCreateOrUpdateHybridConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateHybridConnectionSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateHybridConnectionSlot
// method.
type WebAppsClientCreateOrUpdateHybridConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdatePublicCertificateOptions contains the optional parameters for the WebAppsClient.CreateOrUpdatePublicCertificate
// method.
type WebAppsClientCreateOrUpdatePublicCertificateOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdatePublicCertificateSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdatePublicCertificateSlot
// method.
type WebAppsClientCreateOrUpdatePublicCertificateSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateRelayServiceConnectionOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateRelayServiceConnection
// method.
type WebAppsClientCreateOrUpdateRelayServiceConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateRelayServiceConnectionSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateRelayServiceConnectionSlot
// method.
type WebAppsClientCreateOrUpdateRelayServiceConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateSwiftVirtualNetworkConnectionWithCheck
// method.
type WebAppsClientCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlot
// method.
type WebAppsClientCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateVnetConnectionGatewayOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateVnetConnectionGateway
// method.
type WebAppsClientCreateOrUpdateVnetConnectionGatewayOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateVnetConnectionGatewaySlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateVnetConnectionGatewaySlot
// method.
type WebAppsClientCreateOrUpdateVnetConnectionGatewaySlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateVnetConnectionOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateVnetConnection
// method.
type WebAppsClientCreateOrUpdateVnetConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientCreateOrUpdateVnetConnectionSlotOptions contains the optional parameters for the WebAppsClient.CreateOrUpdateVnetConnectionSlot
// method.
type WebAppsClientCreateOrUpdateVnetConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteBackupConfigurationOptions contains the optional parameters for the WebAppsClient.DeleteBackupConfiguration
// method.
type WebAppsClientDeleteBackupConfigurationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteBackupConfigurationSlotOptions contains the optional parameters for the WebAppsClient.DeleteBackupConfigurationSlot
// method.
type WebAppsClientDeleteBackupConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteBackupOptions contains the optional parameters for the WebAppsClient.DeleteBackup method.
type WebAppsClientDeleteBackupOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteBackupSlotOptions contains the optional parameters for the WebAppsClient.DeleteBackupSlot method.
type WebAppsClientDeleteBackupSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteContinuousWebJobOptions contains the optional parameters for the WebAppsClient.DeleteContinuousWebJob
// method.
type WebAppsClientDeleteContinuousWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteContinuousWebJobSlotOptions contains the optional parameters for the WebAppsClient.DeleteContinuousWebJobSlot
// method.
type WebAppsClientDeleteContinuousWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteDeploymentOptions contains the optional parameters for the WebAppsClient.DeleteDeployment method.
type WebAppsClientDeleteDeploymentOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteDeploymentSlotOptions contains the optional parameters for the WebAppsClient.DeleteDeploymentSlot method.
type WebAppsClientDeleteDeploymentSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteDomainOwnershipIdentifierOptions contains the optional parameters for the WebAppsClient.DeleteDomainOwnershipIdentifier
// method.
type WebAppsClientDeleteDomainOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteDomainOwnershipIdentifierSlotOptions contains the optional parameters for the WebAppsClient.DeleteDomainOwnershipIdentifierSlot
// method.
type WebAppsClientDeleteDomainOwnershipIdentifierSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteFunctionOptions contains the optional parameters for the WebAppsClient.DeleteFunction method.
type WebAppsClientDeleteFunctionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteFunctionSecretOptions contains the optional parameters for the WebAppsClient.DeleteFunctionSecret method.
type WebAppsClientDeleteFunctionSecretOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteFunctionSecretSlotOptions contains the optional parameters for the WebAppsClient.DeleteFunctionSecretSlot
// method.
type WebAppsClientDeleteFunctionSecretSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteHostNameBindingOptions contains the optional parameters for the WebAppsClient.DeleteHostNameBinding
// method.
type WebAppsClientDeleteHostNameBindingOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteHostNameBindingSlotOptions contains the optional parameters for the WebAppsClient.DeleteHostNameBindingSlot
// method.
type WebAppsClientDeleteHostNameBindingSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteHostSecretOptions contains the optional parameters for the WebAppsClient.DeleteHostSecret method.
type WebAppsClientDeleteHostSecretOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteHostSecretSlotOptions contains the optional parameters for the WebAppsClient.DeleteHostSecretSlot method.
type WebAppsClientDeleteHostSecretSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteHybridConnectionOptions contains the optional parameters for the WebAppsClient.DeleteHybridConnection
// method.
type WebAppsClientDeleteHybridConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteHybridConnectionSlotOptions contains the optional parameters for the WebAppsClient.DeleteHybridConnectionSlot
// method.
type WebAppsClientDeleteHybridConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteInstanceFunctionSlotOptions contains the optional parameters for the WebAppsClient.DeleteInstanceFunctionSlot
// method.
type WebAppsClientDeleteInstanceFunctionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteInstanceProcessOptions contains the optional parameters for the WebAppsClient.DeleteInstanceProcess
// method.
type WebAppsClientDeleteInstanceProcessOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteInstanceProcessSlotOptions contains the optional parameters for the WebAppsClient.DeleteInstanceProcessSlot
// method.
type WebAppsClientDeleteInstanceProcessSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteOptions contains the optional parameters for the WebAppsClient.Delete method.
type WebAppsClientDeleteOptions struct {
	// Specify false if you want to keep empty App Service plan. By default, empty App Service plan is deleted.
	DeleteEmptyServerFarm *bool

	// If true, web app metrics are also deleted.
	DeleteMetrics *bool
}

// WebAppsClientDeletePremierAddOnOptions contains the optional parameters for the WebAppsClient.DeletePremierAddOn method.
type WebAppsClientDeletePremierAddOnOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeletePremierAddOnSlotOptions contains the optional parameters for the WebAppsClient.DeletePremierAddOnSlot
// method.
type WebAppsClientDeletePremierAddOnSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteProcessOptions contains the optional parameters for the WebAppsClient.DeleteProcess method.
type WebAppsClientDeleteProcessOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteProcessSlotOptions contains the optional parameters for the WebAppsClient.DeleteProcessSlot method.
type WebAppsClientDeleteProcessSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeletePublicCertificateOptions contains the optional parameters for the WebAppsClient.DeletePublicCertificate
// method.
type WebAppsClientDeletePublicCertificateOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeletePublicCertificateSlotOptions contains the optional parameters for the WebAppsClient.DeletePublicCertificateSlot
// method.
type WebAppsClientDeletePublicCertificateSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteRelayServiceConnectionOptions contains the optional parameters for the WebAppsClient.DeleteRelayServiceConnection
// method.
type WebAppsClientDeleteRelayServiceConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteRelayServiceConnectionSlotOptions contains the optional parameters for the WebAppsClient.DeleteRelayServiceConnectionSlot
// method.
type WebAppsClientDeleteRelayServiceConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteSiteExtensionOptions contains the optional parameters for the WebAppsClient.DeleteSiteExtension method.
type WebAppsClientDeleteSiteExtensionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteSiteExtensionSlotOptions contains the optional parameters for the WebAppsClient.DeleteSiteExtensionSlot
// method.
type WebAppsClientDeleteSiteExtensionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteSlotOptions contains the optional parameters for the WebAppsClient.DeleteSlot method.
type WebAppsClientDeleteSlotOptions struct {
	// Specify false if you want to keep empty App Service plan. By default, empty App Service plan is deleted.
	DeleteEmptyServerFarm *bool

	// If true, web app metrics are also deleted.
	DeleteMetrics *bool
}

// WebAppsClientDeleteSourceControlOptions contains the optional parameters for the WebAppsClient.DeleteSourceControl method.
type WebAppsClientDeleteSourceControlOptions struct {
	AdditionalFlags *string
}

// WebAppsClientDeleteSourceControlSlotOptions contains the optional parameters for the WebAppsClient.DeleteSourceControlSlot
// method.
type WebAppsClientDeleteSourceControlSlotOptions struct {
	AdditionalFlags *string
}

// WebAppsClientDeleteSwiftVirtualNetworkOptions contains the optional parameters for the WebAppsClient.DeleteSwiftVirtualNetwork
// method.
type WebAppsClientDeleteSwiftVirtualNetworkOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteSwiftVirtualNetworkSlotOptions contains the optional parameters for the WebAppsClient.DeleteSwiftVirtualNetworkSlot
// method.
type WebAppsClientDeleteSwiftVirtualNetworkSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteTriggeredWebJobOptions contains the optional parameters for the WebAppsClient.DeleteTriggeredWebJob
// method.
type WebAppsClientDeleteTriggeredWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteTriggeredWebJobSlotOptions contains the optional parameters for the WebAppsClient.DeleteTriggeredWebJobSlot
// method.
type WebAppsClientDeleteTriggeredWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteVnetConnectionOptions contains the optional parameters for the WebAppsClient.DeleteVnetConnection method.
type WebAppsClientDeleteVnetConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeleteVnetConnectionSlotOptions contains the optional parameters for the WebAppsClient.DeleteVnetConnectionSlot
// method.
type WebAppsClientDeleteVnetConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDeployWorkflowArtifactsOptions contains the optional parameters for the WebAppsClient.DeployWorkflowArtifacts
// method.
type WebAppsClientDeployWorkflowArtifactsOptions struct {
	// Application settings and files of the workflow.
	WorkflowArtifacts *WorkflowArtifacts
}

// WebAppsClientDeployWorkflowArtifactsSlotOptions contains the optional parameters for the WebAppsClient.DeployWorkflowArtifactsSlot
// method.
type WebAppsClientDeployWorkflowArtifactsSlotOptions struct {
	// Application settings and files of the workflow.
	WorkflowArtifacts *WorkflowArtifacts
}

// WebAppsClientDiscoverBackupOptions contains the optional parameters for the WebAppsClient.DiscoverBackup method.
type WebAppsClientDiscoverBackupOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientDiscoverBackupSlotOptions contains the optional parameters for the WebAppsClient.DiscoverBackupSlot method.
type WebAppsClientDiscoverBackupSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGenerateNewSitePublishingPasswordOptions contains the optional parameters for the WebAppsClient.GenerateNewSitePublishingPassword
// method.
type WebAppsClientGenerateNewSitePublishingPasswordOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGenerateNewSitePublishingPasswordSlotOptions contains the optional parameters for the WebAppsClient.GenerateNewSitePublishingPasswordSlot
// method.
type WebAppsClientGenerateNewSitePublishingPasswordSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAppSettingKeyVaultReferenceOptions contains the optional parameters for the WebAppsClient.GetAppSettingKeyVaultReference
// method.
type WebAppsClientGetAppSettingKeyVaultReferenceOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAppSettingKeyVaultReferenceSlotOptions contains the optional parameters for the WebAppsClient.GetAppSettingKeyVaultReferenceSlot
// method.
type WebAppsClientGetAppSettingKeyVaultReferenceSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAppSettingsKeyVaultReferencesOptions contains the optional parameters for the WebAppsClient.NewGetAppSettingsKeyVaultReferencesPager
// method.
type WebAppsClientGetAppSettingsKeyVaultReferencesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAppSettingsKeyVaultReferencesSlotOptions contains the optional parameters for the WebAppsClient.NewGetAppSettingsKeyVaultReferencesSlotPager
// method.
type WebAppsClientGetAppSettingsKeyVaultReferencesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAuthSettingsOptions contains the optional parameters for the WebAppsClient.GetAuthSettings method.
type WebAppsClientGetAuthSettingsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAuthSettingsSlotOptions contains the optional parameters for the WebAppsClient.GetAuthSettingsSlot method.
type WebAppsClientGetAuthSettingsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAuthSettingsV2Options contains the optional parameters for the WebAppsClient.GetAuthSettingsV2 method.
type WebAppsClientGetAuthSettingsV2Options struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAuthSettingsV2SlotOptions contains the optional parameters for the WebAppsClient.GetAuthSettingsV2Slot
// method.
type WebAppsClientGetAuthSettingsV2SlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAuthSettingsV2WithoutSecretsOptions contains the optional parameters for the WebAppsClient.GetAuthSettingsV2WithoutSecrets
// method.
type WebAppsClientGetAuthSettingsV2WithoutSecretsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetAuthSettingsV2WithoutSecretsSlotOptions contains the optional parameters for the WebAppsClient.GetAuthSettingsV2WithoutSecretsSlot
// method.
type WebAppsClientGetAuthSettingsV2WithoutSecretsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetBackupConfigurationOptions contains the optional parameters for the WebAppsClient.GetBackupConfiguration
// method.
type WebAppsClientGetBackupConfigurationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetBackupConfigurationSlotOptions contains the optional parameters for the WebAppsClient.GetBackupConfigurationSlot
// method.
type WebAppsClientGetBackupConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetBackupStatusOptions contains the optional parameters for the WebAppsClient.GetBackupStatus method.
type WebAppsClientGetBackupStatusOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetBackupStatusSlotOptions contains the optional parameters for the WebAppsClient.GetBackupStatusSlot method.
type WebAppsClientGetBackupStatusSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetConfigurationOptions contains the optional parameters for the WebAppsClient.GetConfiguration method.
type WebAppsClientGetConfigurationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetConfigurationSlotOptions contains the optional parameters for the WebAppsClient.GetConfigurationSlot method.
type WebAppsClientGetConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetConfigurationSnapshotOptions contains the optional parameters for the WebAppsClient.GetConfigurationSnapshot
// method.
type WebAppsClientGetConfigurationSnapshotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetConfigurationSnapshotSlotOptions contains the optional parameters for the WebAppsClient.GetConfigurationSnapshotSlot
// method.
type WebAppsClientGetConfigurationSnapshotSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetContainerLogsZipOptions contains the optional parameters for the WebAppsClient.GetContainerLogsZip method.
type WebAppsClientGetContainerLogsZipOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetContainerLogsZipSlotOptions contains the optional parameters for the WebAppsClient.GetContainerLogsZipSlot
// method.
type WebAppsClientGetContainerLogsZipSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetContinuousWebJobOptions contains the optional parameters for the WebAppsClient.GetContinuousWebJob method.
type WebAppsClientGetContinuousWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetContinuousWebJobSlotOptions contains the optional parameters for the WebAppsClient.GetContinuousWebJobSlot
// method.
type WebAppsClientGetContinuousWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetDeploymentOptions contains the optional parameters for the WebAppsClient.GetDeployment method.
type WebAppsClientGetDeploymentOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetDeploymentSlotOptions contains the optional parameters for the WebAppsClient.GetDeploymentSlot method.
type WebAppsClientGetDeploymentSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetDiagnosticLogsConfigurationOptions contains the optional parameters for the WebAppsClient.GetDiagnosticLogsConfiguration
// method.
type WebAppsClientGetDiagnosticLogsConfigurationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetDiagnosticLogsConfigurationSlotOptions contains the optional parameters for the WebAppsClient.GetDiagnosticLogsConfigurationSlot
// method.
type WebAppsClientGetDiagnosticLogsConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetDomainOwnershipIdentifierOptions contains the optional parameters for the WebAppsClient.GetDomainOwnershipIdentifier
// method.
type WebAppsClientGetDomainOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetDomainOwnershipIdentifierSlotOptions contains the optional parameters for the WebAppsClient.GetDomainOwnershipIdentifierSlot
// method.
type WebAppsClientGetDomainOwnershipIdentifierSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetFtpAllowedOptions contains the optional parameters for the WebAppsClient.GetFtpAllowed method.
type WebAppsClientGetFtpAllowedOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetFtpAllowedSlotOptions contains the optional parameters for the WebAppsClient.GetFtpAllowedSlot method.
type WebAppsClientGetFtpAllowedSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetFunctionOptions contains the optional parameters for the WebAppsClient.GetFunction method.
type WebAppsClientGetFunctionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetFunctionsAdminTokenOptions contains the optional parameters for the WebAppsClient.GetFunctionsAdminToken
// method.
type WebAppsClientGetFunctionsAdminTokenOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetFunctionsAdminTokenSlotOptions contains the optional parameters for the WebAppsClient.GetFunctionsAdminTokenSlot
// method.
type WebAppsClientGetFunctionsAdminTokenSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetHostNameBindingOptions contains the optional parameters for the WebAppsClient.GetHostNameBinding method.
type WebAppsClientGetHostNameBindingOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetHostNameBindingSlotOptions contains the optional parameters for the WebAppsClient.GetHostNameBindingSlot
// method.
type WebAppsClientGetHostNameBindingSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetHybridConnectionOptions contains the optional parameters for the WebAppsClient.GetHybridConnection method.
type WebAppsClientGetHybridConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetHybridConnectionSlotOptions contains the optional parameters for the WebAppsClient.GetHybridConnectionSlot
// method.
type WebAppsClientGetHybridConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceFunctionSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceFunctionSlot
// method.
type WebAppsClientGetInstanceFunctionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceInfoOptions contains the optional parameters for the WebAppsClient.GetInstanceInfo method.
type WebAppsClientGetInstanceInfoOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceInfoSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceInfoSlot method.
type WebAppsClientGetInstanceInfoSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceMSDeployLogOptions contains the optional parameters for the WebAppsClient.GetInstanceMSDeployLog
// method.
type WebAppsClientGetInstanceMSDeployLogOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceMSDeployLogSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceMSDeployLogSlot
// method.
type WebAppsClientGetInstanceMSDeployLogSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceMsDeployStatusOptions contains the optional parameters for the WebAppsClient.GetInstanceMsDeployStatus
// method.
type WebAppsClientGetInstanceMsDeployStatusOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceMsDeployStatusSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceMsDeployStatusSlot
// method.
type WebAppsClientGetInstanceMsDeployStatusSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceProcessDumpOptions contains the optional parameters for the WebAppsClient.GetInstanceProcessDump
// method.
type WebAppsClientGetInstanceProcessDumpOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceProcessDumpSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceProcessDumpSlot
// method.
type WebAppsClientGetInstanceProcessDumpSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceProcessModuleOptions contains the optional parameters for the WebAppsClient.GetInstanceProcessModule
// method.
type WebAppsClientGetInstanceProcessModuleOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceProcessModuleSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceProcessModuleSlot
// method.
type WebAppsClientGetInstanceProcessModuleSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceProcessOptions contains the optional parameters for the WebAppsClient.GetInstanceProcess method.
type WebAppsClientGetInstanceProcessOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceProcessSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceProcessSlot
// method.
type WebAppsClientGetInstanceProcessSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetInstanceWorkflowSlotOptions contains the optional parameters for the WebAppsClient.GetInstanceWorkflowSlot
// method.
type WebAppsClientGetInstanceWorkflowSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetMSDeployLogOptions contains the optional parameters for the WebAppsClient.GetMSDeployLog method.
type WebAppsClientGetMSDeployLogOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetMSDeployLogSlotOptions contains the optional parameters for the WebAppsClient.GetMSDeployLogSlot method.
type WebAppsClientGetMSDeployLogSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetMSDeployStatusOptions contains the optional parameters for the WebAppsClient.GetMSDeployStatus method.
type WebAppsClientGetMSDeployStatusOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetMSDeployStatusSlotOptions contains the optional parameters for the WebAppsClient.GetMSDeployStatusSlot
// method.
type WebAppsClientGetMSDeployStatusSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetMigrateMySQLStatusOptions contains the optional parameters for the WebAppsClient.GetMigrateMySQLStatus
// method.
type WebAppsClientGetMigrateMySQLStatusOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetMigrateMySQLStatusSlotOptions contains the optional parameters for the WebAppsClient.GetMigrateMySQLStatusSlot
// method.
type WebAppsClientGetMigrateMySQLStatusSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTraceOperationOptions contains the optional parameters for the WebAppsClient.GetNetworkTraceOperation
// method.
type WebAppsClientGetNetworkTraceOperationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTraceOperationSlotOptions contains the optional parameters for the WebAppsClient.GetNetworkTraceOperationSlot
// method.
type WebAppsClientGetNetworkTraceOperationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTraceOperationSlotV2Options contains the optional parameters for the WebAppsClient.GetNetworkTraceOperationSlotV2
// method.
type WebAppsClientGetNetworkTraceOperationSlotV2Options struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTraceOperationV2Options contains the optional parameters for the WebAppsClient.GetNetworkTraceOperationV2
// method.
type WebAppsClientGetNetworkTraceOperationV2Options struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTracesOptions contains the optional parameters for the WebAppsClient.GetNetworkTraces method.
type WebAppsClientGetNetworkTracesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTracesSlotOptions contains the optional parameters for the WebAppsClient.GetNetworkTracesSlot method.
type WebAppsClientGetNetworkTracesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTracesSlotV2Options contains the optional parameters for the WebAppsClient.GetNetworkTracesSlotV2
// method.
type WebAppsClientGetNetworkTracesSlotV2Options struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetNetworkTracesV2Options contains the optional parameters for the WebAppsClient.GetNetworkTracesV2 method.
type WebAppsClientGetNetworkTracesV2Options struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetOneDeployStatusOptions contains the optional parameters for the WebAppsClient.GetOneDeployStatus method.
type WebAppsClientGetOneDeployStatusOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetOptions contains the optional parameters for the WebAppsClient.Get method.
type WebAppsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPremierAddOnOptions contains the optional parameters for the WebAppsClient.GetPremierAddOn method.
type WebAppsClientGetPremierAddOnOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPremierAddOnSlotOptions contains the optional parameters for the WebAppsClient.GetPremierAddOnSlot method.
type WebAppsClientGetPremierAddOnSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateAccessOptions contains the optional parameters for the WebAppsClient.GetPrivateAccess method.
type WebAppsClientGetPrivateAccessOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateAccessSlotOptions contains the optional parameters for the WebAppsClient.GetPrivateAccessSlot method.
type WebAppsClientGetPrivateAccessSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateEndpointConnectionListOptions contains the optional parameters for the WebAppsClient.NewGetPrivateEndpointConnectionListPager
// method.
type WebAppsClientGetPrivateEndpointConnectionListOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateEndpointConnectionListSlotOptions contains the optional parameters for the WebAppsClient.NewGetPrivateEndpointConnectionListSlotPager
// method.
type WebAppsClientGetPrivateEndpointConnectionListSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateEndpointConnectionOptions contains the optional parameters for the WebAppsClient.GetPrivateEndpointConnection
// method.
type WebAppsClientGetPrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateEndpointConnectionSlotOptions contains the optional parameters for the WebAppsClient.GetPrivateEndpointConnectionSlot
// method.
type WebAppsClientGetPrivateEndpointConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateLinkResourcesOptions contains the optional parameters for the WebAppsClient.GetPrivateLinkResources
// method.
type WebAppsClientGetPrivateLinkResourcesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPrivateLinkResourcesSlotOptions contains the optional parameters for the WebAppsClient.GetPrivateLinkResourcesSlot
// method.
type WebAppsClientGetPrivateLinkResourcesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetProcessDumpOptions contains the optional parameters for the WebAppsClient.GetProcessDump method.
type WebAppsClientGetProcessDumpOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetProcessDumpSlotOptions contains the optional parameters for the WebAppsClient.GetProcessDumpSlot method.
type WebAppsClientGetProcessDumpSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetProcessModuleOptions contains the optional parameters for the WebAppsClient.GetProcessModule method.
type WebAppsClientGetProcessModuleOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetProcessModuleSlotOptions contains the optional parameters for the WebAppsClient.GetProcessModuleSlot method.
type WebAppsClientGetProcessModuleSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetProcessOptions contains the optional parameters for the WebAppsClient.GetProcess method.
type WebAppsClientGetProcessOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetProcessSlotOptions contains the optional parameters for the WebAppsClient.GetProcessSlot method.
type WebAppsClientGetProcessSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPublicCertificateOptions contains the optional parameters for the WebAppsClient.GetPublicCertificate method.
type WebAppsClientGetPublicCertificateOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetPublicCertificateSlotOptions contains the optional parameters for the WebAppsClient.GetPublicCertificateSlot
// method.
type WebAppsClientGetPublicCertificateSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetRelayServiceConnectionOptions contains the optional parameters for the WebAppsClient.GetRelayServiceConnection
// method.
type WebAppsClientGetRelayServiceConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetRelayServiceConnectionSlotOptions contains the optional parameters for the WebAppsClient.GetRelayServiceConnectionSlot
// method.
type WebAppsClientGetRelayServiceConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetScmAllowedOptions contains the optional parameters for the WebAppsClient.GetScmAllowed method.
type WebAppsClientGetScmAllowedOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetScmAllowedSlotOptions contains the optional parameters for the WebAppsClient.GetScmAllowedSlot method.
type WebAppsClientGetScmAllowedSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSiteConnectionStringKeyVaultReferenceOptions contains the optional parameters for the WebAppsClient.GetSiteConnectionStringKeyVaultReference
// method.
type WebAppsClientGetSiteConnectionStringKeyVaultReferenceOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSiteConnectionStringKeyVaultReferenceSlotOptions contains the optional parameters for the WebAppsClient.GetSiteConnectionStringKeyVaultReferenceSlot
// method.
type WebAppsClientGetSiteConnectionStringKeyVaultReferenceSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSiteConnectionStringKeyVaultReferencesOptions contains the optional parameters for the WebAppsClient.NewGetSiteConnectionStringKeyVaultReferencesPager
// method.
type WebAppsClientGetSiteConnectionStringKeyVaultReferencesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSiteConnectionStringKeyVaultReferencesSlotOptions contains the optional parameters for the WebAppsClient.NewGetSiteConnectionStringKeyVaultReferencesSlotPager
// method.
type WebAppsClientGetSiteConnectionStringKeyVaultReferencesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSiteExtensionOptions contains the optional parameters for the WebAppsClient.GetSiteExtension method.
type WebAppsClientGetSiteExtensionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSiteExtensionSlotOptions contains the optional parameters for the WebAppsClient.GetSiteExtensionSlot method.
type WebAppsClientGetSiteExtensionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSitePhpErrorLogFlagOptions contains the optional parameters for the WebAppsClient.GetSitePhpErrorLogFlag
// method.
type WebAppsClientGetSitePhpErrorLogFlagOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSitePhpErrorLogFlagSlotOptions contains the optional parameters for the WebAppsClient.GetSitePhpErrorLogFlagSlot
// method.
type WebAppsClientGetSitePhpErrorLogFlagSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSlotOptions contains the optional parameters for the WebAppsClient.GetSlot method.
type WebAppsClientGetSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSourceControlOptions contains the optional parameters for the WebAppsClient.GetSourceControl method.
type WebAppsClientGetSourceControlOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSourceControlSlotOptions contains the optional parameters for the WebAppsClient.GetSourceControlSlot method.
type WebAppsClientGetSourceControlSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSwiftVirtualNetworkConnectionOptions contains the optional parameters for the WebAppsClient.GetSwiftVirtualNetworkConnection
// method.
type WebAppsClientGetSwiftVirtualNetworkConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetSwiftVirtualNetworkConnectionSlotOptions contains the optional parameters for the WebAppsClient.GetSwiftVirtualNetworkConnectionSlot
// method.
type WebAppsClientGetSwiftVirtualNetworkConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetTriggeredWebJobHistoryOptions contains the optional parameters for the WebAppsClient.GetTriggeredWebJobHistory
// method.
type WebAppsClientGetTriggeredWebJobHistoryOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetTriggeredWebJobHistorySlotOptions contains the optional parameters for the WebAppsClient.GetTriggeredWebJobHistorySlot
// method.
type WebAppsClientGetTriggeredWebJobHistorySlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetTriggeredWebJobOptions contains the optional parameters for the WebAppsClient.GetTriggeredWebJob method.
type WebAppsClientGetTriggeredWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetTriggeredWebJobSlotOptions contains the optional parameters for the WebAppsClient.GetTriggeredWebJobSlot
// method.
type WebAppsClientGetTriggeredWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetVnetConnectionGatewayOptions contains the optional parameters for the WebAppsClient.GetVnetConnectionGateway
// method.
type WebAppsClientGetVnetConnectionGatewayOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetVnetConnectionGatewaySlotOptions contains the optional parameters for the WebAppsClient.GetVnetConnectionGatewaySlot
// method.
type WebAppsClientGetVnetConnectionGatewaySlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetVnetConnectionOptions contains the optional parameters for the WebAppsClient.GetVnetConnection method.
type WebAppsClientGetVnetConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetVnetConnectionSlotOptions contains the optional parameters for the WebAppsClient.GetVnetConnectionSlot
// method.
type WebAppsClientGetVnetConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetWebJobOptions contains the optional parameters for the WebAppsClient.GetWebJob method.
type WebAppsClientGetWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetWebJobSlotOptions contains the optional parameters for the WebAppsClient.GetWebJobSlot method.
type WebAppsClientGetWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetWebSiteContainerLogsOptions contains the optional parameters for the WebAppsClient.GetWebSiteContainerLogs
// method.
type WebAppsClientGetWebSiteContainerLogsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetWebSiteContainerLogsSlotOptions contains the optional parameters for the WebAppsClient.GetWebSiteContainerLogsSlot
// method.
type WebAppsClientGetWebSiteContainerLogsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientGetWorkflowOptions contains the optional parameters for the WebAppsClient.GetWorkflow method.
type WebAppsClientGetWorkflowOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientIsCloneableOptions contains the optional parameters for the WebAppsClient.IsCloneable method.
type WebAppsClientIsCloneableOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientIsCloneableSlotOptions contains the optional parameters for the WebAppsClient.IsCloneableSlot method.
type WebAppsClientIsCloneableSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListApplicationSettingsOptions contains the optional parameters for the WebAppsClient.ListApplicationSettings
// method.
type WebAppsClientListApplicationSettingsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListApplicationSettingsSlotOptions contains the optional parameters for the WebAppsClient.ListApplicationSettingsSlot
// method.
type WebAppsClientListApplicationSettingsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListAzureStorageAccountsOptions contains the optional parameters for the WebAppsClient.ListAzureStorageAccounts
// method.
type WebAppsClientListAzureStorageAccountsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListAzureStorageAccountsSlotOptions contains the optional parameters for the WebAppsClient.ListAzureStorageAccountsSlot
// method.
type WebAppsClientListAzureStorageAccountsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListBackupStatusSecretsOptions contains the optional parameters for the WebAppsClient.ListBackupStatusSecrets
// method.
type WebAppsClientListBackupStatusSecretsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListBackupStatusSecretsSlotOptions contains the optional parameters for the WebAppsClient.ListBackupStatusSecretsSlot
// method.
type WebAppsClientListBackupStatusSecretsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListBackupsOptions contains the optional parameters for the WebAppsClient.NewListBackupsPager method.
type WebAppsClientListBackupsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListBackupsSlotOptions contains the optional parameters for the WebAppsClient.NewListBackupsSlotPager method.
type WebAppsClientListBackupsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListBasicPublishingCredentialsPoliciesOptions contains the optional parameters for the WebAppsClient.NewListBasicPublishingCredentialsPoliciesPager
// method.
type WebAppsClientListBasicPublishingCredentialsPoliciesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListBasicPublishingCredentialsPoliciesSlotOptions contains the optional parameters for the WebAppsClient.NewListBasicPublishingCredentialsPoliciesSlotPager
// method.
type WebAppsClientListBasicPublishingCredentialsPoliciesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListByResourceGroupOptions contains the optional parameters for the WebAppsClient.NewListByResourceGroupPager
// method.
type WebAppsClientListByResourceGroupOptions struct {
	// Specify true to include deployment slots in results. The default is false, which only gives you the production slot of
	// all apps.
	IncludeSlots *bool
}

// WebAppsClientListConfigurationSnapshotInfoOptions contains the optional parameters for the WebAppsClient.NewListConfigurationSnapshotInfoPager
// method.
type WebAppsClientListConfigurationSnapshotInfoOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListConfigurationSnapshotInfoSlotOptions contains the optional parameters for the WebAppsClient.NewListConfigurationSnapshotInfoSlotPager
// method.
type WebAppsClientListConfigurationSnapshotInfoSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListConfigurationsOptions contains the optional parameters for the WebAppsClient.NewListConfigurationsPager
// method.
type WebAppsClientListConfigurationsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListConfigurationsSlotOptions contains the optional parameters for the WebAppsClient.NewListConfigurationsSlotPager
// method.
type WebAppsClientListConfigurationsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListConnectionStringsOptions contains the optional parameters for the WebAppsClient.ListConnectionStrings
// method.
type WebAppsClientListConnectionStringsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListConnectionStringsSlotOptions contains the optional parameters for the WebAppsClient.ListConnectionStringsSlot
// method.
type WebAppsClientListConnectionStringsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListContinuousWebJobsOptions contains the optional parameters for the WebAppsClient.NewListContinuousWebJobsPager
// method.
type WebAppsClientListContinuousWebJobsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListContinuousWebJobsSlotOptions contains the optional parameters for the WebAppsClient.NewListContinuousWebJobsSlotPager
// method.
type WebAppsClientListContinuousWebJobsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListDeploymentLogOptions contains the optional parameters for the WebAppsClient.ListDeploymentLog method.
type WebAppsClientListDeploymentLogOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListDeploymentLogSlotOptions contains the optional parameters for the WebAppsClient.ListDeploymentLogSlot
// method.
type WebAppsClientListDeploymentLogSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListDeploymentsOptions contains the optional parameters for the WebAppsClient.NewListDeploymentsPager method.
type WebAppsClientListDeploymentsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListDeploymentsSlotOptions contains the optional parameters for the WebAppsClient.NewListDeploymentsSlotPager
// method.
type WebAppsClientListDeploymentsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListDomainOwnershipIdentifiersOptions contains the optional parameters for the WebAppsClient.NewListDomainOwnershipIdentifiersPager
// method.
type WebAppsClientListDomainOwnershipIdentifiersOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListDomainOwnershipIdentifiersSlotOptions contains the optional parameters for the WebAppsClient.NewListDomainOwnershipIdentifiersSlotPager
// method.
type WebAppsClientListDomainOwnershipIdentifiersSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListFunctionKeysOptions contains the optional parameters for the WebAppsClient.ListFunctionKeys method.
type WebAppsClientListFunctionKeysOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListFunctionKeysSlotOptions contains the optional parameters for the WebAppsClient.ListFunctionKeysSlot method.
type WebAppsClientListFunctionKeysSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListFunctionSecretsOptions contains the optional parameters for the WebAppsClient.ListFunctionSecrets method.
type WebAppsClientListFunctionSecretsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListFunctionSecretsSlotOptions contains the optional parameters for the WebAppsClient.ListFunctionSecretsSlot
// method.
type WebAppsClientListFunctionSecretsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListFunctionsOptions contains the optional parameters for the WebAppsClient.NewListFunctionsPager method.
type WebAppsClientListFunctionsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListHostKeysOptions contains the optional parameters for the WebAppsClient.ListHostKeys method.
type WebAppsClientListHostKeysOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListHostKeysSlotOptions contains the optional parameters for the WebAppsClient.ListHostKeysSlot method.
type WebAppsClientListHostKeysSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListHostNameBindingsOptions contains the optional parameters for the WebAppsClient.NewListHostNameBindingsPager
// method.
type WebAppsClientListHostNameBindingsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListHostNameBindingsSlotOptions contains the optional parameters for the WebAppsClient.NewListHostNameBindingsSlotPager
// method.
type WebAppsClientListHostNameBindingsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListHybridConnectionsOptions contains the optional parameters for the WebAppsClient.ListHybridConnections
// method.
type WebAppsClientListHybridConnectionsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListHybridConnectionsSlotOptions contains the optional parameters for the WebAppsClient.ListHybridConnectionsSlot
// method.
type WebAppsClientListHybridConnectionsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceFunctionsSlotOptions contains the optional parameters for the WebAppsClient.NewListInstanceFunctionsSlotPager
// method.
type WebAppsClientListInstanceFunctionsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceIdentifiersOptions contains the optional parameters for the WebAppsClient.NewListInstanceIdentifiersPager
// method.
type WebAppsClientListInstanceIdentifiersOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceIdentifiersSlotOptions contains the optional parameters for the WebAppsClient.NewListInstanceIdentifiersSlotPager
// method.
type WebAppsClientListInstanceIdentifiersSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceProcessModulesOptions contains the optional parameters for the WebAppsClient.NewListInstanceProcessModulesPager
// method.
type WebAppsClientListInstanceProcessModulesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceProcessModulesSlotOptions contains the optional parameters for the WebAppsClient.NewListInstanceProcessModulesSlotPager
// method.
type WebAppsClientListInstanceProcessModulesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceProcessThreadsOptions contains the optional parameters for the WebAppsClient.NewListInstanceProcessThreadsPager
// method.
type WebAppsClientListInstanceProcessThreadsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceProcessThreadsSlotOptions contains the optional parameters for the WebAppsClient.NewListInstanceProcessThreadsSlotPager
// method.
type WebAppsClientListInstanceProcessThreadsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceProcessesOptions contains the optional parameters for the WebAppsClient.NewListInstanceProcessesPager
// method.
type WebAppsClientListInstanceProcessesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceProcessesSlotOptions contains the optional parameters for the WebAppsClient.NewListInstanceProcessesSlotPager
// method.
type WebAppsClientListInstanceProcessesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListInstanceWorkflowsSlotOptions contains the optional parameters for the WebAppsClient.NewListInstanceWorkflowsSlotPager
// method.
type WebAppsClientListInstanceWorkflowsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListMetadataOptions contains the optional parameters for the WebAppsClient.ListMetadata method.
type WebAppsClientListMetadataOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListMetadataSlotOptions contains the optional parameters for the WebAppsClient.ListMetadataSlot method.
type WebAppsClientListMetadataSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListNetworkFeaturesOptions contains the optional parameters for the WebAppsClient.ListNetworkFeatures method.
type WebAppsClientListNetworkFeaturesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListNetworkFeaturesSlotOptions contains the optional parameters for the WebAppsClient.ListNetworkFeaturesSlot
// method.
type WebAppsClientListNetworkFeaturesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListOptions contains the optional parameters for the WebAppsClient.NewListPager method.
type WebAppsClientListOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListPerfMonCountersOptions contains the optional parameters for the WebAppsClient.NewListPerfMonCountersPager
// method.
type WebAppsClientListPerfMonCountersOptions struct {
	// Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq 2014-01-01T00:00:00Z
	// and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
	// duration'[Hour|Minute|Day]'.
	Filter *string
}

// WebAppsClientListPerfMonCountersSlotOptions contains the optional parameters for the WebAppsClient.NewListPerfMonCountersSlotPager
// method.
type WebAppsClientListPerfMonCountersSlotOptions struct {
	// Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq 2014-01-01T00:00:00Z
	// and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
	// duration'[Hour|Minute|Day]'.
	Filter *string
}

// WebAppsClientListPremierAddOnsOptions contains the optional parameters for the WebAppsClient.ListPremierAddOns method.
type WebAppsClientListPremierAddOnsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListPremierAddOnsSlotOptions contains the optional parameters for the WebAppsClient.ListPremierAddOnsSlot
// method.
type WebAppsClientListPremierAddOnsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListProcessModulesOptions contains the optional parameters for the WebAppsClient.NewListProcessModulesPager
// method.
type WebAppsClientListProcessModulesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListProcessModulesSlotOptions contains the optional parameters for the WebAppsClient.NewListProcessModulesSlotPager
// method.
type WebAppsClientListProcessModulesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListProcessThreadsOptions contains the optional parameters for the WebAppsClient.NewListProcessThreadsPager
// method.
type WebAppsClientListProcessThreadsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListProcessThreadsSlotOptions contains the optional parameters for the WebAppsClient.NewListProcessThreadsSlotPager
// method.
type WebAppsClientListProcessThreadsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListProcessesOptions contains the optional parameters for the WebAppsClient.NewListProcessesPager method.
type WebAppsClientListProcessesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListProcessesSlotOptions contains the optional parameters for the WebAppsClient.NewListProcessesSlotPager
// method.
type WebAppsClientListProcessesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListProductionSiteDeploymentStatusesOptions contains the optional parameters for the WebAppsClient.NewListProductionSiteDeploymentStatusesPager
// method.
type WebAppsClientListProductionSiteDeploymentStatusesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListPublicCertificatesOptions contains the optional parameters for the WebAppsClient.NewListPublicCertificatesPager
// method.
type WebAppsClientListPublicCertificatesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListPublicCertificatesSlotOptions contains the optional parameters for the WebAppsClient.NewListPublicCertificatesSlotPager
// method.
type WebAppsClientListPublicCertificatesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListPublishingProfileXMLWithSecretsOptions contains the optional parameters for the WebAppsClient.ListPublishingProfileXMLWithSecrets
// method.
type WebAppsClientListPublishingProfileXMLWithSecretsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListPublishingProfileXMLWithSecretsSlotOptions contains the optional parameters for the WebAppsClient.ListPublishingProfileXMLWithSecretsSlot
// method.
type WebAppsClientListPublishingProfileXMLWithSecretsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListRelayServiceConnectionsOptions contains the optional parameters for the WebAppsClient.ListRelayServiceConnections
// method.
type WebAppsClientListRelayServiceConnectionsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListRelayServiceConnectionsSlotOptions contains the optional parameters for the WebAppsClient.ListRelayServiceConnectionsSlot
// method.
type WebAppsClientListRelayServiceConnectionsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSiteBackupsOptions contains the optional parameters for the WebAppsClient.NewListSiteBackupsPager method.
type WebAppsClientListSiteBackupsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSiteBackupsSlotOptions contains the optional parameters for the WebAppsClient.NewListSiteBackupsSlotPager
// method.
type WebAppsClientListSiteBackupsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSiteExtensionsOptions contains the optional parameters for the WebAppsClient.NewListSiteExtensionsPager
// method.
type WebAppsClientListSiteExtensionsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSiteExtensionsSlotOptions contains the optional parameters for the WebAppsClient.NewListSiteExtensionsSlotPager
// method.
type WebAppsClientListSiteExtensionsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSitePushSettingsOptions contains the optional parameters for the WebAppsClient.ListSitePushSettings method.
type WebAppsClientListSitePushSettingsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSitePushSettingsSlotOptions contains the optional parameters for the WebAppsClient.ListSitePushSettingsSlot
// method.
type WebAppsClientListSitePushSettingsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSlotConfigurationNamesOptions contains the optional parameters for the WebAppsClient.ListSlotConfigurationNames
// method.
type WebAppsClientListSlotConfigurationNamesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSlotDifferencesFromProductionOptions contains the optional parameters for the WebAppsClient.NewListSlotDifferencesFromProductionPager
// method.
type WebAppsClientListSlotDifferencesFromProductionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSlotDifferencesSlotOptions contains the optional parameters for the WebAppsClient.NewListSlotDifferencesSlotPager
// method.
type WebAppsClientListSlotDifferencesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSlotSiteDeploymentStatusesSlotOptions contains the optional parameters for the WebAppsClient.NewListSlotSiteDeploymentStatusesSlotPager
// method.
type WebAppsClientListSlotSiteDeploymentStatusesSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSlotsOptions contains the optional parameters for the WebAppsClient.NewListSlotsPager method.
type WebAppsClientListSlotsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSnapshotsFromDRSecondaryOptions contains the optional parameters for the WebAppsClient.NewListSnapshotsFromDRSecondaryPager
// method.
type WebAppsClientListSnapshotsFromDRSecondaryOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSnapshotsFromDRSecondarySlotOptions contains the optional parameters for the WebAppsClient.NewListSnapshotsFromDRSecondarySlotPager
// method.
type WebAppsClientListSnapshotsFromDRSecondarySlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSnapshotsOptions contains the optional parameters for the WebAppsClient.NewListSnapshotsPager method.
type WebAppsClientListSnapshotsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSnapshotsSlotOptions contains the optional parameters for the WebAppsClient.NewListSnapshotsSlotPager
// method.
type WebAppsClientListSnapshotsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSyncFunctionTriggersOptions contains the optional parameters for the WebAppsClient.ListSyncFunctionTriggers
// method.
type WebAppsClientListSyncFunctionTriggersOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSyncFunctionTriggersSlotOptions contains the optional parameters for the WebAppsClient.ListSyncFunctionTriggersSlot
// method.
type WebAppsClientListSyncFunctionTriggersSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSyncStatusOptions contains the optional parameters for the WebAppsClient.ListSyncStatus method.
type WebAppsClientListSyncStatusOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListSyncStatusSlotOptions contains the optional parameters for the WebAppsClient.ListSyncStatusSlot method.
type WebAppsClientListSyncStatusSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListTriggeredWebJobHistoryOptions contains the optional parameters for the WebAppsClient.NewListTriggeredWebJobHistoryPager
// method.
type WebAppsClientListTriggeredWebJobHistoryOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListTriggeredWebJobHistorySlotOptions contains the optional parameters for the WebAppsClient.NewListTriggeredWebJobHistorySlotPager
// method.
type WebAppsClientListTriggeredWebJobHistorySlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListTriggeredWebJobsOptions contains the optional parameters for the WebAppsClient.NewListTriggeredWebJobsPager
// method.
type WebAppsClientListTriggeredWebJobsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListTriggeredWebJobsSlotOptions contains the optional parameters for the WebAppsClient.NewListTriggeredWebJobsSlotPager
// method.
type WebAppsClientListTriggeredWebJobsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListUsagesOptions contains the optional parameters for the WebAppsClient.NewListUsagesPager method.
type WebAppsClientListUsagesOptions struct {
	// Return only information specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or
	// name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq
	// 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
	Filter *string
}

// WebAppsClientListUsagesSlotOptions contains the optional parameters for the WebAppsClient.NewListUsagesSlotPager method.
type WebAppsClientListUsagesSlotOptions struct {
	// Return only information specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or
	// name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq
	// 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
	Filter *string
}

// WebAppsClientListVnetConnectionsOptions contains the optional parameters for the WebAppsClient.ListVnetConnections method.
type WebAppsClientListVnetConnectionsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListVnetConnectionsSlotOptions contains the optional parameters for the WebAppsClient.ListVnetConnectionsSlot
// method.
type WebAppsClientListVnetConnectionsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListWebJobsOptions contains the optional parameters for the WebAppsClient.NewListWebJobsPager method.
type WebAppsClientListWebJobsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListWebJobsSlotOptions contains the optional parameters for the WebAppsClient.NewListWebJobsSlotPager method.
type WebAppsClientListWebJobsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListWorkflowsConnectionsOptions contains the optional parameters for the WebAppsClient.ListWorkflowsConnections
// method.
type WebAppsClientListWorkflowsConnectionsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListWorkflowsConnectionsSlotOptions contains the optional parameters for the WebAppsClient.ListWorkflowsConnectionsSlot
// method.
type WebAppsClientListWorkflowsConnectionsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientListWorkflowsOptions contains the optional parameters for the WebAppsClient.NewListWorkflowsPager method.
type WebAppsClientListWorkflowsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientPutPrivateAccessVnetOptions contains the optional parameters for the WebAppsClient.PutPrivateAccessVnet method.
type WebAppsClientPutPrivateAccessVnetOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientPutPrivateAccessVnetSlotOptions contains the optional parameters for the WebAppsClient.PutPrivateAccessVnetSlot
// method.
type WebAppsClientPutPrivateAccessVnetSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientRecoverSiteConfigurationSnapshotOptions contains the optional parameters for the WebAppsClient.RecoverSiteConfigurationSnapshot
// method.
type WebAppsClientRecoverSiteConfigurationSnapshotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientRecoverSiteConfigurationSnapshotSlotOptions contains the optional parameters for the WebAppsClient.RecoverSiteConfigurationSnapshotSlot
// method.
type WebAppsClientRecoverSiteConfigurationSnapshotSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientResetProductionSlotConfigOptions contains the optional parameters for the WebAppsClient.ResetProductionSlotConfig
// method.
type WebAppsClientResetProductionSlotConfigOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientResetSlotConfigurationSlotOptions contains the optional parameters for the WebAppsClient.ResetSlotConfigurationSlot
// method.
type WebAppsClientResetSlotConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientRestartOptions contains the optional parameters for the WebAppsClient.Restart method.
type WebAppsClientRestartOptions struct {
	// Specify true to apply the configuration settings and restarts the app only if necessary. By default, the API always restarts
	// and reprovisions the app.
	SoftRestart *bool

	// Specify true to block until the app is restarted. By default, it is set to false, and the API responds immediately (asynchronous).
	Synchronous *bool
}

// WebAppsClientRestartSlotOptions contains the optional parameters for the WebAppsClient.RestartSlot method.
type WebAppsClientRestartSlotOptions struct {
	// Specify true to apply the configuration settings and restarts the app only if necessary. By default, the API always restarts
	// and reprovisions the app.
	SoftRestart *bool

	// Specify true to block until the app is restarted. By default, it is set to false, and the API responds immediately (asynchronous).
	Synchronous *bool
}

// WebAppsClientRunTriggeredWebJobOptions contains the optional parameters for the WebAppsClient.RunTriggeredWebJob method.
type WebAppsClientRunTriggeredWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientRunTriggeredWebJobSlotOptions contains the optional parameters for the WebAppsClient.RunTriggeredWebJobSlot
// method.
type WebAppsClientRunTriggeredWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStartContinuousWebJobOptions contains the optional parameters for the WebAppsClient.StartContinuousWebJob
// method.
type WebAppsClientStartContinuousWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStartContinuousWebJobSlotOptions contains the optional parameters for the WebAppsClient.StartContinuousWebJobSlot
// method.
type WebAppsClientStartContinuousWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStartOptions contains the optional parameters for the WebAppsClient.Start method.
type WebAppsClientStartOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStartSlotOptions contains the optional parameters for the WebAppsClient.StartSlot method.
type WebAppsClientStartSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStartWebSiteNetworkTraceOptions contains the optional parameters for the WebAppsClient.StartWebSiteNetworkTrace
// method.
type WebAppsClientStartWebSiteNetworkTraceOptions struct {
	// The duration to keep capturing in seconds.
	DurationInSeconds *int32

	// The maximum frame length in bytes (Optional).
	MaxFrameLength *int32

	// The Blob URL to store capture file.
	SasURL *string
}

// WebAppsClientStartWebSiteNetworkTraceSlotOptions contains the optional parameters for the WebAppsClient.StartWebSiteNetworkTraceSlot
// method.
type WebAppsClientStartWebSiteNetworkTraceSlotOptions struct {
	// The duration to keep capturing in seconds.
	DurationInSeconds *int32

	// The maximum frame length in bytes (Optional).
	MaxFrameLength *int32

	// The Blob URL to store capture file.
	SasURL *string
}

// WebAppsClientStopContinuousWebJobOptions contains the optional parameters for the WebAppsClient.StopContinuousWebJob method.
type WebAppsClientStopContinuousWebJobOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStopContinuousWebJobSlotOptions contains the optional parameters for the WebAppsClient.StopContinuousWebJobSlot
// method.
type WebAppsClientStopContinuousWebJobSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStopNetworkTraceOptions contains the optional parameters for the WebAppsClient.StopNetworkTrace method.
type WebAppsClientStopNetworkTraceOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStopNetworkTraceSlotOptions contains the optional parameters for the WebAppsClient.StopNetworkTraceSlot method.
type WebAppsClientStopNetworkTraceSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStopOptions contains the optional parameters for the WebAppsClient.Stop method.
type WebAppsClientStopOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStopSlotOptions contains the optional parameters for the WebAppsClient.StopSlot method.
type WebAppsClientStopSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStopWebSiteNetworkTraceOptions contains the optional parameters for the WebAppsClient.StopWebSiteNetworkTrace
// method.
type WebAppsClientStopWebSiteNetworkTraceOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientStopWebSiteNetworkTraceSlotOptions contains the optional parameters for the WebAppsClient.StopWebSiteNetworkTraceSlot
// method.
type WebAppsClientStopWebSiteNetworkTraceSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientSyncFunctionTriggersOptions contains the optional parameters for the WebAppsClient.SyncFunctionTriggers method.
type WebAppsClientSyncFunctionTriggersOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientSyncFunctionTriggersSlotOptions contains the optional parameters for the WebAppsClient.SyncFunctionTriggersSlot
// method.
type WebAppsClientSyncFunctionTriggersSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientSyncFunctionsOptions contains the optional parameters for the WebAppsClient.SyncFunctions method.
type WebAppsClientSyncFunctionsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientSyncFunctionsSlotOptions contains the optional parameters for the WebAppsClient.SyncFunctionsSlot method.
type WebAppsClientSyncFunctionsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientSyncRepositoryOptions contains the optional parameters for the WebAppsClient.SyncRepository method.
type WebAppsClientSyncRepositoryOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientSyncRepositorySlotOptions contains the optional parameters for the WebAppsClient.SyncRepositorySlot method.
type WebAppsClientSyncRepositorySlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateApplicationSettingsOptions contains the optional parameters for the WebAppsClient.UpdateApplicationSettings
// method.
type WebAppsClientUpdateApplicationSettingsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateApplicationSettingsSlotOptions contains the optional parameters for the WebAppsClient.UpdateApplicationSettingsSlot
// method.
type WebAppsClientUpdateApplicationSettingsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateAuthSettingsOptions contains the optional parameters for the WebAppsClient.UpdateAuthSettings method.
type WebAppsClientUpdateAuthSettingsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateAuthSettingsSlotOptions contains the optional parameters for the WebAppsClient.UpdateAuthSettingsSlot
// method.
type WebAppsClientUpdateAuthSettingsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateAuthSettingsV2Options contains the optional parameters for the WebAppsClient.UpdateAuthSettingsV2 method.
type WebAppsClientUpdateAuthSettingsV2Options struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateAuthSettingsV2SlotOptions contains the optional parameters for the WebAppsClient.UpdateAuthSettingsV2Slot
// method.
type WebAppsClientUpdateAuthSettingsV2SlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateAzureStorageAccountsOptions contains the optional parameters for the WebAppsClient.UpdateAzureStorageAccounts
// method.
type WebAppsClientUpdateAzureStorageAccountsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateAzureStorageAccountsSlotOptions contains the optional parameters for the WebAppsClient.UpdateAzureStorageAccountsSlot
// method.
type WebAppsClientUpdateAzureStorageAccountsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateBackupConfigurationOptions contains the optional parameters for the WebAppsClient.UpdateBackupConfiguration
// method.
type WebAppsClientUpdateBackupConfigurationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateBackupConfigurationSlotOptions contains the optional parameters for the WebAppsClient.UpdateBackupConfigurationSlot
// method.
type WebAppsClientUpdateBackupConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateConfigurationOptions contains the optional parameters for the WebAppsClient.UpdateConfiguration method.
type WebAppsClientUpdateConfigurationOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateConfigurationSlotOptions contains the optional parameters for the WebAppsClient.UpdateConfigurationSlot
// method.
type WebAppsClientUpdateConfigurationSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateConnectionStringsOptions contains the optional parameters for the WebAppsClient.UpdateConnectionStrings
// method.
type WebAppsClientUpdateConnectionStringsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateConnectionStringsSlotOptions contains the optional parameters for the WebAppsClient.UpdateConnectionStringsSlot
// method.
type WebAppsClientUpdateConnectionStringsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateDiagnosticLogsConfigOptions contains the optional parameters for the WebAppsClient.UpdateDiagnosticLogsConfig
// method.
type WebAppsClientUpdateDiagnosticLogsConfigOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateDiagnosticLogsConfigSlotOptions contains the optional parameters for the WebAppsClient.UpdateDiagnosticLogsConfigSlot
// method.
type WebAppsClientUpdateDiagnosticLogsConfigSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateDomainOwnershipIdentifierOptions contains the optional parameters for the WebAppsClient.UpdateDomainOwnershipIdentifier
// method.
type WebAppsClientUpdateDomainOwnershipIdentifierOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateDomainOwnershipIdentifierSlotOptions contains the optional parameters for the WebAppsClient.UpdateDomainOwnershipIdentifierSlot
// method.
type WebAppsClientUpdateDomainOwnershipIdentifierSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateFtpAllowedOptions contains the optional parameters for the WebAppsClient.UpdateFtpAllowed method.
type WebAppsClientUpdateFtpAllowedOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateFtpAllowedSlotOptions contains the optional parameters for the WebAppsClient.UpdateFtpAllowedSlot method.
type WebAppsClientUpdateFtpAllowedSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateHybridConnectionOptions contains the optional parameters for the WebAppsClient.UpdateHybridConnection
// method.
type WebAppsClientUpdateHybridConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateHybridConnectionSlotOptions contains the optional parameters for the WebAppsClient.UpdateHybridConnectionSlot
// method.
type WebAppsClientUpdateHybridConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateMetadataOptions contains the optional parameters for the WebAppsClient.UpdateMetadata method.
type WebAppsClientUpdateMetadataOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateMetadataSlotOptions contains the optional parameters for the WebAppsClient.UpdateMetadataSlot method.
type WebAppsClientUpdateMetadataSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateOptions contains the optional parameters for the WebAppsClient.Update method.
type WebAppsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdatePremierAddOnOptions contains the optional parameters for the WebAppsClient.UpdatePremierAddOn method.
type WebAppsClientUpdatePremierAddOnOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdatePremierAddOnSlotOptions contains the optional parameters for the WebAppsClient.UpdatePremierAddOnSlot
// method.
type WebAppsClientUpdatePremierAddOnSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateRelayServiceConnectionOptions contains the optional parameters for the WebAppsClient.UpdateRelayServiceConnection
// method.
type WebAppsClientUpdateRelayServiceConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateRelayServiceConnectionSlotOptions contains the optional parameters for the WebAppsClient.UpdateRelayServiceConnectionSlot
// method.
type WebAppsClientUpdateRelayServiceConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateScmAllowedOptions contains the optional parameters for the WebAppsClient.UpdateScmAllowed method.
type WebAppsClientUpdateScmAllowedOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateScmAllowedSlotOptions contains the optional parameters for the WebAppsClient.UpdateScmAllowedSlot method.
type WebAppsClientUpdateScmAllowedSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSitePushSettingsOptions contains the optional parameters for the WebAppsClient.UpdateSitePushSettings
// method.
type WebAppsClientUpdateSitePushSettingsOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSitePushSettingsSlotOptions contains the optional parameters for the WebAppsClient.UpdateSitePushSettingsSlot
// method.
type WebAppsClientUpdateSitePushSettingsSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSlotConfigurationNamesOptions contains the optional parameters for the WebAppsClient.UpdateSlotConfigurationNames
// method.
type WebAppsClientUpdateSlotConfigurationNamesOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSlotOptions contains the optional parameters for the WebAppsClient.UpdateSlot method.
type WebAppsClientUpdateSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSourceControlOptions contains the optional parameters for the WebAppsClient.UpdateSourceControl method.
type WebAppsClientUpdateSourceControlOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSourceControlSlotOptions contains the optional parameters for the WebAppsClient.UpdateSourceControlSlot
// method.
type WebAppsClientUpdateSourceControlSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSwiftVirtualNetworkConnectionWithCheckOptions contains the optional parameters for the WebAppsClient.UpdateSwiftVirtualNetworkConnectionWithCheck
// method.
type WebAppsClientUpdateSwiftVirtualNetworkConnectionWithCheckOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptions contains the optional parameters for the WebAppsClient.UpdateSwiftVirtualNetworkConnectionWithCheckSlot
// method.
type WebAppsClientUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateVnetConnectionGatewayOptions contains the optional parameters for the WebAppsClient.UpdateVnetConnectionGateway
// method.
type WebAppsClientUpdateVnetConnectionGatewayOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateVnetConnectionGatewaySlotOptions contains the optional parameters for the WebAppsClient.UpdateVnetConnectionGatewaySlot
// method.
type WebAppsClientUpdateVnetConnectionGatewaySlotOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateVnetConnectionOptions contains the optional parameters for the WebAppsClient.UpdateVnetConnection method.
type WebAppsClientUpdateVnetConnectionOptions struct {
	// placeholder for future optional parameters
}

// WebAppsClientUpdateVnetConnectionSlotOptions contains the optional parameters for the WebAppsClient.UpdateVnetConnectionSlot
// method.
type WebAppsClientUpdateVnetConnectionSlotOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientCheckNameAvailabilityOptions contains the optional parameters for the WebSiteManagementClient.CheckNameAvailability
// method.
type WebSiteManagementClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientGetPublishingUserOptions contains the optional parameters for the WebSiteManagementClient.GetPublishingUser
// method.
type WebSiteManagementClientGetPublishingUserOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientGetSourceControlOptions contains the optional parameters for the WebSiteManagementClient.GetSourceControl
// method.
type WebSiteManagementClientGetSourceControlOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientGetSubscriptionDeploymentLocationsOptions contains the optional parameters for the WebSiteManagementClient.GetSubscriptionDeploymentLocations
// method.
type WebSiteManagementClientGetSubscriptionDeploymentLocationsOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientListAseRegionsOptions contains the optional parameters for the WebSiteManagementClient.NewListAseRegionsPager
// method.
type WebSiteManagementClientListAseRegionsOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientListBillingMetersOptions contains the optional parameters for the WebSiteManagementClient.NewListBillingMetersPager
// method.
type WebSiteManagementClientListBillingMetersOptions struct {
	// Azure Location of billable resource
	BillingLocation *string

	// App Service OS type meters used for
	OSType *string
}

// WebSiteManagementClientListCustomHostNameSitesOptions contains the optional parameters for the WebSiteManagementClient.NewListCustomHostNameSitesPager
// method.
type WebSiteManagementClientListCustomHostNameSitesOptions struct {
	// Specific hostname
	Hostname *string
}

// WebSiteManagementClientListGeoRegionsOptions contains the optional parameters for the WebSiteManagementClient.NewListGeoRegionsPager
// method.
type WebSiteManagementClientListGeoRegionsOptions struct {
	// Specify true if you want to filter to only regions that support Linux Consumption Workers.
	LinuxDynamicWorkersEnabled *bool

	// Specify true if you want to filter to only regions that support Linux workers.
	LinuxWorkersEnabled *bool

	// Name of SKU used to filter the regions.
	SKU *SKUName

	// Specify true if you want to filter to only regions that support Xenon workers.
	XenonWorkersEnabled *bool
}

// WebSiteManagementClientListPremierAddOnOffersOptions contains the optional parameters for the WebSiteManagementClient.NewListPremierAddOnOffersPager
// method.
type WebSiteManagementClientListPremierAddOnOffersOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientListSKUsOptions contains the optional parameters for the WebSiteManagementClient.ListSKUs method.
type WebSiteManagementClientListSKUsOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptions contains the optional parameters for the WebSiteManagementClient.NewListSiteIdentifiersAssignedToHostNamePager
// method.
type WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientListSourceControlsOptions contains the optional parameters for the WebSiteManagementClient.NewListSourceControlsPager
// method.
type WebSiteManagementClientListSourceControlsOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientMoveOptions contains the optional parameters for the WebSiteManagementClient.Move method.
type WebSiteManagementClientMoveOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientUpdatePublishingUserOptions contains the optional parameters for the WebSiteManagementClient.UpdatePublishingUser
// method.
type WebSiteManagementClientUpdatePublishingUserOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientUpdateSourceControlOptions contains the optional parameters for the WebSiteManagementClient.UpdateSourceControl
// method.
type WebSiteManagementClientUpdateSourceControlOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientValidateMoveOptions contains the optional parameters for the WebSiteManagementClient.ValidateMove
// method.
type WebSiteManagementClientValidateMoveOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientValidateOptions contains the optional parameters for the WebSiteManagementClient.Validate method.
type WebSiteManagementClientValidateOptions struct {
	// placeholder for future optional parameters
}

// WebSiteManagementClientVerifyHostingEnvironmentVnetOptions contains the optional parameters for the WebSiteManagementClient.VerifyHostingEnvironmentVnet
// method.
type WebSiteManagementClientVerifyHostingEnvironmentVnetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsClientGetOptions contains the optional parameters for the WorkflowRunActionRepetitionsClient.Get
// method.
type WorkflowRunActionRepetitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsClientListExpressionTracesOptions contains the optional parameters for the WorkflowRunActionRepetitionsClient.NewListExpressionTracesPager
// method.
type WorkflowRunActionRepetitionsClientListExpressionTracesOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsClientListOptions contains the optional parameters for the WorkflowRunActionRepetitionsClient.NewListPager
// method.
type WorkflowRunActionRepetitionsClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsRequestHistoriesClientGetOptions contains the optional parameters for the WorkflowRunActionRepetitionsRequestHistoriesClient.Get
// method.
type WorkflowRunActionRepetitionsRequestHistoriesClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsRequestHistoriesClientListOptions contains the optional parameters for the WorkflowRunActionRepetitionsRequestHistoriesClient.NewListPager
// method.
type WorkflowRunActionRepetitionsRequestHistoriesClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionScopeRepetitionsClientGetOptions contains the optional parameters for the WorkflowRunActionScopeRepetitionsClient.Get
// method.
type WorkflowRunActionScopeRepetitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionScopeRepetitionsClientListOptions contains the optional parameters for the WorkflowRunActionScopeRepetitionsClient.NewListPager
// method.
type WorkflowRunActionScopeRepetitionsClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionsClientGetOptions contains the optional parameters for the WorkflowRunActionsClient.Get method.
type WorkflowRunActionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionsClientListExpressionTracesOptions contains the optional parameters for the WorkflowRunActionsClient.NewListExpressionTracesPager
// method.
type WorkflowRunActionsClientListExpressionTracesOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionsClientListOptions contains the optional parameters for the WorkflowRunActionsClient.NewListPager method.
type WorkflowRunActionsClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: Status.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowRunsClientCancelOptions contains the optional parameters for the WorkflowRunsClient.Cancel method.
type WorkflowRunsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunsClientGetOptions contains the optional parameters for the WorkflowRunsClient.Get method.
type WorkflowRunsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunsClientListOptions contains the optional parameters for the WorkflowRunsClient.NewListPager method.
type WorkflowRunsClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowTriggerHistoriesClientBeginResubmitOptions contains the optional parameters for the WorkflowTriggerHistoriesClient.BeginResubmit
// method.
type WorkflowTriggerHistoriesClientBeginResubmitOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WorkflowTriggerHistoriesClientGetOptions contains the optional parameters for the WorkflowTriggerHistoriesClient.Get method.
type WorkflowTriggerHistoriesClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggerHistoriesClientListOptions contains the optional parameters for the WorkflowTriggerHistoriesClient.NewListPager
// method.
type WorkflowTriggerHistoriesClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowTriggersClientBeginRunOptions contains the optional parameters for the WorkflowTriggersClient.BeginRun method.
type WorkflowTriggersClientBeginRunOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WorkflowTriggersClientGetOptions contains the optional parameters for the WorkflowTriggersClient.Get method.
type WorkflowTriggersClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientGetSchemaJSONOptions contains the optional parameters for the WorkflowTriggersClient.GetSchemaJSON
// method.
type WorkflowTriggersClientGetSchemaJSONOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientListCallbackURLOptions contains the optional parameters for the WorkflowTriggersClient.ListCallbackURL
// method.
type WorkflowTriggersClientListCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientListOptions contains the optional parameters for the WorkflowTriggersClient.NewListPager method.
type WorkflowTriggersClientListOptions struct {
	// The filter to apply on the operation.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowVersionsClientGetOptions contains the optional parameters for the WorkflowVersionsClient.Get method.
type WorkflowVersionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowVersionsClientListOptions contains the optional parameters for the WorkflowVersionsClient.NewListPager method.
type WorkflowVersionsClientListOptions struct {
	// The number of items to be included in the result.
	Top *int32
}

// WorkflowsClientRegenerateAccessKeyOptions contains the optional parameters for the WorkflowsClient.RegenerateAccessKey
// method.
type WorkflowsClientRegenerateAccessKeyOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientValidateOptions contains the optional parameters for the WorkflowsClient.Validate method.
type WorkflowsClientValidateOptions struct {
	// placeholder for future optional parameters
}
