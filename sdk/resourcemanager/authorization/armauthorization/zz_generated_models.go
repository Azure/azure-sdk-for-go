//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armauthorization

import "time"

// AccessReviewActorIdentity - Details of the actor identity
type AccessReviewActorIdentity struct {
	// READ-ONLY; The identity id
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The identity display name
	PrincipalName *string `json:"principalName,omitempty" azure:"ro"`

	// READ-ONLY; The identity type : user/servicePrincipal
	PrincipalType *AccessReviewActorIdentityType `json:"principalType,omitempty" azure:"ro"`

	// READ-ONLY; The user principal name(if valid)
	UserPrincipalName *string `json:"userPrincipalName,omitempty" azure:"ro"`
}

// AccessReviewContactedReviewer - Access Review Contacted Reviewer.
type AccessReviewContactedReviewer struct {
	// Access Review Contacted Reviewer properties.
	Properties *AccessReviewContactedReviewerProperties `json:"properties,omitempty"`

	// READ-ONLY; The access review reviewer id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The access review reviewer id.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccessReviewContactedReviewerListResult - List of access review contacted reviewers.
type AccessReviewContactedReviewerListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Access Review Contacted Reviewer.
	Value []*AccessReviewContactedReviewer `json:"value,omitempty"`
}

// AccessReviewContactedReviewerProperties - Properties of access review contacted reviewer.
type AccessReviewContactedReviewerProperties struct {
	// READ-ONLY; Date Time when the reviewer was contacted.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty" azure:"ro"`

	// READ-ONLY; The display name of the reviewer
	UserDisplayName *string `json:"userDisplayName,omitempty" azure:"ro"`

	// READ-ONLY; The user principal name of the reviewer
	UserPrincipalName *string `json:"userPrincipalName,omitempty" azure:"ro"`
}

// AccessReviewDecision - Access Review.
type AccessReviewDecision struct {
	// Access Review Decision properties.
	Properties *AccessReviewDecisionProperties `json:"properties,omitempty"`

	// READ-ONLY; The access review decision id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The access review decision name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccessReviewDecisionIdentityClassification provides polymorphic access to related types.
// Call the interface's GetAccessReviewDecisionIdentity() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AccessReviewDecisionIdentity, *AccessReviewDecisionServicePrincipalIdentity, *AccessReviewDecisionUserIdentity
type AccessReviewDecisionIdentityClassification interface {
	// GetAccessReviewDecisionIdentity returns the AccessReviewDecisionIdentity content of the underlying type.
	GetAccessReviewDecisionIdentity() *AccessReviewDecisionIdentity
}

// AccessReviewDecisionIdentity - Target of the decision.
type AccessReviewDecisionIdentity struct {
	// REQUIRED; The type of decision target : User/ServicePrincipal
	Type *DecisionTargetType `json:"type,omitempty"`

	// READ-ONLY; The display name of the user whose access was reviewed.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; The id of principal whose access was reviewed.
	ID *string `json:"id,omitempty" azure:"ro"`
}

// AccessReviewDecisionListResult - List of access review decisions.
type AccessReviewDecisionListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Access Review Decision list.
	Value []*AccessReviewDecision `json:"value,omitempty"`
}

// AccessReviewDecisionProperties - Approval Step.
type AccessReviewDecisionProperties struct {
	// The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
	Decision *AccessReviewResult `json:"decision,omitempty"`

	// Justification provided by approvers for their action
	Justification *string `json:"justification,omitempty"`

	// READ-ONLY; Details of the approver.
	AppliedBy *AccessReviewActorIdentity `json:"appliedBy,omitempty" azure:"ro"`

	// READ-ONLY; The date and time when the review decision was applied.
	AppliedDateTime *time.Time `json:"appliedDateTime,omitempty" azure:"ro"`

	// READ-ONLY; The outcome of applying the decision.
	ApplyResult *AccessReviewApplyResult `json:"applyResult,omitempty" azure:"ro"`

	// READ-ONLY; Principal associated with the decision record. Can be AccessReviewDecisionUserIdentity or AccessReviewDecisionServicePrincipalIdentity
	Principal AccessReviewDecisionIdentityClassification `json:"principal,omitempty" azure:"ro"`

	// READ-ONLY; The feature- generated recommendation shown to the reviewer.
	Recommendation *AccessRecommendationType `json:"recommendation,omitempty" azure:"ro"`

	// READ-ONLY; Resource associated with this decision record.
	Resource AccessReviewDecisionResourceClassification `json:"resource,omitempty" azure:"ro"`

	// READ-ONLY; Details of the approver.
	ReviewedBy *AccessReviewActorIdentity `json:"reviewedBy,omitempty" azure:"ro"`

	// READ-ONLY; Date Time when a decision was taken.
	ReviewedDateTime *time.Time `json:"reviewedDateTime,omitempty" azure:"ro"`
}

// AccessReviewDecisionResourceClassification provides polymorphic access to related types.
// Call the interface's GetAccessReviewDecisionResource() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AccessReviewDecisionResource, *AccessReviewDecisionResourceAzureRole
type AccessReviewDecisionResourceClassification interface {
	// GetAccessReviewDecisionResource returns the AccessReviewDecisionResource content of the underlying type.
	GetAccessReviewDecisionResource() *AccessReviewDecisionResource
}

// AccessReviewDecisionResource - Target of the decision.
type AccessReviewDecisionResource struct {
	// REQUIRED; The type of resource: azureRole
	Type *DecisionResourceType `json:"type,omitempty"`

	// READ-ONLY; The display name of resource associated with a decision record.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; The id of resource associated with a decision record.
	ID *string `json:"id,omitempty" azure:"ro"`
}

// AccessReviewDecisionResourceAzureRole - Target of the decision.
type AccessReviewDecisionResourceAzureRole struct {
	// REQUIRED; The type of resource: azureRole
	Type *DecisionResourceType `json:"type,omitempty"`

	// READ-ONLY; The display name of resource associated with a decision record.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; The id of resource associated with a decision record.
	ID *string `json:"id,omitempty" azure:"ro"`
}

// AccessReviewDecisionServicePrincipalIdentity - Service Principal Decision Target
type AccessReviewDecisionServicePrincipalIdentity struct {
	// REQUIRED; The type of decision target : User/ServicePrincipal
	Type *DecisionTargetType `json:"type,omitempty"`

	// READ-ONLY; The appId for the service principal entity being reviewed
	AppID *string `json:"appId,omitempty" azure:"ro"`

	// READ-ONLY; The display name of the user whose access was reviewed.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; The id of principal whose access was reviewed.
	ID *string `json:"id,omitempty" azure:"ro"`
}

// AccessReviewDecisionUserIdentity - User Decision Target
type AccessReviewDecisionUserIdentity struct {
	// REQUIRED; The type of decision target : User/ServicePrincipal
	Type *DecisionTargetType `json:"type,omitempty"`

	// READ-ONLY; The display name of the user whose access was reviewed.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; The id of principal whose access was reviewed.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The user principal name of the user whose access was reviewed.
	UserPrincipalName *string `json:"userPrincipalName,omitempty" azure:"ro"`
}

// AccessReviewDefaultSettings - Access Review Default Settings.
type AccessReviewDefaultSettings struct {
	// Access Review properties.
	Properties *AccessReviewScheduleSettings `json:"properties,omitempty"`

	// READ-ONLY; The access review default settings id. This is only going to be default
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The access review default settings name. This is always going to be Access Review Default Settings
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccessReviewDefaultSettingsClientGetOptions contains the optional parameters for the AccessReviewDefaultSettingsClient.Get
// method.
type AccessReviewDefaultSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewDefaultSettingsClientPutOptions contains the optional parameters for the AccessReviewDefaultSettingsClient.Put
// method.
type AccessReviewDefaultSettingsClientPutOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewHistoryDefinition - Access Review History Definition.
type AccessReviewHistoryDefinition struct {
	// Access Review History Definition properties.
	Properties *AccessReviewHistoryDefinitionProperties `json:"properties,omitempty"`

	// READ-ONLY; The access review history definition id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The access review history definition unique id.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccessReviewHistoryDefinitionClientCreateOptions contains the optional parameters for the AccessReviewHistoryDefinitionClient.Create
// method.
type AccessReviewHistoryDefinitionClientCreateOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewHistoryDefinitionClientDeleteByIDOptions contains the optional parameters for the AccessReviewHistoryDefinitionClient.DeleteByID
// method.
type AccessReviewHistoryDefinitionClientDeleteByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewHistoryDefinitionInstanceClientGenerateDownloadURIOptions contains the optional parameters for the AccessReviewHistoryDefinitionInstanceClient.GenerateDownloadURI
// method.
type AccessReviewHistoryDefinitionInstanceClientGenerateDownloadURIOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewHistoryDefinitionInstanceListResult - List of Access Review History Instances.
type AccessReviewHistoryDefinitionInstanceListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Access Review History Definition's Instance list.
	Value []*AccessReviewHistoryInstance `json:"value,omitempty"`
}

// AccessReviewHistoryDefinitionInstancesClientListOptions contains the optional parameters for the AccessReviewHistoryDefinitionInstancesClient.List
// method.
type AccessReviewHistoryDefinitionInstancesClientListOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewHistoryDefinitionListResult - List of Access Review History Definitions.
type AccessReviewHistoryDefinitionListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Access Review History Definition list.
	Value []*AccessReviewHistoryDefinition `json:"value,omitempty"`
}

// AccessReviewHistoryDefinitionProperties - Access Review History Instances.
type AccessReviewHistoryDefinitionProperties struct {
	// Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied
	// the data will only contain review results in which the decision maker approved
	// or denied a review request.
	Decisions []*AccessReviewResult `json:"decisions,omitempty"`

	// The display name for the history definition.
	DisplayName *string `json:"displayName,omitempty"`

	// Set of access review history instances for this history definition.
	Instances []*AccessReviewHistoryInstance `json:"instances,omitempty"`

	// A collection of scopes used when selecting review history data
	Scopes []*AccessReviewScope `json:"scopes,omitempty"`

	// Recurrence settings for recurring history reports, skip for one-time reports.
	Settings *AccessReviewHistoryScheduleSettings `json:"settings,omitempty"`

	// READ-ONLY; The user or other identity who created this history definition.
	CreatedBy *AccessReviewActorIdentity `json:"createdBy,omitempty" azure:"ro"`

	// READ-ONLY; Date time when history definition was created
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty" azure:"ro"`

	// READ-ONLY; Date time used when selecting review data, all reviews included in data end on or before this date. For use
	// only with one-time/non-recurring reports.
	ReviewHistoryPeriodEndDateTime *time.Time `json:"reviewHistoryPeriodEndDateTime,omitempty" azure:"ro"`

	// READ-ONLY; Date time used when selecting review data, all reviews included in data start on or after this date. For use
	// only with one-time/non-recurring reports.
	ReviewHistoryPeriodStartDateTime *time.Time `json:"reviewHistoryPeriodStartDateTime,omitempty" azure:"ro"`

	// READ-ONLY; This read-only field specifies the of the requested review history data. This is either requested, in-progress,
	// done or error.
	Status *AccessReviewHistoryDefinitionStatus `json:"status,omitempty" azure:"ro"`
}

// AccessReviewHistoryDefinitionsClientGetByIDOptions contains the optional parameters for the AccessReviewHistoryDefinitionsClient.GetByID
// method.
type AccessReviewHistoryDefinitionsClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewHistoryDefinitionsClientListOptions contains the optional parameters for the AccessReviewHistoryDefinitionsClient.List
// method.
type AccessReviewHistoryDefinitionsClientListOptions struct {
	// The filter to apply on the operation. Only standard filters on definition name and created date are supported
	Filter *string
}

// AccessReviewHistoryInstance - Access Review History Definition Instance.
type AccessReviewHistoryInstance struct {
	// Access Review History Definition Instance properties.
	Properties *AccessReviewHistoryInstanceProperties `json:"properties,omitempty"`

	// READ-ONLY; The access review history definition instance id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The access review history definition instance unique id.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccessReviewHistoryInstanceProperties - Access Review History Definition Instance properties.
type AccessReviewHistoryInstanceProperties struct {
	// The display name for the parent history definition.
	DisplayName *string `json:"displayName,omitempty"`

	// Date time when history data report expires and the associated data is deleted.
	Expiration *time.Time `json:"expiration,omitempty"`

	// Date time when the history data report is scheduled to be generated.
	FulfilledDateTime *time.Time `json:"fulfilledDateTime,omitempty"`

	// Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring
	// reports.
	ReviewHistoryPeriodEndDateTime *time.Time `json:"reviewHistoryPeriodEndDateTime,omitempty"`

	// Date time used when selecting review data, all reviews included in data start on or after this date. For use only with
	// one-time/non-recurring reports.
	ReviewHistoryPeriodStartDateTime *time.Time `json:"reviewHistoryPeriodStartDateTime,omitempty"`

	// Date time when the history data report is scheduled to be generated.
	RunDateTime *time.Time `json:"runDateTime,omitempty"`

	// READ-ONLY; Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called
	// for a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour
	// period. Callers can see the expiration date time by looking at the 'se' parameter in the generated uri.
	DownloadURI *string `json:"downloadUri,omitempty" azure:"ro"`

	// READ-ONLY; Status of the requested review history instance data. This is either requested, in-progress, done or error.
	// The state transitions are as follows - Requested -> InProgress -> Done -> Expired
	Status *AccessReviewHistoryDefinitionStatus `json:"status,omitempty" azure:"ro"`
}

// AccessReviewHistoryScheduleSettings - Recurrence settings of an Access Review History Definition.
type AccessReviewHistoryScheduleSettings struct {
	// Access Review History Definition recurrence settings.
	Pattern *AccessReviewRecurrencePattern `json:"pattern,omitempty"`

	// Access Review History Definition recurrence settings.
	Range *AccessReviewRecurrenceRange `json:"range,omitempty"`
}

// AccessReviewInstance - Access Review Instance.
type AccessReviewInstance struct {
	// Access Review properties.
	Properties *AccessReviewInstanceProperties `json:"properties,omitempty"`

	// READ-ONLY; The access review instance id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The access review instance name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccessReviewInstanceClientAcceptRecommendationsOptions contains the optional parameters for the AccessReviewInstanceClient.AcceptRecommendations
// method.
type AccessReviewInstanceClientAcceptRecommendationsOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceClientApplyDecisionsOptions contains the optional parameters for the AccessReviewInstanceClient.ApplyDecisions
// method.
type AccessReviewInstanceClientApplyDecisionsOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceClientResetDecisionsOptions contains the optional parameters for the AccessReviewInstanceClient.ResetDecisions
// method.
type AccessReviewInstanceClientResetDecisionsOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceClientSendRemindersOptions contains the optional parameters for the AccessReviewInstanceClient.SendReminders
// method.
type AccessReviewInstanceClientSendRemindersOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceClientStopOptions contains the optional parameters for the AccessReviewInstanceClient.Stop method.
type AccessReviewInstanceClientStopOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceContactedReviewersClientListOptions contains the optional parameters for the AccessReviewInstanceContactedReviewersClient.List
// method.
type AccessReviewInstanceContactedReviewersClientListOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceDecisionsClientListOptions contains the optional parameters for the AccessReviewInstanceDecisionsClient.List
// method.
type AccessReviewInstanceDecisionsClientListOptions struct {
	// The filter to apply on the operation. Other than standard filters, one custom filter option is supported : 'assignedToMeToReview()'.
	// When one specified $filter=assignedToMeToReview(), only items that
	// are assigned to the calling user to review are returned
	Filter *string
}

// AccessReviewInstanceListResult - List of Access Review Instances.
type AccessReviewInstanceListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Access Review Instance list.
	Value []*AccessReviewInstance `json:"value,omitempty"`
}

// AccessReviewInstanceMyDecisionsClientGetByIDOptions contains the optional parameters for the AccessReviewInstanceMyDecisionsClient.GetByID
// method.
type AccessReviewInstanceMyDecisionsClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceMyDecisionsClientListOptions contains the optional parameters for the AccessReviewInstanceMyDecisionsClient.List
// method.
type AccessReviewInstanceMyDecisionsClientListOptions struct {
	// The filter to apply on the operation. Other than standard filters, one custom filter option is supported : 'assignedToMeToReview()'.
	// When one specified $filter=assignedToMeToReview(), only items that
	// are assigned to the calling user to review are returned
	Filter *string
}

// AccessReviewInstanceMyDecisionsClientPatchOptions contains the optional parameters for the AccessReviewInstanceMyDecisionsClient.Patch
// method.
type AccessReviewInstanceMyDecisionsClientPatchOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstanceProperties - Access Review Instance properties.
type AccessReviewInstanceProperties struct {
	// This is the collection of backup reviewers.
	BackupReviewers []*AccessReviewReviewer `json:"backupReviewers,omitempty"`

	// The DateTime when the review instance is scheduled to end.
	EndDateTime *time.Time `json:"endDateTime,omitempty"`

	// This is the collection of reviewers.
	Reviewers []*AccessReviewReviewer `json:"reviewers,omitempty"`

	// The DateTime when the review instance is scheduled to be start.
	StartDateTime *time.Time `json:"startDateTime,omitempty"`

	// READ-ONLY; This field specifies the type of reviewers for a review. Usually for a review, reviewers are explicitly assigned.
	// However, in some cases, the reviewers may not be assigned and instead be chosen
	// dynamically. For example managers review or self review.
	ReviewersType *AccessReviewInstanceReviewersType `json:"reviewersType,omitempty" azure:"ro"`

	// READ-ONLY; This read-only field specifies the status of an access review instance.
	Status *AccessReviewInstanceStatus `json:"status,omitempty" azure:"ro"`
}

// AccessReviewInstancesAssignedForMyApprovalClientGetByIDOptions contains the optional parameters for the AccessReviewInstancesAssignedForMyApprovalClient.GetByID
// method.
type AccessReviewInstancesAssignedForMyApprovalClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstancesAssignedForMyApprovalClientListOptions contains the optional parameters for the AccessReviewInstancesAssignedForMyApprovalClient.List
// method.
type AccessReviewInstancesAssignedForMyApprovalClientListOptions struct {
	// The filter to apply on the operation. Other than standard filters, one custom filter option is supported : 'assignedToMeToReview()'.
	// When one specified $filter=assignedToMeToReview(), only items that
	// are assigned to the calling user to review are returned
	Filter *string
}

// AccessReviewInstancesClientCreateOptions contains the optional parameters for the AccessReviewInstancesClient.Create method.
type AccessReviewInstancesClientCreateOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstancesClientGetByIDOptions contains the optional parameters for the AccessReviewInstancesClient.GetByID
// method.
type AccessReviewInstancesClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewInstancesClientListOptions contains the optional parameters for the AccessReviewInstancesClient.List method.
type AccessReviewInstancesClientListOptions struct {
	// The filter to apply on the operation. Other than standard filters, one custom filter option is supported : 'assignedToMeToReview()'.
	// When one specified $filter=assignedToMeToReview(), only items that
	// are assigned to the calling user to review are returned
	Filter *string
}

// AccessReviewRecurrencePattern - Recurrence Pattern of an Access Review Schedule Definition.
type AccessReviewRecurrencePattern struct {
	// The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
	Interval *int32 `json:"interval,omitempty"`

	// The recurrence type : weekly, monthly, etc.
	Type *AccessReviewRecurrencePatternType `json:"type,omitempty"`
}

// AccessReviewRecurrenceRange - Recurrence Range of an Access Review Schedule Definition.
type AccessReviewRecurrenceRange struct {
	// The DateTime when the review is scheduled to end. Required if type is endDate
	EndDate *time.Time `json:"endDate,omitempty"`

	// The number of times to repeat the access review. Required and must be positive if type is numbered.
	NumberOfOccurrences *int32 `json:"numberOfOccurrences,omitempty"`

	// The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
	StartDate *time.Time `json:"startDate,omitempty"`

	// The recurrence range type. The possible values are: endDate, noEnd, numbered.
	Type *AccessReviewRecurrenceRangeType `json:"type,omitempty"`
}

// AccessReviewRecurrenceSettings - Recurrence Settings of an Access Review Schedule Definition.
type AccessReviewRecurrenceSettings struct {
	// Access Review schedule definition recurrence pattern.
	Pattern *AccessReviewRecurrencePattern `json:"pattern,omitempty"`

	// Access Review schedule definition recurrence range.
	Range *AccessReviewRecurrenceRange `json:"range,omitempty"`
}

// AccessReviewReviewer - Descriptor for what needs to be reviewed
type AccessReviewReviewer struct {
	// The id of the reviewer(user/servicePrincipal)
	PrincipalID *string `json:"principalId,omitempty"`

	// READ-ONLY; The identity type : user/servicePrincipal
	PrincipalType *AccessReviewReviewerType `json:"principalType,omitempty" azure:"ro"`
}

// AccessReviewScheduleDefinition - Access Review Schedule Definition.
type AccessReviewScheduleDefinition struct {
	// Access Review properties.
	Properties *AccessReviewScheduleDefinitionProperties `json:"properties,omitempty"`

	// READ-ONLY; The access review schedule definition id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The access review schedule definition unique id.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AccessReviewScheduleDefinitionListResult - List of Access Review Schedule Definitions.
type AccessReviewScheduleDefinitionListResult struct {
	// The URL to use for getting the next set of results.
	NextLink *string `json:"nextLink,omitempty"`

	// Access Review Schedule Definition list.
	Value []*AccessReviewScheduleDefinition `json:"value,omitempty"`
}

// AccessReviewScheduleDefinitionProperties - Access Review.
type AccessReviewScheduleDefinitionProperties struct {
	// This is the collection of backup reviewers.
	BackupReviewers []*AccessReviewReviewer `json:"backupReviewers,omitempty"`

	// The description provided by the access review creator and visible to admins.
	DescriptionForAdmins *string `json:"descriptionForAdmins,omitempty"`

	// The description provided by the access review creator to be shown to reviewers.
	DescriptionForReviewers *string `json:"descriptionForReviewers,omitempty"`

	// The display name for the schedule definition.
	DisplayName *string `json:"displayName,omitempty"`

	// This is the collection of instances returned when one does an expand on it.
	Instances []*AccessReviewInstance `json:"instances,omitempty"`

	// This is the collection of reviewers.
	Reviewers []*AccessReviewReviewer `json:"reviewers,omitempty"`

	// Access Review Settings.
	Settings *AccessReviewScheduleSettings `json:"settings,omitempty"`

	// READ-ONLY; The user or other identity who created this review.
	CreatedBy *AccessReviewActorIdentity `json:"createdBy,omitempty" azure:"ro"`

	// READ-ONLY; This field specifies the type of reviewers for a review. Usually for a review, reviewers are explicitly assigned.
	// However, in some cases, the reviewers may not be assigned and instead be chosen
	// dynamically. For example managers review or self review.
	ReviewersType *AccessReviewScheduleDefinitionReviewersType `json:"reviewersType,omitempty" azure:"ro"`

	// READ-ONLY; This is used to define what to include in scope of the review. The scope definition includes the resourceId
	// and roleDefinitionId.
	Scope *AccessReviewScope `json:"scope,omitempty" azure:"ro"`

	// READ-ONLY; This read-only field specifies the status of an accessReview.
	Status *AccessReviewScheduleDefinitionStatus `json:"status,omitempty" azure:"ro"`
}

// AccessReviewScheduleDefinitionsAssignedForMyApprovalClientListOptions contains the optional parameters for the AccessReviewScheduleDefinitionsAssignedForMyApprovalClient.List
// method.
type AccessReviewScheduleDefinitionsAssignedForMyApprovalClientListOptions struct {
	// The filter to apply on the operation. Other than standard filters, one custom filter option is supported : 'assignedToMeToReview()'.
	// When one specified $filter=assignedToMeToReview(), only items that
	// are assigned to the calling user to review are returned
	Filter *string
}

// AccessReviewScheduleDefinitionsClientCreateOrUpdateByIDOptions contains the optional parameters for the AccessReviewScheduleDefinitionsClient.CreateOrUpdateByID
// method.
type AccessReviewScheduleDefinitionsClientCreateOrUpdateByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewScheduleDefinitionsClientDeleteByIDOptions contains the optional parameters for the AccessReviewScheduleDefinitionsClient.DeleteByID
// method.
type AccessReviewScheduleDefinitionsClientDeleteByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewScheduleDefinitionsClientGetByIDOptions contains the optional parameters for the AccessReviewScheduleDefinitionsClient.GetByID
// method.
type AccessReviewScheduleDefinitionsClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewScheduleDefinitionsClientListOptions contains the optional parameters for the AccessReviewScheduleDefinitionsClient.List
// method.
type AccessReviewScheduleDefinitionsClientListOptions struct {
	// The filter to apply on the operation. Other than standard filters, one custom filter option is supported : 'assignedToMeToReview()'.
	// When one specified $filter=assignedToMeToReview(), only items that
	// are assigned to the calling user to review are returned
	Filter *string
}

// AccessReviewScheduleDefinitionsClientStopOptions contains the optional parameters for the AccessReviewScheduleDefinitionsClient.Stop
// method.
type AccessReviewScheduleDefinitionsClientStopOptions struct {
	// placeholder for future optional parameters
}

// AccessReviewScheduleSettings - Settings of an Access Review.
type AccessReviewScheduleSettings struct {
	// Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled.
	// If not enabled, a user must, after the review completes, apply the access review.
	AutoApplyDecisionsEnabled *bool `json:"autoApplyDecisionsEnabled,omitempty"`

	// This specifies the behavior for the autoReview feature when an access review completes.
	DefaultDecision *DefaultDecisionType `json:"defaultDecision,omitempty"`

	// Flag to indicate whether reviewers are required to provide a justification when reviewing access.
	DefaultDecisionEnabled *bool `json:"defaultDecisionEnabled,omitempty"`

	// The duration in days for an instance.
	InstanceDurationInDays *int32 `json:"instanceDurationInDays,omitempty"`

	// Flag to indicate whether the reviewer is required to pass justification when recording a decision.
	JustificationRequiredOnApproval *bool `json:"justificationRequiredOnApproval,omitempty"`

	// Flag to indicate whether sending mails to reviewers and the review creator is enabled.
	MailNotificationsEnabled *bool `json:"mailNotificationsEnabled,omitempty"`

	// Recommendations for access reviews are calculated by looking back at 30 days of data(w.r.t the start date of the review)
	// by default. However, in some scenarios, customers want to change how far back
	// to look at and want to configure 60 days, 90 days, etc. instead. This setting allows customers to configure this duration.
	// The value should be in ISO 8601 format
	// (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string:
	// XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))
	RecommendationLookBackDuration *string `json:"recommendationLookBackDuration,omitempty"`

	// Flag to indicate whether showing recommendations to reviewers is enabled.
	RecommendationsEnabled *bool `json:"recommendationsEnabled,omitempty"`

	// Access Review Settings.
	Recurrence *AccessReviewRecurrenceSettings `json:"recurrence,omitempty"`

	// Flag to indicate whether sending reminder emails to reviewers are enabled.
	ReminderNotificationsEnabled *bool `json:"reminderNotificationsEnabled,omitempty"`
}

// AccessReviewScope - Descriptor for what needs to be reviewed
type AccessReviewScope struct {
	// Flag to indicate whether to expand nested memberships or not.
	ExpandNestedMemberships *bool `json:"expandNestedMemberships,omitempty"`

	// Duration users are inactive for. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This
	// code can be used to convert TimeSpan to a valid interval string:
	// XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))
	InactiveDuration *string `json:"inactiveDuration,omitempty"`

	// READ-ONLY; The role assignment state eligible/active to review
	AssignmentState *AccessReviewScopeAssignmentState `json:"assignmentState,omitempty" azure:"ro"`

	// READ-ONLY; The identity type user/servicePrincipal to review
	PrincipalType *AccessReviewScopePrincipalType `json:"principalType,omitempty" azure:"ro"`

	// READ-ONLY; ResourceId in which this review is getting created
	ResourceID *string `json:"resourceId,omitempty" azure:"ro"`

	// READ-ONLY; This is used to indicate the role being reviewed
	RoleDefinitionID *string `json:"roleDefinitionId,omitempty" azure:"ro"`
}

// ErrorDefinition - Error description and code explaining why an operation failed.
type ErrorDefinition struct {
	// Error of the list gateway status.
	Error *ErrorDefinitionProperties `json:"error,omitempty"`
}

// ErrorDefinitionProperties - Error description and code explaining why an operation failed.
type ErrorDefinitionProperties struct {
	// Error code of list gateway.
	Code *string `json:"code,omitempty"`

	// READ-ONLY; Description of the error.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// Operation - The definition of a Microsoft.Authorization operation.
type Operation struct {
	// Display of the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Name of the operation
	Name *string `json:"name,omitempty"`

	// Origin of the operation
	Origin *string `json:"origin,omitempty"`
}

// OperationDisplay - The display information for a Microsoft.Authorization operation.
type OperationDisplay struct {
	// READ-ONLY; The description for the operation.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The operation that users can perform.
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; The resource provider name: Microsoft.Authorization.
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; The resource on which the operation is performed.
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationListResult - The result of a request to list Microsoft.Authorization operations.
type OperationListResult struct {
	// The URI that can be used to request the next set of paged results.
	NextLink *string `json:"nextLink,omitempty"`

	// The collection value.
	Value []*Operation `json:"value,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// TenantLevelAccessReviewInstanceContactedReviewersClientListOptions contains the optional parameters for the TenantLevelAccessReviewInstanceContactedReviewersClient.List
// method.
type TenantLevelAccessReviewInstanceContactedReviewersClientListOptions struct {
	// placeholder for future optional parameters
}
