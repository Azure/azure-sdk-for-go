//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armautomanage

const (
	module  = "armautomanage"
	version = "v0.1.0"
)

// ConfigurationProfile - A value indicating configuration profile.
type ConfigurationProfile string

const (
	ConfigurationProfileAzureVirtualMachineBestPracticesDevTest    ConfigurationProfile = "Azure virtual machine best practices – Dev/Test"
	ConfigurationProfileAzureVirtualMachineBestPracticesProduction ConfigurationProfile = "Azure virtual machine best practices – Production"
)

// PossibleConfigurationProfileValues returns the possible values for the ConfigurationProfile const type.
func PossibleConfigurationProfileValues() []ConfigurationProfile {
	return []ConfigurationProfile{
		ConfigurationProfileAzureVirtualMachineBestPracticesDevTest,
		ConfigurationProfileAzureVirtualMachineBestPracticesProduction,
	}
}

// ToPtr returns a *ConfigurationProfile pointing to the current value.
func (c ConfigurationProfile) ToPtr() *ConfigurationProfile {
	return &c
}

// EnableRealTimeProtection - Enables or disables Real Time Protection
type EnableRealTimeProtection string

const (
	EnableRealTimeProtectionFalse EnableRealTimeProtection = "False"
	EnableRealTimeProtectionTrue  EnableRealTimeProtection = "True"
)

// PossibleEnableRealTimeProtectionValues returns the possible values for the EnableRealTimeProtection const type.
func PossibleEnableRealTimeProtectionValues() []EnableRealTimeProtection {
	return []EnableRealTimeProtection{
		EnableRealTimeProtectionFalse,
		EnableRealTimeProtectionTrue,
	}
}

// ToPtr returns a *EnableRealTimeProtection pointing to the current value.
func (c EnableRealTimeProtection) ToPtr() *EnableRealTimeProtection {
	return &c
}

// ProvisioningState - The state of onboarding, which only appears in the response.
type ProvisioningState string

const (
	ProvisioningStateCreated   ProvisioningState = "Created"
	ProvisioningStateFailed    ProvisioningState = "Failed"
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateCreated,
		ProvisioningStateFailed,
		ProvisioningStateSucceeded,
	}
}

// ToPtr returns a *ProvisioningState pointing to the current value.
func (c ProvisioningState) ToPtr() *ProvisioningState {
	return &c
}

// ResourceIdentityType - The type of identity used for the Automanage account. Currently, the only supported type is 'SystemAssigned', which implicitly
// creates an identity.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned ResourceIdentityType = "SystemAssigned"
	ResourceIdentityTypeNone           ResourceIdentityType = "None"
)

// PossibleResourceIdentityTypeValues returns the possible values for the ResourceIdentityType const type.
func PossibleResourceIdentityTypeValues() []ResourceIdentityType {
	return []ResourceIdentityType{
		ResourceIdentityTypeSystemAssigned,
		ResourceIdentityTypeNone,
	}
}

// ToPtr returns a *ResourceIdentityType pointing to the current value.
func (c ResourceIdentityType) ToPtr() *ResourceIdentityType {
	return &c
}

// RunScheduledScan - Enables or disables a periodic scan for antimalware
type RunScheduledScan string

const (
	RunScheduledScanFalse RunScheduledScan = "False"
	RunScheduledScanTrue  RunScheduledScan = "True"
)

// PossibleRunScheduledScanValues returns the possible values for the RunScheduledScan const type.
func PossibleRunScheduledScanValues() []RunScheduledScan {
	return []RunScheduledScan{
		RunScheduledScanFalse,
		RunScheduledScanTrue,
	}
}

// ToPtr returns a *RunScheduledScan pointing to the current value.
func (c RunScheduledScan) ToPtr() *RunScheduledScan {
	return &c
}

// ScanType - Type of scheduled scan
type ScanType string

const (
	ScanTypeFull  ScanType = "Full"
	ScanTypeQuick ScanType = "Quick"
)

// PossibleScanTypeValues returns the possible values for the ScanType const type.
func PossibleScanTypeValues() []ScanType {
	return []ScanType{
		ScanTypeFull,
		ScanTypeQuick,
	}
}

// ToPtr returns a *ScanType pointing to the current value.
func (c ScanType) ToPtr() *ScanType {
	return &c
}

// UpdateStatus - The state of compliance, which only appears in the response.
type UpdateStatus string

const (
	UpdateStatusCreated   UpdateStatus = "Created"
	UpdateStatusFailed    UpdateStatus = "Failed"
	UpdateStatusSucceeded UpdateStatus = "Succeeded"
)

// PossibleUpdateStatusValues returns the possible values for the UpdateStatus const type.
func PossibleUpdateStatusValues() []UpdateStatus {
	return []UpdateStatus{
		UpdateStatusCreated,
		UpdateStatusFailed,
		UpdateStatusSucceeded,
	}
}

// ToPtr returns a *UpdateStatus pointing to the current value.
func (c UpdateStatus) ToPtr() *UpdateStatus {
	return &c
}
