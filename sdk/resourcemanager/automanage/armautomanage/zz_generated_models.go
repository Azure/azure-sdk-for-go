//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armautomanage

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
)

// Account - Definition of the Automanage account.
type Account struct {
	TrackedResource
	// The identity of the Automanage account.
	Identity *AccountIdentity `json:"identity,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type Account.
func (a Account) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	a.TrackedResource.marshalInternal(objectMap)
	populate(objectMap, "identity", a.Identity)
	return json.Marshal(objectMap)
}

// AccountIdentity - Identity for the Automanage account.
type AccountIdentity struct {
	// The type of identity used for the Automanage account. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type *ResourceIdentityType `json:"type,omitempty"`

	// READ-ONLY; The principal id of Automanage account identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant id associated with the Automanage account.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// AccountList - The response of the list Account operation.
type AccountList struct {
	// Result of the list Account operation.
	Value []*Account `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountList.
func (a AccountList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// AccountUpdate - Definition of the Automanage account.
type AccountUpdate struct {
	UpdateResource
	// The identity of the Automanage account.
	Identity *AccountIdentity `json:"identity,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountUpdate.
func (a AccountUpdate) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	a.UpdateResource.marshalInternal(objectMap)
	populate(objectMap, "identity", a.Identity)
	return json.Marshal(objectMap)
}

// AccountsCreateOrUpdateOptions contains the optional parameters for the Accounts.CreateOrUpdate method.
type AccountsCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AccountsDeleteOptions contains the optional parameters for the Accounts.Delete method.
type AccountsDeleteOptions struct {
	// placeholder for future optional parameters
}

// AccountsGetOptions contains the optional parameters for the Accounts.Get method.
type AccountsGetOptions struct {
	// placeholder for future optional parameters
}

// AccountsListByResourceGroupOptions contains the optional parameters for the Accounts.ListByResourceGroup method.
type AccountsListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AccountsListBySubscriptionOptions contains the optional parameters for the Accounts.ListBySubscription method.
type AccountsListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// AccountsUpdateOptions contains the optional parameters for the Accounts.Update method.
type AccountsUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfileAssignment - Configuration profile assignment is an association between a VM and automanage profile configuration.
type ConfigurationProfileAssignment struct {
	ProxyResource
	// Properties of the configuration profile assignment.
	Properties *ConfigurationProfileAssignmentProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ConfigurationProfileAssignment.
func (c ConfigurationProfileAssignment) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	c.ProxyResource.marshalInternal(objectMap)
	populate(objectMap, "properties", c.Properties)
	return json.Marshal(objectMap)
}

// ConfigurationProfileAssignmentCompliance - The compliance status for the configuration profile assignment.
type ConfigurationProfileAssignmentCompliance struct {
	// READ-ONLY; The state of compliance, which only appears in the response.
	UpdateStatus *UpdateStatus `json:"updateStatus,omitempty" azure:"ro"`
}

// ConfigurationProfileAssignmentList - The response of the list configuration profile assignment operation.
type ConfigurationProfileAssignmentList struct {
	// Result of the list configuration profile assignment operation.
	Value []*ConfigurationProfileAssignment `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ConfigurationProfileAssignmentList.
func (c ConfigurationProfileAssignmentList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", c.Value)
	return json.Marshal(objectMap)
}

// ConfigurationProfileAssignmentProperties - Automanage configuration profile assignment properties.
type ConfigurationProfileAssignmentProperties struct {
	// The Automanage account ARM Resource URI
	AccountID *string `json:"accountId,omitempty"`

	// The configuration setting for the configuration profile.
	Compliance *ConfigurationProfileAssignmentCompliance `json:"compliance,omitempty"`

	// A value indicating configuration profile.
	ConfigurationProfile *ConfigurationProfile `json:"configurationProfile,omitempty"`

	// The configuration profile custom preferences ARM resource URI
	ConfigurationProfilePreferenceID *string `json:"configurationProfilePreferenceId,omitempty"`

	// The target VM resource URI
	TargetID *string `json:"targetId,omitempty"`

	// READ-ONLY; The state of onboarding, which only appears in the response.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// ConfigurationProfileAssignmentsBeginCreateOrUpdateOptions contains the optional parameters for the ConfigurationProfileAssignments.BeginCreateOrUpdate
// method.
type ConfigurationProfileAssignmentsBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfileAssignmentsDeleteOptions contains the optional parameters for the ConfigurationProfileAssignments.Delete method.
type ConfigurationProfileAssignmentsDeleteOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfileAssignmentsGetOptions contains the optional parameters for the ConfigurationProfileAssignments.Get method.
type ConfigurationProfileAssignmentsGetOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfileAssignmentsListBySubscriptionOptions contains the optional parameters for the ConfigurationProfileAssignments.ListBySubscription
// method.
type ConfigurationProfileAssignmentsListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfileAssignmentsListOptions contains the optional parameters for the ConfigurationProfileAssignments.List method.
type ConfigurationProfileAssignmentsListOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfilePreference - Definition of the configuration profile preference.
type ConfigurationProfilePreference struct {
	TrackedResource
	// Properties of the configuration profile preference.
	Properties *ConfigurationProfilePreferenceProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ConfigurationProfilePreference.
func (c ConfigurationProfilePreference) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	c.TrackedResource.marshalInternal(objectMap)
	populate(objectMap, "properties", c.Properties)
	return json.Marshal(objectMap)
}

// ConfigurationProfilePreferenceAntiMalware - Automanage configuration profile Antimalware preferences.
type ConfigurationProfilePreferenceAntiMalware struct {
	// Enables or disables Real Time Protection
	EnableRealTimeProtection *EnableRealTimeProtection `json:"enableRealTimeProtection,omitempty"`

	// Extensions, Paths and Processes that must be excluded from scan
	Exclusions map[string]interface{} `json:"exclusions,omitempty"`

	// Enables or disables a periodic scan for antimalware
	RunScheduledScan *RunScheduledScan `json:"runScheduledScan,omitempty"`

	// Schedule scan settings day
	ScanDay *string `json:"scanDay,omitempty"`

	// Schedule scan settings time
	ScanTimeInMinutes *string `json:"scanTimeInMinutes,omitempty"`

	// Type of scheduled scan
	ScanType *ScanType `json:"scanType,omitempty"`
}

// ConfigurationProfilePreferenceList - The response of the list ConfigurationProfilePreference operation.
type ConfigurationProfilePreferenceList struct {
	// Result of the list ConfigurationProfilePreference operation.
	Value []*ConfigurationProfilePreference `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ConfigurationProfilePreferenceList.
func (c ConfigurationProfilePreferenceList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", c.Value)
	return json.Marshal(objectMap)
}

// ConfigurationProfilePreferenceProperties - Automanage configuration profile preference properties.
type ConfigurationProfilePreferenceProperties struct {
	// The custom preferences for Azure Antimalware.
	AntiMalware *ConfigurationProfilePreferenceAntiMalware `json:"antiMalware,omitempty"`

	// The custom preferences for Azure VM Backup.
	VMBackup *ConfigurationProfilePreferenceVMBackup `json:"vmBackup,omitempty"`
}

// ConfigurationProfilePreferenceUpdate - Definition of the configuration profile preference.
type ConfigurationProfilePreferenceUpdate struct {
	UpdateResource
	// Properties of the configuration profile preference.
	Properties *ConfigurationProfilePreferenceProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ConfigurationProfilePreferenceUpdate.
func (c ConfigurationProfilePreferenceUpdate) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	c.UpdateResource.marshalInternal(objectMap)
	populate(objectMap, "properties", c.Properties)
	return json.Marshal(objectMap)
}

// ConfigurationProfilePreferenceVMBackup - Automanage configuration profile VM Backup preferences.
type ConfigurationProfilePreferenceVMBackup struct {
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays *int32 `json:"instantRpRetentionRangeInDays,omitempty"`

	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy *string `json:"retentionPolicy,omitempty"`

	// Backup schedule specified as part of backup policy.
	SchedulePolicy *string `json:"schedulePolicy,omitempty"`

	// TimeZone optional input as string. For example: Pacific Standard Time
	TimeZone *string `json:"timeZone,omitempty"`
}

// ConfigurationProfilePreferencesCreateOrUpdateOptions contains the optional parameters for the ConfigurationProfilePreferences.CreateOrUpdate method.
type ConfigurationProfilePreferencesCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfilePreferencesDeleteOptions contains the optional parameters for the ConfigurationProfilePreferences.Delete method.
type ConfigurationProfilePreferencesDeleteOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfilePreferencesGetOptions contains the optional parameters for the ConfigurationProfilePreferences.Get method.
type ConfigurationProfilePreferencesGetOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfilePreferencesListByResourceGroupOptions contains the optional parameters for the ConfigurationProfilePreferences.ListByResourceGroup
// method.
type ConfigurationProfilePreferencesListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfilePreferencesListBySubscriptionOptions contains the optional parameters for the ConfigurationProfilePreferences.ListBySubscription
// method.
type ConfigurationProfilePreferencesListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationProfilePreferencesUpdateOptions contains the optional parameters for the ConfigurationProfilePreferences.Update method.
type ConfigurationProfilePreferencesUpdateOptions struct {
	// placeholder for future optional parameters
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info map[string]interface{} `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ErrorDetail.
func (e ErrorDetail) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "additionalInfo", e.AdditionalInfo)
	populate(objectMap, "code", e.Code)
	populate(objectMap, "details", e.Details)
	populate(objectMap, "message", e.Message)
	populate(objectMap, "target", e.Target)
	return json.Marshal(objectMap)
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData
// error response format.).
// Implements the error and azcore.HTTPResponse interfaces.
type ErrorResponse struct {
	raw string
	// The error object.
	InnerError *ErrorDetail `json:"error,omitempty"`
}

// Error implements the error interface for type ErrorResponse.
// The contents of the error text are not contractual and subject to change.
func (e ErrorResponse) Error() string {
	return e.raw
}

// Operation - Automanage REST API operation
type Operation struct {
	// Provider, Resource, Operation and description values.
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *string `json:"isDataAction,omitempty"`

	// Operation name: For ex. providers/Microsoft.Automanage/configurationProfileAssignments/write or read
	Name *string `json:"name,omitempty"`

	// Provider, Resource, Operation and description values.
	Properties *OperationProperties `json:"properties,omitempty"`
}

// OperationDisplay - Provider, Resource, Operation and description values.
type OperationDisplay struct {
	// Description about operation.
	Description *string `json:"description,omitempty"`

	// Operation type: Read, write, delete, etc.
	Operation *string `json:"operation,omitempty"`

	// Service provider: Microsoft.Automanage
	Provider *string `json:"provider,omitempty"`

	// Resource on which the operation is performed: For ex.
	Resource *string `json:"resource,omitempty"`
}

// OperationList - The response model for the list of Automanage operations
type OperationList struct {
	// List of Automanage operations supported by the Automanage resource provider.
	Value []*Operation `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationList.
func (o OperationList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationProperties - Provider, Resource, Operation and description values.
type OperationProperties struct {
	// Service provider: Microsoft.Automanage
	StatusCode *string `json:"statusCode,omitempty"`
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
type ProxyResource struct {
	Resource
}

func (p ProxyResource) marshalInternal(objectMap map[string]interface{}) {
	p.Resource.marshalInternal(objectMap)
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Resource.
func (r Resource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	r.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (r Resource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", r.ID)
	populate(objectMap, "name", r.Name)
	populate(objectMap, "type", r.Type)
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
type TrackedResource struct {
	Resource
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type TrackedResource.
func (t TrackedResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	t.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (t TrackedResource) marshalInternal(objectMap map[string]interface{}) {
	t.Resource.marshalInternal(objectMap)
	populate(objectMap, "location", t.Location)
	populate(objectMap, "tags", t.Tags)
}

// UpdateResource - Represents an update resource
type UpdateResource struct {
	// The tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type UpdateResource.
func (u UpdateResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	u.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (u UpdateResource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "tags", u.Tags)
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}
