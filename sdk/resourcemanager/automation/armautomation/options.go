//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armautomation

// AccountClientCreateOrUpdateOptions contains the optional parameters for the AccountClient.CreateOrUpdate method.
type AccountClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AccountClientDeleteOptions contains the optional parameters for the AccountClient.Delete method.
type AccountClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// AccountClientGetOptions contains the optional parameters for the AccountClient.Get method.
type AccountClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccountClientListByResourceGroupOptions contains the optional parameters for the AccountClient.NewListByResourceGroupPager
// method.
type AccountClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AccountClientListOptions contains the optional parameters for the AccountClient.NewListPager method.
type AccountClientListOptions struct {
	// placeholder for future optional parameters
}

// AccountClientUpdateOptions contains the optional parameters for the AccountClient.Update method.
type AccountClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ActivityClientGetOptions contains the optional parameters for the ActivityClient.Get method.
type ActivityClientGetOptions struct {
	// placeholder for future optional parameters
}

// ActivityClientListByModuleOptions contains the optional parameters for the ActivityClient.NewListByModulePager method.
type ActivityClientListByModuleOptions struct {
	// placeholder for future optional parameters
}

// AgentRegistrationInformationClientGetOptions contains the optional parameters for the AgentRegistrationInformationClient.Get
// method.
type AgentRegistrationInformationClientGetOptions struct {
	// placeholder for future optional parameters
}

// AgentRegistrationInformationClientRegenerateKeyOptions contains the optional parameters for the AgentRegistrationInformationClient.RegenerateKey
// method.
type AgentRegistrationInformationClientRegenerateKeyOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientCreateOrUpdateOptions contains the optional parameters for the CertificateClient.CreateOrUpdate method.
type CertificateClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientDeleteOptions contains the optional parameters for the CertificateClient.Delete method.
type CertificateClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientGetOptions contains the optional parameters for the CertificateClient.Get method.
type CertificateClientGetOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientListByAutomationAccountOptions contains the optional parameters for the CertificateClient.NewListByAutomationAccountPager
// method.
type CertificateClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientUpdateOptions contains the optional parameters for the CertificateClient.Update method.
type CertificateClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ClientConvertGraphRunbookContentOptions contains the optional parameters for the Client.ConvertGraphRunbookContent method.
type ClientConvertGraphRunbookContentOptions struct {
	// placeholder for future optional parameters
}

// ConnectionClientCreateOrUpdateOptions contains the optional parameters for the ConnectionClient.CreateOrUpdate method.
type ConnectionClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConnectionClientDeleteOptions contains the optional parameters for the ConnectionClient.Delete method.
type ConnectionClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ConnectionClientGetOptions contains the optional parameters for the ConnectionClient.Get method.
type ConnectionClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConnectionClientListByAutomationAccountOptions contains the optional parameters for the ConnectionClient.NewListByAutomationAccountPager
// method.
type ConnectionClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// ConnectionClientUpdateOptions contains the optional parameters for the ConnectionClient.Update method.
type ConnectionClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConnectionTypeClientCreateOrUpdateOptions contains the optional parameters for the ConnectionTypeClient.CreateOrUpdate
// method.
type ConnectionTypeClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConnectionTypeClientDeleteOptions contains the optional parameters for the ConnectionTypeClient.Delete method.
type ConnectionTypeClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ConnectionTypeClientGetOptions contains the optional parameters for the ConnectionTypeClient.Get method.
type ConnectionTypeClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConnectionTypeClientListByAutomationAccountOptions contains the optional parameters for the ConnectionTypeClient.NewListByAutomationAccountPager
// method.
type ConnectionTypeClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// CredentialClientCreateOrUpdateOptions contains the optional parameters for the CredentialClient.CreateOrUpdate method.
type CredentialClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// CredentialClientDeleteOptions contains the optional parameters for the CredentialClient.Delete method.
type CredentialClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CredentialClientGetOptions contains the optional parameters for the CredentialClient.Get method.
type CredentialClientGetOptions struct {
	// placeholder for future optional parameters
}

// CredentialClientListByAutomationAccountOptions contains the optional parameters for the CredentialClient.NewListByAutomationAccountPager
// method.
type CredentialClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// CredentialClientUpdateOptions contains the optional parameters for the CredentialClient.Update method.
type CredentialClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DeletedAutomationAccountsClientListBySubscriptionOptions contains the optional parameters for the DeletedAutomationAccountsClient.ListBySubscription
// method.
type DeletedAutomationAccountsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// DscCompilationJobClientBeginCreateOptions contains the optional parameters for the DscCompilationJobClient.BeginCreate
// method.
type DscCompilationJobClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DscCompilationJobClientGetOptions contains the optional parameters for the DscCompilationJobClient.Get method.
type DscCompilationJobClientGetOptions struct {
	// placeholder for future optional parameters
}

// DscCompilationJobClientGetStreamOptions contains the optional parameters for the DscCompilationJobClient.GetStream method.
type DscCompilationJobClientGetStreamOptions struct {
	// placeholder for future optional parameters
}

// DscCompilationJobClientListByAutomationAccountOptions contains the optional parameters for the DscCompilationJobClient.NewListByAutomationAccountPager
// method.
type DscCompilationJobClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// DscCompilationJobStreamClientListByJobOptions contains the optional parameters for the DscCompilationJobStreamClient.ListByJob
// method.
type DscCompilationJobStreamClientListByJobOptions struct {
	// placeholder for future optional parameters
}

// DscConfigurationClientCreateOrUpdateWithJSONOptions contains the optional parameters for the DscConfigurationClient.CreateOrUpdateWithJSON
// method.
type DscConfigurationClientCreateOrUpdateWithJSONOptions struct {
	// placeholder for future optional parameters
}

// DscConfigurationClientCreateOrUpdateWithTextOptions contains the optional parameters for the DscConfigurationClient.CreateOrUpdateWithText
// method.
type DscConfigurationClientCreateOrUpdateWithTextOptions struct {
	// placeholder for future optional parameters
}

// DscConfigurationClientDeleteOptions contains the optional parameters for the DscConfigurationClient.Delete method.
type DscConfigurationClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DscConfigurationClientGetContentOptions contains the optional parameters for the DscConfigurationClient.GetContent method.
type DscConfigurationClientGetContentOptions struct {
	// placeholder for future optional parameters
}

// DscConfigurationClientGetOptions contains the optional parameters for the DscConfigurationClient.Get method.
type DscConfigurationClientGetOptions struct {
	// placeholder for future optional parameters
}

// DscConfigurationClientListByAutomationAccountOptions contains the optional parameters for the DscConfigurationClient.NewListByAutomationAccountPager
// method.
type DscConfigurationClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string

	// Return total rows.
	Inlinecount *string

	// The number of rows to skip.
	Skip *int32

	// The number of rows to take.
	Top *int32
}

// DscConfigurationClientUpdateWithJSONOptions contains the optional parameters for the DscConfigurationClient.UpdateWithJSON
// method.
type DscConfigurationClientUpdateWithJSONOptions struct {
	// The create or update parameters for configuration.
	Parameters *DscConfigurationUpdateParameters
}

// DscConfigurationClientUpdateWithTextOptions contains the optional parameters for the DscConfigurationClient.UpdateWithText
// method.
type DscConfigurationClientUpdateWithTextOptions struct {
	// The create or update parameters for configuration.
	Parameters *string
}

// DscNodeClientDeleteOptions contains the optional parameters for the DscNodeClient.Delete method.
type DscNodeClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DscNodeClientGetOptions contains the optional parameters for the DscNodeClient.Get method.
type DscNodeClientGetOptions struct {
	// placeholder for future optional parameters
}

// DscNodeClientListByAutomationAccountOptions contains the optional parameters for the DscNodeClient.NewListByAutomationAccountPager
// method.
type DscNodeClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string

	// Return total rows.
	Inlinecount *string

	// The number of rows to skip.
	Skip *int32

	// The number of rows to take.
	Top *int32
}

// DscNodeClientUpdateOptions contains the optional parameters for the DscNodeClient.Update method.
type DscNodeClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DscNodeConfigurationClientBeginCreateOrUpdateOptions contains the optional parameters for the DscNodeConfigurationClient.BeginCreateOrUpdate
// method.
type DscNodeConfigurationClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DscNodeConfigurationClientDeleteOptions contains the optional parameters for the DscNodeConfigurationClient.Delete method.
type DscNodeConfigurationClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DscNodeConfigurationClientGetOptions contains the optional parameters for the DscNodeConfigurationClient.Get method.
type DscNodeConfigurationClientGetOptions struct {
	// placeholder for future optional parameters
}

// DscNodeConfigurationClientListByAutomationAccountOptions contains the optional parameters for the DscNodeConfigurationClient.NewListByAutomationAccountPager
// method.
type DscNodeConfigurationClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string

	// Return total rows.
	Inlinecount *string

	// The number of rows to skip.
	Skip *int32

	// The number of rows to take.
	Top *int32
}

// FieldsClientListByTypeOptions contains the optional parameters for the FieldsClient.NewListByTypePager method.
type FieldsClientListByTypeOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkerGroupClientCreateOptions contains the optional parameters for the HybridRunbookWorkerGroupClient.Create
// method.
type HybridRunbookWorkerGroupClientCreateOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkerGroupClientDeleteOptions contains the optional parameters for the HybridRunbookWorkerGroupClient.Delete
// method.
type HybridRunbookWorkerGroupClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkerGroupClientGetOptions contains the optional parameters for the HybridRunbookWorkerGroupClient.Get method.
type HybridRunbookWorkerGroupClientGetOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkerGroupClientListByAutomationAccountOptions contains the optional parameters for the HybridRunbookWorkerGroupClient.NewListByAutomationAccountPager
// method.
type HybridRunbookWorkerGroupClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// HybridRunbookWorkerGroupClientUpdateOptions contains the optional parameters for the HybridRunbookWorkerGroupClient.Update
// method.
type HybridRunbookWorkerGroupClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkersClientCreateOptions contains the optional parameters for the HybridRunbookWorkersClient.Create method.
type HybridRunbookWorkersClientCreateOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkersClientDeleteOptions contains the optional parameters for the HybridRunbookWorkersClient.Delete method.
type HybridRunbookWorkersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkersClientGetOptions contains the optional parameters for the HybridRunbookWorkersClient.Get method.
type HybridRunbookWorkersClientGetOptions struct {
	// placeholder for future optional parameters
}

// HybridRunbookWorkersClientListByHybridRunbookWorkerGroupOptions contains the optional parameters for the HybridRunbookWorkersClient.NewListByHybridRunbookWorkerGroupPager
// method.
type HybridRunbookWorkersClientListByHybridRunbookWorkerGroupOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// HybridRunbookWorkersClientMoveOptions contains the optional parameters for the HybridRunbookWorkersClient.Move method.
type HybridRunbookWorkersClientMoveOptions struct {
	// placeholder for future optional parameters
}

// JobClientCreateOptions contains the optional parameters for the JobClient.Create method.
type JobClientCreateOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobClientGetOptions contains the optional parameters for the JobClient.Get method.
type JobClientGetOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobClientGetOutputOptions contains the optional parameters for the JobClient.GetOutput method.
type JobClientGetOutputOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobClientGetRunbookContentOptions contains the optional parameters for the JobClient.GetRunbookContent method.
type JobClientGetRunbookContentOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobClientListByAutomationAccountOptions contains the optional parameters for the JobClient.NewListByAutomationAccountPager
// method.
type JobClientListByAutomationAccountOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string

	// The filter to apply on the operation.
	Filter *string
}

// JobClientResumeOptions contains the optional parameters for the JobClient.Resume method.
type JobClientResumeOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobClientStopOptions contains the optional parameters for the JobClient.Stop method.
type JobClientStopOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobClientSuspendOptions contains the optional parameters for the JobClient.Suspend method.
type JobClientSuspendOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobScheduleClientCreateOptions contains the optional parameters for the JobScheduleClient.Create method.
type JobScheduleClientCreateOptions struct {
	// placeholder for future optional parameters
}

// JobScheduleClientDeleteOptions contains the optional parameters for the JobScheduleClient.Delete method.
type JobScheduleClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// JobScheduleClientGetOptions contains the optional parameters for the JobScheduleClient.Get method.
type JobScheduleClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobScheduleClientListByAutomationAccountOptions contains the optional parameters for the JobScheduleClient.NewListByAutomationAccountPager
// method.
type JobScheduleClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// JobStreamClientGetOptions contains the optional parameters for the JobStreamClient.Get method.
type JobStreamClientGetOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// JobStreamClientListByJobOptions contains the optional parameters for the JobStreamClient.NewListByJobPager method.
type JobStreamClientListByJobOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string

	// The filter to apply on the operation.
	Filter *string
}

// KeysClientListByAutomationAccountOptions contains the optional parameters for the KeysClient.ListByAutomationAccount method.
type KeysClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// LinkedWorkspaceClientGetOptions contains the optional parameters for the LinkedWorkspaceClient.Get method.
type LinkedWorkspaceClientGetOptions struct {
	// placeholder for future optional parameters
}

// ModuleClientCreateOrUpdateOptions contains the optional parameters for the ModuleClient.CreateOrUpdate method.
type ModuleClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ModuleClientDeleteOptions contains the optional parameters for the ModuleClient.Delete method.
type ModuleClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ModuleClientGetOptions contains the optional parameters for the ModuleClient.Get method.
type ModuleClientGetOptions struct {
	// placeholder for future optional parameters
}

// ModuleClientListByAutomationAccountOptions contains the optional parameters for the ModuleClient.NewListByAutomationAccountPager
// method.
type ModuleClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// ModuleClientUpdateOptions contains the optional parameters for the ModuleClient.Update method.
type ModuleClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// NodeCountInformationClientGetOptions contains the optional parameters for the NodeCountInformationClient.Get method.
type NodeCountInformationClientGetOptions struct {
	// placeholder for future optional parameters
}

// NodeReportsClientGetContentOptions contains the optional parameters for the NodeReportsClient.GetContent method.
type NodeReportsClientGetContentOptions struct {
	// placeholder for future optional parameters
}

// NodeReportsClientGetOptions contains the optional parameters for the NodeReportsClient.Get method.
type NodeReportsClientGetOptions struct {
	// placeholder for future optional parameters
}

// NodeReportsClientListByNodeOptions contains the optional parameters for the NodeReportsClient.NewListByNodePager method.
type NodeReportsClientListByNodeOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// ObjectDataTypesClientListFieldsByModuleAndTypeOptions contains the optional parameters for the ObjectDataTypesClient.NewListFieldsByModuleAndTypePager
// method.
type ObjectDataTypesClientListFieldsByModuleAndTypeOptions struct {
	// placeholder for future optional parameters
}

// ObjectDataTypesClientListFieldsByTypeOptions contains the optional parameters for the ObjectDataTypesClient.NewListFieldsByTypePager
// method.
type ObjectDataTypesClientListFieldsByTypeOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginCreateOrUpdate
// method.
type PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginDelete
// method.
type PrivateEndpointConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Get
// method.
type PrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientListByAutomationAccountOptions contains the optional parameters for the PrivateEndpointConnectionsClient.NewListByAutomationAccountPager
// method.
type PrivateEndpointConnectionsClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientAutomationOptions contains the optional parameters for the PrivateLinkResourcesClient.NewAutomationPager
// method.
type PrivateLinkResourcesClientAutomationOptions struct {
	// placeholder for future optional parameters
}

// Python2PackageClientCreateOrUpdateOptions contains the optional parameters for the Python2PackageClient.CreateOrUpdate
// method.
type Python2PackageClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// Python2PackageClientDeleteOptions contains the optional parameters for the Python2PackageClient.Delete method.
type Python2PackageClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// Python2PackageClientGetOptions contains the optional parameters for the Python2PackageClient.Get method.
type Python2PackageClientGetOptions struct {
	// placeholder for future optional parameters
}

// Python2PackageClientListByAutomationAccountOptions contains the optional parameters for the Python2PackageClient.NewListByAutomationAccountPager
// method.
type Python2PackageClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// Python2PackageClientUpdateOptions contains the optional parameters for the Python2PackageClient.Update method.
type Python2PackageClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// RunbookClientBeginPublishOptions contains the optional parameters for the RunbookClient.BeginPublish method.
type RunbookClientBeginPublishOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RunbookClientCreateOrUpdateOptions contains the optional parameters for the RunbookClient.CreateOrUpdate method.
type RunbookClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RunbookClientDeleteOptions contains the optional parameters for the RunbookClient.Delete method.
type RunbookClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// RunbookClientGetContentOptions contains the optional parameters for the RunbookClient.GetContent method.
type RunbookClientGetContentOptions struct {
	// placeholder for future optional parameters
}

// RunbookClientGetOptions contains the optional parameters for the RunbookClient.Get method.
type RunbookClientGetOptions struct {
	// placeholder for future optional parameters
}

// RunbookClientListByAutomationAccountOptions contains the optional parameters for the RunbookClient.NewListByAutomationAccountPager
// method.
type RunbookClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// RunbookClientUpdateOptions contains the optional parameters for the RunbookClient.Update method.
type RunbookClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// RunbookDraftClientBeginReplaceContentOptions contains the optional parameters for the RunbookDraftClient.BeginReplaceContent
// method.
type RunbookDraftClientBeginReplaceContentOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RunbookDraftClientGetContentOptions contains the optional parameters for the RunbookDraftClient.GetContent method.
type RunbookDraftClientGetContentOptions struct {
	// placeholder for future optional parameters
}

// RunbookDraftClientGetOptions contains the optional parameters for the RunbookDraftClient.Get method.
type RunbookDraftClientGetOptions struct {
	// placeholder for future optional parameters
}

// RunbookDraftClientUndoEditOptions contains the optional parameters for the RunbookDraftClient.UndoEdit method.
type RunbookDraftClientUndoEditOptions struct {
	// placeholder for future optional parameters
}

// ScheduleClientCreateOrUpdateOptions contains the optional parameters for the ScheduleClient.CreateOrUpdate method.
type ScheduleClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ScheduleClientDeleteOptions contains the optional parameters for the ScheduleClient.Delete method.
type ScheduleClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ScheduleClientGetOptions contains the optional parameters for the ScheduleClient.Get method.
type ScheduleClientGetOptions struct {
	// placeholder for future optional parameters
}

// ScheduleClientListByAutomationAccountOptions contains the optional parameters for the ScheduleClient.NewListByAutomationAccountPager
// method.
type ScheduleClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// ScheduleClientUpdateOptions contains the optional parameters for the ScheduleClient.Update method.
type ScheduleClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SoftwareUpdateConfigurationMachineRunsClientGetByIDOptions contains the optional parameters for the SoftwareUpdateConfigurationMachineRunsClient.GetByID
// method.
type SoftwareUpdateConfigurationMachineRunsClientGetByIDOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// SoftwareUpdateConfigurationMachineRunsClientListOptions contains the optional parameters for the SoftwareUpdateConfigurationMachineRunsClient.List
// method.
type SoftwareUpdateConfigurationMachineRunsClientListOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string

	// The filter to apply on the operation. You can use the following filters: 'properties/osType', 'properties/status', 'properties/startTime',
	// and 'properties/softwareUpdateConfiguration/name'
	Filter *string

	// number of entries you skip before returning results
	Skip *string

	// Maximum number of entries returned in the results collection
	Top *string
}

// SoftwareUpdateConfigurationRunsClientGetByIDOptions contains the optional parameters for the SoftwareUpdateConfigurationRunsClient.GetByID
// method.
type SoftwareUpdateConfigurationRunsClientGetByIDOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// SoftwareUpdateConfigurationRunsClientListOptions contains the optional parameters for the SoftwareUpdateConfigurationRunsClient.List
// method.
type SoftwareUpdateConfigurationRunsClientListOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string

	// The filter to apply on the operation. You can use the following filters: 'properties/osType', 'properties/status', 'properties/startTime',
	// and 'properties/softwareUpdateConfiguration/name'
	Filter *string

	// Number of entries you skip before returning results
	Skip *string

	// Maximum number of entries returned in the results collection
	Top *string
}

// SoftwareUpdateConfigurationsClientCreateOptions contains the optional parameters for the SoftwareUpdateConfigurationsClient.Create
// method.
type SoftwareUpdateConfigurationsClientCreateOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// SoftwareUpdateConfigurationsClientDeleteOptions contains the optional parameters for the SoftwareUpdateConfigurationsClient.Delete
// method.
type SoftwareUpdateConfigurationsClientDeleteOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// SoftwareUpdateConfigurationsClientGetByNameOptions contains the optional parameters for the SoftwareUpdateConfigurationsClient.GetByName
// method.
type SoftwareUpdateConfigurationsClientGetByNameOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string
}

// SoftwareUpdateConfigurationsClientListOptions contains the optional parameters for the SoftwareUpdateConfigurationsClient.List
// method.
type SoftwareUpdateConfigurationsClientListOptions struct {
	// Identifies this specific client request.
	ClientRequestID *string

	// The filter to apply on the operation.
	Filter *string
}

// SourceControlClientCreateOrUpdateOptions contains the optional parameters for the SourceControlClient.CreateOrUpdate method.
type SourceControlClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SourceControlClientDeleteOptions contains the optional parameters for the SourceControlClient.Delete method.
type SourceControlClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SourceControlClientGetOptions contains the optional parameters for the SourceControlClient.Get method.
type SourceControlClientGetOptions struct {
	// placeholder for future optional parameters
}

// SourceControlClientListByAutomationAccountOptions contains the optional parameters for the SourceControlClient.NewListByAutomationAccountPager
// method.
type SourceControlClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// SourceControlClientUpdateOptions contains the optional parameters for the SourceControlClient.Update method.
type SourceControlClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SourceControlSyncJobClientCreateOptions contains the optional parameters for the SourceControlSyncJobClient.Create method.
type SourceControlSyncJobClientCreateOptions struct {
	// placeholder for future optional parameters
}

// SourceControlSyncJobClientGetOptions contains the optional parameters for the SourceControlSyncJobClient.Get method.
type SourceControlSyncJobClientGetOptions struct {
	// placeholder for future optional parameters
}

// SourceControlSyncJobClientListByAutomationAccountOptions contains the optional parameters for the SourceControlSyncJobClient.NewListByAutomationAccountPager
// method.
type SourceControlSyncJobClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// SourceControlSyncJobStreamsClientGetOptions contains the optional parameters for the SourceControlSyncJobStreamsClient.Get
// method.
type SourceControlSyncJobStreamsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SourceControlSyncJobStreamsClientListBySyncJobOptions contains the optional parameters for the SourceControlSyncJobStreamsClient.NewListBySyncJobPager
// method.
type SourceControlSyncJobStreamsClientListBySyncJobOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// StatisticsClientListByAutomationAccountOptions contains the optional parameters for the StatisticsClient.NewListByAutomationAccountPager
// method.
type StatisticsClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// TestJobClientCreateOptions contains the optional parameters for the TestJobClient.Create method.
type TestJobClientCreateOptions struct {
	// placeholder for future optional parameters
}

// TestJobClientGetOptions contains the optional parameters for the TestJobClient.Get method.
type TestJobClientGetOptions struct {
	// placeholder for future optional parameters
}

// TestJobClientResumeOptions contains the optional parameters for the TestJobClient.Resume method.
type TestJobClientResumeOptions struct {
	// placeholder for future optional parameters
}

// TestJobClientStopOptions contains the optional parameters for the TestJobClient.Stop method.
type TestJobClientStopOptions struct {
	// placeholder for future optional parameters
}

// TestJobClientSuspendOptions contains the optional parameters for the TestJobClient.Suspend method.
type TestJobClientSuspendOptions struct {
	// placeholder for future optional parameters
}

// TestJobStreamsClientGetOptions contains the optional parameters for the TestJobStreamsClient.Get method.
type TestJobStreamsClientGetOptions struct {
	// placeholder for future optional parameters
}

// TestJobStreamsClientListByTestJobOptions contains the optional parameters for the TestJobStreamsClient.NewListByTestJobPager
// method.
type TestJobStreamsClientListByTestJobOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// UsagesClientListByAutomationAccountOptions contains the optional parameters for the UsagesClient.NewListByAutomationAccountPager
// method.
type UsagesClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// VariableClientCreateOrUpdateOptions contains the optional parameters for the VariableClient.CreateOrUpdate method.
type VariableClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// VariableClientDeleteOptions contains the optional parameters for the VariableClient.Delete method.
type VariableClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// VariableClientGetOptions contains the optional parameters for the VariableClient.Get method.
type VariableClientGetOptions struct {
	// placeholder for future optional parameters
}

// VariableClientListByAutomationAccountOptions contains the optional parameters for the VariableClient.NewListByAutomationAccountPager
// method.
type VariableClientListByAutomationAccountOptions struct {
	// placeholder for future optional parameters
}

// VariableClientUpdateOptions contains the optional parameters for the VariableClient.Update method.
type VariableClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// WatcherClientCreateOrUpdateOptions contains the optional parameters for the WatcherClient.CreateOrUpdate method.
type WatcherClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WatcherClientDeleteOptions contains the optional parameters for the WatcherClient.Delete method.
type WatcherClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// WatcherClientGetOptions contains the optional parameters for the WatcherClient.Get method.
type WatcherClientGetOptions struct {
	// placeholder for future optional parameters
}

// WatcherClientListByAutomationAccountOptions contains the optional parameters for the WatcherClient.NewListByAutomationAccountPager
// method.
type WatcherClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// WatcherClientStartOptions contains the optional parameters for the WatcherClient.Start method.
type WatcherClientStartOptions struct {
	// placeholder for future optional parameters
}

// WatcherClientStopOptions contains the optional parameters for the WatcherClient.Stop method.
type WatcherClientStopOptions struct {
	// placeholder for future optional parameters
}

// WatcherClientUpdateOptions contains the optional parameters for the WatcherClient.Update method.
type WatcherClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// WebhookClientCreateOrUpdateOptions contains the optional parameters for the WebhookClient.CreateOrUpdate method.
type WebhookClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WebhookClientDeleteOptions contains the optional parameters for the WebhookClient.Delete method.
type WebhookClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// WebhookClientGenerateURIOptions contains the optional parameters for the WebhookClient.GenerateURI method.
type WebhookClientGenerateURIOptions struct {
	// placeholder for future optional parameters
}

// WebhookClientGetOptions contains the optional parameters for the WebhookClient.Get method.
type WebhookClientGetOptions struct {
	// placeholder for future optional parameters
}

// WebhookClientListByAutomationAccountOptions contains the optional parameters for the WebhookClient.NewListByAutomationAccountPager
// method.
type WebhookClientListByAutomationAccountOptions struct {
	// The filter to apply on the operation.
	Filter *string
}

// WebhookClientUpdateOptions contains the optional parameters for the WebhookClient.Update method.
type WebhookClientUpdateOptions struct {
	// placeholder for future optional parameters
}
