//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armazureadexternalidentities

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
	"time"
)

// AvailableOperations - Available operations of the service
type AvailableOperations struct {
	// URL client should use to fetch the next page (per server side paging). It's null for now, added for future use.
	NextLink *string `json:"nextLink,omitempty"`

	// Collection of available operation details
	Value []*OperationDetail `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AvailableOperations.
func (a AvailableOperations) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", a.NextLink)
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// B2CResourceSKU - SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at aka.ms/b2cBilling
// [https://aka.ms/b2cBilling].
type B2CResourceSKU struct {
	// The name of the SKU for the tenant.
	Name *B2CResourceSKUName `json:"name,omitempty"`

	// The tier of the tenant.
	Tier *B2CResourceSKUTier `json:"tier,omitempty"`
}

type B2CTenantResource struct {
	// REQUIRED; The location in which the resource is hosted and data resides. Can be one of 'United States', 'Europe', 'Asia
	// Pacific', or 'Australia'. Refer to this documentation [https://aka.ms/B2CDataResidency]
	// for more information.
	Location *string `json:"location,omitempty"`

	// REQUIRED; SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at aka.ms/b2cBilling [https://aka.ms/b2cBilling].
	SKU *B2CResourceSKU `json:"sku,omitempty"`

	// The Azure AD B2C tenant resource properties
	Properties *B2CTenantResourceProperties `json:"properties,omitempty"`

	// Resource Tags
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; An identifier that represents the Azure AD B2C tenant resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Azure AD B2C tenant resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the B2C tenant resource.
	Type *TypeValue `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type B2CTenantResource.
func (b B2CTenantResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", b.ID)
	populate(objectMap, "location", b.Location)
	populate(objectMap, "name", b.Name)
	populate(objectMap, "properties", b.Properties)
	populate(objectMap, "sku", b.SKU)
	populate(objectMap, "systemData", b.SystemData)
	populate(objectMap, "tags", b.Tags)
	populate(objectMap, "type", b.Type)
	return json.Marshal(objectMap)
}

// B2CTenantResourceList - The collection of Azure AD B2C tenant resources
type B2CTenantResourceList struct {
	// READ-ONLY; List of Azure AD B2C tenant resources
	Value []*B2CTenantResource `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type B2CTenantResourceList.
func (b B2CTenantResourceList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", b.Value)
	return json.Marshal(objectMap)
}

// B2CTenantResourceProperties - Properties of the Azure AD B2C tenant Azure resource.
type B2CTenantResourceProperties struct {
	// The billing configuration for the tenant.
	BillingConfig *B2CTenantResourcePropertiesBillingConfig `json:"billingConfig,omitempty"`

	// An identifier of the Azure AD B2C tenant.
	TenantID *string `json:"tenantId,omitempty"`
}

// B2CTenantResourcePropertiesBillingConfig - The billing configuration for the tenant.
type B2CTenantResourcePropertiesBillingConfig struct {
	// The type of billing. Will be MAU for all new customers. If 'Auths', it can be updated to 'MAU'. Cannot be changed if value
	// is 'MAU'. Learn more about Azure AD B2C billing at aka.ms/b2cBilling
	// [https://aka.ms/b2cbilling].
	BillingType *BillingType `json:"billingType,omitempty"`

	// READ-ONLY; The data from which the billing type took effect
	EffectiveStartDateUTC *string `json:"effectiveStartDateUtc,omitempty" azure:"ro"`
}

// B2CTenantUpdateRequest - The request body to update the Azure AD B2C tenant resource.
type B2CTenantUpdateRequest struct {
	// The Azure AD B2C tenant resource properties.
	Properties *B2CTenantResourceProperties `json:"properties,omitempty"`

	// SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at aka.ms/b2cBilling [https://aka.ms/b2cBilling].
	SKU *B2CResourceSKU `json:"sku,omitempty"`

	// Resource Tags
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type B2CTenantUpdateRequest.
func (b B2CTenantUpdateRequest) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", b.Properties)
	populate(objectMap, "sku", b.SKU)
	populate(objectMap, "tags", b.Tags)
	return json.Marshal(objectMap)
}

// B2CTenantsClientBeginCreateOptions contains the optional parameters for the B2CTenantsClient.BeginCreate method.
type B2CTenantsClientBeginCreateOptions struct {
	CreateTenantRequestBody *CreateTenantRequestBody
}

// B2CTenantsClientBeginDeleteOptions contains the optional parameters for the B2CTenantsClient.BeginDelete method.
type B2CTenantsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// B2CTenantsClientCheckNameAvailabilityOptions contains the optional parameters for the B2CTenantsClient.CheckNameAvailability
// method.
type B2CTenantsClientCheckNameAvailabilityOptions struct {
	CheckNameAvailabilityRequestBody *CheckNameAvailabilityRequestBody
}

// B2CTenantsClientGetOptions contains the optional parameters for the B2CTenantsClient.Get method.
type B2CTenantsClientGetOptions struct {
	// placeholder for future optional parameters
}

// B2CTenantsClientListByResourceGroupOptions contains the optional parameters for the B2CTenantsClient.ListByResourceGroup
// method.
type B2CTenantsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// B2CTenantsClientListBySubscriptionOptions contains the optional parameters for the B2CTenantsClient.ListBySubscription
// method.
type B2CTenantsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// B2CTenantsClientUpdateOptions contains the optional parameters for the B2CTenantsClient.Update method.
type B2CTenantsClientUpdateOptions struct {
	UpdateTenantRequestBody *B2CTenantUpdateRequest
}

// CheckNameAvailabilityRequestBody - The information required to check the availability of the name for the tenant.
type CheckNameAvailabilityRequestBody struct {
	// REQUIRED; Country code of Azure tenant (e.g. 'US'). Refer to aka.ms/B2CDataResidency [https://aka.ms/B2CDataResidency]
	// to see valid country codes and corresponding data residency locations. If you do not see a
	// country code in an valid data residency location, choose one from the list.
	CountryCode *string `json:"countryCode,omitempty"`

	// REQUIRED; The domain name to check for availability.
	Name *string `json:"name,omitempty"`
}

// CreateTenantProperties - These properties are used to create the Azure AD B2C tenant. These properties are not part of
// the Azure resource.
type CreateTenantProperties struct {
	// Country code of Azure tenant (e.g. 'US'). Refer to aka.ms/B2CDataResidency [https://aka.ms/B2CDataResidency] to see valid
	// country codes and corresponding data residency locations. If you do not see a
	// country code in an valid data residency location, choose one from the list.
	CountryCode *string `json:"countryCode,omitempty"`

	// The display name of the Azure AD B2C tenant.
	DisplayName *string `json:"displayName,omitempty"`
}

// CreateTenantRequestBody - The information needed to create the Azure AD B2C tenant and corresponding Azure resource, which
// is used for billing purposes.
type CreateTenantRequestBody struct {
	// REQUIRED; The location in which the resource is hosted and data resides. Can be one of 'United States', 'Europe', 'Asia
	// Pacific', or 'Australia'. Refer to this documentation [https://aka.ms/B2CDataResidency]
	// for more information.
	Location *string `json:"location,omitempty"`

	// REQUIRED
	Properties *CreateTenantRequestBodyProperties `json:"properties,omitempty"`

	// REQUIRED; SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at aka.ms/b2cBilling [https://aka.ms/b2cBilling].
	SKU *B2CResourceSKU `json:"sku,omitempty"`

	// Resource Tags
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type CreateTenantRequestBody.
func (c CreateTenantRequestBody) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "location", c.Location)
	populate(objectMap, "properties", c.Properties)
	populate(objectMap, "sku", c.SKU)
	populate(objectMap, "tags", c.Tags)
	return json.Marshal(objectMap)
}

type CreateTenantRequestBodyProperties struct {
	// These properties are used to create the Azure AD B2C tenant. These properties are not part of the Azure resource.
	CreateTenantProperties *CreateTenantProperties `json:"createTenantProperties,omitempty"`
}

// GuestUsagesClientCreateOptions contains the optional parameters for the GuestUsagesClient.Create method.
type GuestUsagesClientCreateOptions struct {
	// Guest Usages resource to be created
	Resource *GuestUsagesResource
}

// GuestUsagesClientDeleteOptions contains the optional parameters for the GuestUsagesClient.Delete method.
type GuestUsagesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// GuestUsagesClientGetOptions contains the optional parameters for the GuestUsagesClient.Get method.
type GuestUsagesClientGetOptions struct {
	// placeholder for future optional parameters
}

// GuestUsagesClientListByResourceGroupOptions contains the optional parameters for the GuestUsagesClient.ListByResourceGroup
// method.
type GuestUsagesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// GuestUsagesClientListBySubscriptionOptions contains the optional parameters for the GuestUsagesClient.ListBySubscription
// method.
type GuestUsagesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// GuestUsagesClientUpdateOptions contains the optional parameters for the GuestUsagesClient.Update method.
type GuestUsagesClientUpdateOptions struct {
	// Guest Usages Resource to be updated
	ResourcePatch *GuestUsagesResourcePatch
}

// GuestUsagesResource - Guest Usages Resource
type GuestUsagesResource struct {
	// Location of the Guest Usages resource.
	Location *string `json:"location,omitempty"`

	// The Guest Usages Resource Properties
	Properties *GuestUsagesResourceProperties `json:"properties,omitempty"`

	// Key-value pairs of additional resource provisioning properties.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; An identifier that represents the Guest Usages resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Guest Usages resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the Guest Usages resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type GuestUsagesResource.
func (g GuestUsagesResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", g.ID)
	populate(objectMap, "location", g.Location)
	populate(objectMap, "name", g.Name)
	populate(objectMap, "properties", g.Properties)
	populate(objectMap, "systemData", g.SystemData)
	populate(objectMap, "tags", g.Tags)
	populate(objectMap, "type", g.Type)
	return json.Marshal(objectMap)
}

// GuestUsagesResourceList - The collection of guest usages resources
type GuestUsagesResourceList struct {
	// READ-ONLY; List of guest usages resources
	Value []*GuestUsagesResource `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type GuestUsagesResourceList.
func (g GuestUsagesResourceList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", g.Value)
	return json.Marshal(objectMap)
}

// GuestUsagesResourcePatch - Guest Usages Resource for Patch
type GuestUsagesResourcePatch struct {
	// Key-value pairs of additional resource provisioning properties.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type GuestUsagesResourcePatch.
func (g GuestUsagesResourcePatch) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "tags", g.Tags)
	return json.Marshal(objectMap)
}

// GuestUsagesResourceProperties - Guest Usages Resource Properties
type GuestUsagesResourceProperties struct {
	// An identifier for the tenant for which the resource is being created
	TenantID *string `json:"tenantId,omitempty"`
}

// NameAvailabilityResponse - Response of the CheckNameAvailability operation.
type NameAvailabilityResponse struct {
	// Description of the reason if name is not available.
	Message *string `json:"message,omitempty"`

	// True if the name is available and can be used to create a new tenant. Otherwise false.
	NameAvailable *bool `json:"nameAvailable,omitempty"`

	// Describes the reason for the 'nameAvailable' value.
	Reason *NameAvailabilityReasonType `json:"reason,omitempty"`
}

// OperationDetail - Operation detail payload
type OperationDetail struct {
	// Display of the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Name of the operation
	Name *string `json:"name,omitempty"`

	// Origin of the operation
	Origin *string `json:"origin,omitempty"`
}

// OperationDisplay - Operation display payload
type OperationDisplay struct {
	// Localized friendly description for the operation
	Description *string `json:"description,omitempty"`

	// Localized friendly name for the operation
	Operation *string `json:"operation,omitempty"`

	// Resource provider of the operation
	Provider *string `json:"provider,omitempty"`

	// Resource of the operation
	Resource *string `json:"resource,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populateTimeRFC3339(objectMap, "createdAt", s.CreatedAt)
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populateTimeRFC3339(objectMap, "lastModifiedAt", s.LastModifiedAt)
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &s.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			err = unpopulateTimeRFC3339(val, &s.LastModifiedAt)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
