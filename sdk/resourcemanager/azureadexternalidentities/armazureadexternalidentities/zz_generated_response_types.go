//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armazureadexternalidentities

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// B2CTenantsClientCheckNameAvailabilityResponse contains the response from method B2CTenantsClient.CheckNameAvailability.
type B2CTenantsClientCheckNameAvailabilityResponse struct {
	B2CTenantsClientCheckNameAvailabilityResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// B2CTenantsClientCheckNameAvailabilityResult contains the result from method B2CTenantsClient.CheckNameAvailability.
type B2CTenantsClientCheckNameAvailabilityResult struct {
	NameAvailabilityResponse
}

// B2CTenantsClientCreatePollerResponse contains the response from method B2CTenantsClient.Create.
type B2CTenantsClientCreatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *B2CTenantsClientCreatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l B2CTenantsClientCreatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (B2CTenantsClientCreateResponse, error) {
	respType := B2CTenantsClientCreateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.B2CTenantResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a B2CTenantsClientCreatePollerResponse from the provided client and resume token.
func (l *B2CTenantsClientCreatePollerResponse) Resume(ctx context.Context, client *B2CTenantsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("B2CTenantsClient.Create", token, client.pl)
	if err != nil {
		return err
	}
	poller := &B2CTenantsClientCreatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// B2CTenantsClientCreateResponse contains the response from method B2CTenantsClient.Create.
type B2CTenantsClientCreateResponse struct {
	B2CTenantsClientCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// B2CTenantsClientCreateResult contains the result from method B2CTenantsClient.Create.
type B2CTenantsClientCreateResult struct {
	B2CTenantResource
}

// B2CTenantsClientDeletePollerResponse contains the response from method B2CTenantsClient.Delete.
type B2CTenantsClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *B2CTenantsClientDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l B2CTenantsClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (B2CTenantsClientDeleteResponse, error) {
	respType := B2CTenantsClientDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a B2CTenantsClientDeletePollerResponse from the provided client and resume token.
func (l *B2CTenantsClientDeletePollerResponse) Resume(ctx context.Context, client *B2CTenantsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("B2CTenantsClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &B2CTenantsClientDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// B2CTenantsClientDeleteResponse contains the response from method B2CTenantsClient.Delete.
type B2CTenantsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// B2CTenantsClientGetResponse contains the response from method B2CTenantsClient.Get.
type B2CTenantsClientGetResponse struct {
	B2CTenantsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// B2CTenantsClientGetResult contains the result from method B2CTenantsClient.Get.
type B2CTenantsClientGetResult struct {
	B2CTenantResource
}

// B2CTenantsClientListByResourceGroupResponse contains the response from method B2CTenantsClient.ListByResourceGroup.
type B2CTenantsClientListByResourceGroupResponse struct {
	B2CTenantsClientListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// B2CTenantsClientListByResourceGroupResult contains the result from method B2CTenantsClient.ListByResourceGroup.
type B2CTenantsClientListByResourceGroupResult struct {
	B2CTenantResourceList
}

// B2CTenantsClientListBySubscriptionResponse contains the response from method B2CTenantsClient.ListBySubscription.
type B2CTenantsClientListBySubscriptionResponse struct {
	B2CTenantsClientListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// B2CTenantsClientListBySubscriptionResult contains the result from method B2CTenantsClient.ListBySubscription.
type B2CTenantsClientListBySubscriptionResult struct {
	B2CTenantResourceList
}

// B2CTenantsClientUpdateResponse contains the response from method B2CTenantsClient.Update.
type B2CTenantsClientUpdateResponse struct {
	B2CTenantsClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// B2CTenantsClientUpdateResult contains the result from method B2CTenantsClient.Update.
type B2CTenantsClientUpdateResult struct {
	B2CTenantResource
}

// GuestUsagesClientCreateResponse contains the response from method GuestUsagesClient.Create.
type GuestUsagesClientCreateResponse struct {
	GuestUsagesClientCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GuestUsagesClientCreateResult contains the result from method GuestUsagesClient.Create.
type GuestUsagesClientCreateResult struct {
	GuestUsagesResource
}

// GuestUsagesClientDeleteResponse contains the response from method GuestUsagesClient.Delete.
type GuestUsagesClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GuestUsagesClientGetResponse contains the response from method GuestUsagesClient.Get.
type GuestUsagesClientGetResponse struct {
	GuestUsagesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GuestUsagesClientGetResult contains the result from method GuestUsagesClient.Get.
type GuestUsagesClientGetResult struct {
	GuestUsagesResource
}

// GuestUsagesClientListByResourceGroupResponse contains the response from method GuestUsagesClient.ListByResourceGroup.
type GuestUsagesClientListByResourceGroupResponse struct {
	GuestUsagesClientListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GuestUsagesClientListByResourceGroupResult contains the result from method GuestUsagesClient.ListByResourceGroup.
type GuestUsagesClientListByResourceGroupResult struct {
	GuestUsagesResourceList
}

// GuestUsagesClientListBySubscriptionResponse contains the response from method GuestUsagesClient.ListBySubscription.
type GuestUsagesClientListBySubscriptionResponse struct {
	GuestUsagesClientListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GuestUsagesClientListBySubscriptionResult contains the result from method GuestUsagesClient.ListBySubscription.
type GuestUsagesClientListBySubscriptionResult struct {
	GuestUsagesResourceList
}

// GuestUsagesClientUpdateResponse contains the response from method GuestUsagesClient.Update.
type GuestUsagesClientUpdateResponse struct {
	GuestUsagesClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GuestUsagesClientUpdateResult contains the result from method GuestUsagesClient.Update.
type GuestUsagesClientUpdateResult struct {
	GuestUsagesResource
}

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationsClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsClientListResult contains the result from method OperationsClient.List.
type OperationsClientListResult struct {
	AvailableOperations
}
