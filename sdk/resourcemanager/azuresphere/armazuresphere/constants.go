//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
// is regenerated.
// DO NOT EDIT.

package armazuresphere

const (
	moduleName    = "armazuresphere"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// AllowCrashDumpCollection - Allow crash dumps values.
type AllowCrashDumpCollection string

const (
	AllowCrashDumpCollectionDisabled AllowCrashDumpCollection = "Disabled"
	AllowCrashDumpCollectionEnabled  AllowCrashDumpCollection = "Enabled"
)

// PossibleAllowCrashDumpCollectionValues returns the possible values for the AllowCrashDumpCollection const type.
func PossibleAllowCrashDumpCollectionValues() []AllowCrashDumpCollection {
	return []AllowCrashDumpCollection{
		AllowCrashDumpCollectionDisabled,
		AllowCrashDumpCollectionEnabled,
	}
}

// CapabilityType - Capability image type
type CapabilityType string

const (
	CapabilityTypeApplicationDevelopment CapabilityType = "ApplicationDevelopment"
	CapabilityTypeFieldServicing         CapabilityType = "FieldServicing"
)

// PossibleCapabilityTypeValues returns the possible values for the CapabilityType const type.
func PossibleCapabilityTypeValues() []CapabilityType {
	return []CapabilityType{
		CapabilityTypeApplicationDevelopment,
		CapabilityTypeFieldServicing,
	}
}

// CertificateStatus - Certificate status values.
type CertificateStatus string

const (
	CertificateStatusActive   CertificateStatus = "Active"
	CertificateStatusExpired  CertificateStatus = "Expired"
	CertificateStatusInactive CertificateStatus = "Inactive"
	CertificateStatusRevoked  CertificateStatus = "Revoked"
)

// PossibleCertificateStatusValues returns the possible values for the CertificateStatus const type.
func PossibleCertificateStatusValues() []CertificateStatus {
	return []CertificateStatus{
		CertificateStatusActive,
		CertificateStatusExpired,
		CertificateStatusInactive,
		CertificateStatusRevoked,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// ImageType - Image type values.
type ImageType string

const (
	ImageTypeApplications             ImageType = "Applications"
	ImageTypeBaseSystemUpdateManifest ImageType = "BaseSystemUpdateManifest"
	ImageTypeBootManifest             ImageType = "BootManifest"
	ImageTypeCustomerBoardConfig      ImageType = "CustomerBoardConfig"
	ImageTypeCustomerUpdateManifest   ImageType = "CustomerUpdateManifest"
	ImageTypeFirmwareUpdateManifest   ImageType = "FirmwareUpdateManifest"
	ImageTypeFwConfig                 ImageType = "FwConfig"
	ImageTypeInvalidImageType         ImageType = "InvalidImageType"
	ImageTypeManifestSet              ImageType = "ManifestSet"
	ImageTypeNormalWorldDtb           ImageType = "NormalWorldDtb"
	ImageTypeNormalWorldKernel        ImageType = "NormalWorldKernel"
	ImageTypeNormalWorldLoader        ImageType = "NormalWorldLoader"
	ImageTypeNwfs                     ImageType = "Nwfs"
	ImageTypeOneBl                    ImageType = "OneBl"
	ImageTypeOther                    ImageType = "Other"
	ImageTypePlutonRuntime            ImageType = "PlutonRuntime"
	ImageTypePolicy                   ImageType = "Policy"
	ImageTypeRecoveryManifest         ImageType = "RecoveryManifest"
	ImageTypeRootFs                   ImageType = "RootFs"
	ImageTypeSecurityMonitor          ImageType = "SecurityMonitor"
	ImageTypeServices                 ImageType = "Services"
	ImageTypeTrustedKeystore          ImageType = "TrustedKeystore"
	ImageTypeUpdateCertStore          ImageType = "UpdateCertStore"
	ImageTypeWifiFirmware             ImageType = "WifiFirmware"
)

// PossibleImageTypeValues returns the possible values for the ImageType const type.
func PossibleImageTypeValues() []ImageType {
	return []ImageType{
		ImageTypeApplications,
		ImageTypeBaseSystemUpdateManifest,
		ImageTypeBootManifest,
		ImageTypeCustomerBoardConfig,
		ImageTypeCustomerUpdateManifest,
		ImageTypeFirmwareUpdateManifest,
		ImageTypeFwConfig,
		ImageTypeInvalidImageType,
		ImageTypeManifestSet,
		ImageTypeNormalWorldDtb,
		ImageTypeNormalWorldKernel,
		ImageTypeNormalWorldLoader,
		ImageTypeNwfs,
		ImageTypeOneBl,
		ImageTypeOther,
		ImageTypePlutonRuntime,
		ImageTypePolicy,
		ImageTypeRecoveryManifest,
		ImageTypeRootFs,
		ImageTypeSecurityMonitor,
		ImageTypeServices,
		ImageTypeTrustedKeystore,
		ImageTypeUpdateCertStore,
		ImageTypeWifiFirmware,
	}
}

// OSFeedType - OS feed type values.
type OSFeedType string

const (
	OSFeedTypeRetail     OSFeedType = "Retail"
	OSFeedTypeRetailEval OSFeedType = "RetailEval"
)

// PossibleOSFeedTypeValues returns the possible values for the OSFeedType const type.
func PossibleOSFeedTypeValues() []OSFeedType {
	return []OSFeedType{
		OSFeedTypeRetail,
		OSFeedTypeRetailEval,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	OriginSystem     Origin = "system"
	OriginUser       Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

type ProvisioningState string

const (
	ProvisioningStateAccepted     ProvisioningState = "Accepted"
	ProvisioningStateCanceled     ProvisioningState = "Canceled"
	ProvisioningStateDeleting     ProvisioningState = "Deleting"
	ProvisioningStateFailed       ProvisioningState = "Failed"
	ProvisioningStateProvisioning ProvisioningState = "Provisioning"
	ProvisioningStateSucceeded    ProvisioningState = "Succeeded"
	ProvisioningStateUpdating     ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateAccepted,
		ProvisioningStateCanceled,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateProvisioning,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// RegionalDataBoundary - Regional data boundary values.
type RegionalDataBoundary string

const (
	RegionalDataBoundaryEU   RegionalDataBoundary = "EU"
	RegionalDataBoundaryNone RegionalDataBoundary = "None"
)

// PossibleRegionalDataBoundaryValues returns the possible values for the RegionalDataBoundary const type.
func PossibleRegionalDataBoundaryValues() []RegionalDataBoundary {
	return []RegionalDataBoundary{
		RegionalDataBoundaryEU,
		RegionalDataBoundaryNone,
	}
}

// UpdatePolicy - Update policy values.
type UpdatePolicy string

const (
	UpdatePolicyNo3RdPartyAppUpdates UpdatePolicy = "No3rdPartyAppUpdates"
	UpdatePolicyUpdateAll            UpdatePolicy = "UpdateAll"
)

// PossibleUpdatePolicyValues returns the possible values for the UpdatePolicy const type.
func PossibleUpdatePolicyValues() []UpdatePolicy {
	return []UpdatePolicy{
		UpdatePolicyNo3RdPartyAppUpdates,
		UpdatePolicyUpdateAll,
	}
}
