//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armazurestack

// ActivationKeyResult - The resource containing the Azure Stack activation key.
type ActivationKeyResult struct {
	// Azure Stack activation key.
	ActivationKey *string `json:"activationKey,omitempty"`
}

// CloudManifestFileClientGetOptions contains the optional parameters for the CloudManifestFileClient.Get method.
type CloudManifestFileClientGetOptions struct {
	// Signing verification key version creation date.
	VersionCreationDate *string
}

// CloudManifestFileClientListOptions contains the optional parameters for the CloudManifestFileClient.List method.
type CloudManifestFileClientListOptions struct {
	// placeholder for future optional parameters
}

// CloudManifestFileDeploymentData - Cloud specific manifest data for AzureStack deployment.
type CloudManifestFileDeploymentData struct {
	// Signing verification public key.
	CustomCloudVerificationKey *string `json:"customCloudVerificationKey,omitempty"`

	// Environment endpoints.
	CustomEnvironmentEndpoints *CloudManifestFileEnvironmentEndpoints `json:"customEnvironmentEndpoints,omitempty"`

	// Dsms external certificates.
	ExternalDsmsCertificates *string `json:"externalDsmsCertificates,omitempty"`
}

// CloudManifestFileEnvironmentEndpoints - Cloud specific environment endpoints for AzureStack deployment.
type CloudManifestFileEnvironmentEndpoints struct {
	// ARM endpoint.
	CustomCloudArmEndpoint *string `json:"customCloudArmEndpoint,omitempty"`

	// Dsms endpoint.
	ExternalDsmsEndpoint *string `json:"externalDsmsEndpoint,omitempty"`
}

// CloudManifestFileProperties - Cloud specific manifest JSON properties.
type CloudManifestFileProperties struct {
	// Cloud specific manifest data.
	DeploymentData *CloudManifestFileDeploymentData `json:"deploymentData,omitempty"`

	// Signature of the cloud specific manifest data.
	Signature *string `json:"signature,omitempty"`
}

// CloudManifestFileResponse - Cloud specific manifest GET response.
type CloudManifestFileResponse struct {
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `json:"etag,omitempty"`

	// Cloud specific manifest data.
	Properties *CloudManifestFileProperties `json:"properties,omitempty"`

	// READ-ONLY; ID of the resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Type of Resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// Compatibility - Product compatibility
type Compatibility struct {
	// Full error message if any compatibility issues are found
	Description *string `json:"description,omitempty"`

	// Tells if product is compatible with current device
	IsCompatible *bool `json:"isCompatible,omitempty"`

	// List of all issues found
	Issues []*CompatibilityIssue `json:"issues,omitempty"`

	// Short error message if any compatibility issues are found
	Message *string `json:"message,omitempty"`
}

// CustomerSubscription - Customer subscription.
type CustomerSubscription struct {
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `json:"etag,omitempty"`

	// Customer subscription properties.
	Properties *CustomerSubscriptionProperties `json:"properties,omitempty"`

	// READ-ONLY; ID of the resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Type of Resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// CustomerSubscriptionList - Pageable list of customer subscriptions.
type CustomerSubscriptionList struct {
	// URI to the next page.
	NextLink *string `json:"nextLink,omitempty"`

	// List of customer subscriptions.
	Value []*CustomerSubscription `json:"value,omitempty"`
}

// CustomerSubscriptionProperties - Customer subscription properties.
type CustomerSubscriptionProperties struct {
	// Tenant Id.
	TenantID *string `json:"tenantId,omitempty"`
}

// CustomerSubscriptionsClientCreateOptions contains the optional parameters for the CustomerSubscriptionsClient.Create method.
type CustomerSubscriptionsClientCreateOptions struct {
	// placeholder for future optional parameters
}

// CustomerSubscriptionsClientDeleteOptions contains the optional parameters for the CustomerSubscriptionsClient.Delete method.
type CustomerSubscriptionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CustomerSubscriptionsClientGetOptions contains the optional parameters for the CustomerSubscriptionsClient.Get method.
type CustomerSubscriptionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// CustomerSubscriptionsClientListOptions contains the optional parameters for the CustomerSubscriptionsClient.List method.
type CustomerSubscriptionsClientListOptions struct {
	// placeholder for future optional parameters
}

// DataDiskImage - Data disk image.
type DataDiskImage struct {
	// READ-ONLY; The LUN.
	Lun *int32 `json:"lun,omitempty" azure:"ro"`

	// READ-ONLY; SAS key for source blob.
	SourceBlobSasURI *string `json:"sourceBlobSasUri,omitempty" azure:"ro"`
}

// DeploymentLicenseClientCreateOptions contains the optional parameters for the DeploymentLicenseClient.Create method.
type DeploymentLicenseClientCreateOptions struct {
	// placeholder for future optional parameters
}

// DeploymentLicenseRequest - Request details for generating a deployment license.
type DeploymentLicenseRequest struct {
	// Signing verification public key version.
	VerificationVersion *string `json:"verificationVersion,omitempty"`
}

// DeploymentLicenseResponse - A license that can be used to deploy an Azure Stack device.
type DeploymentLicenseResponse struct {
	// Signature of the license chain.
	Signature *string `json:"signature,omitempty"`

	// A license chain that can be used to temporarily activate an Azure Stack device.
	TemporaryLicenseChain []*string `json:"temporaryLicenseChain,omitempty"`
}

// DeviceConfiguration - Device Configuration.
type DeviceConfiguration struct {
	// READ-ONLY; Version of the device.
	DeviceVersion *string `json:"deviceVersion,omitempty" azure:"ro"`

	// READ-ONLY; Identity system of the device.
	IdentitySystem *Category `json:"identitySystem,omitempty" azure:"ro"`
}

// Display - Contains the localized display information for this particular operation or action.
type Display struct {
	// The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough
	// and concise for used in both tooltips and detailed views.
	Description *string `json:"description,omitempty"`

	// The localized, friendly name for the operation. Use the name as it will displayed to the user.
	Operation *string `json:"operation,omitempty"`

	// The localized, friendly version of the resource provider name.
	Provider *string `json:"provider,omitempty"`

	// The localized, friendly version of the resource type related to this action or operation; the resource type should match
	// the public documentation for the resource provider.
	Resource *string `json:"resource,omitempty"`
}

// ErrorDetails - The details of the error.
type ErrorDetails struct {
	// READ-ONLY; Error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Error message indicating why the operation failed.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The target of the particular error.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// ErrorResponse - Error response indicates that the service is not able to process the incoming request. The reason is provided
// in the error message.
type ErrorResponse struct {
	// The details of the error.
	Error *ErrorDetails `json:"error,omitempty"`
}

// ExtendedProduct - Extended description about the product required for installing it into Azure Stack.
type ExtendedProduct struct {
	// READ-ONLY; The URI to the .azpkg file that provides information required for showing product in the gallery.
	GalleryPackageBlobSasURI *string `json:"galleryPackageBlobSasUri,omitempty" azure:"ro"`

	// READ-ONLY; Specifies the kind of the product (virtualMachine or virtualMachineExtension).
	ProductKind *string `json:"productKind,omitempty" azure:"ro"`

	// READ-ONLY; Specifies additional properties describing the product.
	Properties *ExtendedProductProperties `json:"properties,omitempty" azure:"ro"`
}

// ExtendedProductProperties - Product information.
type ExtendedProductProperties struct {
	// READ-ONLY; Specifies kind of compute role included in the package.
	ComputeRole *ComputeRole `json:"computeRole,omitempty" azure:"ro"`

	// READ-ONLY; List of attached data disks.
	DataDiskImages []*DataDiskImage `json:"dataDiskImages,omitempty" azure:"ro"`

	// READ-ONLY; Specifies if product is a Virtual Machine Extension.
	IsSystemExtension *bool `json:"isSystemExtension,omitempty" azure:"ro"`

	// READ-ONLY; OS disk image used by product.
	OSDiskImage *OsDiskImage `json:"osDiskImage,omitempty" azure:"ro"`

	// READ-ONLY; Specifies a download location where content can be downloaded from.
	SourceBlob *URI `json:"sourceBlob,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if specified product supports multiple extensions.
	SupportMultipleExtensions *bool `json:"supportMultipleExtensions,omitempty" azure:"ro"`

	// READ-ONLY; Specifies operating system used by the product.
	VMOsType *OperatingSystem `json:"vmOsType,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if virtual machine Scale Set is enabled in the specified product.
	VMScaleSetEnabled *bool `json:"vmScaleSetEnabled,omitempty" azure:"ro"`

	// READ-ONLY; Specifies product version.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// IconUris - Links to product icons.
type IconUris struct {
	// URI to hero icon.
	Hero *string `json:"hero,omitempty"`

	// URI to large icon.
	Large *string `json:"large,omitempty"`

	// URI to medium icon.
	Medium *string `json:"medium,omitempty"`

	// URI to small icon.
	Small *string `json:"small,omitempty"`

	// URI to wide icon.
	Wide *string `json:"wide,omitempty"`
}

// MarketplaceProductLogUpdate - Update details for product log.
type MarketplaceProductLogUpdate struct {
	// READ-ONLY; Error details related to operation.
	Details *string `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; Error related to the operation.
	Error *string `json:"error,omitempty" azure:"ro"`

	// READ-ONLY; Operation to log.
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; Operation status to log.
	Status *string `json:"status,omitempty" azure:"ro"`
}

// Operation - Describes the supported REST operation.
type Operation struct {
	// Contains the localized display information for this particular operation or action.
	Display *Display `json:"display,omitempty"`

	// The name of the operation being performed on this particular object.
	Name *string `json:"name,omitempty"`

	// The intended executor of the operation.
	Origin *string `json:"origin,omitempty"`
}

// OperationList - List of Operations
type OperationList struct {
	// URI to the next page of operations.
	NextLink *string `json:"nextLink,omitempty"`

	// Array of operations
	Value []*Operation `json:"value,omitempty"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// OsDiskImage - OS disk image.
type OsDiskImage struct {
	// READ-ONLY; OS operating system type.
	OperatingSystem *OperatingSystem `json:"operatingSystem,omitempty" azure:"ro"`

	// READ-ONLY; SAS key for source blob.
	SourceBlobSasURI *string `json:"sourceBlobSasUri,omitempty" azure:"ro"`
}

// Product information.
type Product struct {
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `json:"etag,omitempty"`

	// Properties of the product resource.
	Properties *ProductNestedProperties `json:"properties,omitempty"`

	// READ-ONLY; ID of the resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Type of Resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ProductLink - Link with additional information about a product.
type ProductLink struct {
	// The description of the link.
	DisplayName *string `json:"displayName,omitempty"`

	// The URI corresponding to the link.
	URI *string `json:"uri,omitempty"`
}

// ProductList - Pageable list of products.
type ProductList struct {
	// URI to the next page.
	NextLink *string `json:"nextLink,omitempty"`

	// List of products.
	Value []*Product `json:"value,omitempty"`
}

// ProductLog - Product action log.
type ProductLog struct {
	// READ-ONLY; Operation error details.
	Details *string `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; Operation end datetime.
	EndDate *string `json:"endDate,omitempty" azure:"ro"`

	// READ-ONLY; Operation error data.
	Error *string `json:"error,omitempty" azure:"ro"`

	// READ-ONLY; Log ID.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Logged operation.
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; Logged product ID.
	ProductID *string `json:"productId,omitempty" azure:"ro"`

	// READ-ONLY; Logged registration name.
	RegistrationName *string `json:"registrationName,omitempty" azure:"ro"`

	// READ-ONLY; Logged resource group name.
	ResourceGroupName *string `json:"resourceGroupName,omitempty" azure:"ro"`

	// READ-ONLY; Operation start datetime.
	StartDate *string `json:"startDate,omitempty" azure:"ro"`

	// READ-ONLY; Operation status.
	Status *string `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; Logged subscription ID.
	SubscriptionID *string `json:"subscriptionId,omitempty" azure:"ro"`
}

// ProductNestedProperties - Properties portion of the product resource.
type ProductNestedProperties struct {
	// The part number used for billing purposes.
	BillingPartNumber *string `json:"billingPartNumber,omitempty"`

	// Product compatibility with current device.
	Compatibility *Compatibility `json:"compatibility,omitempty"`

	// The description of the product.
	Description *string `json:"description,omitempty"`

	// The display name of the product.
	DisplayName *string `json:"displayName,omitempty"`

	// The identifier of the gallery item corresponding to the product.
	GalleryItemIdentity *string `json:"galleryItemIdentity,omitempty"`

	// Additional links available for this product.
	IconUris *IconUris `json:"iconUris,omitempty"`

	// The legal terms.
	LegalTerms *string `json:"legalTerms,omitempty"`

	// Additional links available for this product.
	Links []*ProductLink `json:"links,omitempty"`

	// The offer representing the product.
	Offer *string `json:"offer,omitempty"`

	// The version of the product offer.
	OfferVersion *string `json:"offerVersion,omitempty"`

	// The length of product content.
	PayloadLength *int64 `json:"payloadLength,omitempty"`

	// The privacy policy.
	PrivacyPolicy *string `json:"privacyPolicy,omitempty"`

	// The kind of the product (virtualMachine or virtualMachineExtension)
	ProductKind *string `json:"productKind,omitempty"`

	// Additional properties for the product.
	ProductProperties *ProductProperties `json:"productProperties,omitempty"`

	// The user-friendly name of the product publisher.
	PublisherDisplayName *string `json:"publisherDisplayName,omitempty"`

	// Publisher identifier.
	PublisherIdentifier *string `json:"publisherIdentifier,omitempty"`

	// The product SKU.
	SKU *string `json:"sku,omitempty"`

	// The type of the Virtual Machine Extension.
	VMExtensionType *string `json:"vmExtensionType,omitempty"`
}

// ProductProperties - Additional properties of the product
type ProductProperties struct {
	// The version.
	Version *string `json:"version,omitempty"`
}

// ProductsClientGetOptions contains the optional parameters for the ProductsClient.Get method.
type ProductsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProductsClientGetProductOptions contains the optional parameters for the ProductsClient.GetProduct method.
type ProductsClientGetProductOptions struct {
	// Device configuration.
	DeviceConfiguration *DeviceConfiguration
}

// ProductsClientGetProductsOptions contains the optional parameters for the ProductsClient.GetProducts method.
type ProductsClientGetProductsOptions struct {
	// Device configuration.
	DeviceConfiguration *DeviceConfiguration
}

// ProductsClientListDetailsOptions contains the optional parameters for the ProductsClient.ListDetails method.
type ProductsClientListDetailsOptions struct {
	// placeholder for future optional parameters
}

// ProductsClientListOptions contains the optional parameters for the ProductsClient.List method.
type ProductsClientListOptions struct {
	// placeholder for future optional parameters
}

// ProductsClientListProductsOptions contains the optional parameters for the ProductsClient.ListProducts method.
type ProductsClientListProductsOptions struct {
	// Device configuration.
	DeviceConfiguration *DeviceConfiguration
}

// ProductsClientUploadLogOptions contains the optional parameters for the ProductsClient.UploadLog method.
type ProductsClientUploadLogOptions struct {
	// Update details for product log.
	MarketplaceProductLogUpdate *MarketplaceProductLogUpdate
}

// Registration information.
type Registration struct {
	// REQUIRED; Location of the resource.
	Location *Location `json:"location,omitempty"`

	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `json:"etag,omitempty"`

	// Registration resource.
	Properties *RegistrationProperties `json:"properties,omitempty"`

	// Custom tags for the resource.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; ID of the resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Type of Resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RegistrationList - Pageable list of registrations.
type RegistrationList struct {
	// URI to the next page.
	NextLink *string `json:"nextLink,omitempty"`

	// List of Registrations
	Value []*Registration `json:"value,omitempty"`
}

// RegistrationParameter - Registration resource
type RegistrationParameter struct {
	// REQUIRED; Location of the resource.
	Location *Location `json:"location,omitempty"`

	// REQUIRED; Properties of the Azure Stack registration resource
	Properties *RegistrationParameterProperties `json:"properties,omitempty"`
}

// RegistrationParameterProperties - Properties of the Azure Stack registration resource
type RegistrationParameterProperties struct {
	// REQUIRED; The token identifying registered Azure Stack
	RegistrationToken *string `json:"registrationToken,omitempty"`
}

// RegistrationProperties - Properties portion of the registration resource.
type RegistrationProperties struct {
	// Specifies the billing mode for the Azure Stack registration.
	BillingModel *string `json:"billingModel,omitempty"`

	// The identifier of the registered Azure Stack.
	CloudID *string `json:"cloudId,omitempty"`

	// The object identifier associated with the Azure Stack connecting to Azure.
	ObjectID *string `json:"objectId,omitempty"`
}

// RegistrationsClientCreateOrUpdateOptions contains the optional parameters for the RegistrationsClient.CreateOrUpdate method.
type RegistrationsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RegistrationsClientDeleteOptions contains the optional parameters for the RegistrationsClient.Delete method.
type RegistrationsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// RegistrationsClientEnableRemoteManagementOptions contains the optional parameters for the RegistrationsClient.EnableRemoteManagement
// method.
type RegistrationsClientEnableRemoteManagementOptions struct {
	// placeholder for future optional parameters
}

// RegistrationsClientGetActivationKeyOptions contains the optional parameters for the RegistrationsClient.GetActivationKey
// method.
type RegistrationsClientGetActivationKeyOptions struct {
	// placeholder for future optional parameters
}

// RegistrationsClientGetOptions contains the optional parameters for the RegistrationsClient.Get method.
type RegistrationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// RegistrationsClientListBySubscriptionOptions contains the optional parameters for the RegistrationsClient.ListBySubscription
// method.
type RegistrationsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// RegistrationsClientListOptions contains the optional parameters for the RegistrationsClient.List method.
type RegistrationsClientListOptions struct {
	// placeholder for future optional parameters
}

// RegistrationsClientUpdateOptions contains the optional parameters for the RegistrationsClient.Update method.
type RegistrationsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// Resource - Base resource object.
type Resource struct {
	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `json:"etag,omitempty"`

	// READ-ONLY; ID of the resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Type of Resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// TrackedResource - Base resource object.
type TrackedResource struct {
	// REQUIRED; Location of the resource.
	Location *Location `json:"location,omitempty"`

	// The entity tag used for optimistic concurrency when modifying the resource.
	Etag *string `json:"etag,omitempty"`

	// Custom tags for the resource.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; ID of the resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Name of the resource.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Type of Resource.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// URI - The URI.
type URI struct {
	// READ-ONLY; The URI.
	URI *string `json:"uri,omitempty" azure:"ro"`
}

// VirtualMachineExtensionProductProperties - Product information.
type VirtualMachineExtensionProductProperties struct {
	// READ-ONLY; Specifies kind of compute role included in the package.
	ComputeRole *ComputeRole `json:"computeRole,omitempty" azure:"ro"`

	// READ-ONLY; Specifies if product is a Virtual Machine Extension.
	IsSystemExtension *bool `json:"isSystemExtension,omitempty" azure:"ro"`

	// READ-ONLY; Specifies a download location where content can be downloaded from.
	SourceBlob *URI `json:"sourceBlob,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if specified product supports multiple extensions.
	SupportMultipleExtensions *bool `json:"supportMultipleExtensions,omitempty" azure:"ro"`

	// READ-ONLY; Specifies operating system used by the product.
	VMOsType *OperatingSystem `json:"vmOsType,omitempty" azure:"ro"`

	// READ-ONLY; Indicates if virtual machine Scale Set is enabled in the specified product.
	VMScaleSetEnabled *bool `json:"vmScaleSetEnabled,omitempty" azure:"ro"`

	// READ-ONLY; Specifies product version.
	Version *string `json:"version,omitempty" azure:"ro"`
}

// VirtualMachineProductProperties - Product information.
type VirtualMachineProductProperties struct {
	// READ-ONLY; List of attached data disks.
	DataDiskImages []*DataDiskImage `json:"dataDiskImages,omitempty" azure:"ro"`

	// READ-ONLY; OS disk image used by product.
	OSDiskImage *OsDiskImage `json:"osDiskImage,omitempty" azure:"ro"`

	// READ-ONLY; Specifies product version.
	Version *string `json:"version,omitempty" azure:"ro"`
}
