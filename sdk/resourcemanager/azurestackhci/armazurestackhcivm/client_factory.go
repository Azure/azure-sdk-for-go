// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armazurestackhcivm

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	internal       *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID of the target subscription. The value must be an UUID.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID,
		internal:       internal,
	}, nil
}

// NewAttestationStatusesClient creates a new instance of AttestationStatusesClient.
func (c *ClientFactory) NewAttestationStatusesClient() *AttestationStatusesClient {
	return &AttestationStatusesClient{
		internal: c.internal,
	}
}

// NewGalleryImagesClient creates a new instance of GalleryImagesClient.
func (c *ClientFactory) NewGalleryImagesClient() *GalleryImagesClient {
	return &GalleryImagesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewGuestAgentsClient creates a new instance of GuestAgentsClient.
func (c *ClientFactory) NewGuestAgentsClient() *GuestAgentsClient {
	return &GuestAgentsClient{
		internal: c.internal,
	}
}

// NewHybridIdentityMetadataClient creates a new instance of HybridIdentityMetadataClient.
func (c *ClientFactory) NewHybridIdentityMetadataClient() *HybridIdentityMetadataClient {
	return &HybridIdentityMetadataClient{
		internal: c.internal,
	}
}

// NewLogicalNetworksClient creates a new instance of LogicalNetworksClient.
func (c *ClientFactory) NewLogicalNetworksClient() *LogicalNetworksClient {
	return &LogicalNetworksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewMarketplaceGalleryImagesClient creates a new instance of MarketplaceGalleryImagesClient.
func (c *ClientFactory) NewMarketplaceGalleryImagesClient() *MarketplaceGalleryImagesClient {
	return &MarketplaceGalleryImagesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkInterfacesClient creates a new instance of NetworkInterfacesClient.
func (c *ClientFactory) NewNetworkInterfacesClient() *NetworkInterfacesClient {
	return &NetworkInterfacesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNetworkSecurityGroupsClient creates a new instance of NetworkSecurityGroupsClient.
func (c *ClientFactory) NewNetworkSecurityGroupsClient() *NetworkSecurityGroupsClient {
	return &NetworkSecurityGroupsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewSecurityRulesClient creates a new instance of SecurityRulesClient.
func (c *ClientFactory) NewSecurityRulesClient() *SecurityRulesClient {
	return &SecurityRulesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewStorageContainersClient creates a new instance of StorageContainersClient.
func (c *ClientFactory) NewStorageContainersClient() *StorageContainersClient {
	return &StorageContainersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewVirtualHardDisksClient creates a new instance of VirtualHardDisksClient.
func (c *ClientFactory) NewVirtualHardDisksClient() *VirtualHardDisksClient {
	return &VirtualHardDisksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewVirtualMachineInstancesClient creates a new instance of VirtualMachineInstancesClient.
func (c *ClientFactory) NewVirtualMachineInstancesClient() *VirtualMachineInstancesClient {
	return &VirtualMachineInstancesClient{
		internal: c.internal,
	}
}
