//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armbatch

// AccountClientBeginCreateOptions contains the optional parameters for the AccountClient.BeginCreate method.
type AccountClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountClientBeginDeleteOptions contains the optional parameters for the AccountClient.BeginDelete method.
type AccountClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountClientGetDetectorOptions contains the optional parameters for the AccountClient.GetDetector method.
type AccountClientGetDetectorOptions struct {
	// placeholder for future optional parameters
}

// AccountClientGetKeysOptions contains the optional parameters for the AccountClient.GetKeys method.
type AccountClientGetKeysOptions struct {
	// placeholder for future optional parameters
}

// AccountClientGetOptions contains the optional parameters for the AccountClient.Get method.
type AccountClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccountClientListByResourceGroupOptions contains the optional parameters for the AccountClient.NewListByResourceGroupPager
// method.
type AccountClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AccountClientListDetectorsOptions contains the optional parameters for the AccountClient.NewListDetectorsPager method.
type AccountClientListDetectorsOptions struct {
	// placeholder for future optional parameters
}

// AccountClientListOptions contains the optional parameters for the AccountClient.NewListPager method.
type AccountClientListOptions struct {
	// placeholder for future optional parameters
}

// AccountClientListOutboundNetworkDependenciesEndpointsOptions contains the optional parameters for the AccountClient.NewListOutboundNetworkDependenciesEndpointsPager
// method.
type AccountClientListOutboundNetworkDependenciesEndpointsOptions struct {
	// placeholder for future optional parameters
}

// AccountClientRegenerateKeyOptions contains the optional parameters for the AccountClient.RegenerateKey method.
type AccountClientRegenerateKeyOptions struct {
	// placeholder for future optional parameters
}

// AccountClientSynchronizeAutoStorageKeysOptions contains the optional parameters for the AccountClient.SynchronizeAutoStorageKeys
// method.
type AccountClientSynchronizeAutoStorageKeysOptions struct {
	// placeholder for future optional parameters
}

// AccountClientUpdateOptions contains the optional parameters for the AccountClient.Update method.
type AccountClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ApplicationClientCreateOptions contains the optional parameters for the ApplicationClient.Create method.
type ApplicationClientCreateOptions struct {
	// The parameters for the request.
	Parameters *Application
}

// ApplicationClientDeleteOptions contains the optional parameters for the ApplicationClient.Delete method.
type ApplicationClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ApplicationClientGetOptions contains the optional parameters for the ApplicationClient.Get method.
type ApplicationClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplicationClientListOptions contains the optional parameters for the ApplicationClient.NewListPager method.
type ApplicationClientListOptions struct {
	// The maximum number of items to return in the response.
	Maxresults *int32
}

// ApplicationClientUpdateOptions contains the optional parameters for the ApplicationClient.Update method.
type ApplicationClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ApplicationPackageClientActivateOptions contains the optional parameters for the ApplicationPackageClient.Activate method.
type ApplicationPackageClientActivateOptions struct {
	// placeholder for future optional parameters
}

// ApplicationPackageClientCreateOptions contains the optional parameters for the ApplicationPackageClient.Create method.
type ApplicationPackageClientCreateOptions struct {
	// The parameters for the request.
	Parameters *ApplicationPackage
}

// ApplicationPackageClientDeleteOptions contains the optional parameters for the ApplicationPackageClient.Delete method.
type ApplicationPackageClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ApplicationPackageClientGetOptions contains the optional parameters for the ApplicationPackageClient.Get method.
type ApplicationPackageClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplicationPackageClientListOptions contains the optional parameters for the ApplicationPackageClient.NewListPager method.
type ApplicationPackageClientListOptions struct {
	// The maximum number of items to return in the response.
	Maxresults *int32
}

// CertificateClientBeginDeleteOptions contains the optional parameters for the CertificateClient.BeginDelete method.
type CertificateClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CertificateClientCancelDeletionOptions contains the optional parameters for the CertificateClient.CancelDeletion method.
type CertificateClientCancelDeletionOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientCreateOptions contains the optional parameters for the CertificateClient.Create method.
type CertificateClientCreateOptions struct {
	// The entity state (ETag) version of the certificate to update. A value of "*" can be used to apply the operation only if
	// the certificate already exists. If omitted, this operation will always be
	// applied.
	IfMatch *string

	// Set to '*' to allow a new certificate to be created, but to prevent updating an existing certificate. Other values will
	// be ignored.
	IfNoneMatch *string
}

// CertificateClientGetOptions contains the optional parameters for the CertificateClient.Get method.
type CertificateClientGetOptions struct {
	// placeholder for future optional parameters
}

// CertificateClientListByBatchAccountOptions contains the optional parameters for the CertificateClient.NewListByBatchAccountPager
// method.
type CertificateClientListByBatchAccountOptions struct {
	// OData filter expression. Valid properties for filtering are "properties/provisioningState", "properties/provisioningStateTransitionTime",
	// "name".
	Filter *string

	// The maximum number of items to return in the response.
	Maxresults *int32

	// Comma separated list of properties that should be returned. e.g. "properties/provisioningState". Only top level properties
	// under properties/ are valid for selection.
	Select *string
}

// CertificateClientUpdateOptions contains the optional parameters for the CertificateClient.Update method.
type CertificateClientUpdateOptions struct {
	// The entity state (ETag) version of the certificate to update. This value can be omitted or set to "*" to apply the operation
	// unconditionally.
	IfMatch *string
}

// LocationClientCheckNameAvailabilityOptions contains the optional parameters for the LocationClient.CheckNameAvailability
// method.
type LocationClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// LocationClientGetQuotasOptions contains the optional parameters for the LocationClient.GetQuotas method.
type LocationClientGetQuotasOptions struct {
	// placeholder for future optional parameters
}

// LocationClientListSupportedCloudServiceSKUsOptions contains the optional parameters for the LocationClient.NewListSupportedCloudServiceSKUsPager
// method.
type LocationClientListSupportedCloudServiceSKUsOptions struct {
	// OData filter expression. Valid properties for filtering are "familyName".
	Filter *string

	// The maximum number of items to return in the response.
	Maxresults *int32
}

// LocationClientListSupportedVirtualMachineSKUsOptions contains the optional parameters for the LocationClient.NewListSupportedVirtualMachineSKUsPager
// method.
type LocationClientListSupportedVirtualMachineSKUsOptions struct {
	// OData filter expression. Valid properties for filtering are "familyName".
	Filter *string

	// The maximum number of items to return in the response.
	Maxresults *int32
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PoolClientBeginDeleteOptions contains the optional parameters for the PoolClient.BeginDelete method.
type PoolClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PoolClientCreateOptions contains the optional parameters for the PoolClient.Create method.
type PoolClientCreateOptions struct {
	// The entity state (ETag) version of the pool to update. A value of "*" can be used to apply the operation only if the pool
	// already exists. If omitted, this operation will always be applied.
	IfMatch *string

	// Set to '*' to allow a new pool to be created, but to prevent updating an existing pool. Other values will be ignored.
	IfNoneMatch *string
}

// PoolClientDisableAutoScaleOptions contains the optional parameters for the PoolClient.DisableAutoScale method.
type PoolClientDisableAutoScaleOptions struct {
	// placeholder for future optional parameters
}

// PoolClientGetOptions contains the optional parameters for the PoolClient.Get method.
type PoolClientGetOptions struct {
	// placeholder for future optional parameters
}

// PoolClientListByBatchAccountOptions contains the optional parameters for the PoolClient.NewListByBatchAccountPager method.
type PoolClientListByBatchAccountOptions struct {
	// OData filter expression. Valid properties for filtering are:
	// name properties/allocationState properties/allocationStateTransitionTime properties/creationTime properties/provisioningState
	// properties/provisioningStateTransitionTime properties/lastModified
	// properties/vmSize properties/interNodeCommunication properties/scaleSettings/autoScale properties/scaleSettings/fixedScale
	Filter *string

	// The maximum number of items to return in the response.
	Maxresults *int32

	// Comma separated list of properties that should be returned. e.g. "properties/provisioningState". Only top level properties
	// under properties/ are valid for selection.
	Select *string
}

// PoolClientStopResizeOptions contains the optional parameters for the PoolClient.StopResize method.
type PoolClientStopResizeOptions struct {
	// placeholder for future optional parameters
}

// PoolClientUpdateOptions contains the optional parameters for the PoolClient.Update method.
type PoolClientUpdateOptions struct {
	// The entity state (ETag) version of the pool to update. This value can be omitted or set to "*" to apply the operation unconditionally.
	IfMatch *string
}

// PrivateEndpointConnectionClientBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnectionClient.BeginDelete
// method.
type PrivateEndpointConnectionClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionClientBeginUpdateOptions contains the optional parameters for the PrivateEndpointConnectionClient.BeginUpdate
// method.
type PrivateEndpointConnectionClientBeginUpdateOptions struct {
	// The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply
	// the operation unconditionally.
	IfMatch *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionClientGetOptions contains the optional parameters for the PrivateEndpointConnectionClient.Get
// method.
type PrivateEndpointConnectionClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionClientListByBatchAccountOptions contains the optional parameters for the PrivateEndpointConnectionClient.NewListByBatchAccountPager
// method.
type PrivateEndpointConnectionClientListByBatchAccountOptions struct {
	// The maximum number of items to return in the response.
	Maxresults *int32
}

// PrivateLinkResourceClientGetOptions contains the optional parameters for the PrivateLinkResourceClient.Get method.
type PrivateLinkResourceClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourceClientListByBatchAccountOptions contains the optional parameters for the PrivateLinkResourceClient.NewListByBatchAccountPager
// method.
type PrivateLinkResourceClientListByBatchAccountOptions struct {
	// The maximum number of items to return in the response.
	Maxresults *int32
}
