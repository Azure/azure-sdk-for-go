//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armbatch

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// AccountClientCreatePollerResponse contains the response from method AccountClient.Create.
type AccountClientCreatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AccountClientCreatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AccountClientCreatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AccountClientCreateResponse, error) {
	respType := AccountClientCreateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.Account)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a AccountClientCreatePollerResponse from the provided client and resume token.
func (l *AccountClientCreatePollerResponse) Resume(ctx context.Context, client *AccountClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AccountClient.Create", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AccountClientCreatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// AccountClientCreateResponse contains the response from method AccountClient.Create.
type AccountClientCreateResponse struct {
	AccountClientCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientCreateResult contains the result from method AccountClient.Create.
type AccountClientCreateResult struct {
	Account
}

// AccountClientDeletePollerResponse contains the response from method AccountClient.Delete.
type AccountClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *AccountClientDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l AccountClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (AccountClientDeleteResponse, error) {
	respType := AccountClientDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a AccountClientDeletePollerResponse from the provided client and resume token.
func (l *AccountClientDeletePollerResponse) Resume(ctx context.Context, client *AccountClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("AccountClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &AccountClientDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// AccountClientDeleteResponse contains the response from method AccountClient.Delete.
type AccountClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientGetKeysResponse contains the response from method AccountClient.GetKeys.
type AccountClientGetKeysResponse struct {
	AccountClientGetKeysResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientGetKeysResult contains the result from method AccountClient.GetKeys.
type AccountClientGetKeysResult struct {
	AccountKeys
}

// AccountClientGetResponse contains the response from method AccountClient.Get.
type AccountClientGetResponse struct {
	AccountClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientGetResult contains the result from method AccountClient.Get.
type AccountClientGetResult struct {
	Account
}

// AccountClientListByResourceGroupResponse contains the response from method AccountClient.ListByResourceGroup.
type AccountClientListByResourceGroupResponse struct {
	AccountClientListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientListByResourceGroupResult contains the result from method AccountClient.ListByResourceGroup.
type AccountClientListByResourceGroupResult struct {
	AccountListResult
}

// AccountClientListOutboundNetworkDependenciesEndpointsResponse contains the response from method AccountClient.ListOutboundNetworkDependenciesEndpoints.
type AccountClientListOutboundNetworkDependenciesEndpointsResponse struct {
	AccountClientListOutboundNetworkDependenciesEndpointsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientListOutboundNetworkDependenciesEndpointsResult contains the result from method AccountClient.ListOutboundNetworkDependenciesEndpoints.
type AccountClientListOutboundNetworkDependenciesEndpointsResult struct {
	OutboundEnvironmentEndpointCollection
}

// AccountClientListResponse contains the response from method AccountClient.List.
type AccountClientListResponse struct {
	AccountClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientListResult contains the result from method AccountClient.List.
type AccountClientListResult struct {
	AccountListResult
}

// AccountClientRegenerateKeyResponse contains the response from method AccountClient.RegenerateKey.
type AccountClientRegenerateKeyResponse struct {
	AccountClientRegenerateKeyResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientRegenerateKeyResult contains the result from method AccountClient.RegenerateKey.
type AccountClientRegenerateKeyResult struct {
	AccountKeys
}

// AccountClientSynchronizeAutoStorageKeysResponse contains the response from method AccountClient.SynchronizeAutoStorageKeys.
type AccountClientSynchronizeAutoStorageKeysResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientUpdateResponse contains the response from method AccountClient.Update.
type AccountClientUpdateResponse struct {
	AccountClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccountClientUpdateResult contains the result from method AccountClient.Update.
type AccountClientUpdateResult struct {
	Account
}

// ApplicationClientCreateResponse contains the response from method ApplicationClient.Create.
type ApplicationClientCreateResponse struct {
	ApplicationClientCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationClientCreateResult contains the result from method ApplicationClient.Create.
type ApplicationClientCreateResult struct {
	Application
}

// ApplicationClientDeleteResponse contains the response from method ApplicationClient.Delete.
type ApplicationClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationClientGetResponse contains the response from method ApplicationClient.Get.
type ApplicationClientGetResponse struct {
	ApplicationClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationClientGetResult contains the result from method ApplicationClient.Get.
type ApplicationClientGetResult struct {
	Application
}

// ApplicationClientListResponse contains the response from method ApplicationClient.List.
type ApplicationClientListResponse struct {
	ApplicationClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationClientListResult contains the result from method ApplicationClient.List.
type ApplicationClientListResult struct {
	ListApplicationsResult
}

// ApplicationClientUpdateResponse contains the response from method ApplicationClient.Update.
type ApplicationClientUpdateResponse struct {
	ApplicationClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationClientUpdateResult contains the result from method ApplicationClient.Update.
type ApplicationClientUpdateResult struct {
	Application
}

// ApplicationPackageClientActivateResponse contains the response from method ApplicationPackageClient.Activate.
type ApplicationPackageClientActivateResponse struct {
	ApplicationPackageClientActivateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationPackageClientActivateResult contains the result from method ApplicationPackageClient.Activate.
type ApplicationPackageClientActivateResult struct {
	ApplicationPackage
}

// ApplicationPackageClientCreateResponse contains the response from method ApplicationPackageClient.Create.
type ApplicationPackageClientCreateResponse struct {
	ApplicationPackageClientCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationPackageClientCreateResult contains the result from method ApplicationPackageClient.Create.
type ApplicationPackageClientCreateResult struct {
	ApplicationPackage
}

// ApplicationPackageClientDeleteResponse contains the response from method ApplicationPackageClient.Delete.
type ApplicationPackageClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationPackageClientGetResponse contains the response from method ApplicationPackageClient.Get.
type ApplicationPackageClientGetResponse struct {
	ApplicationPackageClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationPackageClientGetResult contains the result from method ApplicationPackageClient.Get.
type ApplicationPackageClientGetResult struct {
	ApplicationPackage
}

// ApplicationPackageClientListResponse contains the response from method ApplicationPackageClient.List.
type ApplicationPackageClientListResponse struct {
	ApplicationPackageClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationPackageClientListResult contains the result from method ApplicationPackageClient.List.
type ApplicationPackageClientListResult struct {
	ListApplicationPackagesResult
}

// CertificateClientCancelDeletionResponse contains the response from method CertificateClient.CancelDeletion.
type CertificateClientCancelDeletionResponse struct {
	CertificateClientCancelDeletionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateClientCancelDeletionResult contains the result from method CertificateClient.CancelDeletion.
type CertificateClientCancelDeletionResult struct {
	Certificate
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CertificateClientCreateResponse contains the response from method CertificateClient.Create.
type CertificateClientCreateResponse struct {
	CertificateClientCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateClientCreateResult contains the result from method CertificateClient.Create.
type CertificateClientCreateResult struct {
	Certificate
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CertificateClientDeletePollerResponse contains the response from method CertificateClient.Delete.
type CertificateClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *CertificateClientDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l CertificateClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (CertificateClientDeleteResponse, error) {
	respType := CertificateClientDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a CertificateClientDeletePollerResponse from the provided client and resume token.
func (l *CertificateClientDeletePollerResponse) Resume(ctx context.Context, client *CertificateClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("CertificateClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &CertificateClientDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// CertificateClientDeleteResponse contains the response from method CertificateClient.Delete.
type CertificateClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateClientGetResponse contains the response from method CertificateClient.Get.
type CertificateClientGetResponse struct {
	CertificateClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateClientGetResult contains the result from method CertificateClient.Get.
type CertificateClientGetResult struct {
	Certificate
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// CertificateClientListByBatchAccountResponse contains the response from method CertificateClient.ListByBatchAccount.
type CertificateClientListByBatchAccountResponse struct {
	CertificateClientListByBatchAccountResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateClientListByBatchAccountResult contains the result from method CertificateClient.ListByBatchAccount.
type CertificateClientListByBatchAccountResult struct {
	ListCertificatesResult
}

// CertificateClientUpdateResponse contains the response from method CertificateClient.Update.
type CertificateClientUpdateResponse struct {
	CertificateClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificateClientUpdateResult contains the result from method CertificateClient.Update.
type CertificateClientUpdateResult struct {
	Certificate
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// LocationClientCheckNameAvailabilityResponse contains the response from method LocationClient.CheckNameAvailability.
type LocationClientCheckNameAvailabilityResponse struct {
	LocationClientCheckNameAvailabilityResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LocationClientCheckNameAvailabilityResult contains the result from method LocationClient.CheckNameAvailability.
type LocationClientCheckNameAvailabilityResult struct {
	CheckNameAvailabilityResult
}

// LocationClientGetQuotasResponse contains the response from method LocationClient.GetQuotas.
type LocationClientGetQuotasResponse struct {
	LocationClientGetQuotasResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LocationClientGetQuotasResult contains the result from method LocationClient.GetQuotas.
type LocationClientGetQuotasResult struct {
	LocationQuota
}

// LocationClientListSupportedCloudServiceSKUsResponse contains the response from method LocationClient.ListSupportedCloudServiceSKUs.
type LocationClientListSupportedCloudServiceSKUsResponse struct {
	LocationClientListSupportedCloudServiceSKUsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LocationClientListSupportedCloudServiceSKUsResult contains the result from method LocationClient.ListSupportedCloudServiceSKUs.
type LocationClientListSupportedCloudServiceSKUsResult struct {
	SupportedSKUsResult
}

// LocationClientListSupportedVirtualMachineSKUsResponse contains the response from method LocationClient.ListSupportedVirtualMachineSKUs.
type LocationClientListSupportedVirtualMachineSKUsResponse struct {
	LocationClientListSupportedVirtualMachineSKUsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LocationClientListSupportedVirtualMachineSKUsResult contains the result from method LocationClient.ListSupportedVirtualMachineSKUs.
type LocationClientListSupportedVirtualMachineSKUsResult struct {
	SupportedSKUsResult
}

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationsClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsClientListResult contains the result from method OperationsClient.List.
type OperationsClientListResult struct {
	OperationListResult
}

// PoolClientCreateResponse contains the response from method PoolClient.Create.
type PoolClientCreateResponse struct {
	PoolClientCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PoolClientCreateResult contains the result from method PoolClient.Create.
type PoolClientCreateResult struct {
	Pool
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PoolClientDeletePollerResponse contains the response from method PoolClient.Delete.
type PoolClientDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PoolClientDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PoolClientDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PoolClientDeleteResponse, error) {
	respType := PoolClientDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PoolClientDeletePollerResponse from the provided client and resume token.
func (l *PoolClientDeletePollerResponse) Resume(ctx context.Context, client *PoolClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PoolClient.Delete", token, client.pl)
	if err != nil {
		return err
	}
	poller := &PoolClientDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PoolClientDeleteResponse contains the response from method PoolClient.Delete.
type PoolClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PoolClientDisableAutoScaleResponse contains the response from method PoolClient.DisableAutoScale.
type PoolClientDisableAutoScaleResponse struct {
	PoolClientDisableAutoScaleResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PoolClientDisableAutoScaleResult contains the result from method PoolClient.DisableAutoScale.
type PoolClientDisableAutoScaleResult struct {
	Pool
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PoolClientGetResponse contains the response from method PoolClient.Get.
type PoolClientGetResponse struct {
	PoolClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PoolClientGetResult contains the result from method PoolClient.Get.
type PoolClientGetResult struct {
	Pool
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PoolClientListByBatchAccountResponse contains the response from method PoolClient.ListByBatchAccount.
type PoolClientListByBatchAccountResponse struct {
	PoolClientListByBatchAccountResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PoolClientListByBatchAccountResult contains the result from method PoolClient.ListByBatchAccount.
type PoolClientListByBatchAccountResult struct {
	ListPoolsResult
}

// PoolClientStopResizeResponse contains the response from method PoolClient.StopResize.
type PoolClientStopResizeResponse struct {
	PoolClientStopResizeResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PoolClientStopResizeResult contains the result from method PoolClient.StopResize.
type PoolClientStopResizeResult struct {
	Pool
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PoolClientUpdateResponse contains the response from method PoolClient.Update.
type PoolClientUpdateResponse struct {
	PoolClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PoolClientUpdateResult contains the result from method PoolClient.Update.
type PoolClientUpdateResult struct {
	Pool
	// ETag contains the information returned from the ETag header response.
	ETag *string
}

// PrivateEndpointConnectionClientGetResponse contains the response from method PrivateEndpointConnectionClient.Get.
type PrivateEndpointConnectionClientGetResponse struct {
	PrivateEndpointConnectionClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionClientGetResult contains the result from method PrivateEndpointConnectionClient.Get.
type PrivateEndpointConnectionClientGetResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionClientListByBatchAccountResponse contains the response from method PrivateEndpointConnectionClient.ListByBatchAccount.
type PrivateEndpointConnectionClientListByBatchAccountResponse struct {
	PrivateEndpointConnectionClientListByBatchAccountResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionClientListByBatchAccountResult contains the result from method PrivateEndpointConnectionClient.ListByBatchAccount.
type PrivateEndpointConnectionClientListByBatchAccountResult struct {
	ListPrivateEndpointConnectionsResult
}

// PrivateEndpointConnectionClientUpdatePollerResponse contains the response from method PrivateEndpointConnectionClient.Update.
type PrivateEndpointConnectionClientUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionClientUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PrivateEndpointConnectionClientUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionClientUpdateResponse, error) {
	respType := PrivateEndpointConnectionClientUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PrivateEndpointConnection)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionClientUpdatePollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionClientUpdatePollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionClient.Update", token, client.pl)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionClientUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PrivateEndpointConnectionClientUpdateResponse contains the response from method PrivateEndpointConnectionClient.Update.
type PrivateEndpointConnectionClientUpdateResponse struct {
	PrivateEndpointConnectionClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionClientUpdateResult contains the result from method PrivateEndpointConnectionClient.Update.
type PrivateEndpointConnectionClientUpdateResult struct {
	PrivateEndpointConnection
}

// PrivateLinkResourceClientGetResponse contains the response from method PrivateLinkResourceClient.Get.
type PrivateLinkResourceClientGetResponse struct {
	PrivateLinkResourceClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourceClientGetResult contains the result from method PrivateLinkResourceClient.Get.
type PrivateLinkResourceClientGetResult struct {
	PrivateLinkResource
}

// PrivateLinkResourceClientListByBatchAccountResponse contains the response from method PrivateLinkResourceClient.ListByBatchAccount.
type PrivateLinkResourceClientListByBatchAccountResponse struct {
	PrivateLinkResourceClientListByBatchAccountResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourceClientListByBatchAccountResult contains the result from method PrivateLinkResourceClient.ListByBatchAccount.
type PrivateLinkResourceClientListByBatchAccountResult struct {
	ListPrivateLinkResourcesResult
}
