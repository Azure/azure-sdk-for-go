//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armbilling

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	credential     azcore.TokenCredential
	options        *arm.ClientOptions
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID that uniquely identifies an Azure subscription.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	_, err := arm.NewClient(moduleName+".ClientFactory", moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID, credential: credential,
		options: options.Clone(),
	}, nil
}

func (c *ClientFactory) NewAccountsClient() *AccountsClient {
	subClient, _ := NewAccountsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewAddressClient() *AddressClient {
	subClient, _ := NewAddressClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewAvailableBalancesClient() *AvailableBalancesClient {
	subClient, _ := NewAvailableBalancesClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewInstructionsClient() *InstructionsClient {
	subClient, _ := NewInstructionsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewProfilesClient() *ProfilesClient {
	subClient, _ := NewProfilesClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewCustomersClient() *CustomersClient {
	subClient, _ := NewCustomersClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewInvoiceSectionsClient() *InvoiceSectionsClient {
	subClient, _ := NewInvoiceSectionsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPermissionsClient() *PermissionsClient {
	subClient, _ := NewPermissionsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewSubscriptionsClient() *SubscriptionsClient {
	subClient, _ := NewSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewProductsClient() *ProductsClient {
	subClient, _ := NewProductsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewInvoicesClient() *InvoicesClient {
	subClient, _ := NewInvoicesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewTransactionsClient() *TransactionsClient {
	subClient, _ := NewTransactionsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPoliciesClient() *PoliciesClient {
	subClient, _ := NewPoliciesClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPropertyClient() *PropertyClient {
	subClient, _ := NewPropertyClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewRoleDefinitionsClient() *RoleDefinitionsClient {
	subClient, _ := NewRoleDefinitionsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewRoleAssignmentsClient() *RoleAssignmentsClient {
	subClient, _ := NewRoleAssignmentsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewAgreementsClient() *AgreementsClient {
	subClient, _ := NewAgreementsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewReservationsClient() *ReservationsClient {
	subClient, _ := NewReservationsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewEnrollmentAccountsClient() *EnrollmentAccountsClient {
	subClient, _ := NewEnrollmentAccountsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPeriodsClient() *PeriodsClient {
	subClient, _ := NewPeriodsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	subClient, _ := NewOperationsClient(c.credential, c.options)
	return subClient
}
