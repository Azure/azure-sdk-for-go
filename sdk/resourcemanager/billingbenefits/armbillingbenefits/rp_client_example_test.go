//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armbillingbenefits_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/billingbenefits/armbillingbenefits"
)

// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/billingbenefits/resource-manager/Microsoft.BillingBenefits/stable/2022-11-01/examples/SavingsPlanValidatePurchase.json
func ExampleRPClient_ValidatePurchase() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client, err := armbillingbenefits.NewRPClient(cred, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := client.ValidatePurchase(ctx, armbillingbenefits.SavingsPlanPurchaseValidateRequest{
		Benefits: []*armbillingbenefits.SavingsPlanOrderAliasModel{
			{
				Properties: &armbillingbenefits.SavingsPlanOrderAliasProperties{
					AppliedScopeProperties: &armbillingbenefits.AppliedScopeProperties{
						ResourceGroupID: to.Ptr("/subscriptions/10000000-0000-0000-0000-000000000000/resourceGroups/testrg"),
					},
					AppliedScopeType: to.Ptr(armbillingbenefits.AppliedScopeTypeSingle),
					BillingScopeID:   to.Ptr("/subscriptions/10000000-0000-0000-0000-000000000000"),
					Commitment: &armbillingbenefits.Commitment{
						Amount:       to.Ptr[float64](15.23),
						CurrencyCode: to.Ptr("USD"),
						Grain:        to.Ptr(armbillingbenefits.CommitmentGrainHourly),
					},
					DisplayName: to.Ptr("ComputeSavingsPlan_2021-07-01"),
					Term:        to.Ptr(armbillingbenefits.TermP1Y),
				},
				SKU: &armbillingbenefits.SKU{
					Name: to.Ptr("Compute_Savings_Plan"),
				},
			},
			{
				Properties: &armbillingbenefits.SavingsPlanOrderAliasProperties{
					AppliedScopeProperties: &armbillingbenefits.AppliedScopeProperties{
						ResourceGroupID: to.Ptr("/subscriptions/10000000-0000-0000-0000-000000000000/resourceGroups/RG"),
					},
					AppliedScopeType: to.Ptr(armbillingbenefits.AppliedScopeTypeSingle),
					BillingScopeID:   to.Ptr("/subscriptions/10000000-0000-0000-0000-000000000000"),
					Commitment: &armbillingbenefits.Commitment{
						Amount:       to.Ptr[float64](20),
						CurrencyCode: to.Ptr("USD"),
						Grain:        to.Ptr(armbillingbenefits.CommitmentGrainHourly),
					},
					DisplayName: to.Ptr("ComputeSavingsPlan_2021-07-01"),
					Term:        to.Ptr(armbillingbenefits.TermP1Y),
				},
				SKU: &armbillingbenefits.SKU{
					Name: to.Ptr("Compute_Savings_Plan"),
				},
			}},
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// TODO: use response item
	_ = res
}
