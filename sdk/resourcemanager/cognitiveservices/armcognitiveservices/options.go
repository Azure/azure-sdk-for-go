// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcognitiveservices

// AccountCapabilityHostsClientBeginCreateOrUpdateOptions contains the optional parameters for the AccountCapabilityHostsClient.BeginCreateOrUpdate
// method.
type AccountCapabilityHostsClientBeginCreateOrUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// AccountCapabilityHostsClientBeginDeleteOptions contains the optional parameters for the AccountCapabilityHostsClient.BeginDelete
// method.
type AccountCapabilityHostsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// AccountCapabilityHostsClientGetOptions contains the optional parameters for the AccountCapabilityHostsClient.Get method.
type AccountCapabilityHostsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccountConnectionClientCreateOptions contains the optional parameters for the AccountConnectionClient.Create method.
type AccountConnectionClientCreateOptions struct {
	// The object for creating or updating a new account connection
	Body *ConnectionPropertiesV2BasicResource
}

// AccountConnectionClientDeleteOptions contains the optional parameters for the AccountConnectionClient.Delete method.
type AccountConnectionClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// AccountConnectionClientGetOptions contains the optional parameters for the AccountConnectionClient.Get method.
type AccountConnectionClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccountConnectionClientListOptions contains the optional parameters for the AccountConnectionClient.NewListPager method.
type AccountConnectionClientListOptions struct {
	// Category of the connection.
	Category *string

	// query parameter that indicates if get connection call should return both connections and datastores
	IncludeAll *bool

	// Target of the connection.
	Target *string
}

// AccountConnectionClientUpdateOptions contains the optional parameters for the AccountConnectionClient.Update method.
type AccountConnectionClientUpdateOptions struct {
	// Parameters for account connection update.
	Body *ConnectionUpdateContent
}

// AccountsClientBeginCreateOptions contains the optional parameters for the AccountsClient.BeginCreate method.
type AccountsClientBeginCreateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// AccountsClientBeginDeleteOptions contains the optional parameters for the AccountsClient.BeginDelete method.
type AccountsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// AccountsClientBeginUpdateOptions contains the optional parameters for the AccountsClient.BeginUpdate method.
type AccountsClientBeginUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// AccountsClientGetOptions contains the optional parameters for the AccountsClient.Get method.
type AccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListByResourceGroupOptions contains the optional parameters for the AccountsClient.NewListByResourceGroupPager
// method.
type AccountsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListKeysOptions contains the optional parameters for the AccountsClient.ListKeys method.
type AccountsClientListKeysOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListModelsOptions contains the optional parameters for the AccountsClient.NewListModelsPager method.
type AccountsClientListModelsOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListOptions contains the optional parameters for the AccountsClient.NewListPager method.
type AccountsClientListOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListSKUsOptions contains the optional parameters for the AccountsClient.ListSKUs method.
type AccountsClientListSKUsOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListUsagesOptions contains the optional parameters for the AccountsClient.ListUsages method.
type AccountsClientListUsagesOptions struct {
	// An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of
	// the metric, can have an or of multiple names).
	Filter *string
}

// AccountsClientRegenerateKeyOptions contains the optional parameters for the AccountsClient.RegenerateKey method.
type AccountsClientRegenerateKeyOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientBeginCreateOrUpdateAssociationOptions contains the optional parameters for the CommitmentPlansClient.BeginCreateOrUpdateAssociation
// method.
type CommitmentPlansClientBeginCreateOrUpdateAssociationOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// CommitmentPlansClientBeginCreateOrUpdatePlanOptions contains the optional parameters for the CommitmentPlansClient.BeginCreateOrUpdatePlan
// method.
type CommitmentPlansClientBeginCreateOrUpdatePlanOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// CommitmentPlansClientBeginDeleteAssociationOptions contains the optional parameters for the CommitmentPlansClient.BeginDeleteAssociation
// method.
type CommitmentPlansClientBeginDeleteAssociationOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// CommitmentPlansClientBeginDeleteOptions contains the optional parameters for the CommitmentPlansClient.BeginDelete method.
type CommitmentPlansClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// CommitmentPlansClientBeginDeletePlanOptions contains the optional parameters for the CommitmentPlansClient.BeginDeletePlan
// method.
type CommitmentPlansClientBeginDeletePlanOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// CommitmentPlansClientBeginUpdatePlanOptions contains the optional parameters for the CommitmentPlansClient.BeginUpdatePlan
// method.
type CommitmentPlansClientBeginUpdatePlanOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// CommitmentPlansClientCreateOrUpdateOptions contains the optional parameters for the CommitmentPlansClient.CreateOrUpdate
// method.
type CommitmentPlansClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientGetAssociationOptions contains the optional parameters for the CommitmentPlansClient.GetAssociation
// method.
type CommitmentPlansClientGetAssociationOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientGetOptions contains the optional parameters for the CommitmentPlansClient.Get method.
type CommitmentPlansClientGetOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientGetPlanOptions contains the optional parameters for the CommitmentPlansClient.GetPlan method.
type CommitmentPlansClientGetPlanOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientListAssociationsOptions contains the optional parameters for the CommitmentPlansClient.NewListAssociationsPager
// method.
type CommitmentPlansClientListAssociationsOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientListOptions contains the optional parameters for the CommitmentPlansClient.NewListPager method.
type CommitmentPlansClientListOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientListPlansByResourceGroupOptions contains the optional parameters for the CommitmentPlansClient.NewListPlansByResourceGroupPager
// method.
type CommitmentPlansClientListPlansByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// CommitmentPlansClientListPlansBySubscriptionOptions contains the optional parameters for the CommitmentPlansClient.NewListPlansBySubscriptionPager
// method.
type CommitmentPlansClientListPlansBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// CommitmentTiersClientListOptions contains the optional parameters for the CommitmentTiersClient.NewListPager method.
type CommitmentTiersClientListOptions struct {
	// placeholder for future optional parameters
}

// DefenderForAISettingsClientCreateOrUpdateOptions contains the optional parameters for the DefenderForAISettingsClient.CreateOrUpdate
// method.
type DefenderForAISettingsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DefenderForAISettingsClientGetOptions contains the optional parameters for the DefenderForAISettingsClient.Get method.
type DefenderForAISettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DefenderForAISettingsClientListOptions contains the optional parameters for the DefenderForAISettingsClient.NewListPager
// method.
type DefenderForAISettingsClientListOptions struct {
	// placeholder for future optional parameters
}

// DefenderForAISettingsClientUpdateOptions contains the optional parameters for the DefenderForAISettingsClient.Update method.
type DefenderForAISettingsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DeletedAccountsClientBeginPurgeOptions contains the optional parameters for the DeletedAccountsClient.BeginPurge method.
type DeletedAccountsClientBeginPurgeOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// DeletedAccountsClientGetOptions contains the optional parameters for the DeletedAccountsClient.Get method.
type DeletedAccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DeletedAccountsClientListOptions contains the optional parameters for the DeletedAccountsClient.NewListPager method.
type DeletedAccountsClientListOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientBeginCreateOrUpdateOptions contains the optional parameters for the DeploymentsClient.BeginCreateOrUpdate
// method.
type DeploymentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginDeleteOptions contains the optional parameters for the DeploymentsClient.BeginDelete method.
type DeploymentsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginUpdateOptions contains the optional parameters for the DeploymentsClient.BeginUpdate method.
type DeploymentsClientBeginUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// DeploymentsClientGetOptions contains the optional parameters for the DeploymentsClient.Get method.
type DeploymentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientListOptions contains the optional parameters for the DeploymentsClient.NewListPager method.
type DeploymentsClientListOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientListSKUsOptions contains the optional parameters for the DeploymentsClient.NewListSKUsPager method.
type DeploymentsClientListSKUsOptions struct {
	// placeholder for future optional parameters
}

// EncryptionScopesClientBeginDeleteOptions contains the optional parameters for the EncryptionScopesClient.BeginDelete method.
type EncryptionScopesClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// EncryptionScopesClientCreateOrUpdateOptions contains the optional parameters for the EncryptionScopesClient.CreateOrUpdate
// method.
type EncryptionScopesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// EncryptionScopesClientGetOptions contains the optional parameters for the EncryptionScopesClient.Get method.
type EncryptionScopesClientGetOptions struct {
	// placeholder for future optional parameters
}

// EncryptionScopesClientListOptions contains the optional parameters for the EncryptionScopesClient.NewListPager method.
type EncryptionScopesClientListOptions struct {
	// placeholder for future optional parameters
}

// LocationBasedModelCapacitiesClientListOptions contains the optional parameters for the LocationBasedModelCapacitiesClient.NewListPager
// method.
type LocationBasedModelCapacitiesClientListOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientCalculateModelCapacityOptions contains the optional parameters for the ManagementClient.CalculateModelCapacity
// method.
type ManagementClientCalculateModelCapacityOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientCheckDomainAvailabilityOptions contains the optional parameters for the ManagementClient.CheckDomainAvailability
// method.
type ManagementClientCheckDomainAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientCheckSKUAvailabilityOptions contains the optional parameters for the ManagementClient.CheckSKUAvailability
// method.
type ManagementClientCheckSKUAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ModelCapacitiesClientListOptions contains the optional parameters for the ModelCapacitiesClient.NewListPager method.
type ModelCapacitiesClientListOptions struct {
	// placeholder for future optional parameters
}

// ModelsClientListOptions contains the optional parameters for the ModelsClient.NewListPager method.
type ModelsClientListOptions struct {
	// placeholder for future optional parameters
}

// NetworkSecurityPerimeterConfigurationsClientBeginReconcileOptions contains the optional parameters for the NetworkSecurityPerimeterConfigurationsClient.BeginReconcile
// method.
type NetworkSecurityPerimeterConfigurationsClientBeginReconcileOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// NetworkSecurityPerimeterConfigurationsClientGetOptions contains the optional parameters for the NetworkSecurityPerimeterConfigurationsClient.Get
// method.
type NetworkSecurityPerimeterConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// NetworkSecurityPerimeterConfigurationsClientListOptions contains the optional parameters for the NetworkSecurityPerimeterConfigurationsClient.NewListPager
// method.
type NetworkSecurityPerimeterConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginCreateOrUpdate
// method.
type PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginDelete
// method.
type PrivateEndpointConnectionsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Get
// method.
type PrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientListOptions contains the optional parameters for the PrivateEndpointConnectionsClient.List
// method.
type PrivateEndpointConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientListOptions contains the optional parameters for the PrivateLinkResourcesClient.List method.
type PrivateLinkResourcesClientListOptions struct {
	// placeholder for future optional parameters
}

// ProjectCapabilityHostsClientBeginCreateOrUpdateOptions contains the optional parameters for the ProjectCapabilityHostsClient.BeginCreateOrUpdate
// method.
type ProjectCapabilityHostsClientBeginCreateOrUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ProjectCapabilityHostsClientBeginDeleteOptions contains the optional parameters for the ProjectCapabilityHostsClient.BeginDelete
// method.
type ProjectCapabilityHostsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ProjectCapabilityHostsClientGetOptions contains the optional parameters for the ProjectCapabilityHostsClient.Get method.
type ProjectCapabilityHostsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProjectConnectionClientCreateOptions contains the optional parameters for the ProjectConnectionClient.Create method.
type ProjectConnectionClientCreateOptions struct {
	// The object for creating or updating a new account connection
	Body *ConnectionPropertiesV2BasicResource
}

// ProjectConnectionClientDeleteOptions contains the optional parameters for the ProjectConnectionClient.Delete method.
type ProjectConnectionClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ProjectConnectionClientGetOptions contains the optional parameters for the ProjectConnectionClient.Get method.
type ProjectConnectionClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProjectConnectionClientListOptions contains the optional parameters for the ProjectConnectionClient.NewListPager method.
type ProjectConnectionClientListOptions struct {
	// Category of the connection.
	Category *string

	// query parameter that indicates if get connection call should return both connections and datastores
	IncludeAll *bool

	// Target of the connection.
	Target *string
}

// ProjectConnectionClientUpdateOptions contains the optional parameters for the ProjectConnectionClient.Update method.
type ProjectConnectionClientUpdateOptions struct {
	// Parameters for account connection update.
	Body *ConnectionUpdateContent
}

// ProjectsClientBeginCreateOptions contains the optional parameters for the ProjectsClient.BeginCreate method.
type ProjectsClientBeginCreateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ProjectsClientBeginDeleteOptions contains the optional parameters for the ProjectsClient.BeginDelete method.
type ProjectsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ProjectsClientBeginUpdateOptions contains the optional parameters for the ProjectsClient.BeginUpdate method.
type ProjectsClientBeginUpdateOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ProjectsClientGetOptions contains the optional parameters for the ProjectsClient.Get method.
type ProjectsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProjectsClientListOptions contains the optional parameters for the ProjectsClient.NewListPager method.
type ProjectsClientListOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistItemsClientBatchAddOptions contains the optional parameters for the RaiBlocklistItemsClient.BatchAdd method.
type RaiBlocklistItemsClientBatchAddOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistItemsClientBatchDeleteOptions contains the optional parameters for the RaiBlocklistItemsClient.BatchDelete
// method.
type RaiBlocklistItemsClientBatchDeleteOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistItemsClientBeginDeleteOptions contains the optional parameters for the RaiBlocklistItemsClient.BeginDelete
// method.
type RaiBlocklistItemsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// RaiBlocklistItemsClientCreateOrUpdateOptions contains the optional parameters for the RaiBlocklistItemsClient.CreateOrUpdate
// method.
type RaiBlocklistItemsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistItemsClientGetOptions contains the optional parameters for the RaiBlocklistItemsClient.Get method.
type RaiBlocklistItemsClientGetOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistItemsClientListOptions contains the optional parameters for the RaiBlocklistItemsClient.NewListPager method.
type RaiBlocklistItemsClientListOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistsClientBeginDeleteOptions contains the optional parameters for the RaiBlocklistsClient.BeginDelete method.
type RaiBlocklistsClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// RaiBlocklistsClientCreateOrUpdateOptions contains the optional parameters for the RaiBlocklistsClient.CreateOrUpdate method.
type RaiBlocklistsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistsClientGetOptions contains the optional parameters for the RaiBlocklistsClient.Get method.
type RaiBlocklistsClientGetOptions struct {
	// placeholder for future optional parameters
}

// RaiBlocklistsClientListOptions contains the optional parameters for the RaiBlocklistsClient.NewListPager method.
type RaiBlocklistsClientListOptions struct {
	// placeholder for future optional parameters
}

// RaiContentFiltersClientGetOptions contains the optional parameters for the RaiContentFiltersClient.Get method.
type RaiContentFiltersClientGetOptions struct {
	// placeholder for future optional parameters
}

// RaiContentFiltersClientListOptions contains the optional parameters for the RaiContentFiltersClient.NewListPager method.
type RaiContentFiltersClientListOptions struct {
	// placeholder for future optional parameters
}

// RaiPoliciesClientBeginDeleteOptions contains the optional parameters for the RaiPoliciesClient.BeginDelete method.
type RaiPoliciesClientBeginDeleteOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// RaiPoliciesClientCreateOrUpdateOptions contains the optional parameters for the RaiPoliciesClient.CreateOrUpdate method.
type RaiPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RaiPoliciesClientGetOptions contains the optional parameters for the RaiPoliciesClient.Get method.
type RaiPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RaiPoliciesClientListOptions contains the optional parameters for the RaiPoliciesClient.NewListPager method.
type RaiPoliciesClientListOptions struct {
	// placeholder for future optional parameters
}

// ResourceSKUsClientListOptions contains the optional parameters for the ResourceSKUsClient.NewListPager method.
type ResourceSKUsClientListOptions struct {
	// placeholder for future optional parameters
}

// UsagesClientListOptions contains the optional parameters for the UsagesClient.NewListPager method.
type UsagesClientListOptions struct {
	// An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of
	// the metric, can have an or of multiple names).
	Filter *string
}
