//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcognitiveservices

import (
	"encoding/json"
	"reflect"
	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
)

// APIKeys - The access keys for the cognitive services account.
type APIKeys struct {
	// Gets the value of key 1.
	Key1 *string `json:"key1,omitempty"`

	// Gets the value of key 2.
	Key2 *string `json:"key2,omitempty"`
}

// APIProperties - The api properties for special APIs.
type APIProperties struct {
	// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
	AADClientID *string `json:"aadClientId,omitempty"`

	// (Metrics Advisor Only) The Azure AD Tenant Id.
	AADTenantID *string `json:"aadTenantId,omitempty"`

	// OPTIONAL; Contains additional key/value pairs not defined in the schema.
	AdditionalProperties map[string]map[string]interface{}

	// (Personalization Only) The flag to enable statistics of Bing Search.
	EventHubConnectionString *string `json:"eventHubConnectionString,omitempty"`

	// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
	QnaAzureSearchEndpointID *string `json:"qnaAzureSearchEndpointId,omitempty"`

	// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
	QnaAzureSearchEndpointKey *string `json:"qnaAzureSearchEndpointKey,omitempty"`

	// (QnAMaker Only) The runtime endpoint of QnAMaker.
	QnaRuntimeEndpoint *string `json:"qnaRuntimeEndpoint,omitempty"`

	// (Bing Search Only) The flag to enable statistics of Bing Search.
	StatisticsEnabled *bool `json:"statisticsEnabled,omitempty"`

	// (Personalization Only) The storage account connection string.
	StorageAccountConnectionString *string `json:"storageAccountConnectionString,omitempty"`

	// (Metrics Advisor Only) The super user of Metrics Advisor.
	SuperUser *string `json:"superUser,omitempty"`

	// (Metrics Advisor Only) The website name of Metrics Advisor.
	WebsiteName *string `json:"websiteName,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type APIProperties.
func (a APIProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "aadClientId", a.AADClientID)
	populate(objectMap, "aadTenantId", a.AADTenantID)
	populate(objectMap, "eventHubConnectionString", a.EventHubConnectionString)
	populate(objectMap, "qnaAzureSearchEndpointId", a.QnaAzureSearchEndpointID)
	populate(objectMap, "qnaAzureSearchEndpointKey", a.QnaAzureSearchEndpointKey)
	populate(objectMap, "qnaRuntimeEndpoint", a.QnaRuntimeEndpoint)
	populate(objectMap, "statisticsEnabled", a.StatisticsEnabled)
	populate(objectMap, "storageAccountConnectionString", a.StorageAccountConnectionString)
	populate(objectMap, "superUser", a.SuperUser)
	populate(objectMap, "websiteName", a.WebsiteName)
	if a.AdditionalProperties != nil {
		for key, val := range a.AdditionalProperties {
			objectMap[key] = val
		}
	}
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type APIProperties.
func (a *APIProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "aadClientId":
			err = unpopulate(val, &a.AADClientID)
			delete(rawMsg, key)
		case "aadTenantId":
			err = unpopulate(val, &a.AADTenantID)
			delete(rawMsg, key)
		case "eventHubConnectionString":
			err = unpopulate(val, &a.EventHubConnectionString)
			delete(rawMsg, key)
		case "qnaAzureSearchEndpointId":
			err = unpopulate(val, &a.QnaAzureSearchEndpointID)
			delete(rawMsg, key)
		case "qnaAzureSearchEndpointKey":
			err = unpopulate(val, &a.QnaAzureSearchEndpointKey)
			delete(rawMsg, key)
		case "qnaRuntimeEndpoint":
			err = unpopulate(val, &a.QnaRuntimeEndpoint)
			delete(rawMsg, key)
		case "statisticsEnabled":
			err = unpopulate(val, &a.StatisticsEnabled)
			delete(rawMsg, key)
		case "storageAccountConnectionString":
			err = unpopulate(val, &a.StorageAccountConnectionString)
			delete(rawMsg, key)
		case "superUser":
			err = unpopulate(val, &a.SuperUser)
			delete(rawMsg, key)
		case "websiteName":
			err = unpopulate(val, &a.WebsiteName)
			delete(rawMsg, key)
		default:
			if a.AdditionalProperties == nil {
				a.AdditionalProperties = map[string]map[string]interface{}{}
			}
			if val != nil {
				var aux map[string]interface{}
				err = json.Unmarshal(val, &aux)
				a.AdditionalProperties[key] = aux
			}
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// Account - Cognitive Services account is an Azure resource representing the provisioned account, it's type, location and SKU.
type Account struct {
	AzureEntityResource
	// Identity for the resource.
	Identity *Identity `json:"identity,omitempty"`

	// The Kind of the resource.
	Kind *string `json:"kind,omitempty"`

	// The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Properties of Cognitive Services account.
	Properties *AccountProperties `json:"properties,omitempty"`

	// The resource model definition representing SKU
	SKU *SKU `json:"sku,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Account.
func (a Account) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	a.AzureEntityResource.marshalInternal(objectMap)
	populate(objectMap, "identity", a.Identity)
	populate(objectMap, "kind", a.Kind)
	populate(objectMap, "location", a.Location)
	populate(objectMap, "properties", a.Properties)
	populate(objectMap, "sku", a.SKU)
	populate(objectMap, "systemData", a.SystemData)
	populate(objectMap, "tags", a.Tags)
	return json.Marshal(objectMap)
}

// AccountListResult - The list of cognitive services accounts operation response.
type AccountListResult struct {
	// The link used to get the next page of accounts.
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; Gets the list of Cognitive Services accounts and their properties.
	Value []*Account `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountListResult.
func (a AccountListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", a.NextLink)
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// AccountProperties - Properties of Cognitive Services account.
type AccountProperties struct {
	// The api properties for special APIs.
	APIProperties   *APIProperties `json:"apiProperties,omitempty"`
	AllowedFqdnList []*string      `json:"allowedFqdnList,omitempty"`

	// Optional subdomain name used for token-based authentication.
	CustomSubDomainName *string `json:"customSubDomainName,omitempty"`
	DisableLocalAuth    *bool   `json:"disableLocalAuth,omitempty"`

	// The encryption properties for this resource.
	Encryption *Encryption `json:"encryption,omitempty"`

	// Resource migration token.
	MigrationToken *string `json:"migrationToken,omitempty"`

	// A collection of rules governing the accessibility from specific network locations.
	NetworkACLs *NetworkRuleSet `json:"networkAcls,omitempty"`

	// Whether or not public endpoint access is allowed for this account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess           *PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`
	Restore                       *bool                `json:"restore,omitempty"`
	RestrictOutboundNetworkAccess *bool                `json:"restrictOutboundNetworkAccess,omitempty"`

	// The storage accounts for this resource.
	UserOwnedStorage []*UserOwnedStorage `json:"userOwnedStorage,omitempty"`

	// READ-ONLY; The call rate limit Cognitive Services account.
	CallRateLimit *CallRateLimit `json:"callRateLimit,omitempty" azure:"ro"`

	// READ-ONLY; Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only
	// and for reference only.
	Capabilities []*SKUCapability `json:"capabilities,omitempty" azure:"ro"`

	// READ-ONLY; Gets the date of cognitive services account creation.
	DateCreated *string `json:"dateCreated,omitempty" azure:"ro"`

	// READ-ONLY; Endpoint of the created account.
	Endpoint *string `json:"endpoint,omitempty" azure:"ro"`

	// READ-ONLY; Dictionary of
	Endpoints map[string]*string `json:"endpoints,omitempty" azure:"ro"`

	// READ-ONLY; The internal identifier (deprecated, do not use this property).
	InternalID *string `json:"internalId,omitempty" azure:"ro"`

	// READ-ONLY; If the resource is migrated from an existing key.
	IsMigrated *bool `json:"isMigrated,omitempty" azure:"ro"`

	// READ-ONLY; The private endpoint connection associated with the Cognitive Services account.
	PrivateEndpointConnections []*PrivateEndpointConnection `json:"privateEndpointConnections,omitempty" azure:"ro"`

	// READ-ONLY; Gets the status of the cognitive services account at the time the operation was called.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY
	QuotaLimit *QuotaLimit `json:"quotaLimit,omitempty" azure:"ro"`

	// READ-ONLY; Sku change info of account.
	SKUChangeInfo *SKUChangeInfo `json:"skuChangeInfo,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountProperties.
func (a AccountProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "apiProperties", a.APIProperties)
	populate(objectMap, "allowedFqdnList", a.AllowedFqdnList)
	populate(objectMap, "callRateLimit", a.CallRateLimit)
	populate(objectMap, "capabilities", a.Capabilities)
	populate(objectMap, "customSubDomainName", a.CustomSubDomainName)
	populate(objectMap, "dateCreated", a.DateCreated)
	populate(objectMap, "disableLocalAuth", a.DisableLocalAuth)
	populate(objectMap, "encryption", a.Encryption)
	populate(objectMap, "endpoint", a.Endpoint)
	populate(objectMap, "endpoints", a.Endpoints)
	populate(objectMap, "internalId", a.InternalID)
	populate(objectMap, "isMigrated", a.IsMigrated)
	populate(objectMap, "migrationToken", a.MigrationToken)
	populate(objectMap, "networkAcls", a.NetworkACLs)
	populate(objectMap, "privateEndpointConnections", a.PrivateEndpointConnections)
	populate(objectMap, "provisioningState", a.ProvisioningState)
	populate(objectMap, "publicNetworkAccess", a.PublicNetworkAccess)
	populate(objectMap, "quotaLimit", a.QuotaLimit)
	populate(objectMap, "restore", a.Restore)
	populate(objectMap, "restrictOutboundNetworkAccess", a.RestrictOutboundNetworkAccess)
	populate(objectMap, "skuChangeInfo", a.SKUChangeInfo)
	populate(objectMap, "userOwnedStorage", a.UserOwnedStorage)
	return json.Marshal(objectMap)
}

// AccountSKU - Cognitive Services resource type and SKU.
type AccountSKU struct {
	// Resource Namespace and Type
	ResourceType *string `json:"resourceType,omitempty"`

	// The SKU of Cognitive Services account.
	SKU *SKU `json:"sku,omitempty"`
}

// AccountSKUListResult - The list of cognitive services accounts operation response.
type AccountSKUListResult struct {
	// Gets the list of Cognitive Services accounts and their properties.
	Value []*AccountSKU `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountSKUListResult.
func (a AccountSKUListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// AccountsBeginCreateOptions contains the optional parameters for the Accounts.BeginCreate method.
type AccountsBeginCreateOptions struct {
	// placeholder for future optional parameters
}

// AccountsBeginDeleteOptions contains the optional parameters for the Accounts.BeginDelete method.
type AccountsBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// AccountsBeginUpdateOptions contains the optional parameters for the Accounts.BeginUpdate method.
type AccountsBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// AccountsGetOptions contains the optional parameters for the Accounts.Get method.
type AccountsGetOptions struct {
	// placeholder for future optional parameters
}

// AccountsListByResourceGroupOptions contains the optional parameters for the Accounts.ListByResourceGroup method.
type AccountsListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AccountsListKeysOptions contains the optional parameters for the Accounts.ListKeys method.
type AccountsListKeysOptions struct {
	// placeholder for future optional parameters
}

// AccountsListOptions contains the optional parameters for the Accounts.List method.
type AccountsListOptions struct {
	// placeholder for future optional parameters
}

// AccountsListSKUsOptions contains the optional parameters for the Accounts.ListSKUs method.
type AccountsListSKUsOptions struct {
	// placeholder for future optional parameters
}

// AccountsListUsagesOptions contains the optional parameters for the Accounts.ListUsages method.
type AccountsListUsagesOptions struct {
	// An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of
	// multiple names).
	Filter *string
}

// AccountsRegenerateKeyOptions contains the optional parameters for the Accounts.RegenerateKey method.
type AccountsRegenerateKeyOptions struct {
	// placeholder for future optional parameters
}

// AzureEntityResource - The resource model definition for an Azure Resource Manager resource with an etag.
type AzureEntityResource struct {
	Resource
	// READ-ONLY; Resource Etag.
	Etag *string `json:"etag,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AzureEntityResource.
func (a AzureEntityResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	a.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (a AzureEntityResource) marshalInternal(objectMap map[string]interface{}) {
	a.Resource.marshalInternal(objectMap)
	populate(objectMap, "etag", a.Etag)
}

// CallRateLimit - The call rate limit Cognitive Services account.
type CallRateLimit struct {
	// The count value of Call Rate Limit.
	Count *float32 `json:"count,omitempty"`

	// The renewal period in seconds of Call Rate Limit.
	RenewalPeriod *float32          `json:"renewalPeriod,omitempty"`
	Rules         []*ThrottlingRule `json:"rules,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type CallRateLimit.
func (c CallRateLimit) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "count", c.Count)
	populate(objectMap, "renewalPeriod", c.RenewalPeriod)
	populate(objectMap, "rules", c.Rules)
	return json.Marshal(objectMap)
}

// CheckDomainAvailabilityParameter - Check Domain availability parameter.
type CheckDomainAvailabilityParameter struct {
	// REQUIRED; The subdomain name to use.
	SubdomainName *string `json:"subdomainName,omitempty"`

	// REQUIRED; The Type of the resource.
	Type *string `json:"type,omitempty"`
}

// CheckSKUAvailabilityParameter - Check SKU availability parameter.
type CheckSKUAvailabilityParameter struct {
	// REQUIRED; The Kind of the resource.
	Kind *string `json:"kind,omitempty"`

	// REQUIRED; The SKU of the resource.
	SKUs []*string `json:"skus,omitempty"`

	// REQUIRED; The Type of the resource.
	Type *string `json:"type,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type CheckSKUAvailabilityParameter.
func (c CheckSKUAvailabilityParameter) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "kind", c.Kind)
	populate(objectMap, "skus", c.SKUs)
	populate(objectMap, "type", c.Type)
	return json.Marshal(objectMap)
}

// CognitiveServicesManagementClientCheckDomainAvailabilityOptions contains the optional parameters for the CognitiveServicesManagementClient.CheckDomainAvailability
// method.
type CognitiveServicesManagementClientCheckDomainAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// CognitiveServicesManagementClientCheckSKUAvailabilityOptions contains the optional parameters for the CognitiveServicesManagementClient.CheckSKUAvailability
// method.
type CognitiveServicesManagementClientCheckSKUAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// DeletedAccountsBeginPurgeOptions contains the optional parameters for the DeletedAccounts.BeginPurge method.
type DeletedAccountsBeginPurgeOptions struct {
	// placeholder for future optional parameters
}

// DeletedAccountsGetOptions contains the optional parameters for the DeletedAccounts.Get method.
type DeletedAccountsGetOptions struct {
	// placeholder for future optional parameters
}

// DeletedAccountsListOptions contains the optional parameters for the DeletedAccounts.List method.
type DeletedAccountsListOptions struct {
	// placeholder for future optional parameters
}

// DomainAvailability - Domain availability.
type DomainAvailability struct {
	// Indicates the given SKU is available or not.
	IsSubdomainAvailable *bool `json:"isSubdomainAvailable,omitempty"`

	// Reason why the SKU is not available.
	Reason *string `json:"reason,omitempty"`

	// The subdomain name to use.
	SubdomainName *string `json:"subdomainName,omitempty"`

	// The Type of the resource.
	Type *string `json:"type,omitempty"`
}

// Encryption - Properties to configure Encryption
type Encryption struct {
	// Enumerates the possible value of keySource for Encryption
	KeySource *KeySource `json:"keySource,omitempty"`

	// Properties of KeyVault
	KeyVaultProperties *KeyVaultProperties `json:"keyVaultProperties,omitempty"`
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info map[string]interface{} `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ErrorDetail.
func (e ErrorDetail) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "additionalInfo", e.AdditionalInfo)
	populate(objectMap, "code", e.Code)
	populate(objectMap, "details", e.Details)
	populate(objectMap, "message", e.Message)
	populate(objectMap, "target", e.Target)
	return json.Marshal(objectMap)
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData
// error response format.).
// Implements the error and azcore.HTTPResponse interfaces.
type ErrorResponse struct {
	raw string
	// The error object.
	InnerError *ErrorDetail `json:"error,omitempty"`
}

// Error implements the error interface for type ErrorResponse.
// The contents of the error text are not contractual and subject to change.
func (e ErrorResponse) Error() string {
	return e.raw
}

// IPRule - A rule governing the accessibility from a specific ip address or ip range.
type IPRule struct {
	// REQUIRED; An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
	Value *string `json:"value,omitempty"`
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *ResourceIdentityType `json:"type,omitempty"`

	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]*UserAssignedIdentity `json:"userAssignedIdentities,omitempty"`

	// READ-ONLY; The principal ID of resource identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of resource.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Identity.
func (i Identity) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "principalId", i.PrincipalID)
	populate(objectMap, "tenantId", i.TenantID)
	populate(objectMap, "type", i.Type)
	populate(objectMap, "userAssignedIdentities", i.UserAssignedIdentities)
	return json.Marshal(objectMap)
}

// KeyVaultProperties - Properties to configure keyVault Properties
type KeyVaultProperties struct {
	IdentityClientID *string `json:"identityClientId,omitempty"`

	// Name of the Key from KeyVault
	KeyName *string `json:"keyName,omitempty"`

	// Uri of KeyVault
	KeyVaultURI *string `json:"keyVaultUri,omitempty"`

	// Version of the Key from KeyVault
	KeyVersion *string `json:"keyVersion,omitempty"`
}

// MetricName - A metric name.
type MetricName struct {
	// The friendly name of the metric.
	LocalizedValue *string `json:"localizedValue,omitempty"`

	// The name of the metric.
	Value *string `json:"value,omitempty"`
}

// NetworkRuleSet - A set of rules governing the network accessibility.
type NetworkRuleSet struct {
	// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
	DefaultAction *NetworkRuleAction `json:"defaultAction,omitempty"`

	// The list of IP address rules.
	IPRules []*IPRule `json:"ipRules,omitempty"`

	// The list of virtual network rules.
	VirtualNetworkRules []*VirtualNetworkRule `json:"virtualNetworkRules,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type NetworkRuleSet.
func (n NetworkRuleSet) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "defaultAction", n.DefaultAction)
	populate(objectMap, "ipRules", n.IPRules)
	populate(objectMap, "virtualNetworkRules", n.VirtualNetworkRules)
	return json.Marshal(objectMap)
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType `json:"actionType,omitempty" azure:"ro"`

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
	IsDataAction *bool `json:"isDataAction,omitempty" azure:"ro"`

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
	Origin *Origin `json:"origin,omitempty" azure:"ro"`
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual
	// Machine".
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationListResult.
func (o OperationListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", o.NextLink)
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpoint - The Private Endpoint resource.
type PrivateEndpoint struct {
	// READ-ONLY; The ARM identifier for Private Endpoint
	ID *string `json:"id,omitempty" azure:"ro"`
}

// PrivateEndpointConnection - The Private Endpoint Connection resource.
type PrivateEndpointConnection struct {
	AzureEntityResource
	// The location of the private endpoint connection
	Location *string `json:"location,omitempty"`

	// Resource properties.
	Properties *PrivateEndpointConnectionProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateEndpointConnection.
func (p PrivateEndpointConnection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	p.AzureEntityResource.marshalInternal(objectMap)
	populate(objectMap, "location", p.Location)
	populate(objectMap, "properties", p.Properties)
	populate(objectMap, "systemData", p.SystemData)
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionListResult - A list of private endpoint connections
type PrivateEndpointConnectionListResult struct {
	// Array of private endpoint connections
	Value []*PrivateEndpointConnection `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateEndpointConnectionListResult.
func (p PrivateEndpointConnectionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionProperties - Properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionProperties struct {
	// REQUIRED; A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `json:"privateLinkServiceConnectionState,omitempty"`

	// The private link resource group ids.
	GroupIDs []*string `json:"groupIds,omitempty"`

	// The resource of private end point.
	PrivateEndpoint *PrivateEndpoint `json:"privateEndpoint,omitempty"`

	// READ-ONLY; The provisioning state of the private endpoint connection resource.
	ProvisioningState *PrivateEndpointConnectionProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateEndpointConnectionProperties.
func (p PrivateEndpointConnectionProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "groupIds", p.GroupIDs)
	populate(objectMap, "privateEndpoint", p.PrivateEndpoint)
	populate(objectMap, "privateLinkServiceConnectionState", p.PrivateLinkServiceConnectionState)
	populate(objectMap, "provisioningState", p.ProvisioningState)
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionsBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnections.BeginCreateOrUpdate method.
type PrivateEndpointConnectionsBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnections.BeginDelete method.
type PrivateEndpointConnectionsBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsGetOptions contains the optional parameters for the PrivateEndpointConnections.Get method.
type PrivateEndpointConnectionsGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsListOptions contains the optional parameters for the PrivateEndpointConnections.List method.
type PrivateEndpointConnectionsListOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResource - A private link resource
type PrivateLinkResource struct {
	Resource
	// Resource properties.
	Properties *PrivateLinkResourceProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateLinkResource.
func (p PrivateLinkResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	p.Resource.marshalInternal(objectMap)
	populate(objectMap, "properties", p.Properties)
	return json.Marshal(objectMap)
}

// PrivateLinkResourceListResult - A list of private link resources
type PrivateLinkResourceListResult struct {
	// Array of private link resources
	Value []*PrivateLinkResource `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateLinkResourceListResult.
func (p PrivateLinkResourceListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// PrivateLinkResourceProperties - Properties of a private link resource.
type PrivateLinkResourceProperties struct {
	// The private link resource Private link DNS zone name.
	RequiredZoneNames []*string `json:"requiredZoneNames,omitempty"`

	// READ-ONLY; The private link resource display name.
	DisplayName *string `json:"displayName,omitempty" azure:"ro"`

	// READ-ONLY; The private link resource group id.
	GroupID *string `json:"groupId,omitempty" azure:"ro"`

	// READ-ONLY; The private link resource required member names.
	RequiredMembers []*string `json:"requiredMembers,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateLinkResourceProperties.
func (p PrivateLinkResourceProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "displayName", p.DisplayName)
	populate(objectMap, "groupId", p.GroupID)
	populate(objectMap, "requiredMembers", p.RequiredMembers)
	populate(objectMap, "requiredZoneNames", p.RequiredZoneNames)
	return json.Marshal(objectMap)
}

// PrivateLinkResourcesListOptions contains the optional parameters for the PrivateLinkResources.List method.
type PrivateLinkResourcesListOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServiceConnectionState - A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `json:"actionsRequired,omitempty"`

	// The reason for approval/rejection of the connection.
	Description *string `json:"description,omitempty"`

	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *PrivateEndpointServiceConnectionStatus `json:"status,omitempty"`
}

type QuotaLimit struct {
	Count         *float32          `json:"count,omitempty"`
	RenewalPeriod *float32          `json:"renewalPeriod,omitempty"`
	Rules         []*ThrottlingRule `json:"rules,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type QuotaLimit.
func (q QuotaLimit) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "count", q.Count)
	populate(objectMap, "renewalPeriod", q.RenewalPeriod)
	populate(objectMap, "rules", q.Rules)
	return json.Marshal(objectMap)
}

// RegenerateKeyParameters - Regenerate key parameters.
type RegenerateKeyParameters struct {
	// REQUIRED; key name to generate (Key1|Key2)
	KeyName *KeyName `json:"keyName,omitempty"`
}

type RequestMatchPattern struct {
	Method *string `json:"method,omitempty"`
	Path   *string `json:"path,omitempty"`
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Resource.
func (r Resource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	r.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (r Resource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", r.ID)
	populate(objectMap, "name", r.Name)
	populate(objectMap, "type", r.Type)
}

// ResourceSKU - Describes an available Cognitive Services SKU.
type ResourceSKU struct {
	// The Kind of resources that are supported in this SKU.
	Kind *string `json:"kind,omitempty"`

	// The set of locations that the SKU is available.
	Locations []*string `json:"locations,omitempty"`

	// The name of SKU.
	Name *string `json:"name,omitempty"`

	// The type of resource the SKU applies to.
	ResourceType *string `json:"resourceType,omitempty"`

	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions []*ResourceSKURestrictions `json:"restrictions,omitempty"`

	// Specifies the tier of Cognitive Services account.
	Tier *string `json:"tier,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ResourceSKU.
func (r ResourceSKU) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "kind", r.Kind)
	populate(objectMap, "locations", r.Locations)
	populate(objectMap, "name", r.Name)
	populate(objectMap, "resourceType", r.ResourceType)
	populate(objectMap, "restrictions", r.Restrictions)
	populate(objectMap, "tier", r.Tier)
	return json.Marshal(objectMap)
}

// ResourceSKUListResult - The Get Skus operation response.
type ResourceSKUListResult struct {
	// REQUIRED; The list of skus available for the subscription.
	Value []*ResourceSKU `json:"value,omitempty"`

	// The uri to fetch the next page of Skus.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ResourceSKUListResult.
func (r ResourceSKUListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", r.NextLink)
	populate(objectMap, "value", r.Value)
	return json.Marshal(objectMap)
}

type ResourceSKURestrictionInfo struct {
	// Locations where the SKU is restricted
	Locations []*string `json:"locations,omitempty"`

	// List of availability zones where the SKU is restricted.
	Zones []*string `json:"zones,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ResourceSKURestrictionInfo.
func (r ResourceSKURestrictionInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "locations", r.Locations)
	populate(objectMap, "zones", r.Zones)
	return json.Marshal(objectMap)
}

// ResourceSKURestrictions - Describes restrictions of a SKU.
type ResourceSKURestrictions struct {
	// The reason for restriction.
	ReasonCode *ResourceSKURestrictionsReasonCode `json:"reasonCode,omitempty"`

	// The information about the restriction where the SKU cannot be used.
	RestrictionInfo *ResourceSKURestrictionInfo `json:"restrictionInfo,omitempty"`

	// The type of restrictions.
	Type *ResourceSKURestrictionsType `json:"type,omitempty"`

	// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
	Values []*string `json:"values,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ResourceSKURestrictions.
func (r ResourceSKURestrictions) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "reasonCode", r.ReasonCode)
	populate(objectMap, "restrictionInfo", r.RestrictionInfo)
	populate(objectMap, "type", r.Type)
	populate(objectMap, "values", r.Values)
	return json.Marshal(objectMap)
}

// ResourceSKUsListOptions contains the optional parameters for the ResourceSKUs.List method.
type ResourceSKUsListOptions struct {
	// placeholder for future optional parameters
}

// SKU - The resource model definition representing SKU
type SKU struct {
	// REQUIRED; The name of the SKU. Ex - P3. It is typically a letter+number code
	Name *string `json:"name,omitempty"`

	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int32 `json:"capacity,omitempty"`

	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `json:"family,omitempty"`

	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `json:"size,omitempty"`

	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *SKUTier `json:"tier,omitempty"`
}

// SKUAvailability - SKU availability.
type SKUAvailability struct {
	// The Kind of the resource.
	Kind *string `json:"kind,omitempty"`

	// Additional error message.
	Message *string `json:"message,omitempty"`

	// Reason why the SKU is not available.
	Reason *string `json:"reason,omitempty"`

	// Indicates the given SKU is available or not.
	SKUAvailable *bool `json:"skuAvailable,omitempty"`

	// The SKU of Cognitive Services account.
	SKUName *string `json:"skuName,omitempty"`

	// The Type of the resource.
	Type *string `json:"type,omitempty"`
}

// SKUAvailabilityListResult - Check SKU availability result list.
type SKUAvailabilityListResult struct {
	// Check SKU availability result list.
	Value []*SKUAvailability `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SKUAvailabilityListResult.
func (s SKUAvailabilityListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// SKUCapability - SkuCapability indicates the capability of a certain feature.
type SKUCapability struct {
	// The name of the SkuCapability.
	Name *string `json:"name,omitempty"`

	// The value of the SkuCapability.
	Value *string `json:"value,omitempty"`
}

// SKUChangeInfo - Sku change info of account.
type SKUChangeInfo struct {
	// Gets the count of downgrades.
	CountOfDowngrades *float32 `json:"countOfDowngrades,omitempty"`

	// Gets the count of upgrades after downgrades.
	CountOfUpgradesAfterDowngrades *float32 `json:"countOfUpgradesAfterDowngrades,omitempty"`

	// Gets the last change date.
	LastChangeDate *string `json:"lastChangeDate,omitempty"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "createdAt", (*timeRFC3339)(s.CreatedAt))
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populate(objectMap, "lastModifiedAt", (*timeRFC3339)(s.LastModifiedAt))
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			var aux timeRFC3339
			err = unpopulate(val, &aux)
			s.CreatedAt = (*time.Time)(&aux)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			var aux timeRFC3339
			err = unpopulate(val, &aux)
			s.LastModifiedAt = (*time.Time)(&aux)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

type ThrottlingRule struct {
	Count                    *float32               `json:"count,omitempty"`
	DynamicThrottlingEnabled *bool                  `json:"dynamicThrottlingEnabled,omitempty"`
	Key                      *string                `json:"key,omitempty"`
	MatchPatterns            []*RequestMatchPattern `json:"matchPatterns,omitempty"`
	MinCount                 *float32               `json:"minCount,omitempty"`
	RenewalPeriod            *float32               `json:"renewalPeriod,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ThrottlingRule.
func (t ThrottlingRule) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "count", t.Count)
	populate(objectMap, "dynamicThrottlingEnabled", t.DynamicThrottlingEnabled)
	populate(objectMap, "key", t.Key)
	populate(objectMap, "matchPatterns", t.MatchPatterns)
	populate(objectMap, "minCount", t.MinCount)
	populate(objectMap, "renewalPeriod", t.RenewalPeriod)
	return json.Marshal(objectMap)
}

// Usage - The usage data for a usage request.
type Usage struct {
	// Current value for this metric.
	CurrentValue *float64 `json:"currentValue,omitempty"`

	// Maximum value for this metric.
	Limit *float64 `json:"limit,omitempty"`

	// The name information for the metric.
	Name *MetricName `json:"name,omitempty"`

	// Next reset time for current quota.
	NextResetTime *string `json:"nextResetTime,omitempty"`

	// The quota period used to summarize the usage values.
	QuotaPeriod *string `json:"quotaPeriod,omitempty"`

	// Cognitive Services account quota usage status.
	Status *QuotaUsageStatus `json:"status,omitempty"`

	// The unit of the metric.
	Unit *UnitType `json:"unit,omitempty"`
}

// UsageListResult - The response to a list usage request.
type UsageListResult struct {
	// The list of usages for Cognitive Service account.
	Value []*Usage `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type UsageListResult.
func (u UsageListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", u.Value)
	return json.Marshal(objectMap)
}

// UserAssignedIdentity - User-assigned managed identity.
type UserAssignedIdentity struct {
	// READ-ONLY; Client App Id associated with this identity.
	ClientID *string `json:"clientId,omitempty" azure:"ro"`

	// READ-ONLY; Azure Active Directory principal ID associated with this Identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`
}

// UserOwnedStorage - The user owned storage for Cognitive Services account.
type UserOwnedStorage struct {
	IdentityClientID *string `json:"identityClientId,omitempty"`

	// Full resource id of a Microsoft.Storage resource.
	ResourceID *string `json:"resourceId,omitempty"`
}

// VirtualNetworkRule - A rule governing the accessibility from a specific virtual network.
type VirtualNetworkRule struct {
	// REQUIRED; Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
	ID *string `json:"id,omitempty"`

	// Ignore missing vnet service endpoint or not.
	IgnoreMissingVnetServiceEndpoint *bool `json:"ignoreMissingVnetServiceEndpoint,omitempty"`

	// Gets the state of virtual network rule.
	State *string `json:"state,omitempty"`
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
