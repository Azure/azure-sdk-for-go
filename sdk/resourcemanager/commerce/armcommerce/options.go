//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcommerce

// RateCardClientGetOptions contains the optional parameters for the RateCardClient.Get method.
type RateCardClientGetOptions struct {
	// placeholder for future optional parameters
}

// UsageAggregatesClientListOptions contains the optional parameters for the UsageAggregatesClient.NewListPager method.
type UsageAggregatesClientListOptions struct {
	// Daily (default) returns the data in daily granularity, Hourly returns the data in hourly granularity.
	AggregationGranularity *AggregationGranularity

	// Used when a continuation token string is provided in the response body of the previous call, enabling paging through a
	// large result set. If not present, the data is retrieved from the beginning of the
	// day/hour (based on the granularity) passed in.
	ContinuationToken *string

	// True returns usage data in instance-level detail, false causes server-side aggregation with fewer details. For example,
	// if you have 3 website instances, by default you will get 3 line items for
	// website consumption. If you specify showDetails = false, the data will be aggregated as a single line item for website
	// consumption within the time period (for the given subscriptionId, meterId,
	// usageStartTime and usageEndTime).
	ShowDetails *bool
}
