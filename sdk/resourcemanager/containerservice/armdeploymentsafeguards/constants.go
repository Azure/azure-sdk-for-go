// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armdeploymentsafeguards

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/containerservice/armdeploymentsafeguards"
	moduleVersion = "v0.1.0"
)

// ActionType - Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	// ActionTypeInternal - Actions are for internal-only APIs.
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// CreatedByType - The kind of entity that created the resource.
type CreatedByType string

const (
	// CreatedByTypeApplication - The entity was created by an application.
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey - The entity was created by a key.
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity - The entity was created by a managed identity.
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser - The entity was created by a user.
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// Level - Specifies the level of Deployment Safeguards
type Level string

const (
	// LevelEnforce - Best practice violations will be denied
	LevelEnforce Level = "Enforce"
	// LevelWarn - Best practice violations will only show warnings
	LevelWarn Level = "Warn"
)

// PossibleLevelValues returns the possible values for the Level const type.
func PossibleLevelValues() []Level {
	return []Level{
		LevelEnforce,
		LevelWarn,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	// OriginSystem - Indicates the operation is initiated by a system.
	OriginSystem Origin = "system"
	// OriginUser - Indicates the operation is initiated by a user.
	OriginUser Origin = "user"
	// OriginUserSystem - Indicates the operation is initiated by a user or system.
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// PodSecurityStandardsLevel - Specifies the Pod Security Standards level
type PodSecurityStandardsLevel string

const (
	// PodSecurityStandardsLevelPodSecurityStandardsBaseline - Baseline level is a minimally restrictive policy which prevents
	// known privilege escalations. Allows the default (minimally specified) Pod configuration.
	PodSecurityStandardsLevelPodSecurityStandardsBaseline PodSecurityStandardsLevel = "Baseline"
	// PodSecurityStandardsLevelPodSecurityStandardsPrivileged - Privileged level is an unrestricted policy, providing the widest
	// possible level of permissions. This policy allows for known privilege escalations.
	PodSecurityStandardsLevelPodSecurityStandardsPrivileged PodSecurityStandardsLevel = "Privileged"
	// PodSecurityStandardsLevelPodSecurityStandardsRestricted - Restricted level is a heavily restricted policy, following current
	// Pod hardening best practices.
	PodSecurityStandardsLevelPodSecurityStandardsRestricted PodSecurityStandardsLevel = "Restricted"
)

// PossiblePodSecurityStandardsLevelValues returns the possible values for the PodSecurityStandardsLevel const type.
func PossiblePodSecurityStandardsLevelValues() []PodSecurityStandardsLevel {
	return []PodSecurityStandardsLevel{
		PodSecurityStandardsLevelPodSecurityStandardsBaseline,
		PodSecurityStandardsLevelPodSecurityStandardsPrivileged,
		PodSecurityStandardsLevelPodSecurityStandardsRestricted,
	}
}

// ProvisioningState - The provisioning state of the last accepted operation.
type ProvisioningState string

const (
	// ProvisioningStateCanceled - Resource creation was canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateCreating - The provisioning state of DeploymentSafeguards being created.
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleting - The provisioning state of DeploymentSafeguards being deleted.
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource creation failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateSucceeded - Resource has been created.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - The provisioning state of DeploymentSafeguards being updated.
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateCanceled,
		ProvisioningStateCreating,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}
