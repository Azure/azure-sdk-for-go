//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcosmos

// CassandraClustersClientBeginCreateUpdateOptions contains the optional parameters for the CassandraClustersClient.BeginCreateUpdate
// method.
type CassandraClustersClientBeginCreateUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraClustersClientBeginDeallocateOptions contains the optional parameters for the CassandraClustersClient.BeginDeallocate
// method.
type CassandraClustersClientBeginDeallocateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraClustersClientBeginDeleteOptions contains the optional parameters for the CassandraClustersClient.BeginDelete
// method.
type CassandraClustersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraClustersClientBeginInvokeCommandOptions contains the optional parameters for the CassandraClustersClient.BeginInvokeCommand
// method.
type CassandraClustersClientBeginInvokeCommandOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraClustersClientBeginStartOptions contains the optional parameters for the CassandraClustersClient.BeginStart method.
type CassandraClustersClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraClustersClientBeginUpdateOptions contains the optional parameters for the CassandraClustersClient.BeginUpdate
// method.
type CassandraClustersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraClustersClientGetBackupOptions contains the optional parameters for the CassandraClustersClient.GetBackup method.
type CassandraClustersClientGetBackupOptions struct {
	// placeholder for future optional parameters
}

// CassandraClustersClientGetOptions contains the optional parameters for the CassandraClustersClient.Get method.
type CassandraClustersClientGetOptions struct {
	// placeholder for future optional parameters
}

// CassandraClustersClientListBackupsOptions contains the optional parameters for the CassandraClustersClient.NewListBackupsPager
// method.
type CassandraClustersClientListBackupsOptions struct {
	// placeholder for future optional parameters
}

// CassandraClustersClientListByResourceGroupOptions contains the optional parameters for the CassandraClustersClient.NewListByResourceGroupPager
// method.
type CassandraClustersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// CassandraClustersClientListBySubscriptionOptions contains the optional parameters for the CassandraClustersClient.NewListBySubscriptionPager
// method.
type CassandraClustersClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// CassandraClustersClientStatusOptions contains the optional parameters for the CassandraClustersClient.Status method.
type CassandraClustersClientStatusOptions struct {
	// placeholder for future optional parameters
}

// CassandraDataCentersClientBeginCreateUpdateOptions contains the optional parameters for the CassandraDataCentersClient.BeginCreateUpdate
// method.
type CassandraDataCentersClientBeginCreateUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraDataCentersClientBeginDeleteOptions contains the optional parameters for the CassandraDataCentersClient.BeginDelete
// method.
type CassandraDataCentersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraDataCentersClientBeginUpdateOptions contains the optional parameters for the CassandraDataCentersClient.BeginUpdate
// method.
type CassandraDataCentersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraDataCentersClientGetOptions contains the optional parameters for the CassandraDataCentersClient.Get method.
type CassandraDataCentersClientGetOptions struct {
	// placeholder for future optional parameters
}

// CassandraDataCentersClientListOptions contains the optional parameters for the CassandraDataCentersClient.NewListPager
// method.
type CassandraDataCentersClientListOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientBeginCreateUpdateCassandraKeyspaceOptions contains the optional parameters for the CassandraResourcesClient.BeginCreateUpdateCassandraKeyspace
// method.
type CassandraResourcesClientBeginCreateUpdateCassandraKeyspaceOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginCreateUpdateCassandraTableOptions contains the optional parameters for the CassandraResourcesClient.BeginCreateUpdateCassandraTable
// method.
type CassandraResourcesClientBeginCreateUpdateCassandraTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginCreateUpdateCassandraViewOptions contains the optional parameters for the CassandraResourcesClient.BeginCreateUpdateCassandraView
// method.
type CassandraResourcesClientBeginCreateUpdateCassandraViewOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginDeleteCassandraKeyspaceOptions contains the optional parameters for the CassandraResourcesClient.BeginDeleteCassandraKeyspace
// method.
type CassandraResourcesClientBeginDeleteCassandraKeyspaceOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginDeleteCassandraTableOptions contains the optional parameters for the CassandraResourcesClient.BeginDeleteCassandraTable
// method.
type CassandraResourcesClientBeginDeleteCassandraTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginDeleteCassandraViewOptions contains the optional parameters for the CassandraResourcesClient.BeginDeleteCassandraView
// method.
type CassandraResourcesClientBeginDeleteCassandraViewOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginMigrateCassandraKeyspaceToAutoscaleOptions contains the optional parameters for the CassandraResourcesClient.BeginMigrateCassandraKeyspaceToAutoscale
// method.
type CassandraResourcesClientBeginMigrateCassandraKeyspaceToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginMigrateCassandraKeyspaceToManualThroughputOptions contains the optional parameters for the
// CassandraResourcesClient.BeginMigrateCassandraKeyspaceToManualThroughput method.
type CassandraResourcesClientBeginMigrateCassandraKeyspaceToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginMigrateCassandraTableToAutoscaleOptions contains the optional parameters for the CassandraResourcesClient.BeginMigrateCassandraTableToAutoscale
// method.
type CassandraResourcesClientBeginMigrateCassandraTableToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginMigrateCassandraTableToManualThroughputOptions contains the optional parameters for the CassandraResourcesClient.BeginMigrateCassandraTableToManualThroughput
// method.
type CassandraResourcesClientBeginMigrateCassandraTableToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginMigrateCassandraViewToAutoscaleOptions contains the optional parameters for the CassandraResourcesClient.BeginMigrateCassandraViewToAutoscale
// method.
type CassandraResourcesClientBeginMigrateCassandraViewToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginMigrateCassandraViewToManualThroughputOptions contains the optional parameters for the CassandraResourcesClient.BeginMigrateCassandraViewToManualThroughput
// method.
type CassandraResourcesClientBeginMigrateCassandraViewToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginUpdateCassandraKeyspaceThroughputOptions contains the optional parameters for the CassandraResourcesClient.BeginUpdateCassandraKeyspaceThroughput
// method.
type CassandraResourcesClientBeginUpdateCassandraKeyspaceThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginUpdateCassandraTableThroughputOptions contains the optional parameters for the CassandraResourcesClient.BeginUpdateCassandraTableThroughput
// method.
type CassandraResourcesClientBeginUpdateCassandraTableThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientBeginUpdateCassandraViewThroughputOptions contains the optional parameters for the CassandraResourcesClient.BeginUpdateCassandraViewThroughput
// method.
type CassandraResourcesClientBeginUpdateCassandraViewThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CassandraResourcesClientGetCassandraKeyspaceOptions contains the optional parameters for the CassandraResourcesClient.GetCassandraKeyspace
// method.
type CassandraResourcesClientGetCassandraKeyspaceOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientGetCassandraKeyspaceThroughputOptions contains the optional parameters for the CassandraResourcesClient.GetCassandraKeyspaceThroughput
// method.
type CassandraResourcesClientGetCassandraKeyspaceThroughputOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientGetCassandraTableOptions contains the optional parameters for the CassandraResourcesClient.GetCassandraTable
// method.
type CassandraResourcesClientGetCassandraTableOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientGetCassandraTableThroughputOptions contains the optional parameters for the CassandraResourcesClient.GetCassandraTableThroughput
// method.
type CassandraResourcesClientGetCassandraTableThroughputOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientGetCassandraViewOptions contains the optional parameters for the CassandraResourcesClient.GetCassandraView
// method.
type CassandraResourcesClientGetCassandraViewOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientGetCassandraViewThroughputOptions contains the optional parameters for the CassandraResourcesClient.GetCassandraViewThroughput
// method.
type CassandraResourcesClientGetCassandraViewThroughputOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientListCassandraKeyspacesOptions contains the optional parameters for the CassandraResourcesClient.NewListCassandraKeyspacesPager
// method.
type CassandraResourcesClientListCassandraKeyspacesOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientListCassandraTablesOptions contains the optional parameters for the CassandraResourcesClient.NewListCassandraTablesPager
// method.
type CassandraResourcesClientListCassandraTablesOptions struct {
	// placeholder for future optional parameters
}

// CassandraResourcesClientListCassandraViewsOptions contains the optional parameters for the CassandraResourcesClient.NewListCassandraViewsPager
// method.
type CassandraResourcesClientListCassandraViewsOptions struct {
	// placeholder for future optional parameters
}

// CollectionClientListMetricDefinitionsOptions contains the optional parameters for the CollectionClient.NewListMetricDefinitionsPager
// method.
type CollectionClientListMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// CollectionClientListMetricsOptions contains the optional parameters for the CollectionClient.NewListMetricsPager method.
type CollectionClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// CollectionClientListUsagesOptions contains the optional parameters for the CollectionClient.NewListUsagesPager method.
type CollectionClientListUsagesOptions struct {
	// An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of
	// the metric, can have an or of multiple names).
	Filter *string
}

// CollectionPartitionClientListMetricsOptions contains the optional parameters for the CollectionPartitionClient.NewListMetricsPager
// method.
type CollectionPartitionClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// CollectionPartitionClientListUsagesOptions contains the optional parameters for the CollectionPartitionClient.NewListUsagesPager
// method.
type CollectionPartitionClientListUsagesOptions struct {
	// An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of
	// the metric, can have an or of multiple names).
	Filter *string
}

// CollectionPartitionRegionClientListMetricsOptions contains the optional parameters for the CollectionPartitionRegionClient.NewListMetricsPager
// method.
type CollectionPartitionRegionClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// CollectionRegionClientListMetricsOptions contains the optional parameters for the CollectionRegionClient.NewListMetricsPager
// method.
type CollectionRegionClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// DataTransferJobsClientCancelOptions contains the optional parameters for the DataTransferJobsClient.Cancel method.
type DataTransferJobsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// DataTransferJobsClientCreateOptions contains the optional parameters for the DataTransferJobsClient.Create method.
type DataTransferJobsClientCreateOptions struct {
	// placeholder for future optional parameters
}

// DataTransferJobsClientGetOptions contains the optional parameters for the DataTransferJobsClient.Get method.
type DataTransferJobsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DataTransferJobsClientListByDatabaseAccountOptions contains the optional parameters for the DataTransferJobsClient.NewListByDatabaseAccountPager
// method.
type DataTransferJobsClientListByDatabaseAccountOptions struct {
	// placeholder for future optional parameters
}

// DataTransferJobsClientPauseOptions contains the optional parameters for the DataTransferJobsClient.Pause method.
type DataTransferJobsClientPauseOptions struct {
	// placeholder for future optional parameters
}

// DataTransferJobsClientResumeOptions contains the optional parameters for the DataTransferJobsClient.Resume method.
type DataTransferJobsClientResumeOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountRegionClientListMetricsOptions contains the optional parameters for the DatabaseAccountRegionClient.NewListMetricsPager
// method.
type DatabaseAccountRegionClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientBeginCreateOrUpdateOptions contains the optional parameters for the DatabaseAccountsClient.BeginCreateOrUpdate
// method.
type DatabaseAccountsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseAccountsClientBeginDeleteOptions contains the optional parameters for the DatabaseAccountsClient.BeginDelete method.
type DatabaseAccountsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseAccountsClientBeginFailoverPriorityChangeOptions contains the optional parameters for the DatabaseAccountsClient.BeginFailoverPriorityChange
// method.
type DatabaseAccountsClientBeginFailoverPriorityChangeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseAccountsClientBeginOfflineRegionOptions contains the optional parameters for the DatabaseAccountsClient.BeginOfflineRegion
// method.
type DatabaseAccountsClientBeginOfflineRegionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseAccountsClientBeginOnlineRegionOptions contains the optional parameters for the DatabaseAccountsClient.BeginOnlineRegion
// method.
type DatabaseAccountsClientBeginOnlineRegionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseAccountsClientBeginRegenerateKeyOptions contains the optional parameters for the DatabaseAccountsClient.BeginRegenerateKey
// method.
type DatabaseAccountsClientBeginRegenerateKeyOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseAccountsClientBeginUpdateOptions contains the optional parameters for the DatabaseAccountsClient.BeginUpdate method.
type DatabaseAccountsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseAccountsClientCheckNameExistsOptions contains the optional parameters for the DatabaseAccountsClient.CheckNameExists
// method.
type DatabaseAccountsClientCheckNameExistsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientGetOptions contains the optional parameters for the DatabaseAccountsClient.Get method.
type DatabaseAccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientGetReadOnlyKeysOptions contains the optional parameters for the DatabaseAccountsClient.GetReadOnlyKeys
// method.
type DatabaseAccountsClientGetReadOnlyKeysOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListByResourceGroupOptions contains the optional parameters for the DatabaseAccountsClient.NewListByResourceGroupPager
// method.
type DatabaseAccountsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListConnectionStringsOptions contains the optional parameters for the DatabaseAccountsClient.ListConnectionStrings
// method.
type DatabaseAccountsClientListConnectionStringsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListKeysOptions contains the optional parameters for the DatabaseAccountsClient.ListKeys method.
type DatabaseAccountsClientListKeysOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListMetricDefinitionsOptions contains the optional parameters for the DatabaseAccountsClient.NewListMetricDefinitionsPager
// method.
type DatabaseAccountsClientListMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListMetricsOptions contains the optional parameters for the DatabaseAccountsClient.NewListMetricsPager
// method.
type DatabaseAccountsClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListOptions contains the optional parameters for the DatabaseAccountsClient.NewListPager method.
type DatabaseAccountsClientListOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListReadOnlyKeysOptions contains the optional parameters for the DatabaseAccountsClient.ListReadOnlyKeys
// method.
type DatabaseAccountsClientListReadOnlyKeysOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAccountsClientListUsagesOptions contains the optional parameters for the DatabaseAccountsClient.NewListUsagesPager
// method.
type DatabaseAccountsClientListUsagesOptions struct {
	// An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of
	// the metric, can have an or of multiple names).
	Filter *string
}

// DatabaseClientListMetricDefinitionsOptions contains the optional parameters for the DatabaseClient.NewListMetricDefinitionsPager
// method.
type DatabaseClientListMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseClientListMetricsOptions contains the optional parameters for the DatabaseClient.NewListMetricsPager method.
type DatabaseClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseClientListUsagesOptions contains the optional parameters for the DatabaseClient.NewListUsagesPager method.
type DatabaseClientListUsagesOptions struct {
	// An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of
	// the metric, can have an or of multiple names).
	Filter *string
}

// GraphResourcesClientBeginCreateUpdateGraphOptions contains the optional parameters for the GraphResourcesClient.BeginCreateUpdateGraph
// method.
type GraphResourcesClientBeginCreateUpdateGraphOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GraphResourcesClientBeginDeleteGraphResourceOptions contains the optional parameters for the GraphResourcesClient.BeginDeleteGraphResource
// method.
type GraphResourcesClientBeginDeleteGraphResourceOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GraphResourcesClientGetGraphOptions contains the optional parameters for the GraphResourcesClient.GetGraph method.
type GraphResourcesClientGetGraphOptions struct {
	// placeholder for future optional parameters
}

// GraphResourcesClientListGraphsOptions contains the optional parameters for the GraphResourcesClient.NewListGraphsPager
// method.
type GraphResourcesClientListGraphsOptions struct {
	// placeholder for future optional parameters
}

// GremlinResourcesClientBeginCreateUpdateGremlinDatabaseOptions contains the optional parameters for the GremlinResourcesClient.BeginCreateUpdateGremlinDatabase
// method.
type GremlinResourcesClientBeginCreateUpdateGremlinDatabaseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginCreateUpdateGremlinGraphOptions contains the optional parameters for the GremlinResourcesClient.BeginCreateUpdateGremlinGraph
// method.
type GremlinResourcesClientBeginCreateUpdateGremlinGraphOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginDeleteGremlinDatabaseOptions contains the optional parameters for the GremlinResourcesClient.BeginDeleteGremlinDatabase
// method.
type GremlinResourcesClientBeginDeleteGremlinDatabaseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginDeleteGremlinGraphOptions contains the optional parameters for the GremlinResourcesClient.BeginDeleteGremlinGraph
// method.
type GremlinResourcesClientBeginDeleteGremlinGraphOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginMigrateGremlinDatabaseToAutoscaleOptions contains the optional parameters for the GremlinResourcesClient.BeginMigrateGremlinDatabaseToAutoscale
// method.
type GremlinResourcesClientBeginMigrateGremlinDatabaseToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginMigrateGremlinDatabaseToManualThroughputOptions contains the optional parameters for the GremlinResourcesClient.BeginMigrateGremlinDatabaseToManualThroughput
// method.
type GremlinResourcesClientBeginMigrateGremlinDatabaseToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginMigrateGremlinGraphToAutoscaleOptions contains the optional parameters for the GremlinResourcesClient.BeginMigrateGremlinGraphToAutoscale
// method.
type GremlinResourcesClientBeginMigrateGremlinGraphToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginMigrateGremlinGraphToManualThroughputOptions contains the optional parameters for the GremlinResourcesClient.BeginMigrateGremlinGraphToManualThroughput
// method.
type GremlinResourcesClientBeginMigrateGremlinGraphToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginRetrieveContinuousBackupInformationOptions contains the optional parameters for the GremlinResourcesClient.BeginRetrieveContinuousBackupInformation
// method.
type GremlinResourcesClientBeginRetrieveContinuousBackupInformationOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginUpdateGremlinDatabaseThroughputOptions contains the optional parameters for the GremlinResourcesClient.BeginUpdateGremlinDatabaseThroughput
// method.
type GremlinResourcesClientBeginUpdateGremlinDatabaseThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientBeginUpdateGremlinGraphThroughputOptions contains the optional parameters for the GremlinResourcesClient.BeginUpdateGremlinGraphThroughput
// method.
type GremlinResourcesClientBeginUpdateGremlinGraphThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GremlinResourcesClientGetGremlinDatabaseOptions contains the optional parameters for the GremlinResourcesClient.GetGremlinDatabase
// method.
type GremlinResourcesClientGetGremlinDatabaseOptions struct {
	// placeholder for future optional parameters
}

// GremlinResourcesClientGetGremlinDatabaseThroughputOptions contains the optional parameters for the GremlinResourcesClient.GetGremlinDatabaseThroughput
// method.
type GremlinResourcesClientGetGremlinDatabaseThroughputOptions struct {
	// placeholder for future optional parameters
}

// GremlinResourcesClientGetGremlinGraphOptions contains the optional parameters for the GremlinResourcesClient.GetGremlinGraph
// method.
type GremlinResourcesClientGetGremlinGraphOptions struct {
	// placeholder for future optional parameters
}

// GremlinResourcesClientGetGremlinGraphThroughputOptions contains the optional parameters for the GremlinResourcesClient.GetGremlinGraphThroughput
// method.
type GremlinResourcesClientGetGremlinGraphThroughputOptions struct {
	// placeholder for future optional parameters
}

// GremlinResourcesClientListGremlinDatabasesOptions contains the optional parameters for the GremlinResourcesClient.NewListGremlinDatabasesPager
// method.
type GremlinResourcesClientListGremlinDatabasesOptions struct {
	// placeholder for future optional parameters
}

// GremlinResourcesClientListGremlinGraphsOptions contains the optional parameters for the GremlinResourcesClient.NewListGremlinGraphsPager
// method.
type GremlinResourcesClientListGremlinGraphsOptions struct {
	// placeholder for future optional parameters
}

// LocationsClientGetOptions contains the optional parameters for the LocationsClient.Get method.
type LocationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// LocationsClientListOptions contains the optional parameters for the LocationsClient.NewListPager method.
type LocationsClientListOptions struct {
	// placeholder for future optional parameters
}

// MongoClustersClientBeginCreateOrUpdateFirewallRuleOptions contains the optional parameters for the MongoClustersClient.BeginCreateOrUpdateFirewallRule
// method.
type MongoClustersClientBeginCreateOrUpdateFirewallRuleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoClustersClientBeginCreateOrUpdateOptions contains the optional parameters for the MongoClustersClient.BeginCreateOrUpdate
// method.
type MongoClustersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoClustersClientBeginDeleteFirewallRuleOptions contains the optional parameters for the MongoClustersClient.BeginDeleteFirewallRule
// method.
type MongoClustersClientBeginDeleteFirewallRuleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoClustersClientBeginDeleteOptions contains the optional parameters for the MongoClustersClient.BeginDelete method.
type MongoClustersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoClustersClientBeginUpdateOptions contains the optional parameters for the MongoClustersClient.BeginUpdate method.
type MongoClustersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoClustersClientCheckNameAvailabilityOptions contains the optional parameters for the MongoClustersClient.CheckNameAvailability
// method.
type MongoClustersClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// MongoClustersClientGetFirewallRuleOptions contains the optional parameters for the MongoClustersClient.GetFirewallRule
// method.
type MongoClustersClientGetFirewallRuleOptions struct {
	// placeholder for future optional parameters
}

// MongoClustersClientGetOptions contains the optional parameters for the MongoClustersClient.Get method.
type MongoClustersClientGetOptions struct {
	// placeholder for future optional parameters
}

// MongoClustersClientListByResourceGroupOptions contains the optional parameters for the MongoClustersClient.NewListByResourceGroupPager
// method.
type MongoClustersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// MongoClustersClientListConnectionStringsOptions contains the optional parameters for the MongoClustersClient.ListConnectionStrings
// method.
type MongoClustersClientListConnectionStringsOptions struct {
	// placeholder for future optional parameters
}

// MongoClustersClientListFirewallRulesOptions contains the optional parameters for the MongoClustersClient.NewListFirewallRulesPager
// method.
type MongoClustersClientListFirewallRulesOptions struct {
	// placeholder for future optional parameters
}

// MongoClustersClientListOptions contains the optional parameters for the MongoClustersClient.NewListPager method.
type MongoClustersClientListOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientBeginCreateUpdateMongoDBCollectionOptions contains the optional parameters for the MongoDBResourcesClient.BeginCreateUpdateMongoDBCollection
// method.
type MongoDBResourcesClientBeginCreateUpdateMongoDBCollectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginCreateUpdateMongoDBDatabaseOptions contains the optional parameters for the MongoDBResourcesClient.BeginCreateUpdateMongoDBDatabase
// method.
type MongoDBResourcesClientBeginCreateUpdateMongoDBDatabaseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginCreateUpdateMongoRoleDefinitionOptions contains the optional parameters for the MongoDBResourcesClient.BeginCreateUpdateMongoRoleDefinition
// method.
type MongoDBResourcesClientBeginCreateUpdateMongoRoleDefinitionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginCreateUpdateMongoUserDefinitionOptions contains the optional parameters for the MongoDBResourcesClient.BeginCreateUpdateMongoUserDefinition
// method.
type MongoDBResourcesClientBeginCreateUpdateMongoUserDefinitionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginDeleteMongoDBCollectionOptions contains the optional parameters for the MongoDBResourcesClient.BeginDeleteMongoDBCollection
// method.
type MongoDBResourcesClientBeginDeleteMongoDBCollectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginDeleteMongoDBDatabaseOptions contains the optional parameters for the MongoDBResourcesClient.BeginDeleteMongoDBDatabase
// method.
type MongoDBResourcesClientBeginDeleteMongoDBDatabaseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginDeleteMongoRoleDefinitionOptions contains the optional parameters for the MongoDBResourcesClient.BeginDeleteMongoRoleDefinition
// method.
type MongoDBResourcesClientBeginDeleteMongoRoleDefinitionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginDeleteMongoUserDefinitionOptions contains the optional parameters for the MongoDBResourcesClient.BeginDeleteMongoUserDefinition
// method.
type MongoDBResourcesClientBeginDeleteMongoUserDefinitionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginListMongoDBCollectionPartitionMergeOptions contains the optional parameters for the MongoDBResourcesClient.BeginListMongoDBCollectionPartitionMerge
// method.
type MongoDBResourcesClientBeginListMongoDBCollectionPartitionMergeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMigrateMongoDBCollectionToAutoscaleOptions contains the optional parameters for the MongoDBResourcesClient.BeginMigrateMongoDBCollectionToAutoscale
// method.
type MongoDBResourcesClientBeginMigrateMongoDBCollectionToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMigrateMongoDBCollectionToManualThroughputOptions contains the optional parameters for the MongoDBResourcesClient.BeginMigrateMongoDBCollectionToManualThroughput
// method.
type MongoDBResourcesClientBeginMigrateMongoDBCollectionToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMigrateMongoDBDatabaseToAutoscaleOptions contains the optional parameters for the MongoDBResourcesClient.BeginMigrateMongoDBDatabaseToAutoscale
// method.
type MongoDBResourcesClientBeginMigrateMongoDBDatabaseToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMigrateMongoDBDatabaseToManualThroughputOptions contains the optional parameters for the MongoDBResourcesClient.BeginMigrateMongoDBDatabaseToManualThroughput
// method.
type MongoDBResourcesClientBeginMigrateMongoDBDatabaseToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMongoDBContainerRedistributeThroughputOptions contains the optional parameters for the MongoDBResourcesClient.BeginMongoDBContainerRedistributeThroughput
// method.
type MongoDBResourcesClientBeginMongoDBContainerRedistributeThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMongoDBContainerRetrieveThroughputDistributionOptions contains the optional parameters for the
// MongoDBResourcesClient.BeginMongoDBContainerRetrieveThroughputDistribution method.
type MongoDBResourcesClientBeginMongoDBContainerRetrieveThroughputDistributionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMongoDBDatabasePartitionMergeOptions contains the optional parameters for the MongoDBResourcesClient.BeginMongoDBDatabasePartitionMerge
// method.
type MongoDBResourcesClientBeginMongoDBDatabasePartitionMergeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMongoDBDatabaseRedistributeThroughputOptions contains the optional parameters for the MongoDBResourcesClient.BeginMongoDBDatabaseRedistributeThroughput
// method.
type MongoDBResourcesClientBeginMongoDBDatabaseRedistributeThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginMongoDBDatabaseRetrieveThroughputDistributionOptions contains the optional parameters for the
// MongoDBResourcesClient.BeginMongoDBDatabaseRetrieveThroughputDistribution method.
type MongoDBResourcesClientBeginMongoDBDatabaseRetrieveThroughputDistributionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginRetrieveContinuousBackupInformationOptions contains the optional parameters for the MongoDBResourcesClient.BeginRetrieveContinuousBackupInformation
// method.
type MongoDBResourcesClientBeginRetrieveContinuousBackupInformationOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginUpdateMongoDBCollectionThroughputOptions contains the optional parameters for the MongoDBResourcesClient.BeginUpdateMongoDBCollectionThroughput
// method.
type MongoDBResourcesClientBeginUpdateMongoDBCollectionThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientBeginUpdateMongoDBDatabaseThroughputOptions contains the optional parameters for the MongoDBResourcesClient.BeginUpdateMongoDBDatabaseThroughput
// method.
type MongoDBResourcesClientBeginUpdateMongoDBDatabaseThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// MongoDBResourcesClientGetMongoDBCollectionOptions contains the optional parameters for the MongoDBResourcesClient.GetMongoDBCollection
// method.
type MongoDBResourcesClientGetMongoDBCollectionOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientGetMongoDBCollectionThroughputOptions contains the optional parameters for the MongoDBResourcesClient.GetMongoDBCollectionThroughput
// method.
type MongoDBResourcesClientGetMongoDBCollectionThroughputOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientGetMongoDBDatabaseOptions contains the optional parameters for the MongoDBResourcesClient.GetMongoDBDatabase
// method.
type MongoDBResourcesClientGetMongoDBDatabaseOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientGetMongoDBDatabaseThroughputOptions contains the optional parameters for the MongoDBResourcesClient.GetMongoDBDatabaseThroughput
// method.
type MongoDBResourcesClientGetMongoDBDatabaseThroughputOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientGetMongoRoleDefinitionOptions contains the optional parameters for the MongoDBResourcesClient.GetMongoRoleDefinition
// method.
type MongoDBResourcesClientGetMongoRoleDefinitionOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientGetMongoUserDefinitionOptions contains the optional parameters for the MongoDBResourcesClient.GetMongoUserDefinition
// method.
type MongoDBResourcesClientGetMongoUserDefinitionOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientListMongoDBCollectionsOptions contains the optional parameters for the MongoDBResourcesClient.NewListMongoDBCollectionsPager
// method.
type MongoDBResourcesClientListMongoDBCollectionsOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientListMongoDBDatabasesOptions contains the optional parameters for the MongoDBResourcesClient.NewListMongoDBDatabasesPager
// method.
type MongoDBResourcesClientListMongoDBDatabasesOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientListMongoRoleDefinitionsOptions contains the optional parameters for the MongoDBResourcesClient.NewListMongoRoleDefinitionsPager
// method.
type MongoDBResourcesClientListMongoRoleDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// MongoDBResourcesClientListMongoUserDefinitionsOptions contains the optional parameters for the MongoDBResourcesClient.NewListMongoUserDefinitionsPager
// method.
type MongoDBResourcesClientListMongoUserDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// NotebookWorkspacesClientBeginCreateOrUpdateOptions contains the optional parameters for the NotebookWorkspacesClient.BeginCreateOrUpdate
// method.
type NotebookWorkspacesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NotebookWorkspacesClientBeginDeleteOptions contains the optional parameters for the NotebookWorkspacesClient.BeginDelete
// method.
type NotebookWorkspacesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NotebookWorkspacesClientBeginRegenerateAuthTokenOptions contains the optional parameters for the NotebookWorkspacesClient.BeginRegenerateAuthToken
// method.
type NotebookWorkspacesClientBeginRegenerateAuthTokenOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NotebookWorkspacesClientBeginStartOptions contains the optional parameters for the NotebookWorkspacesClient.BeginStart
// method.
type NotebookWorkspacesClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NotebookWorkspacesClientGetOptions contains the optional parameters for the NotebookWorkspacesClient.Get method.
type NotebookWorkspacesClientGetOptions struct {
	// placeholder for future optional parameters
}

// NotebookWorkspacesClientListByDatabaseAccountOptions contains the optional parameters for the NotebookWorkspacesClient.NewListByDatabaseAccountPager
// method.
type NotebookWorkspacesClientListByDatabaseAccountOptions struct {
	// placeholder for future optional parameters
}

// NotebookWorkspacesClientListConnectionInfoOptions contains the optional parameters for the NotebookWorkspacesClient.ListConnectionInfo
// method.
type NotebookWorkspacesClientListConnectionInfoOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PartitionKeyRangeIDClientListMetricsOptions contains the optional parameters for the PartitionKeyRangeIDClient.NewListMetricsPager
// method.
type PartitionKeyRangeIDClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// PartitionKeyRangeIDRegionClientListMetricsOptions contains the optional parameters for the PartitionKeyRangeIDRegionClient.NewListMetricsPager
// method.
type PartitionKeyRangeIDRegionClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// PercentileClientListMetricsOptions contains the optional parameters for the PercentileClient.NewListMetricsPager method.
type PercentileClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// PercentileSourceTargetClientListMetricsOptions contains the optional parameters for the PercentileSourceTargetClient.NewListMetricsPager
// method.
type PercentileSourceTargetClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// PercentileTargetClientListMetricsOptions contains the optional parameters for the PercentileTargetClient.NewListMetricsPager
// method.
type PercentileTargetClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginCreateOrUpdate
// method.
type PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginDelete
// method.
type PrivateEndpointConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Get
// method.
type PrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientListByDatabaseAccountOptions contains the optional parameters for the PrivateEndpointConnectionsClient.NewListByDatabaseAccountPager
// method.
type PrivateEndpointConnectionsClientListByDatabaseAccountOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientGetOptions contains the optional parameters for the PrivateLinkResourcesClient.Get method.
type PrivateLinkResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientListByDatabaseAccountOptions contains the optional parameters for the PrivateLinkResourcesClient.NewListByDatabaseAccountPager
// method.
type PrivateLinkResourcesClientListByDatabaseAccountOptions struct {
	// placeholder for future optional parameters
}

// RestorableDatabaseAccountsClientGetByLocationOptions contains the optional parameters for the RestorableDatabaseAccountsClient.GetByLocation
// method.
type RestorableDatabaseAccountsClientGetByLocationOptions struct {
	// placeholder for future optional parameters
}

// RestorableDatabaseAccountsClientListByLocationOptions contains the optional parameters for the RestorableDatabaseAccountsClient.NewListByLocationPager
// method.
type RestorableDatabaseAccountsClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// RestorableDatabaseAccountsClientListOptions contains the optional parameters for the RestorableDatabaseAccountsClient.NewListPager
// method.
type RestorableDatabaseAccountsClientListOptions struct {
	// placeholder for future optional parameters
}

// RestorableGremlinDatabasesClientListOptions contains the optional parameters for the RestorableGremlinDatabasesClient.NewListPager
// method.
type RestorableGremlinDatabasesClientListOptions struct {
	// placeholder for future optional parameters
}

// RestorableGremlinGraphsClientListOptions contains the optional parameters for the RestorableGremlinGraphsClient.NewListPager
// method.
type RestorableGremlinGraphsClientListOptions struct {
	// Restorable Gremlin graphs event feed end time.
	EndTime *string

	// The resource ID of the Gremlin database.
	RestorableGremlinDatabaseRid *string

	// Restorable Gremlin graphs event feed start time.
	StartTime *string
}

// RestorableGremlinResourcesClientListOptions contains the optional parameters for the RestorableGremlinResourcesClient.NewListPager
// method.
type RestorableGremlinResourcesClientListOptions struct {
	// The location where the restorable resources are located.
	RestoreLocation *string

	// The timestamp when the restorable resources existed.
	RestoreTimestampInUTC *string
}

// RestorableMongodbCollectionsClientListOptions contains the optional parameters for the RestorableMongodbCollectionsClient.NewListPager
// method.
type RestorableMongodbCollectionsClientListOptions struct {
	// Restorable MongoDB collections event feed end time.
	EndTime *string

	// The resource ID of the MongoDB database.
	RestorableMongodbDatabaseRid *string

	// Restorable MongoDB collections event feed start time.
	StartTime *string
}

// RestorableMongodbDatabasesClientListOptions contains the optional parameters for the RestorableMongodbDatabasesClient.NewListPager
// method.
type RestorableMongodbDatabasesClientListOptions struct {
	// placeholder for future optional parameters
}

// RestorableMongodbResourcesClientListOptions contains the optional parameters for the RestorableMongodbResourcesClient.NewListPager
// method.
type RestorableMongodbResourcesClientListOptions struct {
	// The location where the restorable resources are located.
	RestoreLocation *string

	// The timestamp when the restorable resources existed.
	RestoreTimestampInUTC *string
}

// RestorableSQLContainersClientListOptions contains the optional parameters for the RestorableSQLContainersClient.NewListPager
// method.
type RestorableSQLContainersClientListOptions struct {
	// Restorable Sql containers event feed end time.
	EndTime *string

	// The resource ID of the SQL database.
	RestorableSQLDatabaseRid *string

	// Restorable Sql containers event feed start time.
	StartTime *string
}

// RestorableSQLDatabasesClientListOptions contains the optional parameters for the RestorableSQLDatabasesClient.NewListPager
// method.
type RestorableSQLDatabasesClientListOptions struct {
	// placeholder for future optional parameters
}

// RestorableSQLResourcesClientListOptions contains the optional parameters for the RestorableSQLResourcesClient.NewListPager
// method.
type RestorableSQLResourcesClientListOptions struct {
	// The location where the restorable resources are located.
	RestoreLocation *string

	// The timestamp when the restorable resources existed.
	RestoreTimestampInUTC *string
}

// RestorableTableResourcesClientListOptions contains the optional parameters for the RestorableTableResourcesClient.NewListPager
// method.
type RestorableTableResourcesClientListOptions struct {
	// The location where the restorable resources are located.
	RestoreLocation *string

	// The timestamp when the restorable resources existed.
	RestoreTimestampInUTC *string
}

// RestorableTablesClientListOptions contains the optional parameters for the RestorableTablesClient.NewListPager method.
type RestorableTablesClientListOptions struct {
	// Restorable Tables event feed end time.
	EndTime *string

	// Restorable Tables event feed start time.
	StartTime *string
}

// SQLResourcesClientBeginCreateUpdateClientEncryptionKeyOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateClientEncryptionKey
// method.
type SQLResourcesClientBeginCreateUpdateClientEncryptionKeyOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginCreateUpdateSQLContainerOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateSQLContainer
// method.
type SQLResourcesClientBeginCreateUpdateSQLContainerOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginCreateUpdateSQLDatabaseOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateSQLDatabase
// method.
type SQLResourcesClientBeginCreateUpdateSQLDatabaseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginCreateUpdateSQLRoleAssignmentOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateSQLRoleAssignment
// method.
type SQLResourcesClientBeginCreateUpdateSQLRoleAssignmentOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginCreateUpdateSQLRoleDefinitionOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateSQLRoleDefinition
// method.
type SQLResourcesClientBeginCreateUpdateSQLRoleDefinitionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginCreateUpdateSQLStoredProcedureOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateSQLStoredProcedure
// method.
type SQLResourcesClientBeginCreateUpdateSQLStoredProcedureOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginCreateUpdateSQLTriggerOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateSQLTrigger
// method.
type SQLResourcesClientBeginCreateUpdateSQLTriggerOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginCreateUpdateSQLUserDefinedFunctionOptions contains the optional parameters for the SQLResourcesClient.BeginCreateUpdateSQLUserDefinedFunction
// method.
type SQLResourcesClientBeginCreateUpdateSQLUserDefinedFunctionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginDeleteSQLContainerOptions contains the optional parameters for the SQLResourcesClient.BeginDeleteSQLContainer
// method.
type SQLResourcesClientBeginDeleteSQLContainerOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginDeleteSQLDatabaseOptions contains the optional parameters for the SQLResourcesClient.BeginDeleteSQLDatabase
// method.
type SQLResourcesClientBeginDeleteSQLDatabaseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginDeleteSQLRoleAssignmentOptions contains the optional parameters for the SQLResourcesClient.BeginDeleteSQLRoleAssignment
// method.
type SQLResourcesClientBeginDeleteSQLRoleAssignmentOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginDeleteSQLRoleDefinitionOptions contains the optional parameters for the SQLResourcesClient.BeginDeleteSQLRoleDefinition
// method.
type SQLResourcesClientBeginDeleteSQLRoleDefinitionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginDeleteSQLStoredProcedureOptions contains the optional parameters for the SQLResourcesClient.BeginDeleteSQLStoredProcedure
// method.
type SQLResourcesClientBeginDeleteSQLStoredProcedureOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginDeleteSQLTriggerOptions contains the optional parameters for the SQLResourcesClient.BeginDeleteSQLTrigger
// method.
type SQLResourcesClientBeginDeleteSQLTriggerOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginDeleteSQLUserDefinedFunctionOptions contains the optional parameters for the SQLResourcesClient.BeginDeleteSQLUserDefinedFunction
// method.
type SQLResourcesClientBeginDeleteSQLUserDefinedFunctionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginListSQLContainerPartitionMergeOptions contains the optional parameters for the SQLResourcesClient.BeginListSQLContainerPartitionMerge
// method.
type SQLResourcesClientBeginListSQLContainerPartitionMergeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginMigrateSQLContainerToAutoscaleOptions contains the optional parameters for the SQLResourcesClient.BeginMigrateSQLContainerToAutoscale
// method.
type SQLResourcesClientBeginMigrateSQLContainerToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginMigrateSQLContainerToManualThroughputOptions contains the optional parameters for the SQLResourcesClient.BeginMigrateSQLContainerToManualThroughput
// method.
type SQLResourcesClientBeginMigrateSQLContainerToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginMigrateSQLDatabaseToAutoscaleOptions contains the optional parameters for the SQLResourcesClient.BeginMigrateSQLDatabaseToAutoscale
// method.
type SQLResourcesClientBeginMigrateSQLDatabaseToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginMigrateSQLDatabaseToManualThroughputOptions contains the optional parameters for the SQLResourcesClient.BeginMigrateSQLDatabaseToManualThroughput
// method.
type SQLResourcesClientBeginMigrateSQLDatabaseToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginRetrieveContinuousBackupInformationOptions contains the optional parameters for the SQLResourcesClient.BeginRetrieveContinuousBackupInformation
// method.
type SQLResourcesClientBeginRetrieveContinuousBackupInformationOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginSQLContainerRedistributeThroughputOptions contains the optional parameters for the SQLResourcesClient.BeginSQLContainerRedistributeThroughput
// method.
type SQLResourcesClientBeginSQLContainerRedistributeThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginSQLContainerRetrieveThroughputDistributionOptions contains the optional parameters for the SQLResourcesClient.BeginSQLContainerRetrieveThroughputDistribution
// method.
type SQLResourcesClientBeginSQLContainerRetrieveThroughputDistributionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginSQLDatabasePartitionMergeOptions contains the optional parameters for the SQLResourcesClient.BeginSQLDatabasePartitionMerge
// method.
type SQLResourcesClientBeginSQLDatabasePartitionMergeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginSQLDatabaseRedistributeThroughputOptions contains the optional parameters for the SQLResourcesClient.BeginSQLDatabaseRedistributeThroughput
// method.
type SQLResourcesClientBeginSQLDatabaseRedistributeThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginSQLDatabaseRetrieveThroughputDistributionOptions contains the optional parameters for the SQLResourcesClient.BeginSQLDatabaseRetrieveThroughputDistribution
// method.
type SQLResourcesClientBeginSQLDatabaseRetrieveThroughputDistributionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginUpdateSQLContainerThroughputOptions contains the optional parameters for the SQLResourcesClient.BeginUpdateSQLContainerThroughput
// method.
type SQLResourcesClientBeginUpdateSQLContainerThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientBeginUpdateSQLDatabaseThroughputOptions contains the optional parameters for the SQLResourcesClient.BeginUpdateSQLDatabaseThroughput
// method.
type SQLResourcesClientBeginUpdateSQLDatabaseThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SQLResourcesClientGetClientEncryptionKeyOptions contains the optional parameters for the SQLResourcesClient.GetClientEncryptionKey
// method.
type SQLResourcesClientGetClientEncryptionKeyOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLContainerOptions contains the optional parameters for the SQLResourcesClient.GetSQLContainer method.
type SQLResourcesClientGetSQLContainerOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLContainerThroughputOptions contains the optional parameters for the SQLResourcesClient.GetSQLContainerThroughput
// method.
type SQLResourcesClientGetSQLContainerThroughputOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLDatabaseOptions contains the optional parameters for the SQLResourcesClient.GetSQLDatabase method.
type SQLResourcesClientGetSQLDatabaseOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLDatabaseThroughputOptions contains the optional parameters for the SQLResourcesClient.GetSQLDatabaseThroughput
// method.
type SQLResourcesClientGetSQLDatabaseThroughputOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLRoleAssignmentOptions contains the optional parameters for the SQLResourcesClient.GetSQLRoleAssignment
// method.
type SQLResourcesClientGetSQLRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLRoleDefinitionOptions contains the optional parameters for the SQLResourcesClient.GetSQLRoleDefinition
// method.
type SQLResourcesClientGetSQLRoleDefinitionOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLStoredProcedureOptions contains the optional parameters for the SQLResourcesClient.GetSQLStoredProcedure
// method.
type SQLResourcesClientGetSQLStoredProcedureOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLTriggerOptions contains the optional parameters for the SQLResourcesClient.GetSQLTrigger method.
type SQLResourcesClientGetSQLTriggerOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientGetSQLUserDefinedFunctionOptions contains the optional parameters for the SQLResourcesClient.GetSQLUserDefinedFunction
// method.
type SQLResourcesClientGetSQLUserDefinedFunctionOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListClientEncryptionKeysOptions contains the optional parameters for the SQLResourcesClient.NewListClientEncryptionKeysPager
// method.
type SQLResourcesClientListClientEncryptionKeysOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListSQLContainersOptions contains the optional parameters for the SQLResourcesClient.NewListSQLContainersPager
// method.
type SQLResourcesClientListSQLContainersOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListSQLDatabasesOptions contains the optional parameters for the SQLResourcesClient.NewListSQLDatabasesPager
// method.
type SQLResourcesClientListSQLDatabasesOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListSQLRoleAssignmentsOptions contains the optional parameters for the SQLResourcesClient.NewListSQLRoleAssignmentsPager
// method.
type SQLResourcesClientListSQLRoleAssignmentsOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListSQLRoleDefinitionsOptions contains the optional parameters for the SQLResourcesClient.NewListSQLRoleDefinitionsPager
// method.
type SQLResourcesClientListSQLRoleDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListSQLStoredProceduresOptions contains the optional parameters for the SQLResourcesClient.NewListSQLStoredProceduresPager
// method.
type SQLResourcesClientListSQLStoredProceduresOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListSQLTriggersOptions contains the optional parameters for the SQLResourcesClient.NewListSQLTriggersPager
// method.
type SQLResourcesClientListSQLTriggersOptions struct {
	// placeholder for future optional parameters
}

// SQLResourcesClientListSQLUserDefinedFunctionsOptions contains the optional parameters for the SQLResourcesClient.NewListSQLUserDefinedFunctionsPager
// method.
type SQLResourcesClientListSQLUserDefinedFunctionsOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientBeginCreateOptions contains the optional parameters for the ServiceClient.BeginCreate method.
type ServiceClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientBeginDeleteOptions contains the optional parameters for the ServiceClient.BeginDelete method.
type ServiceClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceClientGetOptions contains the optional parameters for the ServiceClient.Get method.
type ServiceClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServiceClientListOptions contains the optional parameters for the ServiceClient.NewListPager method.
type ServiceClientListOptions struct {
	// placeholder for future optional parameters
}

// TableResourcesClientBeginCreateUpdateTableOptions contains the optional parameters for the TableResourcesClient.BeginCreateUpdateTable
// method.
type TableResourcesClientBeginCreateUpdateTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TableResourcesClientBeginDeleteTableOptions contains the optional parameters for the TableResourcesClient.BeginDeleteTable
// method.
type TableResourcesClientBeginDeleteTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TableResourcesClientBeginMigrateTableToAutoscaleOptions contains the optional parameters for the TableResourcesClient.BeginMigrateTableToAutoscale
// method.
type TableResourcesClientBeginMigrateTableToAutoscaleOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TableResourcesClientBeginMigrateTableToManualThroughputOptions contains the optional parameters for the TableResourcesClient.BeginMigrateTableToManualThroughput
// method.
type TableResourcesClientBeginMigrateTableToManualThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TableResourcesClientBeginRetrieveContinuousBackupInformationOptions contains the optional parameters for the TableResourcesClient.BeginRetrieveContinuousBackupInformation
// method.
type TableResourcesClientBeginRetrieveContinuousBackupInformationOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TableResourcesClientBeginUpdateTableThroughputOptions contains the optional parameters for the TableResourcesClient.BeginUpdateTableThroughput
// method.
type TableResourcesClientBeginUpdateTableThroughputOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TableResourcesClientGetTableOptions contains the optional parameters for the TableResourcesClient.GetTable method.
type TableResourcesClientGetTableOptions struct {
	// placeholder for future optional parameters
}

// TableResourcesClientGetTableThroughputOptions contains the optional parameters for the TableResourcesClient.GetTableThroughput
// method.
type TableResourcesClientGetTableThroughputOptions struct {
	// placeholder for future optional parameters
}

// TableResourcesClientListTablesOptions contains the optional parameters for the TableResourcesClient.NewListTablesPager
// method.
type TableResourcesClientListTablesOptions struct {
	// placeholder for future optional parameters
}
