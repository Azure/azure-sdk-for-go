//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armcustomerlockbox

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
	"time"
)

// Approval - Request content object, in the use of Approve or Deny a Lockbox request.
type Approval struct {
	// Reason of the decision
	Reason *string `json:"reason,omitempty"`

	// Approval decision to the Lockbox request.
	Status *Status `json:"status,omitempty"`
}

// ErrorAdditionalInfo - An error additional info for the Lockbox service.
type ErrorAdditionalInfo struct {
	// Additional information about the request that is in error state.
	Info *ErrorAdditionalInfoInfo `json:"info,omitempty"`

	// The type of error info.
	Type *string `json:"type,omitempty"`
}

// ErrorAdditionalInfoInfo - Additional information about the request that is in error state.
type ErrorAdditionalInfoInfo struct {
	// The current status/state of the request quired.
	CurrentStatus *Status `json:"currentStatus,omitempty"`
}

// ErrorBody - An error response body from the Lockbox service.
type ErrorBody struct {
	// A list of error details about the error.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty"`

	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code *string `json:"code,omitempty"`

	// A message describing the error, intended to be suitable for display in a user interface.
	Message *string `json:"message,omitempty"`

	// The target of the particular error. For example, the name of the property in error.
	Target *string `json:"target,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ErrorBody.
func (e ErrorBody) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "additionalInfo", e.AdditionalInfo)
	populate(objectMap, "code", e.Code)
	populate(objectMap, "message", e.Message)
	populate(objectMap, "target", e.Target)
	return json.Marshal(objectMap)
}

// ErrorResponse - An error response from the Lockbox service.
// Implements the error and azcore.HTTPResponse interfaces.
type ErrorResponse struct {
	raw string
	// Detailed information about the error encountered.
	InnerError *ErrorBody `json:"error,omitempty"`
}

// Error implements the error interface for type ErrorResponse.
// The contents of the error text are not contractual and subject to change.
func (e ErrorResponse) Error() string {
	return e.raw
}

// GetTenantOptedInOptions contains the optional parameters for the Get.TenantOptedIn method.
type GetTenantOptedInOptions struct {
	// placeholder for future optional parameters
}

// LockboxRequestResponse - A Lockbox request response object, containing all information associated with the request.
type LockboxRequestResponse struct {
	// The properties that are associated with a lockbox request.
	Properties *LockboxRequestResponseProperties `json:"properties,omitempty"`

	// READ-ONLY; The Arm resource id of the Lockbox request.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Lockbox request.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the Lockbox request.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// LockboxRequestResponseProperties - The properties that are associated with a lockbox request.
type LockboxRequestResponseProperties struct {
	// The status of the request.
	Status *Status `json:"status,omitempty"`

	// READ-ONLY; Access level for requested resource
	AccessLevel *string `json:"accessLevel,omitempty" azure:"ro"`

	// READ-ONLY; The creation time of the request.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty" azure:"ro"`

	// READ-ONLY; The duration of the request in hours.
	Duration *string `json:"duration,omitempty" azure:"ro"`

	// READ-ONLY; The expiration time of the request.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty" azure:"ro"`

	// READ-ONLY; The justification of the requestor.
	Justification *string `json:"justification,omitempty" azure:"ro"`

	// READ-ONLY; The Lockbox request ID.
	RequestID *string `json:"requestId,omitempty" azure:"ro"`

	// READ-ONLY; A list of resource IDs associated with the Lockbox request separated by ','.
	ResourceIDs *string `json:"resourceIds,omitempty" azure:"ro"`

	// READ-ONLY; The resource type of the requested resources.
	ResourceType *string `json:"resourceType,omitempty" azure:"ro"`

	// READ-ONLY; The subscription ID.
	SubscriptionID *string `json:"subscriptionId,omitempty" azure:"ro"`

	// READ-ONLY; The url of the support case.
	SupportCaseURL *string `json:"supportCaseUrl,omitempty" azure:"ro"`

	// READ-ONLY; The id of the support request associated.
	SupportRequest *string `json:"supportRequest,omitempty" azure:"ro"`

	// READ-ONLY; The support case system that was used to initiate the request.
	Workitemsource *string `json:"workitemsource,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type LockboxRequestResponseProperties.
func (l LockboxRequestResponseProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "accessLevel", l.AccessLevel)
	populateTimeRFC3339(objectMap, "createdDateTime", l.CreatedDateTime)
	populate(objectMap, "duration", l.Duration)
	populateTimeRFC3339(objectMap, "expirationDateTime", l.ExpirationDateTime)
	populate(objectMap, "justification", l.Justification)
	populate(objectMap, "requestId", l.RequestID)
	populate(objectMap, "resourceIds", l.ResourceIDs)
	populate(objectMap, "resourceType", l.ResourceType)
	populate(objectMap, "status", l.Status)
	populate(objectMap, "subscriptionId", l.SubscriptionID)
	populate(objectMap, "supportCaseUrl", l.SupportCaseURL)
	populate(objectMap, "supportRequest", l.SupportRequest)
	populate(objectMap, "workitemsource", l.Workitemsource)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type LockboxRequestResponseProperties.
func (l *LockboxRequestResponseProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "accessLevel":
			err = unpopulate(val, &l.AccessLevel)
			delete(rawMsg, key)
		case "createdDateTime":
			err = unpopulateTimeRFC3339(val, &l.CreatedDateTime)
			delete(rawMsg, key)
		case "duration":
			err = unpopulate(val, &l.Duration)
			delete(rawMsg, key)
		case "expirationDateTime":
			err = unpopulateTimeRFC3339(val, &l.ExpirationDateTime)
			delete(rawMsg, key)
		case "justification":
			err = unpopulate(val, &l.Justification)
			delete(rawMsg, key)
		case "requestId":
			err = unpopulate(val, &l.RequestID)
			delete(rawMsg, key)
		case "resourceIds":
			err = unpopulate(val, &l.ResourceIDs)
			delete(rawMsg, key)
		case "resourceType":
			err = unpopulate(val, &l.ResourceType)
			delete(rawMsg, key)
		case "status":
			err = unpopulate(val, &l.Status)
			delete(rawMsg, key)
		case "subscriptionId":
			err = unpopulate(val, &l.SubscriptionID)
			delete(rawMsg, key)
		case "supportCaseUrl":
			err = unpopulate(val, &l.SupportCaseURL)
			delete(rawMsg, key)
		case "supportRequest":
			err = unpopulate(val, &l.SupportRequest)
			delete(rawMsg, key)
		case "workitemsource":
			err = unpopulate(val, &l.Workitemsource)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// Operation result model for ARM RP
type Operation struct {
	// READ-ONLY; Contains the localized display information for this particular operation / action.
	Display *OperationDisplay `json:"display,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets a value indicating whether it is a data plane action
	IsDataAction *string `json:"isDataAction,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets action name
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets origin
	Origin *string `json:"origin,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets properties
	Properties *string `json:"properties,omitempty" azure:"ro"`
}

// OperationDisplay - Contains the localized display information for this particular operation / action.
type OperationDisplay struct {
	// READ-ONLY; The localized friendly description for the operation.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly name for the operation.
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly form of the resource provider name.
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly form of the resource type related to this action/operation.
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationListResult - Result of the request to list Customer Lockbox operations. It contains a list of operations.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results if there are any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of Customer Lockbox operations supported by the Microsoft.StreamAnalytics resource provider.
	Value []*Operation `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationListResult.
func (o OperationListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", o.NextLink)
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// PostDisableLockboxOptions contains the optional parameters for the Post.DisableLockbox method.
type PostDisableLockboxOptions struct {
	// placeholder for future optional parameters
}

// PostEnableLockboxOptions contains the optional parameters for the Post.EnableLockbox method.
type PostEnableLockboxOptions struct {
	// placeholder for future optional parameters
}

// RequestListResult - Object containing a list of streaming jobs.
type RequestListResult struct {
	// READ-ONLY; URL to get the next set of operation list results if there are any.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; A list of Lockbox requests. Populated by a 'List' operation.
	Value []*LockboxRequestResponse `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type RequestListResult.
func (r RequestListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", r.NextLink)
	populate(objectMap, "value", r.Value)
	return json.Marshal(objectMap)
}

// RequestsGetOptions contains the optional parameters for the Requests.Get method.
type RequestsGetOptions struct {
	// placeholder for future optional parameters
}

// RequestsListOptions contains the optional parameters for the Requests.List method.
type RequestsListOptions struct {
	// The $filter OData query parameter. Only filter by request status is supported, e.g $filter=properties/status eq 'Pending'
	Filter *string
}

// RequestsUpdateStatusOptions contains the optional parameters for the Requests.UpdateStatus method.
type RequestsUpdateStatusOptions struct {
	// placeholder for future optional parameters
}

// TenantOptInResponse - TenantOptIn Response object
type TenantOptInResponse struct {
	// READ-ONLY; True if tenant is opted in, false otherwise
	IsOptedIn *bool `json:"isOptedIn,omitempty" azure:"ro"`
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
