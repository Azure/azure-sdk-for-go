//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdatacatalog

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// ADCCatalogsCreateOrUpdateResponse contains the response from method ADCCatalogs.CreateOrUpdate.
type ADCCatalogsCreateOrUpdateResponse struct {
	ADCCatalogsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ADCCatalogsCreateOrUpdateResult contains the result from method ADCCatalogs.CreateOrUpdate.
type ADCCatalogsCreateOrUpdateResult struct {
	ADCCatalog
}

// ADCCatalogsDeletePollerResponse contains the response from method ADCCatalogs.Delete.
type ADCCatalogsDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ADCCatalogsDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ADCCatalogsDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ADCCatalogsDeleteResponse, error) {
	respType := ADCCatalogsDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ADCCatalogsDeletePollerResponse from the provided client and resume token.
func (l *ADCCatalogsDeletePollerResponse) Resume(ctx context.Context, client *ADCCatalogsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ADCCatalogsClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &ADCCatalogsDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ADCCatalogsDeleteResponse contains the response from method ADCCatalogs.Delete.
type ADCCatalogsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ADCCatalogsGetResponse contains the response from method ADCCatalogs.Get.
type ADCCatalogsGetResponse struct {
	ADCCatalogsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ADCCatalogsGetResult contains the result from method ADCCatalogs.Get.
type ADCCatalogsGetResult struct {
	ADCCatalog
}

// ADCCatalogsListtByResourceGroupResponse contains the response from method ADCCatalogs.ListtByResourceGroup.
type ADCCatalogsListtByResourceGroupResponse struct {
	ADCCatalogsListtByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ADCCatalogsListtByResourceGroupResult contains the result from method ADCCatalogs.ListtByResourceGroup.
type ADCCatalogsListtByResourceGroupResult struct {
	ADCCatalogsListResult
}

// ADCCatalogsUpdateResponse contains the response from method ADCCatalogs.Update.
type ADCCatalogsUpdateResponse struct {
	ADCCatalogsUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ADCCatalogsUpdateResult contains the result from method ADCCatalogs.Update.
type ADCCatalogsUpdateResult struct {
	ADCCatalog
}

// ADCOperationsListResponse contains the response from method ADCOperations.List.
type ADCOperationsListResponse struct {
	ADCOperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ADCOperationsListResult contains the result from method ADCOperations.List.
type ADCOperationsListResult struct {
	OperationEntityListResult
}
