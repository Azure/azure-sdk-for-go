//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdatalakeanalytics

// AccountsClientBeginCreateOptions contains the optional parameters for the AccountsClient.BeginCreate method.
type AccountsClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountsClientBeginDeleteOptions contains the optional parameters for the AccountsClient.BeginDelete method.
type AccountsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountsClientBeginUpdateOptions contains the optional parameters for the AccountsClient.BeginUpdate method.
type AccountsClientBeginUpdateOptions struct {
	// Parameters supplied to the update Data Lake Analytics account operation.
	Parameters *UpdateDataLakeAnalyticsAccountParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AccountsClientCheckNameAvailabilityOptions contains the optional parameters for the AccountsClient.CheckNameAvailability
// method.
type AccountsClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientGetOptions contains the optional parameters for the AccountsClient.Get method.
type AccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccountsClientListByResourceGroupOptions contains the optional parameters for the AccountsClient.NewListByResourceGroupPager
// method.
type AccountsClientListByResourceGroupOptions struct {
	// The Boolean value of true or false to request a count of the matching resources included with the resources in the response,
	// e.g. Categories?$count=true. Optional.
	Count *bool

	// OData filter. Optional.
	Filter *string

	// OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the
	// order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc.
	// Optional.
	Orderby *string

	// OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description.
	// Optional.
	Select *string

	// The number of items to skip over before returning elements. Optional.
	Skip *int32

	// The number of items to return. Optional.
	Top *int32
}

// AccountsClientListOptions contains the optional parameters for the AccountsClient.NewListPager method.
type AccountsClientListOptions struct {
	// The Boolean value of true or false to request a count of the matching resources included with the resources in the response,
	// e.g. Categories?$count=true. Optional.
	Count *bool

	// OData filter. Optional.
	Filter *string

	// OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the
	// order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc.
	// Optional.
	Orderby *string

	// OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description.
	// Optional.
	Select *string

	// The number of items to skip over before returning elements. Optional.
	Skip *int32

	// The number of items to return. Optional.
	Top *int32
}

// ComputePoliciesClientCreateOrUpdateOptions contains the optional parameters for the ComputePoliciesClient.CreateOrUpdate
// method.
type ComputePoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ComputePoliciesClientDeleteOptions contains the optional parameters for the ComputePoliciesClient.Delete method.
type ComputePoliciesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ComputePoliciesClientGetOptions contains the optional parameters for the ComputePoliciesClient.Get method.
type ComputePoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ComputePoliciesClientListByAccountOptions contains the optional parameters for the ComputePoliciesClient.NewListByAccountPager
// method.
type ComputePoliciesClientListByAccountOptions struct {
	// placeholder for future optional parameters
}

// ComputePoliciesClientUpdateOptions contains the optional parameters for the ComputePoliciesClient.Update method.
type ComputePoliciesClientUpdateOptions struct {
	// Parameters supplied to update the compute policy.
	Parameters *UpdateComputePolicyParameters
}

// DataLakeStoreAccountsClientAddOptions contains the optional parameters for the DataLakeStoreAccountsClient.Add method.
type DataLakeStoreAccountsClientAddOptions struct {
	// The details of the Data Lake Store account.
	Parameters *AddDataLakeStoreParameters
}

// DataLakeStoreAccountsClientDeleteOptions contains the optional parameters for the DataLakeStoreAccountsClient.Delete method.
type DataLakeStoreAccountsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DataLakeStoreAccountsClientGetOptions contains the optional parameters for the DataLakeStoreAccountsClient.Get method.
type DataLakeStoreAccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DataLakeStoreAccountsClientListByAccountOptions contains the optional parameters for the DataLakeStoreAccountsClient.NewListByAccountPager
// method.
type DataLakeStoreAccountsClientListByAccountOptions struct {
	// The Boolean value of true or false to request a count of the matching resources included with the resources in the response,
	// e.g. Categories?$count=true. Optional.
	Count *bool

	// OData filter. Optional.
	Filter *string

	// OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the
	// order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc.
	// Optional.
	Orderby *string

	// OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description.
	// Optional.
	Select *string

	// The number of items to skip over before returning elements. Optional.
	Skip *int32

	// The number of items to return. Optional.
	Top *int32
}

// FirewallRulesClientCreateOrUpdateOptions contains the optional parameters for the FirewallRulesClient.CreateOrUpdate method.
type FirewallRulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientDeleteOptions contains the optional parameters for the FirewallRulesClient.Delete method.
type FirewallRulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientGetOptions contains the optional parameters for the FirewallRulesClient.Get method.
type FirewallRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientListByAccountOptions contains the optional parameters for the FirewallRulesClient.NewListByAccountPager
// method.
type FirewallRulesClientListByAccountOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientUpdateOptions contains the optional parameters for the FirewallRulesClient.Update method.
type FirewallRulesClientUpdateOptions struct {
	// Parameters supplied to update the firewall rule.
	Parameters *UpdateFirewallRuleParameters
}

// LocationsClientGetCapabilityOptions contains the optional parameters for the LocationsClient.GetCapability method.
type LocationsClientGetCapabilityOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// StorageAccountsClientAddOptions contains the optional parameters for the StorageAccountsClient.Add method.
type StorageAccountsClientAddOptions struct {
	// placeholder for future optional parameters
}

// StorageAccountsClientDeleteOptions contains the optional parameters for the StorageAccountsClient.Delete method.
type StorageAccountsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// StorageAccountsClientGetOptions contains the optional parameters for the StorageAccountsClient.Get method.
type StorageAccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// StorageAccountsClientGetStorageContainerOptions contains the optional parameters for the StorageAccountsClient.GetStorageContainer
// method.
type StorageAccountsClientGetStorageContainerOptions struct {
	// placeholder for future optional parameters
}

// StorageAccountsClientListByAccountOptions contains the optional parameters for the StorageAccountsClient.NewListByAccountPager
// method.
type StorageAccountsClientListByAccountOptions struct {
	// The Boolean value of true or false to request a count of the matching resources included with the resources in the response,
	// e.g. Categories?$count=true. Optional.
	Count *bool

	// The OData filter. Optional.
	Filter *string

	// OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the
	// order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc.
	// Optional.
	Orderby *string

	// OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description.
	// Optional.
	Select *string

	// The number of items to skip over before returning elements. Optional.
	Skip *int32

	// The number of items to return. Optional.
	Top *int32
}

// StorageAccountsClientListSasTokensOptions contains the optional parameters for the StorageAccountsClient.NewListSasTokensPager
// method.
type StorageAccountsClientListSasTokensOptions struct {
	// placeholder for future optional parameters
}

// StorageAccountsClientListStorageContainersOptions contains the optional parameters for the StorageAccountsClient.NewListStorageContainersPager
// method.
type StorageAccountsClientListStorageContainersOptions struct {
	// placeholder for future optional parameters
}

// StorageAccountsClientUpdateOptions contains the optional parameters for the StorageAccountsClient.Update method.
type StorageAccountsClientUpdateOptions struct {
	// The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results
	// in no change.
	Parameters *UpdateStorageAccountParameters
}
