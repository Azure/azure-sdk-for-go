//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdataprotection_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dataprotection/armdataprotection"
)

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetResourceGuardsInSubscription.json
func ExampleResourceGuardsClient_GetResourcesInSubscription() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetResourcesInSubscription(nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("ResourceGuardResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetResourceGuardsInResourceGroup.json
func ExampleResourceGuardsClient_GetResourcesInResourceGroup() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetResourcesInResourceGroup("<resource-group-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("ResourceGuardResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/PutResourceGuard.json
func ExampleResourceGuardsClient_Put() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.Put(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		armdataprotection.ResourceGuardResource{
			DppTrackedResource: armdataprotection.DppTrackedResource{
				Location: to.StringPtr("<location>"),
				Tags: map[string]*string{
					"key1": to.StringPtr("val1"),
				},
			},
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("ResourceGuardResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetResourceGuard.json
func ExampleResourceGuardsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("ResourceGuardResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/DeleteResourceGuard.json
func ExampleResourceGuardsClient_Delete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	_, err = client.Delete(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/PatchResourceGuard.json
func ExampleResourceGuardsClient_Patch() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.Patch(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		armdataprotection.PatchResourceRequestInput{
			Tags: map[string]*string{
				"newKey": to.StringPtr("newVal"),
			},
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("ResourceGuardResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/ListDisableSoftDeleteRequests.json
func ExampleResourceGuardsClient_GetDisableSoftDeleteRequestsObjects() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetDisableSoftDeleteRequestsObjects("<resource-group-name>",
		"<resource-guards-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("DppBaseResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/ListDeleteResourceGuardProxyRequests.json
func ExampleResourceGuardsClient_GetDeleteResourceGuardProxyRequestsObjects() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetDeleteResourceGuardProxyRequestsObjects("<resource-group-name>",
		"<resource-guards-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("DppBaseResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/ListBackupSecurityPINRequests.json
func ExampleResourceGuardsClient_GetBackupSecurityPINRequestsObjects() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetBackupSecurityPINRequestsObjects("<resource-group-name>",
		"<resource-guards-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("DppBaseResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/ListDeleteProtectedItemRequests.json
func ExampleResourceGuardsClient_GetDeleteProtectedItemRequestsObjects() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetDeleteProtectedItemRequestsObjects("<resource-group-name>",
		"<resource-guards-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("DppBaseResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/ListUpdateProtectionPolicyRequests.json
func ExampleResourceGuardsClient_GetUpdateProtectionPolicyRequestsObjects() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetUpdateProtectionPolicyRequestsObjects("<resource-group-name>",
		"<resource-guards-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("DppBaseResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/ListUpdateProtectedItemRequests.json
func ExampleResourceGuardsClient_GetUpdateProtectedItemRequestsObjects() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	pager := client.GetUpdateProtectedItemRequestsObjects("<resource-group-name>",
		"<resource-guards-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("DppBaseResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetDefaultDisableSoftDeleteRequests.json
func ExampleResourceGuardsClient_GetDefaultDisableSoftDeleteRequestsObject() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.GetDefaultDisableSoftDeleteRequestsObject(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		"<request-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("DppBaseResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetDefaultDeleteResourceGuardProxyRequests.json
func ExampleResourceGuardsClient_GetDefaultDeleteResourceGuardProxyRequestsObject() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.GetDefaultDeleteResourceGuardProxyRequestsObject(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		"<request-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("DppBaseResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetDefaultBackupSecurityPINRequests.json
func ExampleResourceGuardsClient_GetDefaultBackupSecurityPINRequestsObject() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.GetDefaultBackupSecurityPINRequestsObject(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		"<request-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("DppBaseResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetDefaultDeleteProtectedItemRequests.json
func ExampleResourceGuardsClient_GetDefaultDeleteProtectedItemRequestsObject() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.GetDefaultDeleteProtectedItemRequestsObject(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		"<request-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("DppBaseResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetDefaultUpdateProtectionPolicyRequests.json
func ExampleResourceGuardsClient_GetDefaultUpdateProtectionPolicyRequestsObject() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.GetDefaultUpdateProtectionPolicyRequestsObject(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		"<request-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("DppBaseResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/dataprotection/resource-manager/Microsoft.DataProtection/stable/2021-07-01/examples/ResourceGuardCRUD/GetDefaultUpdateProtectedItemRequests.json
func ExampleResourceGuardsClient_GetDefaultUpdateProtectedItemRequestsObject() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armdataprotection.NewResourceGuardsClient("<subscription-id>", cred, nil)
	res, err := client.GetDefaultUpdateProtectedItemRequestsObject(ctx,
		"<resource-group-name>",
		"<resource-guards-name>",
		"<request-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("DppBaseResource.ID: %s\n", *res.ID)
}
