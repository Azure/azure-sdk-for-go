//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdeploymentmanager

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// ArtifactSourcesCreateOrUpdateResponse contains the response from method ArtifactSources.CreateOrUpdate.
type ArtifactSourcesCreateOrUpdateResponse struct {
	ArtifactSourcesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ArtifactSourcesCreateOrUpdateResult contains the result from method ArtifactSources.CreateOrUpdate.
type ArtifactSourcesCreateOrUpdateResult struct {
	ArtifactSource
}

// ArtifactSourcesDeleteResponse contains the response from method ArtifactSources.Delete.
type ArtifactSourcesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ArtifactSourcesGetResponse contains the response from method ArtifactSources.Get.
type ArtifactSourcesGetResponse struct {
	ArtifactSourcesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ArtifactSourcesGetResult contains the result from method ArtifactSources.Get.
type ArtifactSourcesGetResult struct {
	ArtifactSource
}

// ArtifactSourcesListResponse contains the response from method ArtifactSources.List.
type ArtifactSourcesListResponse struct {
	ArtifactSourcesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ArtifactSourcesListResult contains the result from method ArtifactSources.List.
type ArtifactSourcesListResult struct {
	// The list of artifact sources.
	ArtifactSourceArray []*ArtifactSource
}

// OperationsListResponse contains the response from method Operations.List.
type OperationsListResponse struct {
	OperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsListResult contains the result from method Operations.List.
type OperationsListResult struct {
	OperationsList
}

// RolloutsCancelResponse contains the response from method Rollouts.Cancel.
type RolloutsCancelResponse struct {
	RolloutsCancelResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RolloutsCancelResult contains the result from method Rollouts.Cancel.
type RolloutsCancelResult struct {
	Rollout
}

// RolloutsCreateOrUpdatePollerResponse contains the response from method Rollouts.CreateOrUpdate.
type RolloutsCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *RolloutsCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l RolloutsCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (RolloutsCreateOrUpdateResponse, error) {
	respType := RolloutsCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.RolloutRequest)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a RolloutsCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *RolloutsCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *RolloutsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("RolloutsClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &RolloutsCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// RolloutsCreateOrUpdateResponse contains the response from method Rollouts.CreateOrUpdate.
type RolloutsCreateOrUpdateResponse struct {
	RolloutsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RolloutsCreateOrUpdateResult contains the result from method Rollouts.CreateOrUpdate.
type RolloutsCreateOrUpdateResult struct {
	RolloutRequest
}

// RolloutsDeleteResponse contains the response from method Rollouts.Delete.
type RolloutsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RolloutsGetResponse contains the response from method Rollouts.Get.
type RolloutsGetResponse struct {
	RolloutsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RolloutsGetResult contains the result from method Rollouts.Get.
type RolloutsGetResult struct {
	Rollout
}

// RolloutsListResponse contains the response from method Rollouts.List.
type RolloutsListResponse struct {
	RolloutsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RolloutsListResult contains the result from method Rollouts.List.
type RolloutsListResult struct {
	// The list of rollouts.
	RolloutArray []*Rollout
}

// RolloutsRestartResponse contains the response from method Rollouts.Restart.
type RolloutsRestartResponse struct {
	RolloutsRestartResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RolloutsRestartResult contains the result from method Rollouts.Restart.
type RolloutsRestartResult struct {
	Rollout
}

// ServiceTopologiesCreateOrUpdateResponse contains the response from method ServiceTopologies.CreateOrUpdate.
type ServiceTopologiesCreateOrUpdateResponse struct {
	ServiceTopologiesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceTopologiesCreateOrUpdateResult contains the result from method ServiceTopologies.CreateOrUpdate.
type ServiceTopologiesCreateOrUpdateResult struct {
	ServiceTopologyResource
}

// ServiceTopologiesDeleteResponse contains the response from method ServiceTopologies.Delete.
type ServiceTopologiesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceTopologiesGetResponse contains the response from method ServiceTopologies.Get.
type ServiceTopologiesGetResponse struct {
	ServiceTopologiesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceTopologiesGetResult contains the result from method ServiceTopologies.Get.
type ServiceTopologiesGetResult struct {
	ServiceTopologyResource
}

// ServiceTopologiesListResponse contains the response from method ServiceTopologies.List.
type ServiceTopologiesListResponse struct {
	ServiceTopologiesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceTopologiesListResult contains the result from method ServiceTopologies.List.
type ServiceTopologiesListResult struct {
	// The list of service topologies.
	ServiceTopologyResourceArray []*ServiceTopologyResource
}

// ServiceUnitsCreateOrUpdatePollerResponse contains the response from method ServiceUnits.CreateOrUpdate.
type ServiceUnitsCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ServiceUnitsCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ServiceUnitsCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ServiceUnitsCreateOrUpdateResponse, error) {
	respType := ServiceUnitsCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.ServiceUnitResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ServiceUnitsCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *ServiceUnitsCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *ServiceUnitsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ServiceUnitsClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &ServiceUnitsCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ServiceUnitsCreateOrUpdateResponse contains the response from method ServiceUnits.CreateOrUpdate.
type ServiceUnitsCreateOrUpdateResponse struct {
	ServiceUnitsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceUnitsCreateOrUpdateResult contains the result from method ServiceUnits.CreateOrUpdate.
type ServiceUnitsCreateOrUpdateResult struct {
	ServiceUnitResource
}

// ServiceUnitsDeleteResponse contains the response from method ServiceUnits.Delete.
type ServiceUnitsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceUnitsGetResponse contains the response from method ServiceUnits.Get.
type ServiceUnitsGetResponse struct {
	ServiceUnitsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceUnitsGetResult contains the result from method ServiceUnits.Get.
type ServiceUnitsGetResult struct {
	ServiceUnitResource
}

// ServiceUnitsListResponse contains the response from method ServiceUnits.List.
type ServiceUnitsListResponse struct {
	ServiceUnitsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServiceUnitsListResult contains the result from method ServiceUnits.List.
type ServiceUnitsListResult struct {
	// The list of service units.
	ServiceUnitResourceArray []*ServiceUnitResource
}

// ServicesCreateOrUpdateResponse contains the response from method Services.CreateOrUpdate.
type ServicesCreateOrUpdateResponse struct {
	ServicesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServicesCreateOrUpdateResult contains the result from method Services.CreateOrUpdate.
type ServicesCreateOrUpdateResult struct {
	ServiceResource
}

// ServicesDeleteResponse contains the response from method Services.Delete.
type ServicesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServicesGetResponse contains the response from method Services.Get.
type ServicesGetResponse struct {
	ServicesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServicesGetResult contains the result from method Services.Get.
type ServicesGetResult struct {
	ServiceResource
}

// ServicesListResponse contains the response from method Services.List.
type ServicesListResponse struct {
	ServicesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ServicesListResult contains the result from method Services.List.
type ServicesListResult struct {
	// The list of services.
	ServiceResourceArray []*ServiceResource
}

// StepsCreateOrUpdateResponse contains the response from method Steps.CreateOrUpdate.
type StepsCreateOrUpdateResponse struct {
	StepsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StepsCreateOrUpdateResult contains the result from method Steps.CreateOrUpdate.
type StepsCreateOrUpdateResult struct {
	StepResource
}

// StepsDeleteResponse contains the response from method Steps.Delete.
type StepsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StepsGetResponse contains the response from method Steps.Get.
type StepsGetResponse struct {
	StepsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StepsGetResult contains the result from method Steps.Get.
type StepsGetResult struct {
	StepResource
}

// StepsListResponse contains the response from method Steps.List.
type StepsListResponse struct {
	StepsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StepsListResult contains the result from method Steps.List.
type StepsListResult struct {
	// The list of steps.
	StepResourceArray []*StepResource
}
