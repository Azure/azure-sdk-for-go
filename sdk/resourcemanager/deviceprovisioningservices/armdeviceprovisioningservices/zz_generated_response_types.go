//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdeviceprovisioningservices

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// DpsCertificateCreateOrUpdateResponse contains the response from method DpsCertificate.CreateOrUpdate.
type DpsCertificateCreateOrUpdateResponse struct {
	DpsCertificateCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DpsCertificateCreateOrUpdateResult contains the result from method DpsCertificate.CreateOrUpdate.
type DpsCertificateCreateOrUpdateResult struct {
	CertificateResponse
}

// DpsCertificateDeleteResponse contains the response from method DpsCertificate.Delete.
type DpsCertificateDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DpsCertificateGenerateVerificationCodeResponse contains the response from method DpsCertificate.GenerateVerificationCode.
type DpsCertificateGenerateVerificationCodeResponse struct {
	DpsCertificateGenerateVerificationCodeResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DpsCertificateGenerateVerificationCodeResult contains the result from method DpsCertificate.GenerateVerificationCode.
type DpsCertificateGenerateVerificationCodeResult struct {
	VerificationCodeResponse
}

// DpsCertificateGetResponse contains the response from method DpsCertificate.Get.
type DpsCertificateGetResponse struct {
	DpsCertificateGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DpsCertificateGetResult contains the result from method DpsCertificate.Get.
type DpsCertificateGetResult struct {
	CertificateResponse
}

// DpsCertificateListResponse contains the response from method DpsCertificate.List.
type DpsCertificateListResponse struct {
	DpsCertificateListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DpsCertificateListResult contains the result from method DpsCertificate.List.
type DpsCertificateListResult struct {
	CertificateListDescription
}

// DpsCertificateVerifyCertificateResponse contains the response from method DpsCertificate.VerifyCertificate.
type DpsCertificateVerifyCertificateResponse struct {
	DpsCertificateVerifyCertificateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DpsCertificateVerifyCertificateResult contains the result from method DpsCertificate.VerifyCertificate.
type DpsCertificateVerifyCertificateResult struct {
	CertificateResponse
}

// IotDpsResourceCheckProvisioningServiceNameAvailabilityResponse contains the response from method IotDpsResource.CheckProvisioningServiceNameAvailability.
type IotDpsResourceCheckProvisioningServiceNameAvailabilityResponse struct {
	IotDpsResourceCheckProvisioningServiceNameAvailabilityResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceCheckProvisioningServiceNameAvailabilityResult contains the result from method IotDpsResource.CheckProvisioningServiceNameAvailability.
type IotDpsResourceCheckProvisioningServiceNameAvailabilityResult struct {
	NameAvailabilityInfo
}

// IotDpsResourceCreateOrUpdatePollerResponse contains the response from method IotDpsResource.CreateOrUpdate.
type IotDpsResourceCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotDpsResourceCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l IotDpsResourceCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotDpsResourceCreateOrUpdateResponse, error) {
	respType := IotDpsResourceCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.ProvisioningServiceDescription)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotDpsResourceCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *IotDpsResourceCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *IotDpsResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotDpsResourceClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &IotDpsResourceCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotDpsResourceCreateOrUpdatePrivateEndpointConnectionPollerResponse contains the response from method IotDpsResource.CreateOrUpdatePrivateEndpointConnection.
type IotDpsResourceCreateOrUpdatePrivateEndpointConnectionPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotDpsResourceCreateOrUpdatePrivateEndpointConnectionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l IotDpsResourceCreateOrUpdatePrivateEndpointConnectionPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse, error) {
	respType := IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PrivateEndpointConnection)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotDpsResourceCreateOrUpdatePrivateEndpointConnectionPollerResponse from the provided client and resume token.
func (l *IotDpsResourceCreateOrUpdatePrivateEndpointConnectionPollerResponse) Resume(ctx context.Context, client *IotDpsResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotDpsResourceClient.CreateOrUpdatePrivateEndpointConnection", token, client.pl, client.createOrUpdatePrivateEndpointConnectionHandleError)
	if err != nil {
		return err
	}
	poller := &IotDpsResourceCreateOrUpdatePrivateEndpointConnectionPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse contains the response from method IotDpsResource.CreateOrUpdatePrivateEndpointConnection.
type IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse struct {
	IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResult contains the result from method IotDpsResource.CreateOrUpdatePrivateEndpointConnection.
type IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResult struct {
	PrivateEndpointConnection
}

// IotDpsResourceCreateOrUpdateResponse contains the response from method IotDpsResource.CreateOrUpdate.
type IotDpsResourceCreateOrUpdateResponse struct {
	IotDpsResourceCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceCreateOrUpdateResult contains the result from method IotDpsResource.CreateOrUpdate.
type IotDpsResourceCreateOrUpdateResult struct {
	ProvisioningServiceDescription
}

// IotDpsResourceDeletePollerResponse contains the response from method IotDpsResource.Delete.
type IotDpsResourceDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotDpsResourceDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l IotDpsResourceDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotDpsResourceDeleteResponse, error) {
	respType := IotDpsResourceDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotDpsResourceDeletePollerResponse from the provided client and resume token.
func (l *IotDpsResourceDeletePollerResponse) Resume(ctx context.Context, client *IotDpsResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotDpsResourceClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &IotDpsResourceDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotDpsResourceDeletePrivateEndpointConnectionPollerResponse contains the response from method IotDpsResource.DeletePrivateEndpointConnection.
type IotDpsResourceDeletePrivateEndpointConnectionPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotDpsResourceDeletePrivateEndpointConnectionPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l IotDpsResourceDeletePrivateEndpointConnectionPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotDpsResourceDeletePrivateEndpointConnectionResponse, error) {
	respType := IotDpsResourceDeletePrivateEndpointConnectionResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PrivateEndpointConnection)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotDpsResourceDeletePrivateEndpointConnectionPollerResponse from the provided client and resume token.
func (l *IotDpsResourceDeletePrivateEndpointConnectionPollerResponse) Resume(ctx context.Context, client *IotDpsResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotDpsResourceClient.DeletePrivateEndpointConnection", token, client.pl, client.deletePrivateEndpointConnectionHandleError)
	if err != nil {
		return err
	}
	poller := &IotDpsResourceDeletePrivateEndpointConnectionPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotDpsResourceDeletePrivateEndpointConnectionResponse contains the response from method IotDpsResource.DeletePrivateEndpointConnection.
type IotDpsResourceDeletePrivateEndpointConnectionResponse struct {
	IotDpsResourceDeletePrivateEndpointConnectionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceDeletePrivateEndpointConnectionResult contains the result from method IotDpsResource.DeletePrivateEndpointConnection.
type IotDpsResourceDeletePrivateEndpointConnectionResult struct {
	PrivateEndpointConnection
}

// IotDpsResourceDeleteResponse contains the response from method IotDpsResource.Delete.
type IotDpsResourceDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceGetOperationResultResponse contains the response from method IotDpsResource.GetOperationResult.
type IotDpsResourceGetOperationResultResponse struct {
	IotDpsResourceGetOperationResultResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceGetOperationResultResult contains the result from method IotDpsResource.GetOperationResult.
type IotDpsResourceGetOperationResultResult struct {
	AsyncOperationResult
}

// IotDpsResourceGetPrivateEndpointConnectionResponse contains the response from method IotDpsResource.GetPrivateEndpointConnection.
type IotDpsResourceGetPrivateEndpointConnectionResponse struct {
	IotDpsResourceGetPrivateEndpointConnectionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceGetPrivateEndpointConnectionResult contains the result from method IotDpsResource.GetPrivateEndpointConnection.
type IotDpsResourceGetPrivateEndpointConnectionResult struct {
	PrivateEndpointConnection
}

// IotDpsResourceGetPrivateLinkResourcesResponse contains the response from method IotDpsResource.GetPrivateLinkResources.
type IotDpsResourceGetPrivateLinkResourcesResponse struct {
	IotDpsResourceGetPrivateLinkResourcesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceGetPrivateLinkResourcesResult contains the result from method IotDpsResource.GetPrivateLinkResources.
type IotDpsResourceGetPrivateLinkResourcesResult struct {
	GroupIDInformation
}

// IotDpsResourceGetResponse contains the response from method IotDpsResource.Get.
type IotDpsResourceGetResponse struct {
	IotDpsResourceGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceGetResult contains the result from method IotDpsResource.Get.
type IotDpsResourceGetResult struct {
	ProvisioningServiceDescription
}

// IotDpsResourceListByResourceGroupResponse contains the response from method IotDpsResource.ListByResourceGroup.
type IotDpsResourceListByResourceGroupResponse struct {
	IotDpsResourceListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceListByResourceGroupResult contains the result from method IotDpsResource.ListByResourceGroup.
type IotDpsResourceListByResourceGroupResult struct {
	ProvisioningServiceDescriptionListResult
}

// IotDpsResourceListBySubscriptionResponse contains the response from method IotDpsResource.ListBySubscription.
type IotDpsResourceListBySubscriptionResponse struct {
	IotDpsResourceListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceListBySubscriptionResult contains the result from method IotDpsResource.ListBySubscription.
type IotDpsResourceListBySubscriptionResult struct {
	ProvisioningServiceDescriptionListResult
}

// IotDpsResourceListKeysForKeyNameResponse contains the response from method IotDpsResource.ListKeysForKeyName.
type IotDpsResourceListKeysForKeyNameResponse struct {
	IotDpsResourceListKeysForKeyNameResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceListKeysForKeyNameResult contains the result from method IotDpsResource.ListKeysForKeyName.
type IotDpsResourceListKeysForKeyNameResult struct {
	SharedAccessSignatureAuthorizationRuleAccessRightsDescription
}

// IotDpsResourceListKeysResponse contains the response from method IotDpsResource.ListKeys.
type IotDpsResourceListKeysResponse struct {
	IotDpsResourceListKeysResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceListKeysResult contains the result from method IotDpsResource.ListKeys.
type IotDpsResourceListKeysResult struct {
	SharedAccessSignatureAuthorizationRuleListResult
}

// IotDpsResourceListPrivateEndpointConnectionsResponse contains the response from method IotDpsResource.ListPrivateEndpointConnections.
type IotDpsResourceListPrivateEndpointConnectionsResponse struct {
	IotDpsResourceListPrivateEndpointConnectionsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceListPrivateEndpointConnectionsResult contains the result from method IotDpsResource.ListPrivateEndpointConnections.
type IotDpsResourceListPrivateEndpointConnectionsResult struct {
	// The list of private endpoint connections for a provisioning service
	PrivateEndpointConnectionArray []*PrivateEndpointConnection
}

// IotDpsResourceListPrivateLinkResourcesResponse contains the response from method IotDpsResource.ListPrivateLinkResources.
type IotDpsResourceListPrivateLinkResourcesResponse struct {
	IotDpsResourceListPrivateLinkResourcesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceListPrivateLinkResourcesResult contains the result from method IotDpsResource.ListPrivateLinkResources.
type IotDpsResourceListPrivateLinkResourcesResult struct {
	PrivateLinkResources
}

// IotDpsResourceListValidSKUsResponse contains the response from method IotDpsResource.ListValidSKUs.
type IotDpsResourceListValidSKUsResponse struct {
	IotDpsResourceListValidSKUsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceListValidSKUsResult contains the result from method IotDpsResource.ListValidSKUs.
type IotDpsResourceListValidSKUsResult struct {
	IotDpsSKUDefinitionListResult
}

// IotDpsResourceUpdatePollerResponse contains the response from method IotDpsResource.Update.
type IotDpsResourceUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotDpsResourceUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l IotDpsResourceUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotDpsResourceUpdateResponse, error) {
	respType := IotDpsResourceUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.ProvisioningServiceDescription)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotDpsResourceUpdatePollerResponse from the provided client and resume token.
func (l *IotDpsResourceUpdatePollerResponse) Resume(ctx context.Context, client *IotDpsResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotDpsResourceClient.Update", token, client.pl, client.updateHandleError)
	if err != nil {
		return err
	}
	poller := &IotDpsResourceUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotDpsResourceUpdateResponse contains the response from method IotDpsResource.Update.
type IotDpsResourceUpdateResponse struct {
	IotDpsResourceUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotDpsResourceUpdateResult contains the result from method IotDpsResource.Update.
type IotDpsResourceUpdateResult struct {
	ProvisioningServiceDescription
}

// OperationsListResponse contains the response from method Operations.List.
type OperationsListResponse struct {
	OperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsListResult contains the result from method Operations.List.
type OperationsListResult struct {
	OperationListResult
}
