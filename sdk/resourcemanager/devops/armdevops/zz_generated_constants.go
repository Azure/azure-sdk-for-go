//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdevops

const (
	moduleName    = "armdevops"
	moduleVersion = "v0.2.1"
)

// AuthorizationType - Type of authorization.
type AuthorizationType string

const (
	AuthorizationTypePersonalAccessToken AuthorizationType = "personalAccessToken"
)

// PossibleAuthorizationTypeValues returns the possible values for the AuthorizationType const type.
func PossibleAuthorizationTypeValues() []AuthorizationType {
	return []AuthorizationType{
		AuthorizationTypePersonalAccessToken,
	}
}

// ToPtr returns a *AuthorizationType pointing to the current value.
func (c AuthorizationType) ToPtr() *AuthorizationType {
	return &c
}

// CodeRepositoryType - Type of code repository.
type CodeRepositoryType string

const (
	CodeRepositoryTypeGitHub  CodeRepositoryType = "gitHub"
	CodeRepositoryTypeVstsGit CodeRepositoryType = "vstsGit"
)

// PossibleCodeRepositoryTypeValues returns the possible values for the CodeRepositoryType const type.
func PossibleCodeRepositoryTypeValues() []CodeRepositoryType {
	return []CodeRepositoryType{
		CodeRepositoryTypeGitHub,
		CodeRepositoryTypeVstsGit,
	}
}

// ToPtr returns a *CodeRepositoryType pointing to the current value.
func (c CodeRepositoryType) ToPtr() *CodeRepositoryType {
	return &c
}

// InputDataType - Data type of the value of the input parameter.
type InputDataType string

const (
	InputDataTypeAuthorization InputDataType = "Authorization"
	InputDataTypeBool          InputDataType = "Bool"
	InputDataTypeInt           InputDataType = "Int"
	InputDataTypeSecureString  InputDataType = "SecureString"
	InputDataTypeString        InputDataType = "String"
)

// PossibleInputDataTypeValues returns the possible values for the InputDataType const type.
func PossibleInputDataTypeValues() []InputDataType {
	return []InputDataType{
		InputDataTypeAuthorization,
		InputDataTypeBool,
		InputDataTypeInt,
		InputDataTypeSecureString,
		InputDataTypeString,
	}
}

// ToPtr returns a *InputDataType pointing to the current value.
func (c InputDataType) ToPtr() *InputDataType {
	return &c
}
