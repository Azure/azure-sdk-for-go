//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdevops

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// OperationsListResponse contains the response from method Operations.List.
type OperationsListResponse struct {
	OperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsListResult contains the result from method Operations.List.
type OperationsListResult struct {
	OperationListResult
}

// PipelineTemplateDefinitionsListResponse contains the response from method PipelineTemplateDefinitions.List.
type PipelineTemplateDefinitionsListResponse struct {
	PipelineTemplateDefinitionsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineTemplateDefinitionsListResult contains the result from method PipelineTemplateDefinitions.List.
type PipelineTemplateDefinitionsListResult struct {
	PipelineTemplateDefinitionListResult
}

// PipelinesCreateOrUpdatePollerResponse contains the response from method Pipelines.CreateOrUpdate.
type PipelinesCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PipelinesCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PipelinesCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PipelinesCreateOrUpdateResponse, error) {
	respType := PipelinesCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.Pipeline)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PipelinesCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *PipelinesCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *PipelinesClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PipelinesClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &PipelinesCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PipelinesCreateOrUpdateResponse contains the response from method Pipelines.CreateOrUpdate.
type PipelinesCreateOrUpdateResponse struct {
	PipelinesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelinesCreateOrUpdateResult contains the result from method Pipelines.CreateOrUpdate.
type PipelinesCreateOrUpdateResult struct {
	Pipeline
}

// PipelinesDeleteResponse contains the response from method Pipelines.Delete.
type PipelinesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelinesGetResponse contains the response from method Pipelines.Get.
type PipelinesGetResponse struct {
	PipelinesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelinesGetResult contains the result from method Pipelines.Get.
type PipelinesGetResult struct {
	Pipeline
}

// PipelinesListByResourceGroupResponse contains the response from method Pipelines.ListByResourceGroup.
type PipelinesListByResourceGroupResponse struct {
	PipelinesListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelinesListByResourceGroupResult contains the result from method Pipelines.ListByResourceGroup.
type PipelinesListByResourceGroupResult struct {
	PipelineListResult
}

// PipelinesListBySubscriptionResponse contains the response from method Pipelines.ListBySubscription.
type PipelinesListBySubscriptionResponse struct {
	PipelinesListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelinesListBySubscriptionResult contains the result from method Pipelines.ListBySubscription.
type PipelinesListBySubscriptionResult struct {
	PipelineListResult
}

// PipelinesUpdateResponse contains the response from method Pipelines.Update.
type PipelinesUpdateResponse struct {
	PipelinesUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelinesUpdateResult contains the result from method Pipelines.Update.
type PipelinesUpdateResult struct {
	Pipeline
}
