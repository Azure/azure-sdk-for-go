//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdevtestlabs

// ArmTemplatesClientGetOptions contains the optional parameters for the ArmTemplatesClient.Get method.
type ArmTemplatesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string
}

// ArmTemplatesClientListOptions contains the optional parameters for the ArmTemplatesClient.NewListPager method.
type ArmTemplatesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// ArtifactSourcesClientCreateOrUpdateOptions contains the optional parameters for the ArtifactSourcesClient.CreateOrUpdate
// method.
type ArtifactSourcesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ArtifactSourcesClientDeleteOptions contains the optional parameters for the ArtifactSourcesClient.Delete method.
type ArtifactSourcesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ArtifactSourcesClientGetOptions contains the optional parameters for the ArtifactSourcesClient.Get method.
type ArtifactSourcesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string
}

// ArtifactSourcesClientListOptions contains the optional parameters for the ArtifactSourcesClient.NewListPager method.
type ArtifactSourcesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=displayName)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// ArtifactSourcesClientUpdateOptions contains the optional parameters for the ArtifactSourcesClient.Update method.
type ArtifactSourcesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ArtifactsClientGenerateArmTemplateOptions contains the optional parameters for the ArtifactsClient.GenerateArmTemplate
// method.
type ArtifactsClientGenerateArmTemplateOptions struct {
	// placeholder for future optional parameters
}

// ArtifactsClientGetOptions contains the optional parameters for the ArtifactsClient.Get method.
type ArtifactsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=title)'
	Expand *string
}

// ArtifactsClientListOptions contains the optional parameters for the ArtifactsClient.NewListPager method.
type ArtifactsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=title)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// CostsClientCreateOrUpdateOptions contains the optional parameters for the CostsClient.CreateOrUpdate method.
type CostsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// CostsClientGetOptions contains the optional parameters for the CostsClient.Get method.
type CostsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=labCostDetails)'
	Expand *string
}

// CustomImagesClientBeginCreateOrUpdateOptions contains the optional parameters for the CustomImagesClient.BeginCreateOrUpdate
// method.
type CustomImagesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CustomImagesClientBeginDeleteOptions contains the optional parameters for the CustomImagesClient.BeginDelete method.
type CustomImagesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CustomImagesClientGetOptions contains the optional parameters for the CustomImagesClient.Get method.
type CustomImagesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=vm)'
	Expand *string
}

// CustomImagesClientListOptions contains the optional parameters for the CustomImagesClient.NewListPager method.
type CustomImagesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=vm)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// CustomImagesClientUpdateOptions contains the optional parameters for the CustomImagesClient.Update method.
type CustomImagesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DisksClientBeginAttachOptions contains the optional parameters for the DisksClient.BeginAttach method.
type DisksClientBeginAttachOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientBeginCreateOrUpdateOptions contains the optional parameters for the DisksClient.BeginCreateOrUpdate method.
type DisksClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientBeginDeleteOptions contains the optional parameters for the DisksClient.BeginDelete method.
type DisksClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientBeginDetachOptions contains the optional parameters for the DisksClient.BeginDetach method.
type DisksClientBeginDetachOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DisksClientGetOptions contains the optional parameters for the DisksClient.Get method.
type DisksClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=diskType)'
	Expand *string
}

// DisksClientListOptions contains the optional parameters for the DisksClient.NewListPager method.
type DisksClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=diskType)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// DisksClientUpdateOptions contains the optional parameters for the DisksClient.Update method.
type DisksClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientBeginCreateOrUpdateOptions contains the optional parameters for the EnvironmentsClient.BeginCreateOrUpdate
// method.
type EnvironmentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientBeginDeleteOptions contains the optional parameters for the EnvironmentsClient.BeginDelete method.
type EnvironmentsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EnvironmentsClientGetOptions contains the optional parameters for the EnvironmentsClient.Get method.
type EnvironmentsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=deploymentProperties)'
	Expand *string
}

// EnvironmentsClientListOptions contains the optional parameters for the EnvironmentsClient.NewListPager method.
type EnvironmentsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=deploymentProperties)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// EnvironmentsClientUpdateOptions contains the optional parameters for the EnvironmentsClient.Update method.
type EnvironmentsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// FormulasClientBeginCreateOrUpdateOptions contains the optional parameters for the FormulasClient.BeginCreateOrUpdate method.
type FormulasClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FormulasClientDeleteOptions contains the optional parameters for the FormulasClient.Delete method.
type FormulasClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// FormulasClientGetOptions contains the optional parameters for the FormulasClient.Get method.
type FormulasClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string
}

// FormulasClientListOptions contains the optional parameters for the FormulasClient.NewListPager method.
type FormulasClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// FormulasClientUpdateOptions contains the optional parameters for the FormulasClient.Update method.
type FormulasClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// GalleryImagesClientListOptions contains the optional parameters for the GalleryImagesClient.NewListPager method.
type GalleryImagesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=author)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// GlobalSchedulesClientBeginExecuteOptions contains the optional parameters for the GlobalSchedulesClient.BeginExecute method.
type GlobalSchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GlobalSchedulesClientBeginRetargetOptions contains the optional parameters for the GlobalSchedulesClient.BeginRetarget
// method.
type GlobalSchedulesClientBeginRetargetOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GlobalSchedulesClientCreateOrUpdateOptions contains the optional parameters for the GlobalSchedulesClient.CreateOrUpdate
// method.
type GlobalSchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// GlobalSchedulesClientDeleteOptions contains the optional parameters for the GlobalSchedulesClient.Delete method.
type GlobalSchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// GlobalSchedulesClientGetOptions contains the optional parameters for the GlobalSchedulesClient.Get method.
type GlobalSchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// GlobalSchedulesClientListByResourceGroupOptions contains the optional parameters for the GlobalSchedulesClient.NewListByResourceGroupPager
// method.
type GlobalSchedulesClientListByResourceGroupOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// GlobalSchedulesClientListBySubscriptionOptions contains the optional parameters for the GlobalSchedulesClient.NewListBySubscriptionPager
// method.
type GlobalSchedulesClientListBySubscriptionOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// GlobalSchedulesClientUpdateOptions contains the optional parameters for the GlobalSchedulesClient.Update method.
type GlobalSchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// LabsClientBeginClaimAnyVMOptions contains the optional parameters for the LabsClient.BeginClaimAnyVM method.
type LabsClientBeginClaimAnyVMOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginCreateEnvironmentOptions contains the optional parameters for the LabsClient.BeginCreateEnvironment method.
type LabsClientBeginCreateEnvironmentOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginCreateOrUpdateOptions contains the optional parameters for the LabsClient.BeginCreateOrUpdate method.
type LabsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginDeleteOptions contains the optional parameters for the LabsClient.BeginDelete method.
type LabsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginExportResourceUsageOptions contains the optional parameters for the LabsClient.BeginExportResourceUsage
// method.
type LabsClientBeginExportResourceUsageOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientBeginImportVirtualMachineOptions contains the optional parameters for the LabsClient.BeginImportVirtualMachine
// method.
type LabsClientBeginImportVirtualMachineOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LabsClientGenerateUploadURIOptions contains the optional parameters for the LabsClient.GenerateUploadURI method.
type LabsClientGenerateUploadURIOptions struct {
	// placeholder for future optional parameters
}

// LabsClientGetOptions contains the optional parameters for the LabsClient.Get method.
type LabsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'
	Expand *string
}

// LabsClientListByResourceGroupOptions contains the optional parameters for the LabsClient.NewListByResourceGroupPager method.
type LabsClientListByResourceGroupOptions struct {
	// Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// LabsClientListBySubscriptionOptions contains the optional parameters for the LabsClient.NewListBySubscriptionPager method.
type LabsClientListBySubscriptionOptions struct {
	// Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// LabsClientListVhdsOptions contains the optional parameters for the LabsClient.NewListVhdsPager method.
type LabsClientListVhdsOptions struct {
	// placeholder for future optional parameters
}

// LabsClientUpdateOptions contains the optional parameters for the LabsClient.Update method.
type LabsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationChannelsClientCreateOrUpdateOptions contains the optional parameters for the NotificationChannelsClient.CreateOrUpdate
// method.
type NotificationChannelsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// NotificationChannelsClientDeleteOptions contains the optional parameters for the NotificationChannelsClient.Delete method.
type NotificationChannelsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// NotificationChannelsClientGetOptions contains the optional parameters for the NotificationChannelsClient.Get method.
type NotificationChannelsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=webHookUrl)'
	Expand *string
}

// NotificationChannelsClientListOptions contains the optional parameters for the NotificationChannelsClient.NewListPager
// method.
type NotificationChannelsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=webHookUrl)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// NotificationChannelsClientNotifyOptions contains the optional parameters for the NotificationChannelsClient.Notify method.
type NotificationChannelsClientNotifyOptions struct {
	// placeholder for future optional parameters
}

// NotificationChannelsClientUpdateOptions contains the optional parameters for the NotificationChannelsClient.Update method.
type NotificationChannelsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientGetOptions contains the optional parameters for the OperationsClient.Get method.
type OperationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PoliciesClientCreateOrUpdateOptions contains the optional parameters for the PoliciesClient.CreateOrUpdate method.
type PoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PoliciesClientDeleteOptions contains the optional parameters for the PoliciesClient.Delete method.
type PoliciesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PoliciesClientGetOptions contains the optional parameters for the PoliciesClient.Get method.
type PoliciesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string
}

// PoliciesClientListOptions contains the optional parameters for the PoliciesClient.NewListPager method.
type PoliciesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=description)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// PoliciesClientUpdateOptions contains the optional parameters for the PoliciesClient.Update method.
type PoliciesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PolicySetsClientEvaluatePoliciesOptions contains the optional parameters for the PolicySetsClient.EvaluatePolicies method.
type PolicySetsClientEvaluatePoliciesOptions struct {
	// placeholder for future optional parameters
}

// ProviderOperationsClientListOptions contains the optional parameters for the ProviderOperationsClient.NewListPager method.
type ProviderOperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// SchedulesClientBeginExecuteOptions contains the optional parameters for the SchedulesClient.BeginExecute method.
type SchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SchedulesClientCreateOrUpdateOptions contains the optional parameters for the SchedulesClient.CreateOrUpdate method.
type SchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SchedulesClientDeleteOptions contains the optional parameters for the SchedulesClient.Delete method.
type SchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SchedulesClientGetOptions contains the optional parameters for the SchedulesClient.Get method.
type SchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// SchedulesClientListApplicableOptions contains the optional parameters for the SchedulesClient.NewListApplicablePager method.
type SchedulesClientListApplicableOptions struct {
	// placeholder for future optional parameters
}

// SchedulesClientListOptions contains the optional parameters for the SchedulesClient.NewListPager method.
type SchedulesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// SchedulesClientUpdateOptions contains the optional parameters for the SchedulesClient.Update method.
type SchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SecretsClientBeginCreateOrUpdateOptions contains the optional parameters for the SecretsClient.BeginCreateOrUpdate method.
type SecretsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecretsClientDeleteOptions contains the optional parameters for the SecretsClient.Delete method.
type SecretsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SecretsClientGetOptions contains the optional parameters for the SecretsClient.Get method.
type SecretsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=value)'
	Expand *string
}

// SecretsClientListOptions contains the optional parameters for the SecretsClient.NewListPager method.
type SecretsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=value)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// SecretsClientUpdateOptions contains the optional parameters for the SecretsClient.Update method.
type SecretsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricSchedulesClientBeginExecuteOptions contains the optional parameters for the ServiceFabricSchedulesClient.BeginExecute
// method.
type ServiceFabricSchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricSchedulesClientCreateOrUpdateOptions contains the optional parameters for the ServiceFabricSchedulesClient.CreateOrUpdate
// method.
type ServiceFabricSchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricSchedulesClientDeleteOptions contains the optional parameters for the ServiceFabricSchedulesClient.Delete
// method.
type ServiceFabricSchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricSchedulesClientGetOptions contains the optional parameters for the ServiceFabricSchedulesClient.Get method.
type ServiceFabricSchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// ServiceFabricSchedulesClientListOptions contains the optional parameters for the ServiceFabricSchedulesClient.NewListPager
// method.
type ServiceFabricSchedulesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// ServiceFabricSchedulesClientUpdateOptions contains the optional parameters for the ServiceFabricSchedulesClient.Update
// method.
type ServiceFabricSchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServiceFabricsClient.BeginCreateOrUpdate
// method.
type ServiceFabricsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientBeginDeleteOptions contains the optional parameters for the ServiceFabricsClient.BeginDelete method.
type ServiceFabricsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientBeginStartOptions contains the optional parameters for the ServiceFabricsClient.BeginStart method.
type ServiceFabricsClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientBeginStopOptions contains the optional parameters for the ServiceFabricsClient.BeginStop method.
type ServiceFabricsClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceFabricsClientGetOptions contains the optional parameters for the ServiceFabricsClient.Get method.
type ServiceFabricsClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=applicableSchedule)'
	Expand *string
}

// ServiceFabricsClientListApplicableSchedulesOptions contains the optional parameters for the ServiceFabricsClient.ListApplicableSchedules
// method.
type ServiceFabricsClientListApplicableSchedulesOptions struct {
	// placeholder for future optional parameters
}

// ServiceFabricsClientListOptions contains the optional parameters for the ServiceFabricsClient.NewListPager method.
type ServiceFabricsClientListOptions struct {
	// Specify the $expand query. Example: 'properties($expand=applicableSchedule)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// ServiceFabricsClientUpdateOptions contains the optional parameters for the ServiceFabricsClient.Update method.
type ServiceFabricsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceRunnersClientCreateOrUpdateOptions contains the optional parameters for the ServiceRunnersClient.CreateOrUpdate
// method.
type ServiceRunnersClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServiceRunnersClientDeleteOptions contains the optional parameters for the ServiceRunnersClient.Delete method.
type ServiceRunnersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServiceRunnersClientGetOptions contains the optional parameters for the ServiceRunnersClient.Get method.
type ServiceRunnersClientGetOptions struct {
	// placeholder for future optional parameters
}

// UsersClientBeginCreateOrUpdateOptions contains the optional parameters for the UsersClient.BeginCreateOrUpdate method.
type UsersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// UsersClientBeginDeleteOptions contains the optional parameters for the UsersClient.BeginDelete method.
type UsersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// UsersClientGetOptions contains the optional parameters for the UsersClient.Get method.
type UsersClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=identity)'
	Expand *string
}

// UsersClientListOptions contains the optional parameters for the UsersClient.NewListPager method.
type UsersClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=identity)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// UsersClientUpdateOptions contains the optional parameters for the UsersClient.Update method.
type UsersClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachineSchedulesClientBeginExecuteOptions contains the optional parameters for the VirtualMachineSchedulesClient.BeginExecute
// method.
type VirtualMachineSchedulesClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachineSchedulesClientCreateOrUpdateOptions contains the optional parameters for the VirtualMachineSchedulesClient.CreateOrUpdate
// method.
type VirtualMachineSchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachineSchedulesClientDeleteOptions contains the optional parameters for the VirtualMachineSchedulesClient.Delete
// method.
type VirtualMachineSchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachineSchedulesClientGetOptions contains the optional parameters for the VirtualMachineSchedulesClient.Get method.
type VirtualMachineSchedulesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string
}

// VirtualMachineSchedulesClientListOptions contains the optional parameters for the VirtualMachineSchedulesClient.NewListPager
// method.
type VirtualMachineSchedulesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($select=status)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// VirtualMachineSchedulesClientUpdateOptions contains the optional parameters for the VirtualMachineSchedulesClient.Update
// method.
type VirtualMachineSchedulesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientBeginAddDataDiskOptions contains the optional parameters for the VirtualMachinesClient.BeginAddDataDisk
// method.
type VirtualMachinesClientBeginAddDataDiskOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginApplyArtifactsOptions contains the optional parameters for the VirtualMachinesClient.BeginApplyArtifacts
// method.
type VirtualMachinesClientBeginApplyArtifactsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginClaimOptions contains the optional parameters for the VirtualMachinesClient.BeginClaim method.
type VirtualMachinesClientBeginClaimOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualMachinesClient.BeginCreateOrUpdate
// method.
type VirtualMachinesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginDeleteOptions contains the optional parameters for the VirtualMachinesClient.BeginDelete method.
type VirtualMachinesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginDetachDataDiskOptions contains the optional parameters for the VirtualMachinesClient.BeginDetachDataDisk
// method.
type VirtualMachinesClientBeginDetachDataDiskOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginRedeployOptions contains the optional parameters for the VirtualMachinesClient.BeginRedeploy
// method.
type VirtualMachinesClientBeginRedeployOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginResizeOptions contains the optional parameters for the VirtualMachinesClient.BeginResize method.
type VirtualMachinesClientBeginResizeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginRestartOptions contains the optional parameters for the VirtualMachinesClient.BeginRestart method.
type VirtualMachinesClientBeginRestartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginStartOptions contains the optional parameters for the VirtualMachinesClient.BeginStart method.
type VirtualMachinesClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginStopOptions contains the optional parameters for the VirtualMachinesClient.BeginStop method.
type VirtualMachinesClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginTransferDisksOptions contains the optional parameters for the VirtualMachinesClient.BeginTransferDisks
// method.
type VirtualMachinesClientBeginTransferDisksOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginUnClaimOptions contains the optional parameters for the VirtualMachinesClient.BeginUnClaim method.
type VirtualMachinesClientBeginUnClaimOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientGetOptions contains the optional parameters for the VirtualMachinesClient.Get method.
type VirtualMachinesClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'
	Expand *string
}

// VirtualMachinesClientGetRdpFileContentsOptions contains the optional parameters for the VirtualMachinesClient.GetRdpFileContents
// method.
type VirtualMachinesClientGetRdpFileContentsOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientListApplicableSchedulesOptions contains the optional parameters for the VirtualMachinesClient.ListApplicableSchedules
// method.
type VirtualMachinesClientListApplicableSchedulesOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientListOptions contains the optional parameters for the VirtualMachinesClient.NewListPager method.
type VirtualMachinesClientListOptions struct {
	// Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// VirtualMachinesClientUpdateOptions contains the optional parameters for the VirtualMachinesClient.Update method.
type VirtualMachinesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworksClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworksClient.BeginCreateOrUpdate
// method.
type VirtualNetworksClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworksClientBeginDeleteOptions contains the optional parameters for the VirtualNetworksClient.BeginDelete method.
type VirtualNetworksClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworksClientGetOptions contains the optional parameters for the VirtualNetworksClient.Get method.
type VirtualNetworksClientGetOptions struct {
	// Specify the $expand query. Example: 'properties($expand=externalSubnets)'
	Expand *string
}

// VirtualNetworksClientListOptions contains the optional parameters for the VirtualNetworksClient.NewListPager method.
type VirtualNetworksClientListOptions struct {
	// Specify the $expand query. Example: 'properties($expand=externalSubnets)'
	Expand *string

	// The filter to apply to the operation. Example: '$filter=contains(name,'myName')
	Filter *string

	// The ordering expression for the results, using OData notation. Example: '$orderby=name desc'
	Orderby *string

	// The maximum number of resources to return from the operation. Example: '$top=10'
	Top *int32
}

// VirtualNetworksClientUpdateOptions contains the optional parameters for the VirtualNetworksClient.Update method.
type VirtualNetworksClientUpdateOptions struct {
	// placeholder for future optional parameters
}
