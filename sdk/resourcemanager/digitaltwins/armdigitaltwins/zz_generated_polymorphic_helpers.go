//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdigitaltwins

import "encoding/json"

func unmarshalDigitalTwinsEndpointResourcePropertiesClassification(rawMsg json.RawMessage) (DigitalTwinsEndpointResourcePropertiesClassification, error) {
	if rawMsg == nil {
		return nil, nil
	}
	var m map[string]interface{}
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b DigitalTwinsEndpointResourcePropertiesClassification
	switch m["endpointType"] {
	case string(EndpointTypeEventGrid):
		b = &EventGrid{}
	case string(EndpointTypeEventHub):
		b = &EventHub{}
	case string(EndpointTypeServiceBus):
		b = &ServiceBus{}
	default:
		b = &DigitalTwinsEndpointResourceProperties{}
	}
	return b, json.Unmarshal(rawMsg, b)
}

func unmarshalDigitalTwinsEndpointResourcePropertiesClassificationArray(rawMsg json.RawMessage) ([]DigitalTwinsEndpointResourcePropertiesClassification, error) {
	if rawMsg == nil {
		return nil, nil
	}
	var rawMessages []json.RawMessage
	if err := json.Unmarshal(rawMsg, &rawMessages); err != nil {
		return nil, err
	}
	fArray := make([]DigitalTwinsEndpointResourcePropertiesClassification, len(rawMessages))
	for index, rawMessage := range rawMessages {
		f, err := unmarshalDigitalTwinsEndpointResourcePropertiesClassification(rawMessage)
		if err != nil {
			return nil, err
		}
		fArray[index] = f
	}
	return fArray, nil
}

func unmarshalDigitalTwinsEndpointResourcePropertiesClassificationMap(rawMsg json.RawMessage) (map[string]DigitalTwinsEndpointResourcePropertiesClassification, error) {
	if rawMsg == nil {
		return nil, nil
	}
	var rawMessages map[string]json.RawMessage
	if err := json.Unmarshal(rawMsg, &rawMessages); err != nil {
		return nil, err
	}
	fMap := make(map[string]DigitalTwinsEndpointResourcePropertiesClassification, len(rawMessages))
	for key, rawMessage := range rawMessages {
		f, err := unmarshalDigitalTwinsEndpointResourcePropertiesClassification(rawMessage)
		if err != nil {
			return nil, err
		}
		fMap[key] = f
	}
	return fMap, nil
}
