//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdnsresolver

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	internal       *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID of the target subscription. The value must be an UUID.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID,
		internal:       internal,
	}, nil
}

// NewDNSForwardingRulesetsClient creates a new instance of DNSForwardingRulesetsClient.
func (c *ClientFactory) NewDNSForwardingRulesetsClient() *DNSForwardingRulesetsClient {
	return &DNSForwardingRulesetsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDNSResolversClient creates a new instance of DNSResolversClient.
func (c *ClientFactory) NewDNSResolversClient() *DNSResolversClient {
	return &DNSResolversClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDNSSecurityRulesClient creates a new instance of DNSSecurityRulesClient.
func (c *ClientFactory) NewDNSSecurityRulesClient() *DNSSecurityRulesClient {
	return &DNSSecurityRulesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDomainListsClient creates a new instance of DomainListsClient.
func (c *ClientFactory) NewDomainListsClient() *DomainListsClient {
	return &DomainListsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewForwardingRulesClient creates a new instance of ForwardingRulesClient.
func (c *ClientFactory) NewForwardingRulesClient() *ForwardingRulesClient {
	return &ForwardingRulesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewInboundEndpointsClient creates a new instance of InboundEndpointsClient.
func (c *ClientFactory) NewInboundEndpointsClient() *InboundEndpointsClient {
	return &InboundEndpointsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewOutboundEndpointsClient creates a new instance of OutboundEndpointsClient.
func (c *ClientFactory) NewOutboundEndpointsClient() *OutboundEndpointsClient {
	return &OutboundEndpointsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewPoliciesClient creates a new instance of PoliciesClient.
func (c *ClientFactory) NewPoliciesClient() *PoliciesClient {
	return &PoliciesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewPolicyVirtualNetworkLinksClient creates a new instance of PolicyVirtualNetworkLinksClient.
func (c *ClientFactory) NewPolicyVirtualNetworkLinksClient() *PolicyVirtualNetworkLinksClient {
	return &PolicyVirtualNetworkLinksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewVirtualNetworkLinksClient creates a new instance of VirtualNetworkLinksClient.
func (c *ClientFactory) NewVirtualNetworkLinksClient() *VirtualNetworkLinksClient {
	return &VirtualNetworkLinksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}
