//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armeventgrid

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	credential     azcore.TokenCredential
	options        *arm.ClientOptions
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms
//     part of the URI for every service call.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	_, err := arm.NewClient(moduleName+".ClientFactory", moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID, credential: credential,
		options: options.Clone(),
	}, nil
}

func (c *ClientFactory) NewCaCertificatesClient() *CaCertificatesClient {
	subClient, _ := NewCaCertificatesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewChannelsClient() *ChannelsClient {
	subClient, _ := NewChannelsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewClientGroupsClient() *ClientGroupsClient {
	subClient, _ := NewClientGroupsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewClientsClient() *ClientsClient {
	subClient, _ := NewClientsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewDomainsClient() *DomainsClient {
	subClient, _ := NewDomainsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewDomainTopicsClient() *DomainTopicsClient {
	subClient, _ := NewDomainTopicsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewDomainTopicEventSubscriptionsClient() *DomainTopicEventSubscriptionsClient {
	subClient, _ := NewDomainTopicEventSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewTopicEventSubscriptionsClient() *TopicEventSubscriptionsClient {
	subClient, _ := NewTopicEventSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewDomainEventSubscriptionsClient() *DomainEventSubscriptionsClient {
	subClient, _ := NewDomainEventSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewEventSubscriptionsClient() *EventSubscriptionsClient {
	subClient, _ := NewEventSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewSystemTopicEventSubscriptionsClient() *SystemTopicEventSubscriptionsClient {
	subClient, _ := NewSystemTopicEventSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewNamespaceTopicEventSubscriptionsClient() *NamespaceTopicEventSubscriptionsClient {
	subClient, _ := NewNamespaceTopicEventSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPartnerTopicEventSubscriptionsClient() *PartnerTopicEventSubscriptionsClient {
	subClient, _ := NewPartnerTopicEventSubscriptionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewNamespacesClient() *NamespacesClient {
	subClient, _ := NewNamespacesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewNamespaceTopicsClient() *NamespaceTopicsClient {
	subClient, _ := NewNamespaceTopicsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	subClient, _ := NewOperationsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPartnerConfigurationsClient() *PartnerConfigurationsClient {
	subClient, _ := NewPartnerConfigurationsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPartnerDestinationsClient() *PartnerDestinationsClient {
	subClient, _ := NewPartnerDestinationsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPartnerNamespacesClient() *PartnerNamespacesClient {
	subClient, _ := NewPartnerNamespacesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPartnerRegistrationsClient() *PartnerRegistrationsClient {
	subClient, _ := NewPartnerRegistrationsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPartnerTopicsClient() *PartnerTopicsClient {
	subClient, _ := NewPartnerTopicsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPermissionBindingsClient() *PermissionBindingsClient {
	subClient, _ := NewPermissionBindingsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPrivateEndpointConnectionsClient() *PrivateEndpointConnectionsClient {
	subClient, _ := NewPrivateEndpointConnectionsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewPrivateLinkResourcesClient() *PrivateLinkResourcesClient {
	subClient, _ := NewPrivateLinkResourcesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewSystemTopicsClient() *SystemTopicsClient {
	subClient, _ := NewSystemTopicsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewTopicsClient() *TopicsClient {
	subClient, _ := NewTopicsClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewExtensionTopicsClient() *ExtensionTopicsClient {
	subClient, _ := NewExtensionTopicsClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewTopicSpacesClient() *TopicSpacesClient {
	subClient, _ := NewTopicSpacesClient(c.subscriptionID, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewTopicTypesClient() *TopicTypesClient {
	subClient, _ := NewTopicTypesClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewVerifiedPartnersClient() *VerifiedPartnersClient {
	subClient, _ := NewVerifiedPartnersClient(c.credential, c.options)
	return subClient
}
