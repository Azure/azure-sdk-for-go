//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armextendedlocation

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// CustomLocationsCreateOrUpdatePollerResponse contains the response from method CustomLocations.CreateOrUpdate.
type CustomLocationsCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *CustomLocationsCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l CustomLocationsCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (CustomLocationsCreateOrUpdateResponse, error) {
	respType := CustomLocationsCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.CustomLocation)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a CustomLocationsCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *CustomLocationsCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *CustomLocationsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("CustomLocationsClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &CustomLocationsCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// CustomLocationsCreateOrUpdateResponse contains the response from method CustomLocations.CreateOrUpdate.
type CustomLocationsCreateOrUpdateResponse struct {
	CustomLocationsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsCreateOrUpdateResult contains the result from method CustomLocations.CreateOrUpdate.
type CustomLocationsCreateOrUpdateResult struct {
	CustomLocation
}

// CustomLocationsDeletePollerResponse contains the response from method CustomLocations.Delete.
type CustomLocationsDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *CustomLocationsDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l CustomLocationsDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (CustomLocationsDeleteResponse, error) {
	respType := CustomLocationsDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a CustomLocationsDeletePollerResponse from the provided client and resume token.
func (l *CustomLocationsDeletePollerResponse) Resume(ctx context.Context, client *CustomLocationsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("CustomLocationsClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &CustomLocationsDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// CustomLocationsDeleteResponse contains the response from method CustomLocations.Delete.
type CustomLocationsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsGetResponse contains the response from method CustomLocations.Get.
type CustomLocationsGetResponse struct {
	CustomLocationsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsGetResult contains the result from method CustomLocations.Get.
type CustomLocationsGetResult struct {
	CustomLocation
}

// CustomLocationsListByResourceGroupResponse contains the response from method CustomLocations.ListByResourceGroup.
type CustomLocationsListByResourceGroupResponse struct {
	CustomLocationsListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsListByResourceGroupResult contains the result from method CustomLocations.ListByResourceGroup.
type CustomLocationsListByResourceGroupResult struct {
	CustomLocationListResult
}

// CustomLocationsListBySubscriptionResponse contains the response from method CustomLocations.ListBySubscription.
type CustomLocationsListBySubscriptionResponse struct {
	CustomLocationsListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsListBySubscriptionResult contains the result from method CustomLocations.ListBySubscription.
type CustomLocationsListBySubscriptionResult struct {
	CustomLocationListResult
}

// CustomLocationsListEnabledResourceTypesResponse contains the response from method CustomLocations.ListEnabledResourceTypes.
type CustomLocationsListEnabledResourceTypesResponse struct {
	CustomLocationsListEnabledResourceTypesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsListEnabledResourceTypesResult contains the result from method CustomLocations.ListEnabledResourceTypes.
type CustomLocationsListEnabledResourceTypesResult struct {
	EnabledResourceTypesListResult
}

// CustomLocationsListOperationsResponse contains the response from method CustomLocations.ListOperations.
type CustomLocationsListOperationsResponse struct {
	CustomLocationsListOperationsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsListOperationsResult contains the result from method CustomLocations.ListOperations.
type CustomLocationsListOperationsResult struct {
	CustomLocationOperationsList
}

// CustomLocationsUpdateResponse contains the response from method CustomLocations.Update.
type CustomLocationsUpdateResponse struct {
	CustomLocationsUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CustomLocationsUpdateResult contains the result from method CustomLocations.Update.
type CustomLocationsUpdateResult struct {
	CustomLocation
}
