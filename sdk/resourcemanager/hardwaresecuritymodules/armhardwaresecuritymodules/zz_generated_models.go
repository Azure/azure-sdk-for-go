//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armhardwaresecuritymodules

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
)

// APIEntityReference - The API entity reference.
type APIEntityReference struct {
	// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/…
	ID *string `json:"id,omitempty"`
}

// DedicatedHsm - Resource information with extended details.
type DedicatedHsm struct {
	Resource
	// REQUIRED; Properties of the dedicated HSM
	Properties *DedicatedHsmProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type DedicatedHsm.
func (d DedicatedHsm) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	d.Resource.marshalInternal(objectMap)
	populate(objectMap, "properties", d.Properties)
	return json.Marshal(objectMap)
}

// DedicatedHsmBeginCreateOrUpdateOptions contains the optional parameters for the DedicatedHsm.BeginCreateOrUpdate method.
type DedicatedHsmBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DedicatedHsmBeginDeleteOptions contains the optional parameters for the DedicatedHsm.BeginDelete method.
type DedicatedHsmBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// DedicatedHsmBeginUpdateOptions contains the optional parameters for the DedicatedHsm.BeginUpdate method.
type DedicatedHsmBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// DedicatedHsmError - The error exception.
// Implements the error and azcore.HTTPResponse interfaces.
type DedicatedHsmError struct {
	raw string
	// READ-ONLY; The key vault server error.
	InnerError *Error `json:"error,omitempty" azure:"ro"`
}

// Error implements the error interface for type DedicatedHsmError.
// The contents of the error text are not contractual and subject to change.
func (e DedicatedHsmError) Error() string {
	return e.raw
}

// DedicatedHsmGetOptions contains the optional parameters for the DedicatedHsm.Get method.
type DedicatedHsmGetOptions struct {
	// placeholder for future optional parameters
}

// DedicatedHsmListByResourceGroupOptions contains the optional parameters for the DedicatedHsm.ListByResourceGroup method.
type DedicatedHsmListByResourceGroupOptions struct {
	// Maximum number of results to return.
	Top *int32
}

// DedicatedHsmListBySubscriptionOptions contains the optional parameters for the DedicatedHsm.ListBySubscription method.
type DedicatedHsmListBySubscriptionOptions struct {
	// Maximum number of results to return.
	Top *int32
}

// DedicatedHsmListResult - List of dedicated HSMs
type DedicatedHsmListResult struct {
	// The URL to get the next set of dedicated hsms.
	NextLink *string `json:"nextLink,omitempty"`

	// The list of dedicated HSMs.
	Value []*DedicatedHsm `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type DedicatedHsmListResult.
func (d DedicatedHsmListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", d.NextLink)
	populate(objectMap, "value", d.Value)
	return json.Marshal(objectMap)
}

// DedicatedHsmOperation - REST API operation
type DedicatedHsmOperation struct {
	Display *DedicatedHsmOperationDisplay `json:"display,omitempty"`

	// The name of the Dedicated HSM Resource Provider Operation.
	Name *string `json:"name,omitempty"`

	// READ-ONLY; Gets or sets a value indicating whether it is a data plane action
	IsDataAction *string `json:"isDataAction,omitempty" azure:"ro"`
}

type DedicatedHsmOperationDisplay struct {
	// The object that represents the operation.
	Description *string `json:"description,omitempty"`

	// Operation type: Read, write, delete, etc.
	Operation *string `json:"operation,omitempty"`

	// The Resource Provider of the operation
	Provider *string `json:"provider,omitempty"`

	// Resource on which the operation is performed.
	Resource *string `json:"resource,omitempty"`
}

// DedicatedHsmOperationListResult - Result of the request to list Dedicated HSM Provider operations. It contains a list of operations.
type DedicatedHsmOperationListResult struct {
	// List of Dedicated HSM Resource Provider operations.
	Value []*DedicatedHsmOperation `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type DedicatedHsmOperationListResult.
func (d DedicatedHsmOperationListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", d.Value)
	return json.Marshal(objectMap)
}

// DedicatedHsmPatchParameters - Patchable properties of the dedicated HSM
type DedicatedHsmPatchParameters struct {
	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type DedicatedHsmPatchParameters.
func (d DedicatedHsmPatchParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "tags", d.Tags)
	return json.Marshal(objectMap)
}

// DedicatedHsmProperties - Properties of the dedicated hsm
type DedicatedHsmProperties struct {
	// Specifies the network interfaces of the dedicated hsm.
	NetworkProfile *NetworkProfile `json:"networkProfile,omitempty"`

	// This field will be used when RP does not support Availability zones.
	StampID *string `json:"stampId,omitempty"`

	// READ-ONLY; Provisioning state.
	ProvisioningState *JSONWebKeyType `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Resource Status Message.
	StatusMessage *string `json:"statusMessage,omitempty" azure:"ro"`
}

// Error - The key vault server error.
type Error struct {
	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The key vault server error.
	InnerError *Error `json:"innererror,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`
}

// NetworkInterface - The network interface definition.
type NetworkInterface struct {
	// Private Ip address of the interface
	PrivateIPAddress *string `json:"privateIpAddress,omitempty"`

	// READ-ONLY; The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/…
	ID *string `json:"id,omitempty" azure:"ro"`
}

type NetworkProfile struct {
	// Specifies the list of resource Ids for the network interfaces associated with the dedicated HSM.
	NetworkInterfaces []*NetworkInterface `json:"networkInterfaces,omitempty"`

	// Specifies the identifier of the subnet.
	Subnet *APIEntityReference `json:"subnet,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type NetworkProfile.
func (n NetworkProfile) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "networkInterfaces", n.NetworkInterfaces)
	populate(objectMap, "subnet", n.Subnet)
	return json.Marshal(objectMap)
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// Resource - Dedicated HSM resource
type Resource struct {
	// REQUIRED; The supported Azure location where the dedicated HSM should be created.
	Location *string `json:"location,omitempty"`

	// SKU details
	SKU *SKU `json:"sku,omitempty"`

	// Resource tags
	Tags map[string]*string `json:"tags,omitempty"`

	// The Dedicated Hsm zones.
	Zones []*string `json:"zones,omitempty"`

	// READ-ONLY; The Azure Resource Manager resource ID for the dedicated HSM.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the dedicated HSM.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type of the dedicated HSM.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Resource.
func (r Resource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	r.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (r Resource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", r.ID)
	populate(objectMap, "location", r.Location)
	populate(objectMap, "name", r.Name)
	populate(objectMap, "sku", r.SKU)
	populate(objectMap, "tags", r.Tags)
	populate(objectMap, "type", r.Type)
	populate(objectMap, "zones", r.Zones)
}

// ResourceListResult - List of dedicated HSM resources.
type ResourceListResult struct {
	// The URL to get the next set of dedicated HSM resources.
	NextLink *string `json:"nextLink,omitempty"`

	// The list of dedicated HSM resources.
	Value []*Resource `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ResourceListResult.
func (r ResourceListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", r.NextLink)
	populate(objectMap, "value", r.Value)
	return json.Marshal(objectMap)
}

type SKU struct {
	// SKU of the dedicated HSM
	Name *SKUName `json:"name,omitempty"`
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}
