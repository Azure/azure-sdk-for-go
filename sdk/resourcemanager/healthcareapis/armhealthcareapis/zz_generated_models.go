//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armhealthcareapis

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
	"time"
)

// CheckNameAvailabilityParameters - Input values.
type CheckNameAvailabilityParameters struct {
	// REQUIRED; The name of the service instance to check.
	Name *string `json:"name,omitempty"`

	// REQUIRED; The fully qualified resource type which includes provider namespace.
	Type *string `json:"type,omitempty"`
}

// DicomService - The description of Dicom Service
type DicomService struct {
	TaggedResource
	// Dicom Service configuration.
	Properties *DicomServiceProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type DicomService.
func (d DicomService) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	d.TaggedResource.marshalInternal(objectMap)
	populate(objectMap, "properties", d.Properties)
	populate(objectMap, "systemData", d.SystemData)
	return json.Marshal(objectMap)
}

// DicomServiceAuthenticationConfiguration - Authentication configuration information
type DicomServiceAuthenticationConfiguration struct {
	// READ-ONLY; The audiences for the service
	Audiences []*string `json:"audiences,omitempty" azure:"ro"`

	// READ-ONLY; The authority url for the service
	Authority *string `json:"authority,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type DicomServiceAuthenticationConfiguration.
func (d DicomServiceAuthenticationConfiguration) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "audiences", d.Audiences)
	populate(objectMap, "authority", d.Authority)
	return json.Marshal(objectMap)
}

// DicomServiceCollection - The collection of Dicom Services.
type DicomServiceCollection struct {
	// The link used to get the next page of Dicom Services.
	NextLink *string `json:"nextLink,omitempty"`

	// The list of Dicom Services.
	Value []*DicomService `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type DicomServiceCollection.
func (d DicomServiceCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", d.NextLink)
	populate(objectMap, "value", d.Value)
	return json.Marshal(objectMap)
}

// DicomServicePatchResource - Dicom Service patch properties
type DicomServicePatchResource struct {
	ResourceTags
}

// DicomServiceProperties - Dicom Service properties.
type DicomServiceProperties struct {
	// Dicom Service authentication configuration.
	AuthenticationConfiguration *DicomServiceAuthenticationConfiguration `json:"authenticationConfiguration,omitempty"`

	// The provisioning state.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty"`

	// READ-ONLY; The url of the Dicom Services.
	ServiceURL *string `json:"serviceUrl,omitempty" azure:"ro"`
}

// DicomServicesBeginCreateOrUpdateOptions contains the optional parameters for the DicomServices.BeginCreateOrUpdate method.
type DicomServicesBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DicomServicesBeginDeleteOptions contains the optional parameters for the DicomServices.BeginDelete method.
type DicomServicesBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// DicomServicesBeginUpdateOptions contains the optional parameters for the DicomServices.BeginUpdate method.
type DicomServicesBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// DicomServicesGetOptions contains the optional parameters for the DicomServices.Get method.
type DicomServicesGetOptions struct {
	// placeholder for future optional parameters
}

// DicomServicesListByWorkspaceOptions contains the optional parameters for the DicomServices.ListByWorkspace method.
type DicomServicesListByWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// Error details.
// Implements the error and azcore.HTTPResponse interfaces.
type Error struct {
	raw string
	// Error details
	InnerError *ErrorDetailsInternal `json:"error,omitempty"`
}

// Error implements the error interface for type Error.
// The contents of the error text are not contractual and subject to change.
func (e Error) Error() string {
	return e.raw
}

// ErrorDetails - Error details.
// Implements the error and azcore.HTTPResponse interfaces.
type ErrorDetails struct {
	raw string
	// Error details
	InnerError *ErrorDetailsInternal `json:"error,omitempty"`
}

// Error implements the error interface for type ErrorDetails.
// The contents of the error text are not contractual and subject to change.
func (e ErrorDetails) Error() string {
	return e.raw
}

// ErrorDetailsInternal - Error details.
type ErrorDetailsInternal struct {
	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The target of the particular error.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// FhirDestinationsListByIotConnectorOptions contains the optional parameters for the FhirDestinations.ListByIotConnector method.
type FhirDestinationsListByIotConnectorOptions struct {
	// placeholder for future optional parameters
}

// FhirService - The description of Fhir Service
type FhirService struct {
	ServiceManagedIdentity
	TaggedResource
	// The kind of the service.
	Kind *FhirServiceKind `json:"kind,omitempty"`

	// Fhir Service configuration.
	Properties *FhirServiceProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type FhirService.
func (f FhirService) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	f.TaggedResource.marshalInternal(objectMap)
	f.ServiceManagedIdentity.marshalInternal(objectMap)
	populate(objectMap, "kind", f.Kind)
	populate(objectMap, "properties", f.Properties)
	populate(objectMap, "systemData", f.SystemData)
	return json.Marshal(objectMap)
}

// FhirServiceAccessPolicyEntry - An access policy entry.
type FhirServiceAccessPolicyEntry struct {
	// REQUIRED; An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
	ObjectID *string `json:"objectId,omitempty"`
}

// FhirServiceAcrConfiguration - Azure container registry configuration information
type FhirServiceAcrConfiguration struct {
	// The list of the Azure container registry login servers.
	LoginServers []*string `json:"loginServers,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type FhirServiceAcrConfiguration.
func (f FhirServiceAcrConfiguration) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "loginServers", f.LoginServers)
	return json.Marshal(objectMap)
}

// FhirServiceAuthenticationConfiguration - Authentication configuration information
type FhirServiceAuthenticationConfiguration struct {
	// The audience url for the service
	Audience *string `json:"audience,omitempty"`

	// The authority url for the service
	Authority *string `json:"authority,omitempty"`

	// If the SMART on FHIR proxy is enabled
	SmartProxyEnabled *bool `json:"smartProxyEnabled,omitempty"`
}

// FhirServiceCollection - A collection of Fhir services.
type FhirServiceCollection struct {
	// The link used to get the next page of Fhir Services.
	NextLink *string `json:"nextLink,omitempty"`

	// The list of Fhir Services.
	Value []*FhirService `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type FhirServiceCollection.
func (f FhirServiceCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", f.NextLink)
	populate(objectMap, "value", f.Value)
	return json.Marshal(objectMap)
}

// FhirServiceCorsConfiguration - The settings for the CORS configuration of the service instance.
type FhirServiceCorsConfiguration struct {
	// If credentials are allowed via CORS.
	AllowCredentials *bool `json:"allowCredentials,omitempty"`

	// The headers to be allowed via CORS.
	Headers []*string `json:"headers,omitempty"`

	// The max age to be allowed via CORS.
	MaxAge *int32 `json:"maxAge,omitempty"`

	// The methods to be allowed via CORS.
	Methods []*string `json:"methods,omitempty"`

	// The origins to be allowed via CORS.
	Origins []*string `json:"origins,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type FhirServiceCorsConfiguration.
func (f FhirServiceCorsConfiguration) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "allowCredentials", f.AllowCredentials)
	populate(objectMap, "headers", f.Headers)
	populate(objectMap, "maxAge", f.MaxAge)
	populate(objectMap, "methods", f.Methods)
	populate(objectMap, "origins", f.Origins)
	return json.Marshal(objectMap)
}

// FhirServiceExportConfiguration - Export operation configuration information
type FhirServiceExportConfiguration struct {
	// The name of the default export storage account.
	StorageAccountName *string `json:"storageAccountName,omitempty"`
}

// FhirServicePatchResource - FhirService patch properties
type FhirServicePatchResource struct {
	ResourceTags
	ServiceManagedIdentity
}

// FhirServiceProperties - Fhir Service properties.
type FhirServiceProperties struct {
	// Fhir Service access policies.
	AccessPolicies []*FhirServiceAccessPolicyEntry `json:"accessPolicies,omitempty"`

	// Fhir Service Azure container registry configuration.
	AcrConfiguration *FhirServiceAcrConfiguration `json:"acrConfiguration,omitempty"`

	// Fhir Service authentication configuration.
	AuthenticationConfiguration *FhirServiceAuthenticationConfiguration `json:"authenticationConfiguration,omitempty"`

	// Fhir Service Cors configuration.
	CorsConfiguration *FhirServiceCorsConfiguration `json:"corsConfiguration,omitempty"`

	// Fhir Service export configuration.
	ExportConfiguration *FhirServiceExportConfiguration `json:"exportConfiguration,omitempty"`

	// The provisioning state.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type FhirServiceProperties.
func (f FhirServiceProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "accessPolicies", f.AccessPolicies)
	populate(objectMap, "acrConfiguration", f.AcrConfiguration)
	populate(objectMap, "authenticationConfiguration", f.AuthenticationConfiguration)
	populate(objectMap, "corsConfiguration", f.CorsConfiguration)
	populate(objectMap, "exportConfiguration", f.ExportConfiguration)
	populate(objectMap, "provisioningState", f.ProvisioningState)
	return json.Marshal(objectMap)
}

// FhirServicesBeginCreateOrUpdateOptions contains the optional parameters for the FhirServices.BeginCreateOrUpdate method.
type FhirServicesBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// FhirServicesBeginDeleteOptions contains the optional parameters for the FhirServices.BeginDelete method.
type FhirServicesBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// FhirServicesBeginUpdateOptions contains the optional parameters for the FhirServices.BeginUpdate method.
type FhirServicesBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// FhirServicesGetOptions contains the optional parameters for the FhirServices.Get method.
type FhirServicesGetOptions struct {
	// placeholder for future optional parameters
}

// FhirServicesListByWorkspaceOptions contains the optional parameters for the FhirServices.ListByWorkspace method.
type FhirServicesListByWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// IotConnector - IoT Connector definition.
type IotConnector struct {
	ServiceManagedIdentity
	TaggedResource
	// IoT Connector configuration.
	Properties *IotConnectorProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type IotConnector.
func (i IotConnector) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	i.TaggedResource.marshalInternal(objectMap)
	i.ServiceManagedIdentity.marshalInternal(objectMap)
	populate(objectMap, "properties", i.Properties)
	populate(objectMap, "systemData", i.SystemData)
	return json.Marshal(objectMap)
}

// IotConnectorCollection - A collection of IoT Connectors.
type IotConnectorCollection struct {
	// The link used to get the next page of IoT Connectors.
	NextLink *string `json:"nextLink,omitempty"`

	// The list of IoT Connectors.
	Value []*IotConnector `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type IotConnectorCollection.
func (i IotConnectorCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", i.NextLink)
	populate(objectMap, "value", i.Value)
	return json.Marshal(objectMap)
}

// IotConnectorFhirDestinationBeginCreateOrUpdateOptions contains the optional parameters for the IotConnectorFhirDestination.BeginCreateOrUpdate method.
type IotConnectorFhirDestinationBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IotConnectorFhirDestinationBeginDeleteOptions contains the optional parameters for the IotConnectorFhirDestination.BeginDelete method.
type IotConnectorFhirDestinationBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// IotConnectorFhirDestinationGetOptions contains the optional parameters for the IotConnectorFhirDestination.Get method.
type IotConnectorFhirDestinationGetOptions struct {
	// placeholder for future optional parameters
}

// IotConnectorPatchResource - Iot Connector patch properties
type IotConnectorPatchResource struct {
	ResourceTags
	ServiceManagedIdentity
}

// IotConnectorProperties - IoT Connector properties.
type IotConnectorProperties struct {
	// Device Mappings.
	DeviceMapping *IotMappingProperties `json:"deviceMapping,omitempty"`

	// Source configuration.
	IngestionEndpointConfiguration *IotEventHubIngestionEndpointConfiguration `json:"ingestionEndpointConfiguration,omitempty"`

	// The provisioning state.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty"`
}

// IotConnectorsBeginCreateOrUpdateOptions contains the optional parameters for the IotConnectors.BeginCreateOrUpdate method.
type IotConnectorsBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IotConnectorsBeginDeleteOptions contains the optional parameters for the IotConnectors.BeginDelete method.
type IotConnectorsBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// IotConnectorsBeginUpdateOptions contains the optional parameters for the IotConnectors.BeginUpdate method.
type IotConnectorsBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// IotConnectorsGetOptions contains the optional parameters for the IotConnectors.Get method.
type IotConnectorsGetOptions struct {
	// placeholder for future optional parameters
}

// IotConnectorsListByWorkspaceOptions contains the optional parameters for the IotConnectors.ListByWorkspace method.
type IotConnectorsListByWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// IotDestinationProperties - Common IoT Connector destination properties.
type IotDestinationProperties struct {
	// The provisioning state.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty"`
}

// IotEventHubIngestionEndpointConfiguration - Event Hub ingestion endpoint configuration
type IotEventHubIngestionEndpointConfiguration struct {
	// Consumer group of the event hub to connected to.
	ConsumerGroup *string `json:"consumerGroup,omitempty"`

	// Event Hub name to connect to.
	EventHubName *string `json:"eventHubName,omitempty"`

	// Fully qualified namespace of the Event Hub to connect to.
	FullyQualifiedEventHubNamespace *string `json:"fullyQualifiedEventHubNamespace,omitempty"`
}

// IotFhirDestination - IoT Connector FHIR destination definition.
type IotFhirDestination struct {
	LocationBasedResource
	// REQUIRED; IoT FHIR Destination settings.
	Properties *IotFhirDestinationProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type IotFhirDestination.
func (i IotFhirDestination) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	i.LocationBasedResource.marshalInternal(objectMap)
	populate(objectMap, "properties", i.Properties)
	populate(objectMap, "systemData", i.SystemData)
	return json.Marshal(objectMap)
}

// IotFhirDestinationCollection - A collection of IoT Connector FHIR destinations.
type IotFhirDestinationCollection struct {
	// The link used to get the next page of IoT FHIR destinations.
	NextLink *string `json:"nextLink,omitempty"`

	// The list of IoT Connector FHIR destinations.
	Value []*IotFhirDestination `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type IotFhirDestinationCollection.
func (i IotFhirDestinationCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", i.NextLink)
	populate(objectMap, "value", i.Value)
	return json.Marshal(objectMap)
}

// IotFhirDestinationProperties - IoT Connector destination properties for an Azure FHIR service.
type IotFhirDestinationProperties struct {
	IotDestinationProperties
	// REQUIRED; FHIR Mappings
	FhirMapping *IotMappingProperties `json:"fhirMapping,omitempty"`

	// REQUIRED; Fully qualified resource id of the FHIR service to connect to.
	FhirServiceResourceID *string `json:"fhirServiceResourceId,omitempty"`

	// REQUIRED; Determines how resource identity is resolved on the destination.
	ResourceIdentityResolutionType *IotIdentityResolutionType `json:"resourceIdentityResolutionType,omitempty"`
}

// IotMappingProperties - The mapping content.
type IotMappingProperties struct {
	// The mapping.
	Content map[string]interface{} `json:"content,omitempty"`
}

// ListOperations - Available operations of the service
type ListOperations struct {
	// URL client should use to fetch the next page (per server side paging). It's null for now, added for future use.
	NextLink *string `json:"nextLink,omitempty"`

	// READ-ONLY; Collection of available operation details
	Value []*OperationDetail `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ListOperations.
func (l ListOperations) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", l.NextLink)
	populate(objectMap, "value", l.Value)
	return json.Marshal(objectMap)
}

// LocationBasedResource - The common properties for any location based resource, tracked or proxy.
type LocationBasedResource struct {
	ResourceCore
	// The resource location.
	Location *string `json:"location,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type LocationBasedResource.
func (l LocationBasedResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	l.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (l LocationBasedResource) marshalInternal(objectMap map[string]interface{}) {
	l.ResourceCore.marshalInternal(objectMap)
	populate(objectMap, "location", l.Location)
}

// OperationDetail - Service REST API operation.
type OperationDetail struct {
	// Display of the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType `json:"actionType,omitempty" azure:"ro"`

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
	IsDataAction *bool `json:"isDataAction,omitempty" azure:"ro"`

	// READ-ONLY; Name of the operation
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Default value is 'user,system'.
	Origin *string `json:"origin,omitempty" azure:"ro"`
}

// OperationDisplay - The object that represents the operation.
type OperationDisplay struct {
	// READ-ONLY; Friendly description for the operation,
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; Name of the operation
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; Service provider: Microsoft.HealthcareApis
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; Resource Type: Services
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationResultsDescription - The properties indicating the operation result of an operation on a service.
type OperationResultsDescription struct {
	// Additional properties of the operation result.
	Properties map[string]interface{} `json:"properties,omitempty"`

	// READ-ONLY; The ID of the operation returned.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the operation result.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The time that the operation was started.
	StartTime *string `json:"startTime,omitempty" azure:"ro"`

	// READ-ONLY; The status of the operation being performed.
	Status *OperationResultStatus `json:"status,omitempty" azure:"ro"`
}

// OperationResultsGetOptions contains the optional parameters for the OperationResults.Get method.
type OperationResultsGetOptions struct {
	// placeholder for future optional parameters
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpoint - The Private Endpoint resource.
type PrivateEndpoint struct {
	// READ-ONLY; The ARM identifier for Private Endpoint
	ID *string `json:"id,omitempty" azure:"ro"`
}

// PrivateEndpointConnection - The Private Endpoint Connection resource.
type PrivateEndpointConnection struct {
	Resource
	// Resource properties.
	Properties *PrivateEndpointConnectionProperties `json:"properties,omitempty"`
}

// PrivateEndpointConnectionDescription - The Private Endpoint Connection resource.
type PrivateEndpointConnectionDescription struct {
	PrivateEndpointConnection
	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// PrivateEndpointConnectionListResultDescription - List of private endpoint connection associated with the specified storage account
type PrivateEndpointConnectionListResultDescription struct {
	// Array of private endpoint connections
	Value []*PrivateEndpointConnectionDescription `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateEndpointConnectionListResultDescription.
func (p PrivateEndpointConnectionListResultDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionProperties - Properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionProperties struct {
	// REQUIRED; A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `json:"privateLinkServiceConnectionState,omitempty"`

	// The resource of private end point.
	PrivateEndpoint *PrivateEndpoint `json:"privateEndpoint,omitempty"`

	// READ-ONLY; The provisioning state of the private endpoint connection resource.
	ProvisioningState *PrivateEndpointConnectionProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// PrivateEndpointConnectionsBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnections.BeginCreateOrUpdate method.
type PrivateEndpointConnectionsBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnections.BeginDelete method.
type PrivateEndpointConnectionsBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsGetOptions contains the optional parameters for the PrivateEndpointConnections.Get method.
type PrivateEndpointConnectionsGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsListByServiceOptions contains the optional parameters for the PrivateEndpointConnections.ListByService method.
type PrivateEndpointConnectionsListByServiceOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResource - A private link resource
type PrivateLinkResource struct {
	Resource
	// Resource properties.
	Properties *PrivateLinkResourceProperties `json:"properties,omitempty"`
}

// PrivateLinkResourceDescription - The Private Endpoint Connection resource.
type PrivateLinkResourceDescription struct {
	PrivateLinkResource
	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// PrivateLinkResourceListResultDescription - A list of private link resources
type PrivateLinkResourceListResultDescription struct {
	// Array of private link resources
	Value []*PrivateLinkResourceDescription `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateLinkResourceListResultDescription.
func (p PrivateLinkResourceListResultDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// PrivateLinkResourceProperties - Properties of a private link resource.
type PrivateLinkResourceProperties struct {
	// The private link resource Private link DNS zone name.
	RequiredZoneNames []*string `json:"requiredZoneNames,omitempty"`

	// READ-ONLY; The private link resource group id.
	GroupID *string `json:"groupId,omitempty" azure:"ro"`

	// READ-ONLY; The private link resource required member names.
	RequiredMembers []*string `json:"requiredMembers,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateLinkResourceProperties.
func (p PrivateLinkResourceProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "groupId", p.GroupID)
	populate(objectMap, "requiredMembers", p.RequiredMembers)
	populate(objectMap, "requiredZoneNames", p.RequiredZoneNames)
	return json.Marshal(objectMap)
}

// PrivateLinkResourcesGetOptions contains the optional parameters for the PrivateLinkResources.Get method.
type PrivateLinkResourcesGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesListByServiceOptions contains the optional parameters for the PrivateLinkResources.ListByService method.
type PrivateLinkResourcesListByServiceOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServiceConnectionState - A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `json:"actionsRequired,omitempty"`

	// The reason for approval/rejection of the connection.
	Description *string `json:"description,omitempty"`

	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *PrivateEndpointServiceConnectionStatus `json:"status,omitempty"`
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceCore - The common properties for any resource, tracked or proxy.
type ResourceCore struct {
	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`

	// READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ResourceCore.
func (r ResourceCore) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	r.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (r ResourceCore) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "etag", r.Etag)
	populate(objectMap, "id", r.ID)
	populate(objectMap, "name", r.Name)
	populate(objectMap, "type", r.Type)
}

// ResourceTags - List of key value pairs that describe the resource. This will overwrite the existing tags.
type ResourceTags struct {
	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ResourceTags.
func (r ResourceTags) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	r.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (r ResourceTags) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "tags", r.Tags)
}

// ServiceAccessPolicyEntry - An access policy entry.
type ServiceAccessPolicyEntry struct {
	// REQUIRED; An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
	ObjectID *string `json:"objectId,omitempty"`
}

// ServiceAcrConfigurationInfo - Azure container registry configuration information
type ServiceAcrConfigurationInfo struct {
	// The list of the ACR login servers.
	LoginServers []*string `json:"loginServers,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ServiceAcrConfigurationInfo.
func (s ServiceAcrConfigurationInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "loginServers", s.LoginServers)
	return json.Marshal(objectMap)
}

// ServiceAuthenticationConfigurationInfo - Authentication configuration information
type ServiceAuthenticationConfigurationInfo struct {
	// The audience url for the service
	Audience *string `json:"audience,omitempty"`

	// The authority url for the service
	Authority *string `json:"authority,omitempty"`

	// If the SMART on FHIR proxy is enabled
	SmartProxyEnabled *bool `json:"smartProxyEnabled,omitempty"`
}

// ServiceCorsConfigurationInfo - The settings for the CORS configuration of the service instance.
type ServiceCorsConfigurationInfo struct {
	// If credentials are allowed via CORS.
	AllowCredentials *bool `json:"allowCredentials,omitempty"`

	// The headers to be allowed via CORS.
	Headers []*string `json:"headers,omitempty"`

	// The max age to be allowed via CORS.
	MaxAge *int32 `json:"maxAge,omitempty"`

	// The methods to be allowed via CORS.
	Methods []*string `json:"methods,omitempty"`

	// The origins to be allowed via CORS.
	Origins []*string `json:"origins,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ServiceCorsConfigurationInfo.
func (s ServiceCorsConfigurationInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "allowCredentials", s.AllowCredentials)
	populate(objectMap, "headers", s.Headers)
	populate(objectMap, "maxAge", s.MaxAge)
	populate(objectMap, "methods", s.Methods)
	populate(objectMap, "origins", s.Origins)
	return json.Marshal(objectMap)
}

// ServiceCosmosDbConfigurationInfo - The settings for the Cosmos DB database backing the service.
type ServiceCosmosDbConfigurationInfo struct {
	// The URI of the customer-managed key for the backing database.
	KeyVaultKeyURI *string `json:"keyVaultKeyUri,omitempty"`

	// The provisioned throughput for the backing database.
	OfferThroughput *int32 `json:"offerThroughput,omitempty"`
}

// ServiceExportConfigurationInfo - Export operation configuration information
type ServiceExportConfigurationInfo struct {
	// The name of the default export storage account.
	StorageAccountName *string `json:"storageAccountName,omitempty"`
}

// ServiceManagedIdentity - The managed identity of a service.
type ServiceManagedIdentity struct {
	// Setting indicating whether the service has a managed identity associated with it.
	Identity *ServiceManagedIdentityIdentity `json:"identity,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ServiceManagedIdentity.
func (s ServiceManagedIdentity) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	s.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (s ServiceManagedIdentity) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "identity", s.Identity)
}

// ServiceManagedIdentityIdentity - Setting indicating whether the service has a managed identity associated with it.
type ServiceManagedIdentityIdentity struct {
	// Type of identity being specified, currently SystemAssigned and None are allowed.
	Type *ManagedServiceIdentityType `json:"type,omitempty"`
}

// ServicesBeginCreateOrUpdateOptions contains the optional parameters for the Services.BeginCreateOrUpdate method.
type ServicesBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServicesBeginDeleteOptions contains the optional parameters for the Services.BeginDelete method.
type ServicesBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServicesBeginUpdateOptions contains the optional parameters for the Services.BeginUpdate method.
type ServicesBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServicesCheckNameAvailabilityOptions contains the optional parameters for the Services.CheckNameAvailability method.
type ServicesCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ServicesDescription - The description of the service.
type ServicesDescription struct {
	ServicesResource
	// The common properties of a service.
	Properties *ServicesProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ServicesDescription.
func (s ServicesDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	s.ServicesResource.marshalInternal(objectMap)
	populate(objectMap, "properties", s.Properties)
	populate(objectMap, "systemData", s.SystemData)
	return json.Marshal(objectMap)
}

// ServicesDescriptionListResult - A list of service description objects with a next link.
type ServicesDescriptionListResult struct {
	// The link used to get the next page of service description objects.
	NextLink *string `json:"nextLink,omitempty"`

	// A list of service description objects.
	Value []*ServicesDescription `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ServicesDescriptionListResult.
func (s ServicesDescriptionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", s.NextLink)
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// ServicesGetOptions contains the optional parameters for the Services.Get method.
type ServicesGetOptions struct {
	// placeholder for future optional parameters
}

// ServicesListByResourceGroupOptions contains the optional parameters for the Services.ListByResourceGroup method.
type ServicesListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ServicesListOptions contains the optional parameters for the Services.List method.
type ServicesListOptions struct {
	// placeholder for future optional parameters
}

// ServicesNameAvailabilityInfo - The properties indicating whether a given service name is available.
type ServicesNameAvailabilityInfo struct {
	// The detailed reason message.
	Message *string `json:"message,omitempty"`

	// READ-ONLY; The value which indicates whether the provided name is available.
	NameAvailable *bool `json:"nameAvailable,omitempty" azure:"ro"`

	// READ-ONLY; The reason for unavailability.
	Reason *ServiceNameUnavailabilityReason `json:"reason,omitempty" azure:"ro"`
}

// ServicesPatchDescription - The description of the service.
type ServicesPatchDescription struct {
	// The properties for updating a service instance.
	Properties *ServicesPropertiesUpdateParameters `json:"properties,omitempty"`

	// Instance tags
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ServicesPatchDescription.
func (s ServicesPatchDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", s.Properties)
	populate(objectMap, "tags", s.Tags)
	return json.Marshal(objectMap)
}

// ServicesProperties - The properties of a service instance.
type ServicesProperties struct {
	// The access policies of the service instance.
	AccessPolicies []*ServiceAccessPolicyEntry `json:"accessPolicies,omitempty"`

	// The azure container registry settings used for convert data operation of the service instance.
	AcrConfiguration *ServiceAcrConfigurationInfo `json:"acrConfiguration,omitempty"`

	// The authentication configuration for the service instance.
	AuthenticationConfiguration *ServiceAuthenticationConfigurationInfo `json:"authenticationConfiguration,omitempty"`

	// The settings for the CORS configuration of the service instance.
	CorsConfiguration *ServiceCorsConfigurationInfo `json:"corsConfiguration,omitempty"`

	// The settings for the Cosmos DB database backing the service.
	CosmosDbConfiguration *ServiceCosmosDbConfigurationInfo `json:"cosmosDbConfiguration,omitempty"`

	// The settings for the export operation of the service instance.
	ExportConfiguration *ServiceExportConfigurationInfo `json:"exportConfiguration,omitempty"`

	// The list of private endpoint connections that are set up for this resource.
	PrivateEndpointConnections []*PrivateEndpointConnection `json:"privateEndpointConnections,omitempty"`

	// Control permission for data plane traffic coming from public networks while private endpoint is enabled.
	PublicNetworkAccess *PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`

	// READ-ONLY; The provisioning state.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ServicesProperties.
func (s ServicesProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "accessPolicies", s.AccessPolicies)
	populate(objectMap, "acrConfiguration", s.AcrConfiguration)
	populate(objectMap, "authenticationConfiguration", s.AuthenticationConfiguration)
	populate(objectMap, "corsConfiguration", s.CorsConfiguration)
	populate(objectMap, "cosmosDbConfiguration", s.CosmosDbConfiguration)
	populate(objectMap, "exportConfiguration", s.ExportConfiguration)
	populate(objectMap, "privateEndpointConnections", s.PrivateEndpointConnections)
	populate(objectMap, "provisioningState", s.ProvisioningState)
	populate(objectMap, "publicNetworkAccess", s.PublicNetworkAccess)
	return json.Marshal(objectMap)
}

// ServicesPropertiesUpdateParameters - The properties for updating a service instance.
type ServicesPropertiesUpdateParameters struct {
	// Control permission for data plane traffic coming from public networks while private endpoint is enabled.
	PublicNetworkAccess *PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`
}

// ServicesResource - The common properties of a service.
type ServicesResource struct {
	// REQUIRED; The kind of the service.
	Kind *Kind `json:"kind,omitempty"`

	// REQUIRED; The resource location.
	Location *string `json:"location,omitempty"`

	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`

	// Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `json:"identity,omitempty"`

	// The resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ServicesResource.
func (s ServicesResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	s.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (s ServicesResource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "etag", s.Etag)
	populate(objectMap, "id", s.ID)
	populate(objectMap, "identity", s.Identity)
	populate(objectMap, "kind", s.Kind)
	populate(objectMap, "location", s.Location)
	populate(objectMap, "name", s.Name)
	populate(objectMap, "tags", s.Tags)
	populate(objectMap, "type", s.Type)
}

// ServicesResourceIdentity - Setting indicating whether the service has a managed identity associated with it.
type ServicesResourceIdentity struct {
	// Type of identity being specified, currently SystemAssigned and None are allowed.
	Type *ManagedServiceIdentityType `json:"type,omitempty"`

	// READ-ONLY; The principal ID of the resource identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of the resource.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populateTimeRFC3339(objectMap, "createdAt", s.CreatedAt)
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populateTimeRFC3339(objectMap, "lastModifiedAt", s.LastModifiedAt)
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &s.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			err = unpopulateTimeRFC3339(val, &s.LastModifiedAt)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// TaggedResource - The common properties of tracked resources in the service.
type TaggedResource struct {
	LocationBasedResource
	ResourceTags
}

func (t TaggedResource) marshalInternal(objectMap map[string]interface{}) {
	t.ResourceTags.marshalInternal(objectMap)
	t.LocationBasedResource.marshalInternal(objectMap)
}

// Workspace resource.
type Workspace struct {
	TaggedResource
	// Workspaces resource specific properties.
	Properties *WorkspaceProperties `json:"properties,omitempty"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Workspace.
func (w Workspace) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	w.TaggedResource.marshalInternal(objectMap)
	populate(objectMap, "properties", w.Properties)
	populate(objectMap, "systemData", w.SystemData)
	return json.Marshal(objectMap)
}

// WorkspaceList - Collection of workspace object with a next link
type WorkspaceList struct {
	// The link used to get the next page.
	NextLink *string `json:"nextLink,omitempty"`

	// Collection of resources.
	Value []*Workspace `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type WorkspaceList.
func (w WorkspaceList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", w.NextLink)
	populate(objectMap, "value", w.Value)
	return json.Marshal(objectMap)
}

// WorkspacePatchResource - Workspace patch properties
type WorkspacePatchResource struct {
	ResourceTags
}

// WorkspaceProperties - Workspaces resource specific properties.
type WorkspaceProperties struct {
	// The provisioning state.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty"`
}

// WorkspacesBeginCreateOrUpdateOptions contains the optional parameters for the Workspaces.BeginCreateOrUpdate method.
type WorkspacesBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesBeginDeleteOptions contains the optional parameters for the Workspaces.BeginDelete method.
type WorkspacesBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesBeginUpdateOptions contains the optional parameters for the Workspaces.BeginUpdate method.
type WorkspacesBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesGetOptions contains the optional parameters for the Workspaces.Get method.
type WorkspacesGetOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesListByResourceGroupOptions contains the optional parameters for the Workspaces.ListByResourceGroup method.
type WorkspacesListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesListBySubscriptionOptions contains the optional parameters for the Workspaces.ListBySubscription method.
type WorkspacesListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
