//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armhybridcloud

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID      string
	cloudConnectorName  string
	cloudConnectionName string
	credential          azcore.TokenCredential
	options             *arm.ClientOptions
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID of the target subscription.
//   - cloudConnectorName - The name of the cloud connector resource
//   - cloudConnectionName - The name of the cloud connection resource
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, cloudConnectorName string, cloudConnectionName string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	_, err := arm.NewClient(moduleName+".ClientFactory", moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID, cloudConnectorName: cloudConnectorName, cloudConnectionName: cloudConnectionName, credential: credential,
		options: options.Clone(),
	}, nil
}

func (c *ClientFactory) NewClient() *Client {
	subClient, _ := NewClient(c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewCloudConnectorsClient() *CloudConnectorsClient {
	subClient, _ := NewCloudConnectorsClient(c.subscriptionID, c.cloudConnectorName, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewCloudConnectionsClient() *CloudConnectionsClient {
	subClient, _ := NewCloudConnectionsClient(c.subscriptionID, c.cloudConnectionName, c.credential, c.options)
	return subClient
}
