//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armhybridcloud

import "time"

// ClientListOperationsOptions contains the optional parameters for the Client.NewListOperationsPager method.
type ClientListOperationsOptions struct {
	// placeholder for future optional parameters
}

// CloudConnection - Resource which represents the managed network connection between Azure Gateways and remote cloud gateways.
type CloudConnection struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Properties of the cloud connection.
	Properties *CloudConnectionProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// CloudConnectionListResult - Response for the ListCloudConnections API service call
type CloudConnectionListResult struct {
	// Link to hold the next page of results
	NextLink *string

	// A list of cloud connection resources.
	Value []*CloudConnection
}

// CloudConnectionProperties - Cloud connection resource properties.
type CloudConnectionProperties struct {
	// The cloud connector which discovered the remote resource.
	CloudConnector *ResourceReference

	// Identifier for the remote cloud resource
	RemoteResourceID *string

	// Shared key of the cloud connection.
	SharedKey *string

	// The virtualHub to which the cloud connection belongs.
	VirtualHub *ResourceReference

	// READ-ONLY; The provisioning state of the cloud collection resource.
	ProvisioningState *ProvisioningState
}

// CloudConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the CloudConnectionsClient.BeginCreateOrUpdate
// method.
type CloudConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CloudConnectionsClientBeginDeleteOptions contains the optional parameters for the CloudConnectionsClient.BeginDelete method.
type CloudConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CloudConnectionsClientGetOptions contains the optional parameters for the CloudConnectionsClient.Get method.
type CloudConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// CloudConnectionsClientListByResourceGroupOptions contains the optional parameters for the CloudConnectionsClient.NewListByResourceGroupPager
// method.
type CloudConnectionsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// CloudConnectionsClientListBySubscriptionOptions contains the optional parameters for the CloudConnectionsClient.NewListBySubscriptionPager
// method.
type CloudConnectionsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// CloudConnectionsClientUpdateTagsOptions contains the optional parameters for the CloudConnectionsClient.UpdateTags method.
type CloudConnectionsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// CloudConnector - Cloud Connector resource.
type CloudConnector struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Properties of the cloud connector.
	Properties *CloudConnectorProperties

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// CloudConnectorListResult - Response for the ListCloudConnectors API service call
type CloudConnectorListResult struct {
	// Link to hold the next page of results
	NextLink *string

	// A list of cloud connector resources.
	Value []*CloudConnector
}

// CloudConnectorProperties - Cloud connector resource properties.
type CloudConnectorProperties struct {
	// Account identifier of the remote cloud.
	AccountID *string

	// The cloud connector type.
	CloudType *CloudType

	// READ-ONLY; The provisioning state of the cloud connector resource.
	ProvisioningState *ProvisioningState
}

// CloudConnectorsClientBeginCreateOrUpdateOptions contains the optional parameters for the CloudConnectorsClient.BeginCreateOrUpdate
// method.
type CloudConnectorsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CloudConnectorsClientBeginDeleteOptions contains the optional parameters for the CloudConnectorsClient.BeginDelete method.
type CloudConnectorsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CloudConnectorsClientBeginDiscoverResourcesOptions contains the optional parameters for the CloudConnectorsClient.BeginDiscoverResources
// method.
type CloudConnectorsClientBeginDiscoverResourcesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CloudConnectorsClientGetOptions contains the optional parameters for the CloudConnectorsClient.Get method.
type CloudConnectorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// CloudConnectorsClientListByResourceGroupOptions contains the optional parameters for the CloudConnectorsClient.NewListByResourceGroupPager
// method.
type CloudConnectorsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// CloudConnectorsClientListBySubscriptionOptions contains the optional parameters for the CloudConnectorsClient.NewListBySubscriptionPager
// method.
type CloudConnectorsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// CloudConnectorsClientUpdateTagsOptions contains the optional parameters for the CloudConnectorsClient.UpdateTags method.
type CloudConnectorsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// DiscoveredResource - Discovered Resource properties.
type DiscoveredResource struct {
	// READ-ONLY; Properties of the remote cloud resource.
	Body *string

	// READ-ONLY; Content type of the cloud resource body.
	BodyContentType *BodyContentType

	// READ-ONLY; Remote cloud resource identifier
	ID *string
}

// DiscoveredResources - API to discover resources in remote cloud referred by the connector.
type DiscoveredResources struct {
	// List of discovered remote cloud resources.
	DiscoveredResources []*DiscoveredResource

	// Remote cloud resource filter.
	ResourceFilter *ResourceFilter
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation
}

// ResourceFilter - Remote Cloud Resource filter.
type ResourceFilter struct {
	// Remote Resource name to filter on.
	Name *string

	// Remote Resource location/region to filter on.
	Region *string

	// Remote Resource tags to filter on in key:value format.
	Tag *string

	// Remote Resource type to filter on.
	Type *string
}

// ResourceReference - Resource reference properties.
type ResourceReference struct {
	// Resource ID.
	ID *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// TagsObject - Tags object for patch operations.
type TagsObject struct {
	// Resource tags.
	Tags map[string]*string
}
