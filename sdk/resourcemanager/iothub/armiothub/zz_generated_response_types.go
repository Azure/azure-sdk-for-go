//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armiothub

import (
	"context"
	"net/http"
	"time"

	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
)

// CertificatesCreateOrUpdateResponse contains the response from method Certificates.CreateOrUpdate.
type CertificatesCreateOrUpdateResponse struct {
	CertificatesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesCreateOrUpdateResult contains the result from method Certificates.CreateOrUpdate.
type CertificatesCreateOrUpdateResult struct {
	CertificateDescription
}

// CertificatesDeleteResponse contains the response from method Certificates.Delete.
type CertificatesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesGenerateVerificationCodeResponse contains the response from method Certificates.GenerateVerificationCode.
type CertificatesGenerateVerificationCodeResponse struct {
	CertificatesGenerateVerificationCodeResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesGenerateVerificationCodeResult contains the result from method Certificates.GenerateVerificationCode.
type CertificatesGenerateVerificationCodeResult struct {
	CertificateWithNonceDescription
}

// CertificatesGetResponse contains the response from method Certificates.Get.
type CertificatesGetResponse struct {
	CertificatesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesGetResult contains the result from method Certificates.Get.
type CertificatesGetResult struct {
	CertificateDescription
}

// CertificatesListByIotHubResponse contains the response from method Certificates.ListByIotHub.
type CertificatesListByIotHubResponse struct {
	CertificatesListByIotHubResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesListByIotHubResult contains the result from method Certificates.ListByIotHub.
type CertificatesListByIotHubResult struct {
	CertificateListDescription
}

// CertificatesVerifyResponse contains the response from method Certificates.Verify.
type CertificatesVerifyResponse struct {
	CertificatesVerifyResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CertificatesVerifyResult contains the result from method Certificates.Verify.
type CertificatesVerifyResult struct {
	CertificateDescription
}

// IotHubManualFailoverPollerResponse contains the response from method IotHub.ManualFailover.
type IotHubManualFailoverPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotHubManualFailoverPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l IotHubManualFailoverPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotHubManualFailoverResponse, error) {
	respType := IotHubManualFailoverResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotHubManualFailoverPollerResponse from the provided client and resume token.
func (l *IotHubManualFailoverPollerResponse) Resume(ctx context.Context, client *IotHubClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotHubClient.ManualFailover", token, client.pl, client.manualFailoverHandleError)
	if err != nil {
		return err
	}
	poller := &IotHubManualFailoverPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotHubManualFailoverResponse contains the response from method IotHub.ManualFailover.
type IotHubManualFailoverResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceCheckNameAvailabilityResponse contains the response from method IotHubResource.CheckNameAvailability.
type IotHubResourceCheckNameAvailabilityResponse struct {
	IotHubResourceCheckNameAvailabilityResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceCheckNameAvailabilityResult contains the result from method IotHubResource.CheckNameAvailability.
type IotHubResourceCheckNameAvailabilityResult struct {
	IotHubNameAvailabilityInfo
}

// IotHubResourceCreateEventHubConsumerGroupResponse contains the response from method IotHubResource.CreateEventHubConsumerGroup.
type IotHubResourceCreateEventHubConsumerGroupResponse struct {
	IotHubResourceCreateEventHubConsumerGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceCreateEventHubConsumerGroupResult contains the result from method IotHubResource.CreateEventHubConsumerGroup.
type IotHubResourceCreateEventHubConsumerGroupResult struct {
	EventHubConsumerGroupInfo
}

// IotHubResourceCreateOrUpdatePollerResponse contains the response from method IotHubResource.CreateOrUpdate.
type IotHubResourceCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotHubResourceCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l IotHubResourceCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotHubResourceCreateOrUpdateResponse, error) {
	respType := IotHubResourceCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.IotHubDescription)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotHubResourceCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *IotHubResourceCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *IotHubResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotHubResourceClient.CreateOrUpdate", token, client.pl, client.createOrUpdateHandleError)
	if err != nil {
		return err
	}
	poller := &IotHubResourceCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotHubResourceCreateOrUpdateResponse contains the response from method IotHubResource.CreateOrUpdate.
type IotHubResourceCreateOrUpdateResponse struct {
	IotHubResourceCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceCreateOrUpdateResult contains the result from method IotHubResource.CreateOrUpdate.
type IotHubResourceCreateOrUpdateResult struct {
	IotHubDescription
}

// IotHubResourceDeleteEventHubConsumerGroupResponse contains the response from method IotHubResource.DeleteEventHubConsumerGroup.
type IotHubResourceDeleteEventHubConsumerGroupResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceDeletePollerResponse contains the response from method IotHubResource.Delete.
type IotHubResourceDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotHubResourceDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l IotHubResourceDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotHubResourceDeleteResponse, error) {
	respType := IotHubResourceDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.IotHubDescription)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotHubResourceDeletePollerResponse from the provided client and resume token.
func (l *IotHubResourceDeletePollerResponse) Resume(ctx context.Context, client *IotHubResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotHubResourceClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &IotHubResourceDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotHubResourceDeleteResponse contains the response from method IotHubResource.Delete.
type IotHubResourceDeleteResponse struct {
	IotHubResourceDeleteResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceDeleteResult contains the result from method IotHubResource.Delete.
type IotHubResourceDeleteResult struct {
	IotHubDescription
}

// IotHubResourceExportDevicesResponse contains the response from method IotHubResource.ExportDevices.
type IotHubResourceExportDevicesResponse struct {
	IotHubResourceExportDevicesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceExportDevicesResult contains the result from method IotHubResource.ExportDevices.
type IotHubResourceExportDevicesResult struct {
	JobResponse
}

// IotHubResourceGetEndpointHealthResponse contains the response from method IotHubResource.GetEndpointHealth.
type IotHubResourceGetEndpointHealthResponse struct {
	IotHubResourceGetEndpointHealthResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetEndpointHealthResult contains the result from method IotHubResource.GetEndpointHealth.
type IotHubResourceGetEndpointHealthResult struct {
	EndpointHealthDataListResult
}

// IotHubResourceGetEventHubConsumerGroupResponse contains the response from method IotHubResource.GetEventHubConsumerGroup.
type IotHubResourceGetEventHubConsumerGroupResponse struct {
	IotHubResourceGetEventHubConsumerGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetEventHubConsumerGroupResult contains the result from method IotHubResource.GetEventHubConsumerGroup.
type IotHubResourceGetEventHubConsumerGroupResult struct {
	EventHubConsumerGroupInfo
}

// IotHubResourceGetJobResponse contains the response from method IotHubResource.GetJob.
type IotHubResourceGetJobResponse struct {
	IotHubResourceGetJobResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetJobResult contains the result from method IotHubResource.GetJob.
type IotHubResourceGetJobResult struct {
	JobResponse
}

// IotHubResourceGetKeysForKeyNameResponse contains the response from method IotHubResource.GetKeysForKeyName.
type IotHubResourceGetKeysForKeyNameResponse struct {
	IotHubResourceGetKeysForKeyNameResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetKeysForKeyNameResult contains the result from method IotHubResource.GetKeysForKeyName.
type IotHubResourceGetKeysForKeyNameResult struct {
	SharedAccessSignatureAuthorizationRule
}

// IotHubResourceGetQuotaMetricsResponse contains the response from method IotHubResource.GetQuotaMetrics.
type IotHubResourceGetQuotaMetricsResponse struct {
	IotHubResourceGetQuotaMetricsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetQuotaMetricsResult contains the result from method IotHubResource.GetQuotaMetrics.
type IotHubResourceGetQuotaMetricsResult struct {
	IotHubQuotaMetricInfoListResult
}

// IotHubResourceGetResponse contains the response from method IotHubResource.Get.
type IotHubResourceGetResponse struct {
	IotHubResourceGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetResult contains the result from method IotHubResource.Get.
type IotHubResourceGetResult struct {
	IotHubDescription
}

// IotHubResourceGetStatsResponse contains the response from method IotHubResource.GetStats.
type IotHubResourceGetStatsResponse struct {
	IotHubResourceGetStatsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetStatsResult contains the result from method IotHubResource.GetStats.
type IotHubResourceGetStatsResult struct {
	RegistryStatistics
}

// IotHubResourceGetValidSKUsResponse contains the response from method IotHubResource.GetValidSKUs.
type IotHubResourceGetValidSKUsResponse struct {
	IotHubResourceGetValidSKUsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceGetValidSKUsResult contains the result from method IotHubResource.GetValidSKUs.
type IotHubResourceGetValidSKUsResult struct {
	IotHubSKUDescriptionListResult
}

// IotHubResourceImportDevicesResponse contains the response from method IotHubResource.ImportDevices.
type IotHubResourceImportDevicesResponse struct {
	IotHubResourceImportDevicesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceImportDevicesResult contains the result from method IotHubResource.ImportDevices.
type IotHubResourceImportDevicesResult struct {
	JobResponse
}

// IotHubResourceListByResourceGroupResponse contains the response from method IotHubResource.ListByResourceGroup.
type IotHubResourceListByResourceGroupResponse struct {
	IotHubResourceListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceListByResourceGroupResult contains the result from method IotHubResource.ListByResourceGroup.
type IotHubResourceListByResourceGroupResult struct {
	IotHubDescriptionListResult
}

// IotHubResourceListBySubscriptionResponse contains the response from method IotHubResource.ListBySubscription.
type IotHubResourceListBySubscriptionResponse struct {
	IotHubResourceListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceListBySubscriptionResult contains the result from method IotHubResource.ListBySubscription.
type IotHubResourceListBySubscriptionResult struct {
	IotHubDescriptionListResult
}

// IotHubResourceListEventHubConsumerGroupsResponse contains the response from method IotHubResource.ListEventHubConsumerGroups.
type IotHubResourceListEventHubConsumerGroupsResponse struct {
	IotHubResourceListEventHubConsumerGroupsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceListEventHubConsumerGroupsResult contains the result from method IotHubResource.ListEventHubConsumerGroups.
type IotHubResourceListEventHubConsumerGroupsResult struct {
	EventHubConsumerGroupsListResult
}

// IotHubResourceListJobsResponse contains the response from method IotHubResource.ListJobs.
type IotHubResourceListJobsResponse struct {
	IotHubResourceListJobsResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceListJobsResult contains the result from method IotHubResource.ListJobs.
type IotHubResourceListJobsResult struct {
	JobResponseListResult
}

// IotHubResourceListKeysResponse contains the response from method IotHubResource.ListKeys.
type IotHubResourceListKeysResponse struct {
	IotHubResourceListKeysResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceListKeysResult contains the result from method IotHubResource.ListKeys.
type IotHubResourceListKeysResult struct {
	SharedAccessSignatureAuthorizationRuleListResult
}

// IotHubResourceTestAllRoutesResponse contains the response from method IotHubResource.TestAllRoutes.
type IotHubResourceTestAllRoutesResponse struct {
	IotHubResourceTestAllRoutesResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceTestAllRoutesResult contains the result from method IotHubResource.TestAllRoutes.
type IotHubResourceTestAllRoutesResult struct {
	TestAllRoutesResult
}

// IotHubResourceTestRouteResponse contains the response from method IotHubResource.TestRoute.
type IotHubResourceTestRouteResponse struct {
	IotHubResourceTestRouteResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceTestRouteResult contains the result from method IotHubResource.TestRoute.
type IotHubResourceTestRouteResult struct {
	TestRouteResult
}

// IotHubResourceUpdatePollerResponse contains the response from method IotHubResource.Update.
type IotHubResourceUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *IotHubResourceUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l IotHubResourceUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (IotHubResourceUpdateResponse, error) {
	respType := IotHubResourceUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.IotHubDescription)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a IotHubResourceUpdatePollerResponse from the provided client and resume token.
func (l *IotHubResourceUpdatePollerResponse) Resume(ctx context.Context, client *IotHubResourceClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("IotHubResourceClient.Update", token, client.pl, client.updateHandleError)
	if err != nil {
		return err
	}
	poller := &IotHubResourceUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// IotHubResourceUpdateResponse contains the response from method IotHubResource.Update.
type IotHubResourceUpdateResponse struct {
	IotHubResourceUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IotHubResourceUpdateResult contains the result from method IotHubResource.Update.
type IotHubResourceUpdateResult struct {
	IotHubDescription
}

// OperationsListResponse contains the response from method Operations.List.
type OperationsListResponse struct {
	OperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsListResult contains the result from method Operations.List.
type OperationsListResult struct {
	OperationListResult
}

// PrivateEndpointConnectionsDeletePollerResponse contains the response from method PrivateEndpointConnections.Delete.
type PrivateEndpointConnectionsDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionsDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l PrivateEndpointConnectionsDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionsDeleteResponse, error) {
	respType := PrivateEndpointConnectionsDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PrivateEndpointConnection)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionsDeletePollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionsDeletePollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionsClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionsDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PrivateEndpointConnectionsDeleteResponse contains the response from method PrivateEndpointConnections.Delete.
type PrivateEndpointConnectionsDeleteResponse struct {
	PrivateEndpointConnectionsDeleteResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsDeleteResult contains the result from method PrivateEndpointConnections.Delete.
type PrivateEndpointConnectionsDeleteResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsGetResponse contains the response from method PrivateEndpointConnections.Get.
type PrivateEndpointConnectionsGetResponse struct {
	PrivateEndpointConnectionsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsGetResult contains the result from method PrivateEndpointConnections.Get.
type PrivateEndpointConnectionsGetResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsListResponse contains the response from method PrivateEndpointConnections.List.
type PrivateEndpointConnectionsListResponse struct {
	PrivateEndpointConnectionsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsListResult contains the result from method PrivateEndpointConnections.List.
type PrivateEndpointConnectionsListResult struct {
	// The list of private endpoint connections for an IotHub
	PrivateEndpointConnectionArray []*PrivateEndpointConnection
}

// PrivateEndpointConnectionsUpdatePollerResponse contains the response from method PrivateEndpointConnections.Update.
type PrivateEndpointConnectionsUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionsUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
func (l PrivateEndpointConnectionsUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionsUpdateResponse, error) {
	respType := PrivateEndpointConnectionsUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PrivateEndpointConnection)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionsUpdatePollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionsUpdatePollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionsClient.Update", token, client.pl, client.updateHandleError)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionsUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PrivateEndpointConnectionsUpdateResponse contains the response from method PrivateEndpointConnections.Update.
type PrivateEndpointConnectionsUpdateResponse struct {
	PrivateEndpointConnectionsUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsUpdateResult contains the result from method PrivateEndpointConnections.Update.
type PrivateEndpointConnectionsUpdateResult struct {
	PrivateEndpointConnection
}

// PrivateLinkResourcesGetResponse contains the response from method PrivateLinkResources.Get.
type PrivateLinkResourcesGetResponse struct {
	PrivateLinkResourcesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourcesGetResult contains the result from method PrivateLinkResources.Get.
type PrivateLinkResourcesGetResult struct {
	GroupIDInformation
}

// PrivateLinkResourcesListResponse contains the response from method PrivateLinkResources.List.
type PrivateLinkResourcesListResponse struct {
	PrivateLinkResourcesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourcesListResult contains the result from method PrivateLinkResources.List.
type PrivateLinkResourcesListResult struct {
	PrivateLinkResources
}

// ResourceProviderCommonGetSubscriptionQuotaResponse contains the response from method ResourceProviderCommon.GetSubscriptionQuota.
type ResourceProviderCommonGetSubscriptionQuotaResponse struct {
	ResourceProviderCommonGetSubscriptionQuotaResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceProviderCommonGetSubscriptionQuotaResult contains the result from method ResourceProviderCommon.GetSubscriptionQuota.
type ResourceProviderCommonGetSubscriptionQuotaResult struct {
	UserSubscriptionQuotaListResult
}
