//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armlogic

// IntegrationAccountAgreementsClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountAgreementsClient.CreateOrUpdate
// method.
type IntegrationAccountAgreementsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAgreementsClientDeleteOptions contains the optional parameters for the IntegrationAccountAgreementsClient.Delete
// method.
type IntegrationAccountAgreementsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAgreementsClientGetOptions contains the optional parameters for the IntegrationAccountAgreementsClient.Get
// method.
type IntegrationAccountAgreementsClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAgreementsClientListContentCallbackURLOptions contains the optional parameters for the IntegrationAccountAgreementsClient.ListContentCallbackURL
// method.
type IntegrationAccountAgreementsClientListContentCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAgreementsClientListOptions contains the optional parameters for the IntegrationAccountAgreementsClient.NewListPager
// method.
type IntegrationAccountAgreementsClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: AgreementType.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountAssembliesClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountAssembliesClient.CreateOrUpdate
// method.
type IntegrationAccountAssembliesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAssembliesClientDeleteOptions contains the optional parameters for the IntegrationAccountAssembliesClient.Delete
// method.
type IntegrationAccountAssembliesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAssembliesClientGetOptions contains the optional parameters for the IntegrationAccountAssembliesClient.Get
// method.
type IntegrationAccountAssembliesClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAssembliesClientListContentCallbackURLOptions contains the optional parameters for the IntegrationAccountAssembliesClient.ListContentCallbackURL
// method.
type IntegrationAccountAssembliesClientListContentCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountAssembliesClientListOptions contains the optional parameters for the IntegrationAccountAssembliesClient.NewListPager
// method.
type IntegrationAccountAssembliesClientListOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountBatchConfigurationsClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountBatchConfigurationsClient.CreateOrUpdate
// method.
type IntegrationAccountBatchConfigurationsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountBatchConfigurationsClientDeleteOptions contains the optional parameters for the IntegrationAccountBatchConfigurationsClient.Delete
// method.
type IntegrationAccountBatchConfigurationsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountBatchConfigurationsClientGetOptions contains the optional parameters for the IntegrationAccountBatchConfigurationsClient.Get
// method.
type IntegrationAccountBatchConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountBatchConfigurationsClientListOptions contains the optional parameters for the IntegrationAccountBatchConfigurationsClient.NewListPager
// method.
type IntegrationAccountBatchConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountCertificatesClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountCertificatesClient.CreateOrUpdate
// method.
type IntegrationAccountCertificatesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountCertificatesClientDeleteOptions contains the optional parameters for the IntegrationAccountCertificatesClient.Delete
// method.
type IntegrationAccountCertificatesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountCertificatesClientGetOptions contains the optional parameters for the IntegrationAccountCertificatesClient.Get
// method.
type IntegrationAccountCertificatesClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountCertificatesClientListOptions contains the optional parameters for the IntegrationAccountCertificatesClient.NewListPager
// method.
type IntegrationAccountCertificatesClientListOptions struct {
	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountMapsClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountMapsClient.CreateOrUpdate
// method.
type IntegrationAccountMapsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountMapsClientDeleteOptions contains the optional parameters for the IntegrationAccountMapsClient.Delete
// method.
type IntegrationAccountMapsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountMapsClientGetOptions contains the optional parameters for the IntegrationAccountMapsClient.Get method.
type IntegrationAccountMapsClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountMapsClientListContentCallbackURLOptions contains the optional parameters for the IntegrationAccountMapsClient.ListContentCallbackURL
// method.
type IntegrationAccountMapsClientListContentCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountMapsClientListOptions contains the optional parameters for the IntegrationAccountMapsClient.NewListPager
// method.
type IntegrationAccountMapsClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: MapType.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountPartnersClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountPartnersClient.CreateOrUpdate
// method.
type IntegrationAccountPartnersClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountPartnersClientDeleteOptions contains the optional parameters for the IntegrationAccountPartnersClient.Delete
// method.
type IntegrationAccountPartnersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountPartnersClientGetOptions contains the optional parameters for the IntegrationAccountPartnersClient.Get
// method.
type IntegrationAccountPartnersClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountPartnersClientListContentCallbackURLOptions contains the optional parameters for the IntegrationAccountPartnersClient.ListContentCallbackURL
// method.
type IntegrationAccountPartnersClientListContentCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountPartnersClientListOptions contains the optional parameters for the IntegrationAccountPartnersClient.NewListPager
// method.
type IntegrationAccountPartnersClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: PartnerType.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountSchemasClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountSchemasClient.CreateOrUpdate
// method.
type IntegrationAccountSchemasClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountSchemasClientDeleteOptions contains the optional parameters for the IntegrationAccountSchemasClient.Delete
// method.
type IntegrationAccountSchemasClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountSchemasClientGetOptions contains the optional parameters for the IntegrationAccountSchemasClient.Get
// method.
type IntegrationAccountSchemasClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountSchemasClientListContentCallbackURLOptions contains the optional parameters for the IntegrationAccountSchemasClient.ListContentCallbackURL
// method.
type IntegrationAccountSchemasClientListContentCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountSchemasClientListOptions contains the optional parameters for the IntegrationAccountSchemasClient.NewListPager
// method.
type IntegrationAccountSchemasClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: SchemaType.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountSessionsClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountSessionsClient.CreateOrUpdate
// method.
type IntegrationAccountSessionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountSessionsClientDeleteOptions contains the optional parameters for the IntegrationAccountSessionsClient.Delete
// method.
type IntegrationAccountSessionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountSessionsClientGetOptions contains the optional parameters for the IntegrationAccountSessionsClient.Get
// method.
type IntegrationAccountSessionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountSessionsClientListOptions contains the optional parameters for the IntegrationAccountSessionsClient.NewListPager
// method.
type IntegrationAccountSessionsClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: ChangedTime.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountsClientCreateOrUpdateOptions contains the optional parameters for the IntegrationAccountsClient.CreateOrUpdate
// method.
type IntegrationAccountsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountsClientDeleteOptions contains the optional parameters for the IntegrationAccountsClient.Delete method.
type IntegrationAccountsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountsClientGetOptions contains the optional parameters for the IntegrationAccountsClient.Get method.
type IntegrationAccountsClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountsClientListByResourceGroupOptions contains the optional parameters for the IntegrationAccountsClient.NewListByResourceGroupPager
// method.
type IntegrationAccountsClientListByResourceGroupOptions struct {
	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountsClientListBySubscriptionOptions contains the optional parameters for the IntegrationAccountsClient.NewListBySubscriptionPager
// method.
type IntegrationAccountsClientListBySubscriptionOptions struct {
	// The number of items to be included in the result.
	Top *int32
}

// IntegrationAccountsClientListCallbackURLOptions contains the optional parameters for the IntegrationAccountsClient.ListCallbackURL
// method.
type IntegrationAccountsClientListCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountsClientListKeyVaultKeysOptions contains the optional parameters for the IntegrationAccountsClient.NewListKeyVaultKeysPager
// method.
type IntegrationAccountsClientListKeyVaultKeysOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountsClientLogTrackingEventsOptions contains the optional parameters for the IntegrationAccountsClient.LogTrackingEvents
// method.
type IntegrationAccountsClientLogTrackingEventsOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountsClientRegenerateAccessKeyOptions contains the optional parameters for the IntegrationAccountsClient.RegenerateAccessKey
// method.
type IntegrationAccountsClientRegenerateAccessKeyOptions struct {
	// placeholder for future optional parameters
}

// IntegrationAccountsClientUpdateOptions contains the optional parameters for the IntegrationAccountsClient.Update method.
type IntegrationAccountsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentManagedAPIOperationsClientListOptions contains the optional parameters for the IntegrationServiceEnvironmentManagedAPIOperationsClient.NewListPager
// method.
type IntegrationServiceEnvironmentManagedAPIOperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentManagedApisClientBeginDeleteOptions contains the optional parameters for the IntegrationServiceEnvironmentManagedApisClient.BeginDelete
// method.
type IntegrationServiceEnvironmentManagedApisClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IntegrationServiceEnvironmentManagedApisClientBeginPutOptions contains the optional parameters for the IntegrationServiceEnvironmentManagedApisClient.BeginPut
// method.
type IntegrationServiceEnvironmentManagedApisClientBeginPutOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IntegrationServiceEnvironmentManagedApisClientGetOptions contains the optional parameters for the IntegrationServiceEnvironmentManagedApisClient.Get
// method.
type IntegrationServiceEnvironmentManagedApisClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentManagedApisClientListOptions contains the optional parameters for the IntegrationServiceEnvironmentManagedApisClient.NewListPager
// method.
type IntegrationServiceEnvironmentManagedApisClientListOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentNetworkHealthClientGetOptions contains the optional parameters for the IntegrationServiceEnvironmentNetworkHealthClient.Get
// method.
type IntegrationServiceEnvironmentNetworkHealthClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentSKUsClientListOptions contains the optional parameters for the IntegrationServiceEnvironmentSKUsClient.NewListPager
// method.
type IntegrationServiceEnvironmentSKUsClientListOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentsClientBeginCreateOrUpdateOptions contains the optional parameters for the IntegrationServiceEnvironmentsClient.BeginCreateOrUpdate
// method.
type IntegrationServiceEnvironmentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IntegrationServiceEnvironmentsClientBeginUpdateOptions contains the optional parameters for the IntegrationServiceEnvironmentsClient.BeginUpdate
// method.
type IntegrationServiceEnvironmentsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IntegrationServiceEnvironmentsClientDeleteOptions contains the optional parameters for the IntegrationServiceEnvironmentsClient.Delete
// method.
type IntegrationServiceEnvironmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentsClientGetOptions contains the optional parameters for the IntegrationServiceEnvironmentsClient.Get
// method.
type IntegrationServiceEnvironmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// IntegrationServiceEnvironmentsClientListByResourceGroupOptions contains the optional parameters for the IntegrationServiceEnvironmentsClient.NewListByResourceGroupPager
// method.
type IntegrationServiceEnvironmentsClientListByResourceGroupOptions struct {
	// The number of items to be included in the result.
	Top *int32
}

// IntegrationServiceEnvironmentsClientListBySubscriptionOptions contains the optional parameters for the IntegrationServiceEnvironmentsClient.NewListBySubscriptionPager
// method.
type IntegrationServiceEnvironmentsClientListBySubscriptionOptions struct {
	// The number of items to be included in the result.
	Top *int32
}

// IntegrationServiceEnvironmentsClientRestartOptions contains the optional parameters for the IntegrationServiceEnvironmentsClient.Restart
// method.
type IntegrationServiceEnvironmentsClientRestartOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsClientGetOptions contains the optional parameters for the WorkflowRunActionRepetitionsClient.Get
// method.
type WorkflowRunActionRepetitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsClientListExpressionTracesOptions contains the optional parameters for the WorkflowRunActionRepetitionsClient.NewListExpressionTracesPager
// method.
type WorkflowRunActionRepetitionsClientListExpressionTracesOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsClientListOptions contains the optional parameters for the WorkflowRunActionRepetitionsClient.NewListPager
// method.
type WorkflowRunActionRepetitionsClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsRequestHistoriesClientGetOptions contains the optional parameters for the WorkflowRunActionRepetitionsRequestHistoriesClient.Get
// method.
type WorkflowRunActionRepetitionsRequestHistoriesClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRepetitionsRequestHistoriesClientListOptions contains the optional parameters for the WorkflowRunActionRepetitionsRequestHistoriesClient.NewListPager
// method.
type WorkflowRunActionRepetitionsRequestHistoriesClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRequestHistoriesClientGetOptions contains the optional parameters for the WorkflowRunActionRequestHistoriesClient.Get
// method.
type WorkflowRunActionRequestHistoriesClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionRequestHistoriesClientListOptions contains the optional parameters for the WorkflowRunActionRequestHistoriesClient.NewListPager
// method.
type WorkflowRunActionRequestHistoriesClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionScopeRepetitionsClientGetOptions contains the optional parameters for the WorkflowRunActionScopeRepetitionsClient.Get
// method.
type WorkflowRunActionScopeRepetitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionScopeRepetitionsClientListOptions contains the optional parameters for the WorkflowRunActionScopeRepetitionsClient.NewListPager
// method.
type WorkflowRunActionScopeRepetitionsClientListOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionsClientGetOptions contains the optional parameters for the WorkflowRunActionsClient.Get method.
type WorkflowRunActionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionsClientListExpressionTracesOptions contains the optional parameters for the WorkflowRunActionsClient.NewListExpressionTracesPager
// method.
type WorkflowRunActionsClientListExpressionTracesOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunActionsClientListOptions contains the optional parameters for the WorkflowRunActionsClient.NewListPager method.
type WorkflowRunActionsClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: Status.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowRunOperationsClientGetOptions contains the optional parameters for the WorkflowRunOperationsClient.Get method.
type WorkflowRunOperationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunsClientCancelOptions contains the optional parameters for the WorkflowRunsClient.Cancel method.
type WorkflowRunsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunsClientGetOptions contains the optional parameters for the WorkflowRunsClient.Get method.
type WorkflowRunsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowRunsClientListOptions contains the optional parameters for the WorkflowRunsClient.NewListPager method.
type WorkflowRunsClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowTriggerHistoriesClientGetOptions contains the optional parameters for the WorkflowTriggerHistoriesClient.Get method.
type WorkflowTriggerHistoriesClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggerHistoriesClientListOptions contains the optional parameters for the WorkflowTriggerHistoriesClient.NewListPager
// method.
type WorkflowTriggerHistoriesClientListOptions struct {
	// The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowTriggerHistoriesClientResubmitOptions contains the optional parameters for the WorkflowTriggerHistoriesClient.Resubmit
// method.
type WorkflowTriggerHistoriesClientResubmitOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientGetOptions contains the optional parameters for the WorkflowTriggersClient.Get method.
type WorkflowTriggersClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientGetSchemaJSONOptions contains the optional parameters for the WorkflowTriggersClient.GetSchemaJSON
// method.
type WorkflowTriggersClientGetSchemaJSONOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientListCallbackURLOptions contains the optional parameters for the WorkflowTriggersClient.ListCallbackURL
// method.
type WorkflowTriggersClientListCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientListOptions contains the optional parameters for the WorkflowTriggersClient.NewListPager method.
type WorkflowTriggersClientListOptions struct {
	// The filter to apply on the operation.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowTriggersClientResetOptions contains the optional parameters for the WorkflowTriggersClient.Reset method.
type WorkflowTriggersClientResetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientRunOptions contains the optional parameters for the WorkflowTriggersClient.Run method.
type WorkflowTriggersClientRunOptions struct {
	// placeholder for future optional parameters
}

// WorkflowTriggersClientSetStateOptions contains the optional parameters for the WorkflowTriggersClient.SetState method.
type WorkflowTriggersClientSetStateOptions struct {
	// placeholder for future optional parameters
}

// WorkflowVersionTriggersClientListCallbackURLOptions contains the optional parameters for the WorkflowVersionTriggersClient.ListCallbackURL
// method.
type WorkflowVersionTriggersClientListCallbackURLOptions struct {
	// The callback URL parameters.
	Parameters *GetCallbackURLParameters
}

// WorkflowVersionsClientGetOptions contains the optional parameters for the WorkflowVersionsClient.Get method.
type WorkflowVersionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowVersionsClientListOptions contains the optional parameters for the WorkflowVersionsClient.NewListPager method.
type WorkflowVersionsClientListOptions struct {
	// The number of items to be included in the result.
	Top *int32
}

// WorkflowsClientBeginMoveOptions contains the optional parameters for the WorkflowsClient.BeginMove method.
type WorkflowsClientBeginMoveOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WorkflowsClientCreateOrUpdateOptions contains the optional parameters for the WorkflowsClient.CreateOrUpdate method.
type WorkflowsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientDeleteOptions contains the optional parameters for the WorkflowsClient.Delete method.
type WorkflowsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientDisableOptions contains the optional parameters for the WorkflowsClient.Disable method.
type WorkflowsClientDisableOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientEnableOptions contains the optional parameters for the WorkflowsClient.Enable method.
type WorkflowsClientEnableOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientGenerateUpgradedDefinitionOptions contains the optional parameters for the WorkflowsClient.GenerateUpgradedDefinition
// method.
type WorkflowsClientGenerateUpgradedDefinitionOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientGetOptions contains the optional parameters for the WorkflowsClient.Get method.
type WorkflowsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientListByResourceGroupOptions contains the optional parameters for the WorkflowsClient.NewListByResourceGroupPager
// method.
type WorkflowsClientListByResourceGroupOptions struct {
	// The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowsClientListBySubscriptionOptions contains the optional parameters for the WorkflowsClient.NewListBySubscriptionPager
// method.
type WorkflowsClientListBySubscriptionOptions struct {
	// The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.
	Filter *string

	// The number of items to be included in the result.
	Top *int32
}

// WorkflowsClientListCallbackURLOptions contains the optional parameters for the WorkflowsClient.ListCallbackURL method.
type WorkflowsClientListCallbackURLOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientListSwaggerOptions contains the optional parameters for the WorkflowsClient.ListSwagger method.
type WorkflowsClientListSwaggerOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientRegenerateAccessKeyOptions contains the optional parameters for the WorkflowsClient.RegenerateAccessKey
// method.
type WorkflowsClientRegenerateAccessKeyOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientUpdateOptions contains the optional parameters for the WorkflowsClient.Update method.
type WorkflowsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientValidateByLocationOptions contains the optional parameters for the WorkflowsClient.ValidateByLocation method.
type WorkflowsClientValidateByLocationOptions struct {
	// placeholder for future optional parameters
}

// WorkflowsClientValidateByResourceGroupOptions contains the optional parameters for the WorkflowsClient.ValidateByResourceGroup
// method.
type WorkflowsClientValidateByResourceGroupOptions struct {
	// placeholder for future optional parameters
}
