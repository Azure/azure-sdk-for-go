//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armnetapp_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/netapp/armnetapp"
)

// x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-08-01/examples/CheckNameAvailability.json
func ExampleResourceClient_CheckNameAvailability() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armnetapp.NewResourceClient("<subscription-id>", cred, nil)
	res, err := client.CheckNameAvailability(ctx,
		"<location>",
		armnetapp.ResourceNameAvailabilityRequest{
			Name:          to.StringPtr("<name>"),
			Type:          armnetapp.CheckNameResourceTypes("netAppAccount").ToPtr(),
			ResourceGroup: to.StringPtr("<resource-group>"),
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("Response result: %#v\n", res.ResourceClientCheckNameAvailabilityResult)
}

// x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-08-01/examples/CheckFilePathAvailability.json
func ExampleResourceClient_CheckFilePathAvailability() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armnetapp.NewResourceClient("<subscription-id>", cred, nil)
	res, err := client.CheckFilePathAvailability(ctx,
		"<location>",
		armnetapp.FilePathAvailabilityRequest{
			Name:     to.StringPtr("<name>"),
			SubnetID: to.StringPtr("<subnet-id>"),
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("Response result: %#v\n", res.ResourceClientCheckFilePathAvailabilityResult)
}

// x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-08-01/examples/CheckQuotaAvailability.json
func ExampleResourceClient_CheckQuotaAvailability() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armnetapp.NewResourceClient("<subscription-id>", cred, nil)
	res, err := client.CheckQuotaAvailability(ctx,
		"<location>",
		armnetapp.QuotaAvailabilityRequest{
			Name:          to.StringPtr("<name>"),
			Type:          armnetapp.CheckQuotaNameResourceTypes("Microsoft.NetApp/netAppAccounts").ToPtr(),
			ResourceGroup: to.StringPtr("<resource-group>"),
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("Response result: %#v\n", res.ResourceClientCheckQuotaAvailabilityResult)
}
