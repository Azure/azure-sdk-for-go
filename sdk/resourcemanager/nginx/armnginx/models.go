// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armnginx

import "time"

// AnalysisCreate - The request body for creating an analysis for an NGINX configuration.
type AnalysisCreate struct {
	// REQUIRED
	Config *AnalysisCreateConfig
}

type AnalysisCreateConfig struct {
	Files []*ConfigurationFile

	// Nginx Configuration Package
	Package        *ConfigurationPackage
	ProtectedFiles []*ConfigurationProtectedFileRequest

	// The root file of the NGINX config file(s). It must match one of the files' filepath.
	RootFile *string
}

// AnalysisDiagnostic - An error object found during the analysis of an NGINX configuration.
type AnalysisDiagnostic struct {
	// REQUIRED
	Description *string

	// REQUIRED
	Directive *string

	// REQUIRED; the filepath of the most relevant config file
	File *string

	// REQUIRED
	Line *float32

	// REQUIRED
	Message *string

	// REQUIRED
	Rule *string

	// Unique identifier for the error
	ID *string
}

// AnalysisResult - The response body for an analysis request. Contains the status of the analysis and any errors.
type AnalysisResult struct {
	// REQUIRED; The status of the analysis.
	Status *string
	Data   *AnalysisResultData
}

type AnalysisResultData struct {
	Diagnostics []*DiagnosticItem
	Errors      []*AnalysisDiagnostic
}

// AutoUpgradeProfile - Autoupgrade settings of a deployment.
type AutoUpgradeProfile struct {
	// REQUIRED; Channel used for autoupgrade.
	UpgradeChannel *string
}

// Certificate - Nginx Certificate
type Certificate struct {
	// The geo-location where the resource lives
	Location *string

	// Nginx Certificate Properties
	Properties *CertificateProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// CertificateErrorResponseBody - Nginx Certificate Error Response Body
type CertificateErrorResponseBody struct {
	Code    *string
	Message *string
}

// CertificateListResponse - Nginx Certificate List Response
type CertificateListResponse struct {
	// REQUIRED; The NginxCertificate items on this page
	Value []*Certificate

	// The link to the next page of items
	NextLink *string
}

// CertificateProperties - Nginx Certificate Properties
type CertificateProperties struct {
	// Nginx Certificate Error Response Body
	CertificateError       *CertificateErrorResponseBody
	CertificateVirtualPath *string
	KeyVaultSecretID       *string
	KeyVirtualPath         *string

	// READ-ONLY
	KeyVaultSecretCreated *time.Time

	// READ-ONLY
	KeyVaultSecretVersion *string

	// READ-ONLY; Provisioning State
	ProvisioningState *ProvisioningState

	// READ-ONLY
	SHA1Thumbprint *string
}

// ConfigurationFile - Nginx Configuration File
type ConfigurationFile struct {
	Content     *string
	VirtualPath *string
}

// ConfigurationListResponse - Response of a list operation.
type ConfigurationListResponse struct {
	// REQUIRED; The NginxConfigurationResponse items on this page
	Value []*ConfigurationResponse

	// The link to the next page of items
	NextLink *string
}

// ConfigurationPackage - Nginx Configuration Package
type ConfigurationPackage struct {
	Data           *string
	ProtectedFiles []*string
}

// ConfigurationProtectedFileRequest - Nginx Configuration Protected File Request
type ConfigurationProtectedFileRequest struct {
	// The content of the protected file. This value is a PUT only value. If you perform a GET request on this value, it will
	// be empty because it is a protected file.
	Content *string

	// The hash of the content of the file. This value is used to determine if the file has changed.
	ContentHash *string

	// The virtual path of the protected file.
	VirtualPath *string
}

// ConfigurationProtectedFileResponse - Nginx Configuration Protected File Response
type ConfigurationProtectedFileResponse struct {
	// The hash of the content of the file. This value is used to determine if the file has changed.
	ContentHash *string

	// The virtual path of the protected file.
	VirtualPath *string
}

// ConfigurationRequest - Nginx Configuration Request
type ConfigurationRequest struct {
	// Nginx Configuration Request Properties
	Properties *ConfigurationRequestProperties

	// READ-ONLY
	ID *string

	// READ-ONLY
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY
	Type *string
}

// ConfigurationRequestProperties - Nginx Configuration Request Properties
type ConfigurationRequestProperties struct {
	Files []*ConfigurationFile

	// Nginx Configuration Package
	Package        *ConfigurationPackage
	ProtectedFiles []*ConfigurationProtectedFileRequest
	RootFile       *string

	// READ-ONLY; Provisioning State
	ProvisioningState *ProvisioningState
}

// ConfigurationResponse - Nginx Configuration Response
type ConfigurationResponse struct {
	// Nginx Configuration Response Properties
	Properties *ConfigurationResponseProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ConfigurationResponseProperties - Nginx Configuration Response Properties
type ConfigurationResponseProperties struct {
	Files []*ConfigurationFile

	// Nginx Configuration Package
	Package        *ConfigurationPackage
	ProtectedFiles []*ConfigurationProtectedFileResponse
	RootFile       *string

	// READ-ONLY; Provisioning State
	ProvisioningState *ProvisioningState
}

// Deployment - Nginx Deployment
type Deployment struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Identity Properties
	Identity *IdentityProperties

	// Nginx Deployment Properties
	Properties *DeploymentProperties

	// Resource Sku
	SKU *ResourceSKU

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// DeploymentAPIKeyListResponse - Nginx Deployment Api Key List Response
type DeploymentAPIKeyListResponse struct {
	// REQUIRED; The NginxDeploymentApiKeyResponse items on this page
	Value []*DeploymentAPIKeyResponse

	// The link to the next page of items
	NextLink *string
}

// DeploymentAPIKeyRequest - Nginx Deployment Api Key Request
type DeploymentAPIKeyRequest struct {
	// Nginx Deployment Api Key Request Properties
	Properties *DeploymentAPIKeyRequestProperties

	// READ-ONLY
	ID *string

	// READ-ONLY
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY
	Type *string
}

// DeploymentAPIKeyRequestProperties - Nginx Deployment Api Key Request Properties
type DeploymentAPIKeyRequestProperties struct {
	// The time after which this Dataplane API Key is no longer valid.
	EndDateTime *time.Time

	// Secret text to be used as a Dataplane API Key. This is a write only property that can never be read back, but the first
	// three characters will be returned in the 'hint' property.
	SecretText *string
}

// DeploymentAPIKeyResponse - Nginx Deployment Api Key Response
type DeploymentAPIKeyResponse struct {
	// Nginx Deployment Api Key Response Properties
	Properties *DeploymentAPIKeyResponseProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// DeploymentAPIKeyResponseProperties - Nginx Deployment Api Key Response Properties
type DeploymentAPIKeyResponseProperties struct {
	// The time after which this Dataplane API Key is no longer valid.
	EndDateTime *time.Time

	// READ-ONLY; The first three characters of the secret text to help identify it in use. This property is read-only.
	Hint *string
}

// DeploymentDefaultWafPolicyListResponse - Nginx Deployment Default Waf Policy List Response
type DeploymentDefaultWafPolicyListResponse struct {
	NextLink *string
	Value    []*DeploymentDefaultWafPolicyProperties
}

// DeploymentDefaultWafPolicyProperties - Nginx Deployment Default Waf Policy Properties
type DeploymentDefaultWafPolicyProperties struct {
	// READ-ONLY
	Content []byte

	// READ-ONLY
	Filepath *string
}

// DeploymentListResponse - Nginx Deployment List Response
type DeploymentListResponse struct {
	// REQUIRED; The NginxDeployment items on this page
	Value []*Deployment

	// The link to the next page of items
	NextLink *string
}

// DeploymentProperties - Nginx Deployment Properties
type DeploymentProperties struct {
	// Autoupgrade settings of a deployment.
	AutoUpgradeProfile       *AutoUpgradeProfile
	EnableDiagnosticsSupport *bool

	// Nginx Logging
	Logging *Logging

	// Nginx Network Profile
	NetworkProfile *NetworkProfile

	// Settings for NGINX App Protect (NAP)
	NginxAppProtect *DeploymentPropertiesNginxAppProtect

	// Information on how the deployment will be scaled.
	ScalingProperties *DeploymentScalingProperties

	// Nginx Deployment User Profile
	UserProfile *DeploymentUserProfile

	// READ-ONLY; Dataplane API endpoint for the caller to update the NGINX state of the deployment.
	DataplaneAPIEndpoint *string

	// READ-ONLY; The IP address of the deployment.
	IPAddress *string

	// READ-ONLY
	NginxVersion *string

	// READ-ONLY; Provisioning State
	ProvisioningState *ProvisioningState
}

// DeploymentPropertiesNginxAppProtect - Settings for NGINX App Protect (NAP)
type DeploymentPropertiesNginxAppProtect struct {
	// REQUIRED; Settings for the NGINX App Protect Web Application Firewall (WAF)
	WebApplicationFirewallSettings *WebApplicationFirewallSettings

	// READ-ONLY; The status of the NGINX App Protect Web Application Firewall
	WebApplicationFirewallStatus *WebApplicationFirewallStatus
}

// DeploymentScalingProperties - Information on how the deployment will be scaled.
type DeploymentScalingProperties struct {
	// The settings for enabling automatic scaling of the deployment. If this field is specified, 'scale.capacity' must be empty.
	AutoScaleSettings *DeploymentScalingPropertiesAutoScaleSettings
	Capacity          *int32
}

// DeploymentScalingPropertiesAutoScaleSettings - The settings for enabling automatic scaling of the deployment. If this field
// is specified, 'scale.capacity' must be empty.
type DeploymentScalingPropertiesAutoScaleSettings struct {
	// REQUIRED
	Profiles []*ScaleProfile
}

// DeploymentUpdateParameters - Nginx Deployment Update Parameters
type DeploymentUpdateParameters struct {
	// Identity Properties
	Identity *IdentityProperties

	// The geo-location where the resource lives
	Location *string

	// Nginx Deployment Update Properties
	Properties *DeploymentUpdateProperties

	// Resource Sku
	SKU *ResourceSKU

	// Dictionary of <string>
	Tags map[string]*string
}

// DeploymentUpdateProperties - Nginx Deployment Update Properties
type DeploymentUpdateProperties struct {
	// Autoupgrade settings of a deployment.
	AutoUpgradeProfile       *AutoUpgradeProfile
	EnableDiagnosticsSupport *bool

	// Nginx Logging
	Logging *Logging

	// Nginx Network Profile
	NetworkProfile *NetworkProfile

	// Update settings for NGINX App Protect (NAP)
	NginxAppProtect *DeploymentUpdatePropertiesNginxAppProtect

	// Information on how the deployment will be scaled.
	ScalingProperties *DeploymentScalingProperties

	// Nginx Deployment User Profile
	UserProfile *DeploymentUserProfile
}

// DeploymentUpdatePropertiesNginxAppProtect - Update settings for NGINX App Protect (NAP)
type DeploymentUpdatePropertiesNginxAppProtect struct {
	// Settings for the NGINX App Protect Web Application Firewall (WAF)
	WebApplicationFirewallSettings *WebApplicationFirewallSettings
}

// DeploymentUserProfile - Nginx Deployment User Profile
type DeploymentUserProfile struct {
	// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
	// or a valid email address.
	PreferredEmail *string
}

// DeploymentWafPolicy - Nginx Deployment Waf Policy
type DeploymentWafPolicy struct {
	// Nginx Deployment Waf Policy Properties
	Properties *DeploymentWafPolicyProperties

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// DeploymentWafPolicyApplyingStatus - Nginx Deployment Waf Policy Applying Status
type DeploymentWafPolicyApplyingStatus struct {
	// READ-ONLY; Machine readable code indicating the applying status code of a WAF Policy.
	Code *NginxDeploymentWafPolicyApplyingStatusCode

	// READ-ONLY; A readable string of the current status, and sometimes have the reason for the current state.
	DisplayStatus *string

	// READ-ONLY; The date and time in UTC the current applying status was set.
	Time *string
}

// DeploymentWafPolicyCompilingStatus - Nginx Deployment Waf Policy Compiling Status
type DeploymentWafPolicyCompilingStatus struct {
	// READ-ONLY; Machine readable code indicating the compilation status of a WAF Policy.
	Code *NginxDeploymentWafPolicyCompilingStatusCode

	// READ-ONLY; A readable string of the current status, and sometimes have the reason for the current state. If the CompilingStatus
	// is Failed the Display Status will be The waf Policy failed to compile.
	DisplayStatus *string

	// READ-ONLY; The date and time the policy was compiled in UTC.
	Time *string
}

// DeploymentWafPolicyListResponse - Nginx Deployment Waf Policy List Response
type DeploymentWafPolicyListResponse struct {
	// REQUIRED; The NginxDeploymentWafPolicyMetadata items on this page
	Value []*DeploymentWafPolicyMetadata

	// The link to the next page of items
	NextLink *string
}

// DeploymentWafPolicyMetadata - Nginx Deployment Waf Policy Metadata
type DeploymentWafPolicyMetadata struct {
	// Nginx Deployment Waf Policy Metadata Properties
	Properties *DeploymentWafPolicyMetadataProperties

	// READ-ONLY
	ID *string

	// READ-ONLY
	Name *string

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData

	// READ-ONLY
	Type *string
}

// DeploymentWafPolicyMetadataProperties - Nginx Deployment Waf Policy Metadata Properties
type DeploymentWafPolicyMetadataProperties struct {
	// READ-ONLY; Nginx Deployment Waf Policy Applying Status
	ApplyingState *DeploymentWafPolicyApplyingStatus

	// READ-ONLY; Nginx Deployment Waf Policy Compiling Status
	CompilingState *DeploymentWafPolicyCompilingStatus

	// READ-ONLY
	Filepath *string

	// READ-ONLY; Provisioning State
	ProvisioningState *ProvisioningState
}

// DeploymentWafPolicyProperties - Nginx Deployment Waf Policy Properties
type DeploymentWafPolicyProperties struct {
	// The byte content of the Policy
	Content []byte

	// The file path where the Policy is to be saved
	Filepath *string

	// READ-ONLY; Nginx Deployment Waf Policy Applying Status
	ApplyingState *DeploymentWafPolicyApplyingStatus

	// READ-ONLY; Nginx Deployment Waf Policy Compiling Status
	CompilingState *DeploymentWafPolicyCompilingStatus

	// READ-ONLY; Provisioning State
	ProvisioningState *ProvisioningState
}

// DiagnosticItem - A diagnostic is a message associated with an NGINX config. The Analyzer returns diagnostics with a level
// indicating the importance of the diagnostic with optional category.
type DiagnosticItem struct {
	// REQUIRED
	Description *string

	// REQUIRED
	Directive *string

	// REQUIRED; The filepath of the most relevant config file.
	File *string

	// REQUIRED; Warning or Info
	Level *Level

	// REQUIRED
	Line *float32

	// REQUIRED
	Message *string

	// REQUIRED
	Rule *string

	// Category of warning like Best-practices, Recommendation, Security etc.
	Category *string

	// Unique identifier for the diagnostic.
	ID *string
}

// FrontendIPConfiguration - Nginx Frontend IP Configuration
type FrontendIPConfiguration struct {
	PrivateIPAddresses []*PrivateIPAddress
	PublicIPAddresses  []*PublicIPAddress
}

// IdentityProperties - Identity Properties
type IdentityProperties struct {
	// Identity Type
	Type *IdentityType

	// Dictionary of <UserIdentityProperties>
	UserAssignedIdentities map[string]*UserIdentityProperties

	// READ-ONLY
	PrincipalID *string

	// READ-ONLY
	TenantID *string
}

// Logging - Nginx Logging
type Logging struct {
	// Nginx Storage Account
	StorageAccount *StorageAccount
}

// NetworkInterfaceConfiguration - Nginx Network Interface Configuration
type NetworkInterfaceConfiguration struct {
	SubnetID *string
}

// NetworkProfile - Nginx Network Profile
type NetworkProfile struct {
	// Nginx Frontend IP Configuration
	FrontEndIPConfiguration *FrontendIPConfiguration

	// Nginx Network Interface Configuration
	NetworkInterfaceConfiguration *NetworkInterfaceConfiguration
}

// Operation - REST API Operation
//
// Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay

	// READ-ONLY; Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for Azure
	// Resource Manager/control-plane operations.
	IsDataAction *bool

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin
}

// OperationDisplay - Localized display information for and operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// REQUIRED; The Operation items on this page
	Value []*Operation

	// The link to the next page of items
	NextLink *string
}

// PrivateIPAddress - Nginx Private IP Address
type PrivateIPAddress struct {
	PrivateIPAddress *string

	// Nginx Private IP Allocation Method
	PrivateIPAllocationMethod *NginxPrivateIPAllocationMethod
	SubnetID                  *string
}

// PublicIPAddress - Nginx Public IP Address
type PublicIPAddress struct {
	ID *string
}

// ResourceSKU - Resource Sku
type ResourceSKU struct {
	// REQUIRED; Name of the SKU.
	Name *string
}

// ScaleProfile - The autoscale profile.
type ScaleProfile struct {
	// REQUIRED; The capacity parameters of the profile.
	Capacity *ScaleProfileCapacity

	// REQUIRED
	Name *string
}

// ScaleProfileCapacity - The capacity parameters of the profile.
type ScaleProfileCapacity struct {
	// REQUIRED; The maximum number of NCUs the deployment can be autoscaled to.
	Max *int32

	// REQUIRED; The minimum number of NCUs the deployment can be autoscaled to.
	Min *int32
}

// StorageAccount - Nginx Storage Account
type StorageAccount struct {
	AccountName   *string
	ContainerName *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// UserIdentityProperties - User Identity Properties
type UserIdentityProperties struct {
	// READ-ONLY
	ClientID *string

	// READ-ONLY
	PrincipalID *string
}

// WebApplicationFirewallComponentVersions - Versions of the NGINX App Protect Web Application Firewall (WAF) components.
type WebApplicationFirewallComponentVersions struct {
	// REQUIRED; The version of the NGINX App Protect Web Application Firewall (WAF) engine.
	WafEngineVersion *string

	// REQUIRED; The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
	WafNginxVersion *string
}

// WebApplicationFirewallPackage - NGINX App Protect Web Application Firewall (WAF) Package. Contains the version and revision
// date of the package.
type WebApplicationFirewallPackage struct {
	// REQUIRED; The date and time of the package revision.
	RevisionDatetime *time.Time

	// REQUIRED; The version of the NGINX App Protect Web Application Firewall (WAF) package.
	Version *string
}

// WebApplicationFirewallSettings - Settings for the NGINX App Protect Web Application Firewall (WAF)
type WebApplicationFirewallSettings struct {
	// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
	ActivationState *ActivationState
}

// WebApplicationFirewallStatus - The status of the NGINX App Protect Web Application Firewall
type WebApplicationFirewallStatus struct {
	// NGINX App Protect WAF release version
	WafRelease *string

	// READ-ONLY; Package containing attack signatures for the NGINX App Protect Web Application Firewall (WAF).
	AttackSignaturesPackage *WebApplicationFirewallPackage

	// READ-ONLY; Package containing bot signatures for the NGINX App Protect Web Application Firewall (WAF).
	BotSignaturesPackage *WebApplicationFirewallPackage

	// READ-ONLY; Versions of the NGINX App Protect Web Application Firewall (WAF) components.
	ComponentVersions *WebApplicationFirewallComponentVersions

	// READ-ONLY; Package containing threat campaigns for the NGINX App Protect Web Application Firewall (WAF).
	ThreatCampaignsPackage *WebApplicationFirewallPackage
}
