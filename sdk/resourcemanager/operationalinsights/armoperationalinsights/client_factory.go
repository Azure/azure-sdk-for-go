//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armoperationalinsights

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	internal       *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The ID of the target subscription.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID,
		internal:       internal,
	}, nil
}

// NewAvailableServiceTiersClient creates a new instance of AvailableServiceTiersClient.
func (c *ClientFactory) NewAvailableServiceTiersClient() *AvailableServiceTiersClient {
	return &AvailableServiceTiersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewClustersClient creates a new instance of ClustersClient.
func (c *ClientFactory) NewClustersClient() *ClustersClient {
	return &ClustersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDataExportsClient creates a new instance of DataExportsClient.
func (c *ClientFactory) NewDataExportsClient() *DataExportsClient {
	return &DataExportsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDataSourcesClient creates a new instance of DataSourcesClient.
func (c *ClientFactory) NewDataSourcesClient() *DataSourcesClient {
	return &DataSourcesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDeletedWorkspacesClient creates a new instance of DeletedWorkspacesClient.
func (c *ClientFactory) NewDeletedWorkspacesClient() *DeletedWorkspacesClient {
	return &DeletedWorkspacesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewGatewaysClient creates a new instance of GatewaysClient.
func (c *ClientFactory) NewGatewaysClient() *GatewaysClient {
	return &GatewaysClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewIntelligencePacksClient creates a new instance of IntelligencePacksClient.
func (c *ClientFactory) NewIntelligencePacksClient() *IntelligencePacksClient {
	return &IntelligencePacksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewLinkedServicesClient creates a new instance of LinkedServicesClient.
func (c *ClientFactory) NewLinkedServicesClient() *LinkedServicesClient {
	return &LinkedServicesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewLinkedStorageAccountsClient creates a new instance of LinkedStorageAccountsClient.
func (c *ClientFactory) NewLinkedStorageAccountsClient() *LinkedStorageAccountsClient {
	return &LinkedStorageAccountsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewManagementGroupsClient creates a new instance of ManagementGroupsClient.
func (c *ClientFactory) NewManagementGroupsClient() *ManagementGroupsClient {
	return &ManagementGroupsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewOperationStatusesClient creates a new instance of OperationStatusesClient.
func (c *ClientFactory) NewOperationStatusesClient() *OperationStatusesClient {
	return &OperationStatusesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewOperationsClient creates a new instance of OperationsClient.
func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: c.internal,
	}
}

// NewQueriesClient creates a new instance of QueriesClient.
func (c *ClientFactory) NewQueriesClient() *QueriesClient {
	return &QueriesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewQueryPacksClient creates a new instance of QueryPacksClient.
func (c *ClientFactory) NewQueryPacksClient() *QueryPacksClient {
	return &QueryPacksClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewSavedSearchesClient creates a new instance of SavedSearchesClient.
func (c *ClientFactory) NewSavedSearchesClient() *SavedSearchesClient {
	return &SavedSearchesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewSchemaClient creates a new instance of SchemaClient.
func (c *ClientFactory) NewSchemaClient() *SchemaClient {
	return &SchemaClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewSharedKeysClient creates a new instance of SharedKeysClient.
func (c *ClientFactory) NewSharedKeysClient() *SharedKeysClient {
	return &SharedKeysClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewStorageInsightConfigsClient creates a new instance of StorageInsightConfigsClient.
func (c *ClientFactory) NewStorageInsightConfigsClient() *StorageInsightConfigsClient {
	return &StorageInsightConfigsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewTablesClient creates a new instance of TablesClient.
func (c *ClientFactory) NewTablesClient() *TablesClient {
	return &TablesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewUsagesClient creates a new instance of UsagesClient.
func (c *ClientFactory) NewUsagesClient() *UsagesClient {
	return &UsagesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewWorkspacePurgeClient creates a new instance of WorkspacePurgeClient.
func (c *ClientFactory) NewWorkspacePurgeClient() *WorkspacePurgeClient {
	return &WorkspacePurgeClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewWorkspacesClient creates a new instance of WorkspacesClient.
func (c *ClientFactory) NewWorkspacesClient() *WorkspacesClient {
	return &WorkspacesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}
