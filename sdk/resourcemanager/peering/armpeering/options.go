//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armpeering

// CdnPeeringPrefixesClientListOptions contains the optional parameters for the CdnPeeringPrefixesClient.NewListPager method.
type CdnPeeringPrefixesClientListOptions struct {
	// placeholder for future optional parameters
}

// ConnectionMonitorTestsClientCreateOrUpdateOptions contains the optional parameters for the ConnectionMonitorTestsClient.CreateOrUpdate
// method.
type ConnectionMonitorTestsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConnectionMonitorTestsClientDeleteOptions contains the optional parameters for the ConnectionMonitorTestsClient.Delete
// method.
type ConnectionMonitorTestsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ConnectionMonitorTestsClientGetOptions contains the optional parameters for the ConnectionMonitorTestsClient.Get method.
type ConnectionMonitorTestsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConnectionMonitorTestsClientListByPeeringServiceOptions contains the optional parameters for the ConnectionMonitorTestsClient.NewListByPeeringServicePager
// method.
type ConnectionMonitorTestsClientListByPeeringServiceOptions struct {
	// placeholder for future optional parameters
}

// LegacyPeeringsClientListOptions contains the optional parameters for the LegacyPeeringsClient.NewListPager method.
type LegacyPeeringsClientListOptions struct {
	// The ASN number associated with a legacy peering.
	Asn *int32
}

// LocationsClientListOptions contains the optional parameters for the LocationsClient.NewListPager method.
type LocationsClientListOptions struct {
	// The type of direct peering.
	DirectPeeringType *PeeringLocationsDirectPeeringType
}

// LookingGlassClientInvokeOptions contains the optional parameters for the LookingGlassClient.Invoke method.
type LookingGlassClientInvokeOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientCheckServiceProviderAvailabilityOptions contains the optional parameters for the ManagementClient.CheckServiceProviderAvailability
// method.
type ManagementClientCheckServiceProviderAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PeerAsnsClientCreateOrUpdateOptions contains the optional parameters for the PeerAsnsClient.CreateOrUpdate method.
type PeerAsnsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PeerAsnsClientDeleteOptions contains the optional parameters for the PeerAsnsClient.Delete method.
type PeerAsnsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PeerAsnsClientGetOptions contains the optional parameters for the PeerAsnsClient.Get method.
type PeerAsnsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PeerAsnsClientListBySubscriptionOptions contains the optional parameters for the PeerAsnsClient.NewListBySubscriptionPager
// method.
type PeerAsnsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// PeeringsClientCreateOrUpdateOptions contains the optional parameters for the PeeringsClient.CreateOrUpdate method.
type PeeringsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PeeringsClientDeleteOptions contains the optional parameters for the PeeringsClient.Delete method.
type PeeringsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PeeringsClientGetOptions contains the optional parameters for the PeeringsClient.Get method.
type PeeringsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PeeringsClientListByResourceGroupOptions contains the optional parameters for the PeeringsClient.NewListByResourceGroupPager
// method.
type PeeringsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// PeeringsClientListBySubscriptionOptions contains the optional parameters for the PeeringsClient.NewListBySubscriptionPager
// method.
type PeeringsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// PeeringsClientUpdateOptions contains the optional parameters for the PeeringsClient.Update method.
type PeeringsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrefixesClientCreateOrUpdateOptions contains the optional parameters for the PrefixesClient.CreateOrUpdate method.
type PrefixesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrefixesClientDeleteOptions contains the optional parameters for the PrefixesClient.Delete method.
type PrefixesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrefixesClientGetOptions contains the optional parameters for the PrefixesClient.Get method.
type PrefixesClientGetOptions struct {
	// The properties to be expanded.
	Expand *string
}

// PrefixesClientListByPeeringServiceOptions contains the optional parameters for the PrefixesClient.NewListByPeeringServicePager
// method.
type PrefixesClientListByPeeringServiceOptions struct {
	// The properties to be expanded.
	Expand *string
}

// ReceivedRoutesClientListByPeeringOptions contains the optional parameters for the ReceivedRoutesClient.NewListByPeeringPager
// method.
type ReceivedRoutesClientListByPeeringOptions struct {
	// The optional AS path that can be used to filter the routes.
	AsPath *string

	// The optional origin AS validation state that can be used to filter the routes.
	OriginAsValidationState *string

	// The optional prefix that can be used to filter the routes.
	Prefix *string

	// The optional RPKI validation state that can be used to filter the routes.
	RpkiValidationState *string

	// The optional page continuation token that is used in the event of paginated result.
	SkipToken *string
}

// RegisteredAsnsClientCreateOrUpdateOptions contains the optional parameters for the RegisteredAsnsClient.CreateOrUpdate
// method.
type RegisteredAsnsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RegisteredAsnsClientDeleteOptions contains the optional parameters for the RegisteredAsnsClient.Delete method.
type RegisteredAsnsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// RegisteredAsnsClientGetOptions contains the optional parameters for the RegisteredAsnsClient.Get method.
type RegisteredAsnsClientGetOptions struct {
	// placeholder for future optional parameters
}

// RegisteredAsnsClientListByPeeringOptions contains the optional parameters for the RegisteredAsnsClient.NewListByPeeringPager
// method.
type RegisteredAsnsClientListByPeeringOptions struct {
	// placeholder for future optional parameters
}

// RegisteredPrefixesClientCreateOrUpdateOptions contains the optional parameters for the RegisteredPrefixesClient.CreateOrUpdate
// method.
type RegisteredPrefixesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RegisteredPrefixesClientDeleteOptions contains the optional parameters for the RegisteredPrefixesClient.Delete method.
type RegisteredPrefixesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// RegisteredPrefixesClientGetOptions contains the optional parameters for the RegisteredPrefixesClient.Get method.
type RegisteredPrefixesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RegisteredPrefixesClientListByPeeringOptions contains the optional parameters for the RegisteredPrefixesClient.NewListByPeeringPager
// method.
type RegisteredPrefixesClientListByPeeringOptions struct {
	// placeholder for future optional parameters
}

// ServiceCountriesClientListOptions contains the optional parameters for the ServiceCountriesClient.NewListPager method.
type ServiceCountriesClientListOptions struct {
	// placeholder for future optional parameters
}

// ServiceLocationsClientListOptions contains the optional parameters for the ServiceLocationsClient.NewListPager method.
type ServiceLocationsClientListOptions struct {
	// The country of interest, in which the locations are to be present.
	Country *string
}

// ServiceProvidersClientListOptions contains the optional parameters for the ServiceProvidersClient.NewListPager method.
type ServiceProvidersClientListOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientCreateOrUpdateOptions contains the optional parameters for the ServicesClient.CreateOrUpdate method.
type ServicesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientDeleteOptions contains the optional parameters for the ServicesClient.Delete method.
type ServicesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientGetOptions contains the optional parameters for the ServicesClient.Get method.
type ServicesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientInitializeConnectionMonitorOptions contains the optional parameters for the ServicesClient.InitializeConnectionMonitor
// method.
type ServicesClientInitializeConnectionMonitorOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientListByResourceGroupOptions contains the optional parameters for the ServicesClient.NewListByResourceGroupPager
// method.
type ServicesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientListBySubscriptionOptions contains the optional parameters for the ServicesClient.NewListBySubscriptionPager
// method.
type ServicesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientUpdateOptions contains the optional parameters for the ServicesClient.Update method.
type ServicesClientUpdateOptions struct {
	// placeholder for future optional parameters
}
