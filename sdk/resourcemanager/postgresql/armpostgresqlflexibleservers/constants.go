//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armpostgresqlflexibleservers

const (
	moduleName    = "armpostgresqlflexibleservers"
	moduleVersion = "v4.0.0-beta.1"
)

// ActiveDirectoryAuthEnum - If Enabled, Azure Active Directory authentication is enabled.
type ActiveDirectoryAuthEnum string

const (
	ActiveDirectoryAuthEnumDisabled ActiveDirectoryAuthEnum = "Disabled"
	ActiveDirectoryAuthEnumEnabled  ActiveDirectoryAuthEnum = "Enabled"
)

// PossibleActiveDirectoryAuthEnumValues returns the possible values for the ActiveDirectoryAuthEnum const type.
func PossibleActiveDirectoryAuthEnumValues() []ActiveDirectoryAuthEnum {
	return []ActiveDirectoryAuthEnum{
		ActiveDirectoryAuthEnumDisabled,
		ActiveDirectoryAuthEnumEnabled,
	}
}

// ArmServerKeyType - Data encryption type to depict if it is System Managed vs Azure Key vault.
type ArmServerKeyType string

const (
	ArmServerKeyTypeAzureKeyVault ArmServerKeyType = "AzureKeyVault"
	ArmServerKeyTypeSystemManaged ArmServerKeyType = "SystemManaged"
)

// PossibleArmServerKeyTypeValues returns the possible values for the ArmServerKeyType const type.
func PossibleArmServerKeyTypeValues() []ArmServerKeyType {
	return []ArmServerKeyType{
		ArmServerKeyTypeAzureKeyVault,
		ArmServerKeyTypeSystemManaged,
	}
}

// AzureManagedDiskPerformanceTiers - Name of storage tier for IOPS.
type AzureManagedDiskPerformanceTiers string

const (
	AzureManagedDiskPerformanceTiersP1  AzureManagedDiskPerformanceTiers = "P1"
	AzureManagedDiskPerformanceTiersP10 AzureManagedDiskPerformanceTiers = "P10"
	AzureManagedDiskPerformanceTiersP15 AzureManagedDiskPerformanceTiers = "P15"
	AzureManagedDiskPerformanceTiersP2  AzureManagedDiskPerformanceTiers = "P2"
	AzureManagedDiskPerformanceTiersP20 AzureManagedDiskPerformanceTiers = "P20"
	AzureManagedDiskPerformanceTiersP3  AzureManagedDiskPerformanceTiers = "P3"
	AzureManagedDiskPerformanceTiersP30 AzureManagedDiskPerformanceTiers = "P30"
	AzureManagedDiskPerformanceTiersP4  AzureManagedDiskPerformanceTiers = "P4"
	AzureManagedDiskPerformanceTiersP40 AzureManagedDiskPerformanceTiers = "P40"
	AzureManagedDiskPerformanceTiersP50 AzureManagedDiskPerformanceTiers = "P50"
	AzureManagedDiskPerformanceTiersP6  AzureManagedDiskPerformanceTiers = "P6"
	AzureManagedDiskPerformanceTiersP60 AzureManagedDiskPerformanceTiers = "P60"
	AzureManagedDiskPerformanceTiersP70 AzureManagedDiskPerformanceTiers = "P70"
	AzureManagedDiskPerformanceTiersP80 AzureManagedDiskPerformanceTiers = "P80"
)

// PossibleAzureManagedDiskPerformanceTiersValues returns the possible values for the AzureManagedDiskPerformanceTiers const type.
func PossibleAzureManagedDiskPerformanceTiersValues() []AzureManagedDiskPerformanceTiers {
	return []AzureManagedDiskPerformanceTiers{
		AzureManagedDiskPerformanceTiersP1,
		AzureManagedDiskPerformanceTiersP10,
		AzureManagedDiskPerformanceTiersP15,
		AzureManagedDiskPerformanceTiersP2,
		AzureManagedDiskPerformanceTiersP20,
		AzureManagedDiskPerformanceTiersP3,
		AzureManagedDiskPerformanceTiersP30,
		AzureManagedDiskPerformanceTiersP4,
		AzureManagedDiskPerformanceTiersP40,
		AzureManagedDiskPerformanceTiersP50,
		AzureManagedDiskPerformanceTiersP6,
		AzureManagedDiskPerformanceTiersP60,
		AzureManagedDiskPerformanceTiersP70,
		AzureManagedDiskPerformanceTiersP80,
	}
}

// CancelEnum - To trigger cancel for entire migration we need to send this flag as True
type CancelEnum string

const (
	CancelEnumFalse CancelEnum = "False"
	CancelEnumTrue  CancelEnum = "True"
)

// PossibleCancelEnumValues returns the possible values for the CancelEnum const type.
func PossibleCancelEnumValues() []CancelEnum {
	return []CancelEnum{
		CancelEnumFalse,
		CancelEnumTrue,
	}
}

// CapabilityStatus - The status of the capability.
type CapabilityStatus string

const (
	CapabilityStatusVisible   CapabilityStatus = "Visible"
	CapabilityStatusAvailable CapabilityStatus = "Available"
	CapabilityStatusDefault   CapabilityStatus = "Default"
	CapabilityStatusDisabled  CapabilityStatus = "Disabled"
)

// PossibleCapabilityStatusValues returns the possible values for the CapabilityStatus const type.
func PossibleCapabilityStatusValues() []CapabilityStatus {
	return []CapabilityStatus{
		CapabilityStatusVisible,
		CapabilityStatusAvailable,
		CapabilityStatusDefault,
		CapabilityStatusDisabled,
	}
}

// CheckNameAvailabilityReason - The reason why the given name is not available.
type CheckNameAvailabilityReason string

const (
	CheckNameAvailabilityReasonAlreadyExists CheckNameAvailabilityReason = "AlreadyExists"
	CheckNameAvailabilityReasonInvalid       CheckNameAvailabilityReason = "Invalid"
)

// PossibleCheckNameAvailabilityReasonValues returns the possible values for the CheckNameAvailabilityReason const type.
func PossibleCheckNameAvailabilityReasonValues() []CheckNameAvailabilityReason {
	return []CheckNameAvailabilityReason{
		CheckNameAvailabilityReasonAlreadyExists,
		CheckNameAvailabilityReasonInvalid,
	}
}

// ConfigurationDataType - Data type of the configuration.
type ConfigurationDataType string

const (
	ConfigurationDataTypeBoolean     ConfigurationDataType = "Boolean"
	ConfigurationDataTypeEnumeration ConfigurationDataType = "Enumeration"
	ConfigurationDataTypeInteger     ConfigurationDataType = "Integer"
	ConfigurationDataTypeNumeric     ConfigurationDataType = "Numeric"
)

// PossibleConfigurationDataTypeValues returns the possible values for the ConfigurationDataType const type.
func PossibleConfigurationDataTypeValues() []ConfigurationDataType {
	return []ConfigurationDataType{
		ConfigurationDataTypeBoolean,
		ConfigurationDataTypeEnumeration,
		ConfigurationDataTypeInteger,
		ConfigurationDataTypeNumeric,
	}
}

// CreateMode - The mode to create a new PostgreSQL server.
type CreateMode string

const (
	CreateModeCreate             CreateMode = "Create"
	CreateModeDefault            CreateMode = "Default"
	CreateModeGeoRestore         CreateMode = "GeoRestore"
	CreateModePointInTimeRestore CreateMode = "PointInTimeRestore"
	CreateModeReplica            CreateMode = "Replica"
	CreateModeReviveDropped      CreateMode = "ReviveDropped"
	CreateModeUpdate             CreateMode = "Update"
)

// PossibleCreateModeValues returns the possible values for the CreateMode const type.
func PossibleCreateModeValues() []CreateMode {
	return []CreateMode{
		CreateModeCreate,
		CreateModeDefault,
		CreateModeGeoRestore,
		CreateModePointInTimeRestore,
		CreateModeReplica,
		CreateModeReviveDropped,
		CreateModeUpdate,
	}
}

// CreateModeForUpdate - The mode to update a new PostgreSQL server.
type CreateModeForUpdate string

const (
	CreateModeForUpdateDefault CreateModeForUpdate = "Default"
	CreateModeForUpdateUpdate  CreateModeForUpdate = "Update"
)

// PossibleCreateModeForUpdateValues returns the possible values for the CreateModeForUpdate const type.
func PossibleCreateModeForUpdateValues() []CreateModeForUpdate {
	return []CreateModeForUpdate{
		CreateModeForUpdateDefault,
		CreateModeForUpdateUpdate,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// ExecutionStatus - Service-set extensible enum indicating the status of operation
type ExecutionStatus string

const (
	ExecutionStatusCancelled ExecutionStatus = "Cancelled"
	ExecutionStatusFailed    ExecutionStatus = "Failed"
	ExecutionStatusRunning   ExecutionStatus = "Running"
	ExecutionStatusSucceeded ExecutionStatus = "Succeeded"
)

// PossibleExecutionStatusValues returns the possible values for the ExecutionStatus const type.
func PossibleExecutionStatusValues() []ExecutionStatus {
	return []ExecutionStatus{
		ExecutionStatusCancelled,
		ExecutionStatusFailed,
		ExecutionStatusRunning,
		ExecutionStatusSucceeded,
	}
}

// FailoverMode - Failover mode.
type FailoverMode string

const (
	FailoverModeForcedFailover    FailoverMode = "ForcedFailover"
	FailoverModeForcedSwitchover  FailoverMode = "ForcedSwitchover"
	FailoverModePlannedFailover   FailoverMode = "PlannedFailover"
	FailoverModePlannedSwitchover FailoverMode = "PlannedSwitchover"
)

// PossibleFailoverModeValues returns the possible values for the FailoverMode const type.
func PossibleFailoverModeValues() []FailoverMode {
	return []FailoverMode{
		FailoverModeForcedFailover,
		FailoverModeForcedSwitchover,
		FailoverModePlannedFailover,
		FailoverModePlannedSwitchover,
	}
}

// FastProvisioningSupportedEnum - Gets a value indicating whether fast provisioning is supported. "Enabled" means fast provisioning
// is supported. "Disabled" stands for fast provisioning is not supported.
type FastProvisioningSupportedEnum string

const (
	FastProvisioningSupportedEnumDisabled FastProvisioningSupportedEnum = "Disabled"
	FastProvisioningSupportedEnumEnabled  FastProvisioningSupportedEnum = "Enabled"
)

// PossibleFastProvisioningSupportedEnumValues returns the possible values for the FastProvisioningSupportedEnum const type.
func PossibleFastProvisioningSupportedEnumValues() []FastProvisioningSupportedEnum {
	return []FastProvisioningSupportedEnum{
		FastProvisioningSupportedEnumDisabled,
		FastProvisioningSupportedEnumEnabled,
	}
}

// GeoBackupSupportedEnum - Determines if geo-backup is supported in this region. "Enabled" means geo-backup is supported.
// "Disabled" stands for geo-back is not supported.
type GeoBackupSupportedEnum string

const (
	GeoBackupSupportedEnumDisabled GeoBackupSupportedEnum = "Disabled"
	GeoBackupSupportedEnumEnabled  GeoBackupSupportedEnum = "Enabled"
)

// PossibleGeoBackupSupportedEnumValues returns the possible values for the GeoBackupSupportedEnum const type.
func PossibleGeoBackupSupportedEnumValues() []GeoBackupSupportedEnum {
	return []GeoBackupSupportedEnum{
		GeoBackupSupportedEnumDisabled,
		GeoBackupSupportedEnumEnabled,
	}
}

// GeoRedundantBackupEnum - A value indicating whether Geo-Redundant backup is enabled on the server.
type GeoRedundantBackupEnum string

const (
	GeoRedundantBackupEnumDisabled GeoRedundantBackupEnum = "Disabled"
	GeoRedundantBackupEnumEnabled  GeoRedundantBackupEnum = "Enabled"
)

// PossibleGeoRedundantBackupEnumValues returns the possible values for the GeoRedundantBackupEnum const type.
func PossibleGeoRedundantBackupEnumValues() []GeoRedundantBackupEnum {
	return []GeoRedundantBackupEnum{
		GeoRedundantBackupEnumDisabled,
		GeoRedundantBackupEnumEnabled,
	}
}

// HaMode - HA mode supported for a server.
type HaMode string

const (
	HaModeSameZone      HaMode = "SameZone"
	HaModeZoneRedundant HaMode = "ZoneRedundant"
)

// PossibleHaModeValues returns the possible values for the HaMode const type.
func PossibleHaModeValues() []HaMode {
	return []HaMode{
		HaModeSameZone,
		HaModeZoneRedundant,
	}
}

// HighAvailabilityMode - The HA mode for the server.
type HighAvailabilityMode string

const (
	HighAvailabilityModeDisabled      HighAvailabilityMode = "Disabled"
	HighAvailabilityModeSameZone      HighAvailabilityMode = "SameZone"
	HighAvailabilityModeZoneRedundant HighAvailabilityMode = "ZoneRedundant"
)

// PossibleHighAvailabilityModeValues returns the possible values for the HighAvailabilityMode const type.
func PossibleHighAvailabilityModeValues() []HighAvailabilityMode {
	return []HighAvailabilityMode{
		HighAvailabilityModeDisabled,
		HighAvailabilityModeSameZone,
		HighAvailabilityModeZoneRedundant,
	}
}

// IdentityType - the types of identities associated with this resource; currently restricted to 'None and UserAssigned'
type IdentityType string

const (
	IdentityTypeNone         IdentityType = "None"
	IdentityTypeUserAssigned IdentityType = "UserAssigned"
)

// PossibleIdentityTypeValues returns the possible values for the IdentityType const type.
func PossibleIdentityTypeValues() []IdentityType {
	return []IdentityType{
		IdentityTypeNone,
		IdentityTypeUserAssigned,
	}
}

// KeyStatusEnum - Primary encryption key status for Data encryption enabled server.
type KeyStatusEnum string

const (
	KeyStatusEnumInvalid KeyStatusEnum = "Invalid"
	KeyStatusEnumValid   KeyStatusEnum = "Valid"
)

// PossibleKeyStatusEnumValues returns the possible values for the KeyStatusEnum const type.
func PossibleKeyStatusEnumValues() []KeyStatusEnum {
	return []KeyStatusEnum{
		KeyStatusEnumInvalid,
		KeyStatusEnumValid,
	}
}

// LogicalReplicationOnSourceDbEnum - Indicates whether to setup LogicalReplicationOnSourceDb, if needed
type LogicalReplicationOnSourceDbEnum string

const (
	LogicalReplicationOnSourceDbEnumFalse LogicalReplicationOnSourceDbEnum = "False"
	LogicalReplicationOnSourceDbEnumTrue  LogicalReplicationOnSourceDbEnum = "True"
)

// PossibleLogicalReplicationOnSourceDbEnumValues returns the possible values for the LogicalReplicationOnSourceDbEnum const type.
func PossibleLogicalReplicationOnSourceDbEnumValues() []LogicalReplicationOnSourceDbEnum {
	return []LogicalReplicationOnSourceDbEnum{
		LogicalReplicationOnSourceDbEnumFalse,
		LogicalReplicationOnSourceDbEnumTrue,
	}
}

type MigrationListFilter string

const (
	MigrationListFilterActive MigrationListFilter = "Active"
	MigrationListFilterAll    MigrationListFilter = "All"
)

// PossibleMigrationListFilterValues returns the possible values for the MigrationListFilter const type.
func PossibleMigrationListFilterValues() []MigrationListFilter {
	return []MigrationListFilter{
		MigrationListFilterActive,
		MigrationListFilterAll,
	}
}

// MigrationMode - There are two types of migration modes Online and Offline
type MigrationMode string

const (
	MigrationModeOffline MigrationMode = "Offline"
	MigrationModeOnline  MigrationMode = "Online"
)

// PossibleMigrationModeValues returns the possible values for the MigrationMode const type.
func PossibleMigrationModeValues() []MigrationMode {
	return []MigrationMode{
		MigrationModeOffline,
		MigrationModeOnline,
	}
}

// MigrationNameAvailabilityReason - Migration name availability reason.
type MigrationNameAvailabilityReason string

const (
	MigrationNameAvailabilityReasonAlreadyExists MigrationNameAvailabilityReason = "AlreadyExists"
	MigrationNameAvailabilityReasonInvalid       MigrationNameAvailabilityReason = "Invalid"
)

// PossibleMigrationNameAvailabilityReasonValues returns the possible values for the MigrationNameAvailabilityReason const type.
func PossibleMigrationNameAvailabilityReasonValues() []MigrationNameAvailabilityReason {
	return []MigrationNameAvailabilityReason{
		MigrationNameAvailabilityReasonAlreadyExists,
		MigrationNameAvailabilityReasonInvalid,
	}
}

// MigrationState - Migration state.
type MigrationState string

const (
	MigrationStateCanceled             MigrationState = "Canceled"
	MigrationStateFailed               MigrationState = "Failed"
	MigrationStateInProgress           MigrationState = "InProgress"
	MigrationStateSucceeded            MigrationState = "Succeeded"
	MigrationStateWaitingForUserAction MigrationState = "WaitingForUserAction"
)

// PossibleMigrationStateValues returns the possible values for the MigrationState const type.
func PossibleMigrationStateValues() []MigrationState {
	return []MigrationState{
		MigrationStateCanceled,
		MigrationStateFailed,
		MigrationStateInProgress,
		MigrationStateSucceeded,
		MigrationStateWaitingForUserAction,
	}
}

// MigrationSubState - Migration sub state.
type MigrationSubState string

const (
	MigrationSubStateCompleted                                          MigrationSubState = "Completed"
	MigrationSubStateCompletingMigration                                MigrationSubState = "CompletingMigration"
	MigrationSubStateMigratingData                                      MigrationSubState = "MigratingData"
	MigrationSubStatePerformingPreRequisiteSteps                        MigrationSubState = "PerformingPreRequisiteSteps"
	MigrationSubStateWaitingForCutoverTrigger                           MigrationSubState = "WaitingForCutoverTrigger"
	MigrationSubStateWaitingForDBsToMigrateSpecification                MigrationSubState = "WaitingForDBsToMigrateSpecification"
	MigrationSubStateWaitingForDataMigrationScheduling                  MigrationSubState = "WaitingForDataMigrationScheduling"
	MigrationSubStateWaitingForDataMigrationWindow                      MigrationSubState = "WaitingForDataMigrationWindow"
	MigrationSubStateWaitingForLogicalReplicationSetupRequestOnSourceDB MigrationSubState = "WaitingForLogicalReplicationSetupRequestOnSourceDB"
	MigrationSubStateWaitingForTargetDBOverwriteConfirmation            MigrationSubState = "WaitingForTargetDBOverwriteConfirmation"
)

// PossibleMigrationSubStateValues returns the possible values for the MigrationSubState const type.
func PossibleMigrationSubStateValues() []MigrationSubState {
	return []MigrationSubState{
		MigrationSubStateCompleted,
		MigrationSubStateCompletingMigration,
		MigrationSubStateMigratingData,
		MigrationSubStatePerformingPreRequisiteSteps,
		MigrationSubStateWaitingForCutoverTrigger,
		MigrationSubStateWaitingForDBsToMigrateSpecification,
		MigrationSubStateWaitingForDataMigrationScheduling,
		MigrationSubStateWaitingForDataMigrationWindow,
		MigrationSubStateWaitingForLogicalReplicationSetupRequestOnSourceDB,
		MigrationSubStateWaitingForTargetDBOverwriteConfirmation,
	}
}

// OnlineResizeSupportedEnum - A value indicating whether online resize is supported in this region for the given subscription.
// "Enabled" means storage online resize is supported. "Disabled" means storage online resize is not
// supported.
type OnlineResizeSupportedEnum string

const (
	OnlineResizeSupportedEnumDisabled OnlineResizeSupportedEnum = "Disabled"
	OnlineResizeSupportedEnumEnabled  OnlineResizeSupportedEnum = "Enabled"
)

// PossibleOnlineResizeSupportedEnumValues returns the possible values for the OnlineResizeSupportedEnum const type.
func PossibleOnlineResizeSupportedEnumValues() []OnlineResizeSupportedEnum {
	return []OnlineResizeSupportedEnum{
		OnlineResizeSupportedEnumDisabled,
		OnlineResizeSupportedEnumEnabled,
	}
}

// OperationOrigin - The intended executor of the operation.
type OperationOrigin string

const (
	OperationOriginNotSpecified OperationOrigin = "NotSpecified"
	OperationOriginSystem       OperationOrigin = "system"
	OperationOriginUser         OperationOrigin = "user"
)

// PossibleOperationOriginValues returns the possible values for the OperationOrigin const type.
func PossibleOperationOriginValues() []OperationOrigin {
	return []OperationOrigin{
		OperationOriginNotSpecified,
		OperationOriginSystem,
		OperationOriginUser,
	}
}

// Origin - Backup type.
type Origin string

const (
	OriginFull Origin = "Full"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginFull,
	}
}

// OverwriteDbsInTargetEnum - Indicates whether the databases on the target server can be overwritten, if already present.
// If set to False, the migration workflow will wait for a confirmation, if it detects that the database
// already exists.
type OverwriteDbsInTargetEnum string

const (
	OverwriteDbsInTargetEnumFalse OverwriteDbsInTargetEnum = "False"
	OverwriteDbsInTargetEnumTrue  OverwriteDbsInTargetEnum = "True"
)

// PossibleOverwriteDbsInTargetEnumValues returns the possible values for the OverwriteDbsInTargetEnum const type.
func PossibleOverwriteDbsInTargetEnumValues() []OverwriteDbsInTargetEnum {
	return []OverwriteDbsInTargetEnum{
		OverwriteDbsInTargetEnumFalse,
		OverwriteDbsInTargetEnumTrue,
	}
}

// PasswordAuthEnum - If Enabled, Password authentication is enabled.
type PasswordAuthEnum string

const (
	PasswordAuthEnumDisabled PasswordAuthEnum = "Disabled"
	PasswordAuthEnumEnabled  PasswordAuthEnum = "Enabled"
)

// PossiblePasswordAuthEnumValues returns the possible values for the PasswordAuthEnum const type.
func PossiblePasswordAuthEnumValues() []PasswordAuthEnum {
	return []PasswordAuthEnum{
		PasswordAuthEnumDisabled,
		PasswordAuthEnumEnabled,
	}
}

// PrincipalType - The principal type used to represent the type of Active Directory Administrator.
type PrincipalType string

const (
	PrincipalTypeGroup            PrincipalType = "Group"
	PrincipalTypeServicePrincipal PrincipalType = "ServicePrincipal"
	PrincipalTypeUnknown          PrincipalType = "Unknown"
	PrincipalTypeUser             PrincipalType = "User"
)

// PossiblePrincipalTypeValues returns the possible values for the PrincipalType const type.
func PossiblePrincipalTypeValues() []PrincipalType {
	return []PrincipalType{
		PrincipalTypeGroup,
		PrincipalTypeServicePrincipal,
		PrincipalTypeUnknown,
		PrincipalTypeUser,
	}
}

// ReplicationRole - Used to indicate role of the server in replication set.
type ReplicationRole string

const (
	ReplicationRoleAsyncReplica    ReplicationRole = "AsyncReplica"
	ReplicationRoleGeoAsyncReplica ReplicationRole = "GeoAsyncReplica"
	ReplicationRoleNone            ReplicationRole = "None"
	ReplicationRolePrimary         ReplicationRole = "Primary"
)

// PossibleReplicationRoleValues returns the possible values for the ReplicationRole const type.
func PossibleReplicationRoleValues() []ReplicationRole {
	return []ReplicationRole{
		ReplicationRoleAsyncReplica,
		ReplicationRoleGeoAsyncReplica,
		ReplicationRoleNone,
		ReplicationRolePrimary,
	}
}

// RestrictedEnum - A value indicating whether this region is restricted. "Enabled" means region is restricted. "Disabled"
// stands for region is not restricted.
type RestrictedEnum string

const (
	RestrictedEnumDisabled RestrictedEnum = "Disabled"
	RestrictedEnumEnabled  RestrictedEnum = "Enabled"
)

// PossibleRestrictedEnumValues returns the possible values for the RestrictedEnum const type.
func PossibleRestrictedEnumValues() []RestrictedEnum {
	return []RestrictedEnum{
		RestrictedEnumDisabled,
		RestrictedEnumEnabled,
	}
}

// SKUTier - The tier of the particular SKU, e.g. Burstable.
type SKUTier string

const (
	SKUTierBurstable       SKUTier = "Burstable"
	SKUTierGeneralPurpose  SKUTier = "GeneralPurpose"
	SKUTierMemoryOptimized SKUTier = "MemoryOptimized"
)

// PossibleSKUTierValues returns the possible values for the SKUTier const type.
func PossibleSKUTierValues() []SKUTier {
	return []SKUTier{
		SKUTierBurstable,
		SKUTierGeneralPurpose,
		SKUTierMemoryOptimized,
	}
}

// ServerHAState - A state of a HA server that is visible to user.
type ServerHAState string

const (
	ServerHAStateCreatingStandby ServerHAState = "CreatingStandby"
	ServerHAStateFailingOver     ServerHAState = "FailingOver"
	ServerHAStateHealthy         ServerHAState = "Healthy"
	ServerHAStateNotEnabled      ServerHAState = "NotEnabled"
	ServerHAStateRemovingStandby ServerHAState = "RemovingStandby"
	ServerHAStateReplicatingData ServerHAState = "ReplicatingData"
)

// PossibleServerHAStateValues returns the possible values for the ServerHAState const type.
func PossibleServerHAStateValues() []ServerHAState {
	return []ServerHAState{
		ServerHAStateCreatingStandby,
		ServerHAStateFailingOver,
		ServerHAStateHealthy,
		ServerHAStateNotEnabled,
		ServerHAStateRemovingStandby,
		ServerHAStateReplicatingData,
	}
}

// ServerPublicNetworkAccessState - public network access is enabled or not
type ServerPublicNetworkAccessState string

const (
	ServerPublicNetworkAccessStateDisabled ServerPublicNetworkAccessState = "Disabled"
	ServerPublicNetworkAccessStateEnabled  ServerPublicNetworkAccessState = "Enabled"
)

// PossibleServerPublicNetworkAccessStateValues returns the possible values for the ServerPublicNetworkAccessState const type.
func PossibleServerPublicNetworkAccessStateValues() []ServerPublicNetworkAccessState {
	return []ServerPublicNetworkAccessState{
		ServerPublicNetworkAccessStateDisabled,
		ServerPublicNetworkAccessStateEnabled,
	}
}

// ServerState - A state of a server that is visible to user.
type ServerState string

const (
	ServerStateDisabled ServerState = "Disabled"
	ServerStateDropping ServerState = "Dropping"
	ServerStateReady    ServerState = "Ready"
	ServerStateStarting ServerState = "Starting"
	ServerStateStopped  ServerState = "Stopped"
	ServerStateStopping ServerState = "Stopping"
	ServerStateUpdating ServerState = "Updating"
)

// PossibleServerStateValues returns the possible values for the ServerState const type.
func PossibleServerStateValues() []ServerState {
	return []ServerState{
		ServerStateDisabled,
		ServerStateDropping,
		ServerStateReady,
		ServerStateStarting,
		ServerStateStopped,
		ServerStateStopping,
		ServerStateUpdating,
	}
}

// ServerVersion - The version of a server.
type ServerVersion string

const (
	ServerVersionEleven   ServerVersion = "11"
	ServerVersionFifteen  ServerVersion = "15"
	ServerVersionFourteen ServerVersion = "14"
	ServerVersionThirteen ServerVersion = "13"
	ServerVersionTwelve   ServerVersion = "12"
)

// PossibleServerVersionValues returns the possible values for the ServerVersion const type.
func PossibleServerVersionValues() []ServerVersion {
	return []ServerVersion{
		ServerVersionEleven,
		ServerVersionFifteen,
		ServerVersionFourteen,
		ServerVersionThirteen,
		ServerVersionTwelve,
	}
}

// StartDataMigrationEnum - Indicates whether the data migration should start right away
type StartDataMigrationEnum string

const (
	StartDataMigrationEnumFalse StartDataMigrationEnum = "False"
	StartDataMigrationEnumTrue  StartDataMigrationEnum = "True"
)

// PossibleStartDataMigrationEnumValues returns the possible values for the StartDataMigrationEnum const type.
func PossibleStartDataMigrationEnumValues() []StartDataMigrationEnum {
	return []StartDataMigrationEnum{
		StartDataMigrationEnumFalse,
		StartDataMigrationEnumTrue,
	}
}

// StorageAutoGrow - Flag to enable / disable Storage Auto grow for flexible server.
type StorageAutoGrow string

const (
	StorageAutoGrowDisabled StorageAutoGrow = "Disabled"
	StorageAutoGrowEnabled  StorageAutoGrow = "Enabled"
)

// PossibleStorageAutoGrowValues returns the possible values for the StorageAutoGrow const type.
func PossibleStorageAutoGrowValues() []StorageAutoGrow {
	return []StorageAutoGrow{
		StorageAutoGrowDisabled,
		StorageAutoGrowEnabled,
	}
}

// StorageAutoGrowthSupportedEnum - A value indicating whether storage auto-grow is supported in this region. "Enabled" means
// storage auto-grow is supported. "Disabled" stands for storage auto-grow is not supported.
type StorageAutoGrowthSupportedEnum string

const (
	StorageAutoGrowthSupportedEnumDisabled StorageAutoGrowthSupportedEnum = "Disabled"
	StorageAutoGrowthSupportedEnumEnabled  StorageAutoGrowthSupportedEnum = "Enabled"
)

// PossibleStorageAutoGrowthSupportedEnumValues returns the possible values for the StorageAutoGrowthSupportedEnum const type.
func PossibleStorageAutoGrowthSupportedEnumValues() []StorageAutoGrowthSupportedEnum {
	return []StorageAutoGrowthSupportedEnum{
		StorageAutoGrowthSupportedEnumDisabled,
		StorageAutoGrowthSupportedEnumEnabled,
	}
}

// TriggerCutoverEnum - To trigger cutover for entire migration we need to send this flag as True
type TriggerCutoverEnum string

const (
	TriggerCutoverEnumFalse TriggerCutoverEnum = "False"
	TriggerCutoverEnumTrue  TriggerCutoverEnum = "True"
)

// PossibleTriggerCutoverEnumValues returns the possible values for the TriggerCutoverEnum const type.
func PossibleTriggerCutoverEnumValues() []TriggerCutoverEnum {
	return []TriggerCutoverEnum{
		TriggerCutoverEnumFalse,
		TriggerCutoverEnumTrue,
	}
}

// ZoneRedundantHaAndGeoBackupSupportedEnum - A value indicating whether Zone Redundant HA and Geo-backup is supported in
// this region. "Enabled" means zone redundant HA and geo-backup is supported. "Disabled" stands for zone redundant HA and
// geo-backup is not supported.
type ZoneRedundantHaAndGeoBackupSupportedEnum string

const (
	ZoneRedundantHaAndGeoBackupSupportedEnumDisabled ZoneRedundantHaAndGeoBackupSupportedEnum = "Disabled"
	ZoneRedundantHaAndGeoBackupSupportedEnumEnabled  ZoneRedundantHaAndGeoBackupSupportedEnum = "Enabled"
)

// PossibleZoneRedundantHaAndGeoBackupSupportedEnumValues returns the possible values for the ZoneRedundantHaAndGeoBackupSupportedEnum const type.
func PossibleZoneRedundantHaAndGeoBackupSupportedEnumValues() []ZoneRedundantHaAndGeoBackupSupportedEnum {
	return []ZoneRedundantHaAndGeoBackupSupportedEnum{
		ZoneRedundantHaAndGeoBackupSupportedEnumDisabled,
		ZoneRedundantHaAndGeoBackupSupportedEnumEnabled,
	}
}

// ZoneRedundantHaSupportedEnum - A value indicating whether Zone Redundant HA is supported in this region. "Enabled" means
// zone redundant HA is supported. "Disabled" stands for zone redundant HA is not supported.
type ZoneRedundantHaSupportedEnum string

const (
	ZoneRedundantHaSupportedEnumDisabled ZoneRedundantHaSupportedEnum = "Disabled"
	ZoneRedundantHaSupportedEnumEnabled  ZoneRedundantHaSupportedEnum = "Enabled"
)

// PossibleZoneRedundantHaSupportedEnumValues returns the possible values for the ZoneRedundantHaSupportedEnum const type.
func PossibleZoneRedundantHaSupportedEnumValues() []ZoneRedundantHaSupportedEnum {
	return []ZoneRedundantHaSupportedEnum{
		ZoneRedundantHaSupportedEnumDisabled,
		ZoneRedundantHaSupportedEnumEnabled,
	}
}
