//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armproviderhub_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/providerhub/armproviderhub"
)

// x-ms-original-file: specification/providerhub/resource-manager/Microsoft.ProviderHub/stable/2020-11-20/examples/CustomRollouts_Get.json
func ExampleCustomRolloutsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armproviderhub.NewCustomRolloutsClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<provider-namespace>",
		"<rollout-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("CustomRollout.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/providerhub/resource-manager/Microsoft.ProviderHub/stable/2020-11-20/examples/CustomRollouts_CreateOrUpdate.json
func ExampleCustomRolloutsClient_CreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armproviderhub.NewCustomRolloutsClient("<subscription-id>", cred, nil)
	res, err := client.CreateOrUpdate(ctx,
		"<provider-namespace>",
		"<rollout-name>",
		armproviderhub.CustomRollout{
			Properties: &armproviderhub.CustomRolloutProperties{
				CustomRolloutPropertiesAutoGenerated: armproviderhub.CustomRolloutPropertiesAutoGenerated{
					Specification: &armproviderhub.CustomRolloutPropertiesSpecification{
						CustomRolloutSpecification: armproviderhub.CustomRolloutSpecification{
							Canary: &armproviderhub.CustomRolloutSpecificationCanary{
								TrafficRegions: armproviderhub.TrafficRegions{
									Regions: []*string{
										to.StringPtr("brazilus")},
								},
							},
						},
					},
				},
			},
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("CustomRollout.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/providerhub/resource-manager/Microsoft.ProviderHub/stable/2020-11-20/examples/CustomRollouts_ListByProviderRegistration.json
func ExampleCustomRolloutsClient_ListByProviderRegistration() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armproviderhub.NewCustomRolloutsClient("<subscription-id>", cred, nil)
	pager := client.ListByProviderRegistration("<provider-namespace>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("CustomRollout.ID: %s\n", *v.ID)
		}
	}
}
