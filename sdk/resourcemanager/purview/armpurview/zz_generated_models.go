//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armpurview

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
	"time"
)

// AccessKeys - The Account access keys.
type AccessKeys struct {
	// Gets or sets the primary connection string.
	AtlasKafkaPrimaryEndpoint *string `json:"atlasKafkaPrimaryEndpoint,omitempty"`

	// Gets or sets the secondary connection string.
	AtlasKafkaSecondaryEndpoint *string `json:"atlasKafkaSecondaryEndpoint,omitempty"`
}

// Account resource
type Account struct {
	TrackedResource
	// Gets or sets the properties.
	Properties *AccountProperties `json:"properties,omitempty"`

	// READ-ONLY; Gets or sets the Sku.
	SKU *AccountSKU `json:"sku,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Account.
func (a Account) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	a.TrackedResource.marshalInternal(objectMap)
	populate(objectMap, "properties", a.Properties)
	populate(objectMap, "sku", a.SKU)
	return json.Marshal(objectMap)
}

// AccountEndpoints - The account endpoints
type AccountEndpoints struct {
	// READ-ONLY; Gets the catalog endpoint.
	Catalog *string `json:"catalog,omitempty" azure:"ro"`

	// READ-ONLY; Gets the guardian endpoint.
	Guardian *string `json:"guardian,omitempty" azure:"ro"`

	// READ-ONLY; Gets the scan endpoint.
	Scan *string `json:"scan,omitempty" azure:"ro"`
}

// AccountList - Paged list of account resources
type AccountList struct {
	// REQUIRED; Collection of items of type results.
	Value []*Account `json:"value,omitempty"`

	// Total item count.
	Count *int64 `json:"count,omitempty"`

	// The Url of next result page.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountList.
func (a AccountList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "count", a.Count)
	populate(objectMap, "nextLink", a.NextLink)
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// AccountProperties - The account properties
type AccountProperties struct {
	// Cloud connectors. External cloud identifier used as part of scanning configuration.
	CloudConnectors *CloudConnectors `json:"cloudConnectors,omitempty"`

	// Gets or sets the managed resource group name
	ManagedResourceGroupName *string `json:"managedResourceGroupName,omitempty"`

	// Gets or sets the public network access.
	PublicNetworkAccess *PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`

	// READ-ONLY; Gets the time at which the entity was created.
	CreatedAt *time.Time `json:"createdAt,omitempty" azure:"ro"`

	// READ-ONLY; Gets the creator of the entity.
	CreatedBy *string `json:"createdBy,omitempty" azure:"ro"`

	// READ-ONLY; Gets the creators of the entity's object id.
	CreatedByObjectID *string `json:"createdByObjectId,omitempty" azure:"ro"`

	// READ-ONLY; The URIs that are the public endpoints of the account.
	Endpoints *AccountPropertiesEndpoints `json:"endpoints,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the friendly name.
	FriendlyName *string `json:"friendlyName,omitempty" azure:"ro"`

	// READ-ONLY; Gets the resource identifiers of the managed resources.
	ManagedResources *AccountPropertiesManagedResources `json:"managedResources,omitempty" azure:"ro"`

	// READ-ONLY; Gets the private endpoint connections information.
	PrivateEndpointConnections []*PrivateEndpointConnection `json:"privateEndpointConnections,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the state of the provisioning.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountProperties.
func (a AccountProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "cloudConnectors", a.CloudConnectors)
	populateTimeRFC3339(objectMap, "createdAt", a.CreatedAt)
	populate(objectMap, "createdBy", a.CreatedBy)
	populate(objectMap, "createdByObjectId", a.CreatedByObjectID)
	populate(objectMap, "endpoints", a.Endpoints)
	populate(objectMap, "friendlyName", a.FriendlyName)
	populate(objectMap, "managedResourceGroupName", a.ManagedResourceGroupName)
	populate(objectMap, "managedResources", a.ManagedResources)
	populate(objectMap, "privateEndpointConnections", a.PrivateEndpointConnections)
	populate(objectMap, "provisioningState", a.ProvisioningState)
	populate(objectMap, "publicNetworkAccess", a.PublicNetworkAccess)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type AccountProperties.
func (a *AccountProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "cloudConnectors":
			err = unpopulate(val, &a.CloudConnectors)
			delete(rawMsg, key)
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &a.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &a.CreatedBy)
			delete(rawMsg, key)
		case "createdByObjectId":
			err = unpopulate(val, &a.CreatedByObjectID)
			delete(rawMsg, key)
		case "endpoints":
			err = unpopulate(val, &a.Endpoints)
			delete(rawMsg, key)
		case "friendlyName":
			err = unpopulate(val, &a.FriendlyName)
			delete(rawMsg, key)
		case "managedResourceGroupName":
			err = unpopulate(val, &a.ManagedResourceGroupName)
			delete(rawMsg, key)
		case "managedResources":
			err = unpopulate(val, &a.ManagedResources)
			delete(rawMsg, key)
		case "privateEndpointConnections":
			err = unpopulate(val, &a.PrivateEndpointConnections)
			delete(rawMsg, key)
		case "provisioningState":
			err = unpopulate(val, &a.ProvisioningState)
			delete(rawMsg, key)
		case "publicNetworkAccess":
			err = unpopulate(val, &a.PublicNetworkAccess)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// AccountPropertiesEndpoints - The URIs that are the public endpoints of the account.
type AccountPropertiesEndpoints struct {
	AccountEndpoints
}

// AccountPropertiesManagedResources - Gets the resource identifiers of the managed resources.
type AccountPropertiesManagedResources struct {
	ManagedResources
}

// AccountSKU - Gets or sets the Sku.
type AccountSKU struct {
	AccountSKUAutoGenerated
}

// AccountSKUAutoGenerated - The Sku
type AccountSKUAutoGenerated struct {
	// Gets or sets the sku capacity.
	Capacity *int32 `json:"capacity,omitempty"`

	// Gets or sets the sku name.
	Name *Name `json:"name,omitempty"`
}

// AccountUpdateParameters - The account update properties.
type AccountUpdateParameters struct {
	// The account properties.
	Properties *AccountProperties `json:"properties,omitempty"`

	// Tags on the azure resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountUpdateParameters.
func (a AccountUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", a.Properties)
	populate(objectMap, "tags", a.Tags)
	return json.Marshal(objectMap)
}

// AccountsAddRootCollectionAdminOptions contains the optional parameters for the Accounts.AddRootCollectionAdmin method.
type AccountsAddRootCollectionAdminOptions struct {
	// placeholder for future optional parameters
}

// AccountsBeginCreateOrUpdateOptions contains the optional parameters for the Accounts.BeginCreateOrUpdate method.
type AccountsBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AccountsBeginDeleteOptions contains the optional parameters for the Accounts.BeginDelete method.
type AccountsBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// AccountsBeginUpdateOptions contains the optional parameters for the Accounts.BeginUpdate method.
type AccountsBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// AccountsCheckNameAvailabilityOptions contains the optional parameters for the Accounts.CheckNameAvailability method.
type AccountsCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// AccountsGetOptions contains the optional parameters for the Accounts.Get method.
type AccountsGetOptions struct {
	// placeholder for future optional parameters
}

// AccountsListByResourceGroupOptions contains the optional parameters for the Accounts.ListByResourceGroup method.
type AccountsListByResourceGroupOptions struct {
	// The skip token.
	SkipToken *string
}

// AccountsListBySubscriptionOptions contains the optional parameters for the Accounts.ListBySubscription method.
type AccountsListBySubscriptionOptions struct {
	// The skip token.
	SkipToken *string
}

// AccountsListKeysOptions contains the optional parameters for the Accounts.ListKeys method.
type AccountsListKeysOptions struct {
	// placeholder for future optional parameters
}

// CheckNameAvailabilityRequest - The request payload for CheckNameAvailability API
type CheckNameAvailabilityRequest struct {
	// Resource name to verify for availability
	Name *string `json:"name,omitempty"`

	// Fully qualified resource type which includes provider namespace
	Type *string `json:"type,omitempty"`
}

// CheckNameAvailabilityResult - The response payload for CheckNameAvailability API
type CheckNameAvailabilityResult struct {
	// Error message
	Message *string `json:"message,omitempty"`

	// Indicates if name is valid and available.
	NameAvailable *bool `json:"nameAvailable,omitempty"`

	// The reason the name is not available.
	Reason *Reason `json:"reason,omitempty"`
}

type CloudConnectors struct {
	// READ-ONLY; AWS external identifier. Configured in AWS to allow use of the role arn used for scanning
	AwsExternalID *string `json:"awsExternalId,omitempty" azure:"ro"`
}

// CollectionAdminUpdate - Collection administrator update.
type CollectionAdminUpdate struct {
	// Gets or sets the object identifier of the admin.
	ObjectID *string `json:"objectId,omitempty"`
}

// DefaultAccountPayload - Payload to get and set the default account in the given scope
type DefaultAccountPayload struct {
	// The name of the account that is set as the default.
	AccountName *string `json:"accountName,omitempty"`

	// The resource group name of the account that is set as the default.
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`

	// The scope object ID. For example, sub ID or tenant ID.
	Scope *string `json:"scope,omitempty"`

	// The scope tenant in which the default account is set.
	ScopeTenantID *string `json:"scopeTenantId,omitempty"`

	// The scope where the default account is set.
	ScopeType *ScopeType `json:"scopeType,omitempty"`

	// The subscription ID of the account that is set as the default.
	SubscriptionID *string `json:"subscriptionId,omitempty"`
}

// DefaultAccountsGetOptions contains the optional parameters for the DefaultAccounts.Get method.
type DefaultAccountsGetOptions struct {
	// The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription.
	Scope *string
}

// DefaultAccountsRemoveOptions contains the optional parameters for the DefaultAccounts.Remove method.
type DefaultAccountsRemoveOptions struct {
	// The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription.
	Scope *string
}

// DefaultAccountsSetOptions contains the optional parameters for the DefaultAccounts.Set method.
type DefaultAccountsSetOptions struct {
	// placeholder for future optional parameters
}

// DimensionProperties - properties for dimension
type DimensionProperties struct {
	// localized display name of the dimension to customer
	DisplayName *string `json:"displayName,omitempty"`

	// dimension name
	Name *string `json:"name,omitempty"`

	// flag indicating whether this dimension should be included to the customer in Azure Monitor logs (aka Shoebox)
	ToBeExportedForCustomer *bool `json:"toBeExportedForCustomer,omitempty"`
}

// ErrorModel - Default error model
type ErrorModel struct {
	// READ-ONLY; Gets or sets the code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the details.
	Details []*ErrorModel `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the messages.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ErrorModel.
func (e ErrorModel) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	e.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (e ErrorModel) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "code", e.Code)
	populate(objectMap, "details", e.Details)
	populate(objectMap, "message", e.Message)
	populate(objectMap, "target", e.Target)
}

// ErrorResponseModel - Default error response model
// Implements the error and azcore.HTTPResponse interfaces.
type ErrorResponseModel struct {
	raw string
	// READ-ONLY; Gets or sets the error.
	InnerError *ErrorResponseModelError `json:"error,omitempty" azure:"ro"`
}

// Error implements the error interface for type ErrorResponseModel.
// The contents of the error text are not contractual and subject to change.
func (e ErrorResponseModel) Error() string {
	return e.raw
}

// ErrorResponseModelError - Gets or sets the error.
type ErrorResponseModelError struct {
	ErrorModel
}

// Identity - The Managed Identity of the resource
type Identity struct {
	// Identity Type
	Type *Type `json:"type,omitempty"`

	// READ-ONLY; Service principal object Id
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; Tenant Id
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

// ManagedResources - The managed resources in customer subscription.
type ManagedResources struct {
	// READ-ONLY; Gets the managed event hub namespace resource identifier.
	EventHubNamespace *string `json:"eventHubNamespace,omitempty" azure:"ro"`

	// READ-ONLY; Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.
	ResourceGroup *string `json:"resourceGroup,omitempty" azure:"ro"`

	// READ-ONLY; Gets the managed storage account resource identifier.
	StorageAccount *string `json:"storageAccount,omitempty" azure:"ro"`
}

// Operation resource
type Operation struct {
	// Properties on the operation
	Display *OperationDisplay `json:"display,omitempty"`

	// Whether operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Operation name for display purposes
	Name *string `json:"name,omitempty"`

	// origin of the operation
	Origin *string `json:"origin,omitempty"`

	// properties for the operation meta info
	Properties *OperationProperties `json:"properties,omitempty"`
}

// OperationDisplay - The response model for get operation properties
type OperationDisplay struct {
	// Description of the operation for display purposes
	Description *string `json:"description,omitempty"`

	// Name of the operation for display purposes
	Operation *string `json:"operation,omitempty"`

	// Name of the provider for display purposes
	Provider *string `json:"provider,omitempty"`

	// Name of the resource type for display purposes
	Resource *string `json:"resource,omitempty"`
}

// OperationList - Paged list of operation resources
type OperationList struct {
	// REQUIRED; Collection of items of type results.
	Value []*Operation `json:"value,omitempty"`

	// Total item count.
	Count *int64 `json:"count,omitempty"`

	// The Url of next result page.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationList.
func (o OperationList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "count", o.Count)
	populate(objectMap, "nextLink", o.NextLink)
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationMetaLogSpecification - log specifications for operation api
type OperationMetaLogSpecification struct {
	// blob duration of the log
	BlobDuration *string `json:"blobDuration,omitempty"`

	// localized name of the log category
	DisplayName *string `json:"displayName,omitempty"`

	// name of the log category
	Name *string `json:"name,omitempty"`
}

// OperationMetaMetricSpecification - metric specifications for the operation
type OperationMetaMetricSpecification struct {
	// aggregation type of metric
	AggregationType *string `json:"aggregationType,omitempty"`

	// properties for dimension
	Dimensions []*DimensionProperties `json:"dimensions,omitempty"`

	// description of the metric
	DisplayDescription *string `json:"displayDescription,omitempty"`

	// localized name of the metric
	DisplayName *string `json:"displayName,omitempty"`

	// enable regional mdm account
	EnableRegionalMdmAccount *string `json:"enableRegionalMdmAccount,omitempty"`

	// internal metric name
	InternalMetricName *string `json:"internalMetricName,omitempty"`

	// name of the metric
	Name *string `json:"name,omitempty"`

	// dimension name use to replace resource id if specified
	ResourceIDDimensionNameOverride *string `json:"resourceIdDimensionNameOverride,omitempty"`

	// Metric namespace. Only set the namespace if different from the default value, leaving it empty makes it use the value from the ARM manifest.
	SourceMdmNamespace *string `json:"sourceMdmNamespace,omitempty"`

	// supported aggregation types
	SupportedAggregationTypes []*string `json:"supportedAggregationTypes,omitempty"`

	// supported time grain types
	SupportedTimeGrainTypes []*string `json:"supportedTimeGrainTypes,omitempty"`

	// units for the metric
	Unit *string `json:"unit,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationMetaMetricSpecification.
func (o OperationMetaMetricSpecification) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "aggregationType", o.AggregationType)
	populate(objectMap, "dimensions", o.Dimensions)
	populate(objectMap, "displayDescription", o.DisplayDescription)
	populate(objectMap, "displayName", o.DisplayName)
	populate(objectMap, "enableRegionalMdmAccount", o.EnableRegionalMdmAccount)
	populate(objectMap, "internalMetricName", o.InternalMetricName)
	populate(objectMap, "name", o.Name)
	populate(objectMap, "resourceIdDimensionNameOverride", o.ResourceIDDimensionNameOverride)
	populate(objectMap, "sourceMdmNamespace", o.SourceMdmNamespace)
	populate(objectMap, "supportedAggregationTypes", o.SupportedAggregationTypes)
	populate(objectMap, "supportedTimeGrainTypes", o.SupportedTimeGrainTypes)
	populate(objectMap, "unit", o.Unit)
	return json.Marshal(objectMap)
}

// OperationMetaServiceSpecification - The operation meta service specification
type OperationMetaServiceSpecification struct {
	// log specifications for the operation
	LogSpecifications []*OperationMetaLogSpecification `json:"logSpecifications,omitempty"`

	// metric specifications for the operation
	MetricSpecifications []*OperationMetaMetricSpecification `json:"metricSpecifications,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationMetaServiceSpecification.
func (o OperationMetaServiceSpecification) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "logSpecifications", o.LogSpecifications)
	populate(objectMap, "metricSpecifications", o.MetricSpecifications)
	return json.Marshal(objectMap)
}

// OperationProperties - properties on meta info
type OperationProperties struct {
	// meta service specification
	ServiceSpecification *OperationMetaServiceSpecification `json:"serviceSpecification,omitempty"`
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpoint - A private endpoint class.
type PrivateEndpoint struct {
	// The private endpoint identifier.
	ID *string `json:"id,omitempty"`
}

// PrivateEndpointConnection - A private endpoint connection class.
type PrivateEndpointConnection struct {
	ProxyResource
	// The connection identifier.
	Properties *PrivateEndpointConnectionProperties `json:"properties,omitempty"`
}

// PrivateEndpointConnectionList - Paged list of private endpoint connections
type PrivateEndpointConnectionList struct {
	// REQUIRED; Collection of items of type results.
	Value []*PrivateEndpointConnection `json:"value,omitempty"`

	// Total item count.
	Count *int64 `json:"count,omitempty"`

	// The Url of next result page.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateEndpointConnectionList.
func (p PrivateEndpointConnectionList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "count", p.Count)
	populate(objectMap, "nextLink", p.NextLink)
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionProperties - A private endpoint connection properties class.
type PrivateEndpointConnectionProperties struct {
	// The private endpoint information.
	PrivateEndpoint *PrivateEndpoint `json:"privateEndpoint,omitempty"`

	// The private link service connection state.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `json:"privateLinkServiceConnectionState,omitempty"`

	// READ-ONLY; The provisioning state.
	ProvisioningState *string `json:"provisioningState,omitempty" azure:"ro"`
}

// PrivateEndpointConnectionsBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnections.BeginCreateOrUpdate method.
type PrivateEndpointConnectionsBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnections.BeginDelete method.
type PrivateEndpointConnectionsBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsGetOptions contains the optional parameters for the PrivateEndpointConnections.Get method.
type PrivateEndpointConnectionsGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsListByAccountOptions contains the optional parameters for the PrivateEndpointConnections.ListByAccount method.
type PrivateEndpointConnectionsListByAccountOptions struct {
	// The skip token.
	SkipToken *string
}

// PrivateLinkResource - A privately linkable resource.
type PrivateLinkResource struct {
	// READ-ONLY; The private link resource identifier.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The private link resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The private link resource properties.
	Properties *PrivateLinkResourceProperties `json:"properties,omitempty" azure:"ro"`

	// READ-ONLY; The private link resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PrivateLinkResourceList - Paged list of private link resources
type PrivateLinkResourceList struct {
	// REQUIRED; Collection of items of type results.
	Value []*PrivateLinkResource `json:"value,omitempty"`

	// Total item count.
	Count *int64 `json:"count,omitempty"`

	// The Url of next result page.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateLinkResourceList.
func (p PrivateLinkResourceList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "count", p.Count)
	populate(objectMap, "nextLink", p.NextLink)
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// PrivateLinkResourceProperties - A privately linkable resource properties.
type PrivateLinkResourceProperties struct {
	// READ-ONLY; The private link resource group identifier.
	GroupID *string `json:"groupId,omitempty" azure:"ro"`

	// READ-ONLY; This translates to how many Private IPs should be created for each privately linkable resource.
	RequiredMembers []*string `json:"requiredMembers,omitempty" azure:"ro"`

	// READ-ONLY; The required zone names for private link resource.
	RequiredZoneNames []*string `json:"requiredZoneNames,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type PrivateLinkResourceProperties.
func (p PrivateLinkResourceProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "groupId", p.GroupID)
	populate(objectMap, "requiredMembers", p.RequiredMembers)
	populate(objectMap, "requiredZoneNames", p.RequiredZoneNames)
	return json.Marshal(objectMap)
}

// PrivateLinkResourcesGetByGroupIDOptions contains the optional parameters for the PrivateLinkResources.GetByGroupID method.
type PrivateLinkResourcesGetByGroupIDOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesListByAccountOptions contains the optional parameters for the PrivateLinkResources.ListByAccount method.
type PrivateLinkResourcesListByAccountOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServiceConnectionState - The private link service connection state.
type PrivateLinkServiceConnectionState struct {
	// The required actions.
	ActionsRequired *string `json:"actionsRequired,omitempty"`

	// The description.
	Description *string `json:"description,omitempty"`

	// The status.
	Status *Status `json:"status,omitempty"`
}

// ProxyResource - Proxy Azure Resource
type ProxyResource struct {
	// READ-ONLY; Gets or sets the identifier.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// READ-ONLY; The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty" azure:"ro"`

	// READ-ONLY; The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty" azure:"ro"`

	// READ-ONLY; The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty" azure:"ro"`

	// READ-ONLY; The timestamp of the last modification the resource (UTC).
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty" azure:"ro"`

	// READ-ONLY; The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty" azure:"ro"`

	// READ-ONLY; The type of identity that last modified the resource.
	LastModifiedByType *LastModifiedByType `json:"lastModifiedByType,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	s.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	return s.unmarshalInternal(rawMsg)
}

func (s SystemData) marshalInternal(objectMap map[string]interface{}) {
	populateTimeRFC3339(objectMap, "createdAt", s.CreatedAt)
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populateTimeRFC3339(objectMap, "lastModifiedAt", s.LastModifiedAt)
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
}

func (s *SystemData) unmarshalInternal(rawMsg map[string]json.RawMessage) error {
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &s.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			err = unpopulateTimeRFC3339(val, &s.LastModifiedAt)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// TrackedResource - Azure ARM Tracked Resource
type TrackedResource struct {
	// Identity Info on the tracked resource
	Identity *Identity `json:"identity,omitempty"`

	// Gets or sets the location.
	Location *string `json:"location,omitempty"`

	// Tags on the azure resource.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Gets or sets the identifier.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *TrackedResourceSystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Gets or sets the type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type TrackedResource.
func (t TrackedResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	t.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (t TrackedResource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", t.ID)
	populate(objectMap, "identity", t.Identity)
	populate(objectMap, "location", t.Location)
	populate(objectMap, "name", t.Name)
	populate(objectMap, "systemData", t.SystemData)
	populate(objectMap, "tags", t.Tags)
	populate(objectMap, "type", t.Type)
}

// TrackedResourceSystemData - Metadata pertaining to creation and last modification of the resource.
type TrackedResourceSystemData struct {
	SystemData
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
