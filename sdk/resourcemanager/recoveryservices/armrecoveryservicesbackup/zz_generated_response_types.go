//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armrecoveryservicesbackup

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// BMSPrepareDataMoveOperationResultGetResponse contains the response from method BMSPrepareDataMoveOperationResult.Get.
type BMSPrepareDataMoveOperationResultGetResponse struct {
	BMSPrepareDataMoveOperationResultGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BMSPrepareDataMoveOperationResultGetResult contains the result from method BMSPrepareDataMoveOperationResult.Get.
type BMSPrepareDataMoveOperationResultGetResult struct {
	VaultStorageConfigOperationResultResponseClassification
}

// UnmarshalJSON implements the json.Unmarshaller interface for type BMSPrepareDataMoveOperationResultGetResult.
func (b *BMSPrepareDataMoveOperationResultGetResult) UnmarshalJSON(data []byte) error {
	res, err := unmarshalVaultStorageConfigOperationResultResponseClassification(data)
	if err != nil {
		return err
	}
	b.VaultStorageConfigOperationResultResponseClassification = res
	return nil
}

// BackupEnginesGetResponse contains the response from method BackupEngines.Get.
type BackupEnginesGetResponse struct {
	BackupEnginesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupEnginesGetResult contains the result from method BackupEngines.Get.
type BackupEnginesGetResult struct {
	BackupEngineBaseResource
}

// BackupEnginesListResponse contains the response from method BackupEngines.List.
type BackupEnginesListResponse struct {
	BackupEnginesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupEnginesListResult contains the result from method BackupEngines.List.
type BackupEnginesListResult struct {
	BackupEngineBaseResourceList
}

// BackupJobsListResponse contains the response from method BackupJobs.List.
type BackupJobsListResponse struct {
	BackupJobsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupJobsListResult contains the result from method BackupJobs.List.
type BackupJobsListResult struct {
	JobResourceList
}

// BackupOperationResultsGetResponse contains the response from method BackupOperationResults.Get.
type BackupOperationResultsGetResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupOperationStatusesGetResponse contains the response from method BackupOperationStatuses.Get.
type BackupOperationStatusesGetResponse struct {
	BackupOperationStatusesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupOperationStatusesGetResult contains the result from method BackupOperationStatuses.Get.
type BackupOperationStatusesGetResult struct {
	OperationStatus
}

// BackupPoliciesListResponse contains the response from method BackupPolicies.List.
type BackupPoliciesListResponse struct {
	BackupPoliciesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupPoliciesListResult contains the result from method BackupPolicies.List.
type BackupPoliciesListResult struct {
	ProtectionPolicyResourceList
}

// BackupProtectableItemsListResponse contains the response from method BackupProtectableItems.List.
type BackupProtectableItemsListResponse struct {
	BackupProtectableItemsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupProtectableItemsListResult contains the result from method BackupProtectableItems.List.
type BackupProtectableItemsListResult struct {
	WorkloadProtectableItemResourceList
}

// BackupProtectedItemsListResponse contains the response from method BackupProtectedItems.List.
type BackupProtectedItemsListResponse struct {
	BackupProtectedItemsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupProtectedItemsListResult contains the result from method BackupProtectedItems.List.
type BackupProtectedItemsListResult struct {
	ProtectedItemResourceList
}

// BackupProtectionContainersListResponse contains the response from method BackupProtectionContainers.List.
type BackupProtectionContainersListResponse struct {
	BackupProtectionContainersListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupProtectionContainersListResult contains the result from method BackupProtectionContainers.List.
type BackupProtectionContainersListResult struct {
	ProtectionContainerResourceList
}

// BackupProtectionIntentListResponse contains the response from method BackupProtectionIntent.List.
type BackupProtectionIntentListResponse struct {
	BackupProtectionIntentListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupProtectionIntentListResult contains the result from method BackupProtectionIntent.List.
type BackupProtectionIntentListResult struct {
	ProtectionIntentResourceList
}

// BackupResourceEncryptionConfigsGetResponse contains the response from method BackupResourceEncryptionConfigs.Get.
type BackupResourceEncryptionConfigsGetResponse struct {
	BackupResourceEncryptionConfigsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceEncryptionConfigsGetResult contains the result from method BackupResourceEncryptionConfigs.Get.
type BackupResourceEncryptionConfigsGetResult struct {
	BackupResourceEncryptionConfigExtendedResource
}

// BackupResourceEncryptionConfigsUpdateResponse contains the response from method BackupResourceEncryptionConfigs.Update.
type BackupResourceEncryptionConfigsUpdateResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceStorageConfigsNonCRRGetResponse contains the response from method BackupResourceStorageConfigsNonCRR.Get.
type BackupResourceStorageConfigsNonCRRGetResponse struct {
	BackupResourceStorageConfigsNonCRRGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceStorageConfigsNonCRRGetResult contains the result from method BackupResourceStorageConfigsNonCRR.Get.
type BackupResourceStorageConfigsNonCRRGetResult struct {
	BackupResourceConfigResource
}

// BackupResourceStorageConfigsNonCRRPatchResponse contains the response from method BackupResourceStorageConfigsNonCRR.Patch.
type BackupResourceStorageConfigsNonCRRPatchResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceStorageConfigsNonCRRUpdateResponse contains the response from method BackupResourceStorageConfigsNonCRR.Update.
type BackupResourceStorageConfigsNonCRRUpdateResponse struct {
	BackupResourceStorageConfigsNonCRRUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceStorageConfigsNonCRRUpdateResult contains the result from method BackupResourceStorageConfigsNonCRR.Update.
type BackupResourceStorageConfigsNonCRRUpdateResult struct {
	BackupResourceConfigResource
}

// BackupResourceVaultConfigsGetResponse contains the response from method BackupResourceVaultConfigs.Get.
type BackupResourceVaultConfigsGetResponse struct {
	BackupResourceVaultConfigsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceVaultConfigsGetResult contains the result from method BackupResourceVaultConfigs.Get.
type BackupResourceVaultConfigsGetResult struct {
	BackupResourceVaultConfigResource
}

// BackupResourceVaultConfigsPutResponse contains the response from method BackupResourceVaultConfigs.Put.
type BackupResourceVaultConfigsPutResponse struct {
	BackupResourceVaultConfigsPutResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceVaultConfigsPutResult contains the result from method BackupResourceVaultConfigs.Put.
type BackupResourceVaultConfigsPutResult struct {
	BackupResourceVaultConfigResource
}

// BackupResourceVaultConfigsUpdateResponse contains the response from method BackupResourceVaultConfigs.Update.
type BackupResourceVaultConfigsUpdateResponse struct {
	BackupResourceVaultConfigsUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupResourceVaultConfigsUpdateResult contains the result from method BackupResourceVaultConfigs.Update.
type BackupResourceVaultConfigsUpdateResult struct {
	BackupResourceVaultConfigResource
}

// BackupStatusGetResponse contains the response from method BackupStatus.Get.
type BackupStatusGetResponse struct {
	BackupStatusGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupStatusGetResult contains the result from method BackupStatus.Get.
type BackupStatusGetResult struct {
	BackupStatusResponse
}

// BackupUsageSummariesListResponse contains the response from method BackupUsageSummaries.List.
type BackupUsageSummariesListResponse struct {
	BackupUsageSummariesListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupUsageSummariesListResult contains the result from method BackupUsageSummaries.List.
type BackupUsageSummariesListResult struct {
	BackupManagementUsageList
}

// BackupWorkloadItemsListResponse contains the response from method BackupWorkloadItems.List.
type BackupWorkloadItemsListResponse struct {
	BackupWorkloadItemsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BackupWorkloadItemsListResult contains the result from method BackupWorkloadItems.List.
type BackupWorkloadItemsListResult struct {
	WorkloadItemResourceList
}

// BackupsTriggerResponse contains the response from method Backups.Trigger.
type BackupsTriggerResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ExportJobsOperationResultsGetResponse contains the response from method ExportJobsOperationResults.Get.
type ExportJobsOperationResultsGetResponse struct {
	ExportJobsOperationResultsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ExportJobsOperationResultsGetResult contains the result from method ExportJobsOperationResults.Get.
type ExportJobsOperationResultsGetResult struct {
	OperationResultInfoBaseResource
}

// FeatureSupportValidateResponse contains the response from method FeatureSupport.Validate.
type FeatureSupportValidateResponse struct {
	FeatureSupportValidateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// FeatureSupportValidateResult contains the result from method FeatureSupport.Validate.
type FeatureSupportValidateResult struct {
	AzureVMResourceFeatureSupportResponse
}

// ItemLevelRecoveryConnectionsProvisionResponse contains the response from method ItemLevelRecoveryConnections.Provision.
type ItemLevelRecoveryConnectionsProvisionResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ItemLevelRecoveryConnectionsRevokeResponse contains the response from method ItemLevelRecoveryConnections.Revoke.
type ItemLevelRecoveryConnectionsRevokeResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// JobCancellationsTriggerResponse contains the response from method JobCancellations.Trigger.
type JobCancellationsTriggerResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// JobDetailsGetResponse contains the response from method JobDetails.Get.
type JobDetailsGetResponse struct {
	JobDetailsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// JobDetailsGetResult contains the result from method JobDetails.Get.
type JobDetailsGetResult struct {
	JobResource
}

// JobOperationResultsGetResponse contains the response from method JobOperationResults.Get.
type JobOperationResultsGetResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// JobsExportResponse contains the response from method Jobs.Export.
type JobsExportResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationValidateResponse contains the response from method Operation.Validate.
type OperationValidateResponse struct {
	OperationValidateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationValidateResult contains the result from method Operation.Validate.
type OperationValidateResult struct {
	ValidateOperationsResponse
}

// OperationsListResponse contains the response from method Operations.List.
type OperationsListResponse struct {
	OperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsListResult contains the result from method Operations.List.
type OperationsListResult struct {
	ClientDiscoveryResponse
}

// PrivateEndpointConnectionDeletePollerResponse contains the response from method PrivateEndpointConnection.Delete.
type PrivateEndpointConnectionDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PrivateEndpointConnectionDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionDeleteResponse, error) {
	respType := PrivateEndpointConnectionDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionDeletePollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionDeletePollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PrivateEndpointConnectionDeleteResponse contains the response from method PrivateEndpointConnection.Delete.
type PrivateEndpointConnectionDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionGetResponse contains the response from method PrivateEndpointConnection.Get.
type PrivateEndpointConnectionGetResponse struct {
	PrivateEndpointConnectionGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionGetResult contains the result from method PrivateEndpointConnection.Get.
type PrivateEndpointConnectionGetResult struct {
	PrivateEndpointConnectionResource
}

// PrivateEndpointConnectionPutPollerResponse contains the response from method PrivateEndpointConnection.Put.
type PrivateEndpointConnectionPutPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PrivateEndpointConnectionPutPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PrivateEndpointConnectionPutPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PrivateEndpointConnectionPutResponse, error) {
	respType := PrivateEndpointConnectionPutResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.PrivateEndpointConnectionResource)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PrivateEndpointConnectionPutPollerResponse from the provided client and resume token.
func (l *PrivateEndpointConnectionPutPollerResponse) Resume(ctx context.Context, client *PrivateEndpointConnectionClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PrivateEndpointConnectionClient.Put", token, client.pl, client.putHandleError)
	if err != nil {
		return err
	}
	poller := &PrivateEndpointConnectionPutPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PrivateEndpointConnectionPutResponse contains the response from method PrivateEndpointConnection.Put.
type PrivateEndpointConnectionPutResponse struct {
	PrivateEndpointConnectionPutResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionPutResult contains the result from method PrivateEndpointConnection.Put.
type PrivateEndpointConnectionPutResult struct {
	PrivateEndpointConnectionResource
}

// PrivateEndpointGetOperationStatusResponse contains the response from method PrivateEndpoint.GetOperationStatus.
type PrivateEndpointGetOperationStatusResponse struct {
	PrivateEndpointGetOperationStatusResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointGetOperationStatusResult contains the result from method PrivateEndpoint.GetOperationStatus.
type PrivateEndpointGetOperationStatusResult struct {
	OperationStatus
}

// ProtectableContainersListResponse contains the response from method ProtectableContainers.List.
type ProtectableContainersListResponse struct {
	ProtectableContainersListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectableContainersListResult contains the result from method ProtectableContainers.List.
type ProtectableContainersListResult struct {
	ProtectableContainerResourceList
}

// ProtectedItemOperationResultsGetResponse contains the response from method ProtectedItemOperationResults.Get.
type ProtectedItemOperationResultsGetResponse struct {
	ProtectedItemOperationResultsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectedItemOperationResultsGetResult contains the result from method ProtectedItemOperationResults.Get.
type ProtectedItemOperationResultsGetResult struct {
	ProtectedItemResource
}

// ProtectedItemOperationStatusesGetResponse contains the response from method ProtectedItemOperationStatuses.Get.
type ProtectedItemOperationStatusesGetResponse struct {
	ProtectedItemOperationStatusesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectedItemOperationStatusesGetResult contains the result from method ProtectedItemOperationStatuses.Get.
type ProtectedItemOperationStatusesGetResult struct {
	OperationStatus
}

// ProtectedItemsCreateOrUpdateResponse contains the response from method ProtectedItems.CreateOrUpdate.
type ProtectedItemsCreateOrUpdateResponse struct {
	ProtectedItemsCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectedItemsCreateOrUpdateResult contains the result from method ProtectedItems.CreateOrUpdate.
type ProtectedItemsCreateOrUpdateResult struct {
	ProtectedItemResource
}

// ProtectedItemsDeleteResponse contains the response from method ProtectedItems.Delete.
type ProtectedItemsDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectedItemsGetResponse contains the response from method ProtectedItems.Get.
type ProtectedItemsGetResponse struct {
	ProtectedItemsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectedItemsGetResult contains the result from method ProtectedItems.Get.
type ProtectedItemsGetResult struct {
	ProtectedItemResource
}

// ProtectionContainerOperationResultsGetResponse contains the response from method ProtectionContainerOperationResults.Get.
type ProtectionContainerOperationResultsGetResponse struct {
	ProtectionContainerOperationResultsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionContainerOperationResultsGetResult contains the result from method ProtectionContainerOperationResults.Get.
type ProtectionContainerOperationResultsGetResult struct {
	ProtectionContainerResource
}

// ProtectionContainerRefreshOperationResultsGetResponse contains the response from method ProtectionContainerRefreshOperationResults.Get.
type ProtectionContainerRefreshOperationResultsGetResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionContainersGetResponse contains the response from method ProtectionContainers.Get.
type ProtectionContainersGetResponse struct {
	ProtectionContainersGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionContainersGetResult contains the result from method ProtectionContainers.Get.
type ProtectionContainersGetResult struct {
	ProtectionContainerResource
}

// ProtectionContainersInquireResponse contains the response from method ProtectionContainers.Inquire.
type ProtectionContainersInquireResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionContainersRefreshResponse contains the response from method ProtectionContainers.Refresh.
type ProtectionContainersRefreshResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionContainersRegisterResponse contains the response from method ProtectionContainers.Register.
type ProtectionContainersRegisterResponse struct {
	ProtectionContainersRegisterResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionContainersRegisterResult contains the result from method ProtectionContainers.Register.
type ProtectionContainersRegisterResult struct {
	ProtectionContainerResource
}

// ProtectionContainersUnregisterResponse contains the response from method ProtectionContainers.Unregister.
type ProtectionContainersUnregisterResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionIntentCreateOrUpdateResponse contains the response from method ProtectionIntent.CreateOrUpdate.
type ProtectionIntentCreateOrUpdateResponse struct {
	ProtectionIntentCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionIntentCreateOrUpdateResult contains the result from method ProtectionIntent.CreateOrUpdate.
type ProtectionIntentCreateOrUpdateResult struct {
	ProtectionIntentResource
}

// ProtectionIntentDeleteResponse contains the response from method ProtectionIntent.Delete.
type ProtectionIntentDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionIntentGetResponse contains the response from method ProtectionIntent.Get.
type ProtectionIntentGetResponse struct {
	ProtectionIntentGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionIntentGetResult contains the result from method ProtectionIntent.Get.
type ProtectionIntentGetResult struct {
	ProtectionIntentResource
}

// ProtectionIntentValidateResponse contains the response from method ProtectionIntent.Validate.
type ProtectionIntentValidateResponse struct {
	ProtectionIntentValidateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionIntentValidateResult contains the result from method ProtectionIntent.Validate.
type ProtectionIntentValidateResult struct {
	PreValidateEnableBackupResponse
}

// ProtectionPoliciesCreateOrUpdateResponse contains the response from method ProtectionPolicies.CreateOrUpdate.
type ProtectionPoliciesCreateOrUpdateResponse struct {
	ProtectionPoliciesCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionPoliciesCreateOrUpdateResult contains the result from method ProtectionPolicies.CreateOrUpdate.
type ProtectionPoliciesCreateOrUpdateResult struct {
	ProtectionPolicyResource
}

// ProtectionPoliciesDeletePollerResponse contains the response from method ProtectionPolicies.Delete.
type ProtectionPoliciesDeletePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *ProtectionPoliciesDeletePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l ProtectionPoliciesDeletePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (ProtectionPoliciesDeleteResponse, error) {
	respType := ProtectionPoliciesDeleteResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a ProtectionPoliciesDeletePollerResponse from the provided client and resume token.
func (l *ProtectionPoliciesDeletePollerResponse) Resume(ctx context.Context, client *ProtectionPoliciesClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("ProtectionPoliciesClient.Delete", token, client.pl, client.deleteHandleError)
	if err != nil {
		return err
	}
	poller := &ProtectionPoliciesDeletePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// ProtectionPoliciesDeleteResponse contains the response from method ProtectionPolicies.Delete.
type ProtectionPoliciesDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionPoliciesGetResponse contains the response from method ProtectionPolicies.Get.
type ProtectionPoliciesGetResponse struct {
	ProtectionPoliciesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionPoliciesGetResult contains the result from method ProtectionPolicies.Get.
type ProtectionPoliciesGetResult struct {
	ProtectionPolicyResource
}

// ProtectionPolicyOperationResultsGetResponse contains the response from method ProtectionPolicyOperationResults.Get.
type ProtectionPolicyOperationResultsGetResponse struct {
	ProtectionPolicyOperationResultsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionPolicyOperationResultsGetResult contains the result from method ProtectionPolicyOperationResults.Get.
type ProtectionPolicyOperationResultsGetResult struct {
	ProtectionPolicyResource
}

// ProtectionPolicyOperationStatusesGetResponse contains the response from method ProtectionPolicyOperationStatuses.Get.
type ProtectionPolicyOperationStatusesGetResponse struct {
	ProtectionPolicyOperationStatusesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProtectionPolicyOperationStatusesGetResult contains the result from method ProtectionPolicyOperationStatuses.Get.
type ProtectionPolicyOperationStatusesGetResult struct {
	OperationStatus
}

// RecoveryPointsGetResponse contains the response from method RecoveryPoints.Get.
type RecoveryPointsGetResponse struct {
	RecoveryPointsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecoveryPointsGetResult contains the result from method RecoveryPoints.Get.
type RecoveryPointsGetResult struct {
	RecoveryPointResource
}

// RecoveryPointsListResponse contains the response from method RecoveryPoints.List.
type RecoveryPointsListResponse struct {
	RecoveryPointsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecoveryPointsListResult contains the result from method RecoveryPoints.List.
type RecoveryPointsListResult struct {
	RecoveryPointResourceList
}

// RecoveryPointsRecommendedForMoveListResponse contains the response from method RecoveryPointsRecommendedForMove.List.
type RecoveryPointsRecommendedForMoveListResponse struct {
	RecoveryPointsRecommendedForMoveListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecoveryPointsRecommendedForMoveListResult contains the result from method RecoveryPointsRecommendedForMove.List.
type RecoveryPointsRecommendedForMoveListResult struct {
	RecoveryPointResourceList
}

// RecoveryServicesBackupClientBMSPrepareDataMovePollerResponse contains the response from method RecoveryServicesBackupClient.BMSPrepareDataMove.
type RecoveryServicesBackupClientBMSPrepareDataMovePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *RecoveryServicesBackupClientBMSPrepareDataMovePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l RecoveryServicesBackupClientBMSPrepareDataMovePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (RecoveryServicesBackupClientBMSPrepareDataMoveResponse, error) {
	respType := RecoveryServicesBackupClientBMSPrepareDataMoveResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a RecoveryServicesBackupClientBMSPrepareDataMovePollerResponse from the provided client and resume token.
func (l *RecoveryServicesBackupClientBMSPrepareDataMovePollerResponse) Resume(ctx context.Context, client *RecoveryServicesBackupClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("RecoveryServicesBackupClient.BMSPrepareDataMove", token, client.pl, client.bmsPrepareDataMoveHandleError)
	if err != nil {
		return err
	}
	poller := &RecoveryServicesBackupClientBMSPrepareDataMovePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// RecoveryServicesBackupClientBMSPrepareDataMoveResponse contains the response from method RecoveryServicesBackupClient.BMSPrepareDataMove.
type RecoveryServicesBackupClientBMSPrepareDataMoveResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecoveryServicesBackupClientBMSTriggerDataMovePollerResponse contains the response from method RecoveryServicesBackupClient.BMSTriggerDataMove.
type RecoveryServicesBackupClientBMSTriggerDataMovePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *RecoveryServicesBackupClientBMSTriggerDataMovePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l RecoveryServicesBackupClientBMSTriggerDataMovePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (RecoveryServicesBackupClientBMSTriggerDataMoveResponse, error) {
	respType := RecoveryServicesBackupClientBMSTriggerDataMoveResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a RecoveryServicesBackupClientBMSTriggerDataMovePollerResponse from the provided client and resume token.
func (l *RecoveryServicesBackupClientBMSTriggerDataMovePollerResponse) Resume(ctx context.Context, client *RecoveryServicesBackupClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("RecoveryServicesBackupClient.BMSTriggerDataMove", token, client.pl, client.bmsTriggerDataMoveHandleError)
	if err != nil {
		return err
	}
	poller := &RecoveryServicesBackupClientBMSTriggerDataMovePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// RecoveryServicesBackupClientBMSTriggerDataMoveResponse contains the response from method RecoveryServicesBackupClient.BMSTriggerDataMove.
type RecoveryServicesBackupClientBMSTriggerDataMoveResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecoveryServicesBackupClientGetOperationStatusResponse contains the response from method RecoveryServicesBackupClient.GetOperationStatus.
type RecoveryServicesBackupClientGetOperationStatusResponse struct {
	RecoveryServicesBackupClientGetOperationStatusResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// RecoveryServicesBackupClientGetOperationStatusResult contains the result from method RecoveryServicesBackupClient.GetOperationStatus.
type RecoveryServicesBackupClientGetOperationStatusResult struct {
	OperationStatus
}

// RecoveryServicesBackupClientMoveRecoveryPointPollerResponse contains the response from method RecoveryServicesBackupClient.MoveRecoveryPoint.
type RecoveryServicesBackupClientMoveRecoveryPointPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *RecoveryServicesBackupClientMoveRecoveryPointPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l RecoveryServicesBackupClientMoveRecoveryPointPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (RecoveryServicesBackupClientMoveRecoveryPointResponse, error) {
	respType := RecoveryServicesBackupClientMoveRecoveryPointResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a RecoveryServicesBackupClientMoveRecoveryPointPollerResponse from the provided client and resume token.
func (l *RecoveryServicesBackupClientMoveRecoveryPointPollerResponse) Resume(ctx context.Context, client *RecoveryServicesBackupClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("RecoveryServicesBackupClient.MoveRecoveryPoint", token, client.pl, client.moveRecoveryPointHandleError)
	if err != nil {
		return err
	}
	poller := &RecoveryServicesBackupClientMoveRecoveryPointPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// RecoveryServicesBackupClientMoveRecoveryPointResponse contains the response from method RecoveryServicesBackupClient.MoveRecoveryPoint.
type RecoveryServicesBackupClientMoveRecoveryPointResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGuardProxiesGetResponse contains the response from method ResourceGuardProxies.Get.
type ResourceGuardProxiesGetResponse struct {
	ResourceGuardProxiesGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGuardProxiesGetResult contains the result from method ResourceGuardProxies.Get.
type ResourceGuardProxiesGetResult struct {
	ResourceGuardProxyBaseResourceList
}

// ResourceGuardProxyDeleteResponse contains the response from method ResourceGuardProxy.Delete.
type ResourceGuardProxyDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGuardProxyGetResponse contains the response from method ResourceGuardProxy.Get.
type ResourceGuardProxyGetResponse struct {
	ResourceGuardProxyGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGuardProxyGetResult contains the result from method ResourceGuardProxy.Get.
type ResourceGuardProxyGetResult struct {
	ResourceGuardProxyBaseResource
}

// ResourceGuardProxyPutResponse contains the response from method ResourceGuardProxy.Put.
type ResourceGuardProxyPutResponse struct {
	ResourceGuardProxyPutResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGuardProxyPutResult contains the result from method ResourceGuardProxy.Put.
type ResourceGuardProxyPutResult struct {
	ResourceGuardProxyBaseResource
}

// ResourceGuardProxyUnlockDeleteResponse contains the response from method ResourceGuardProxy.UnlockDelete.
type ResourceGuardProxyUnlockDeleteResponse struct {
	ResourceGuardProxyUnlockDeleteResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGuardProxyUnlockDeleteResult contains the result from method ResourceGuardProxy.UnlockDelete.
type ResourceGuardProxyUnlockDeleteResult struct {
	UnlockDeleteResponse
}

// RestoresTriggerPollerResponse contains the response from method Restores.Trigger.
type RestoresTriggerPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *RestoresTriggerPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l RestoresTriggerPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (RestoresTriggerResponse, error) {
	respType := RestoresTriggerResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a RestoresTriggerPollerResponse from the provided client and resume token.
func (l *RestoresTriggerPollerResponse) Resume(ctx context.Context, client *RestoresClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("RestoresClient.Trigger", token, client.pl, client.triggerHandleError)
	if err != nil {
		return err
	}
	poller := &RestoresTriggerPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// RestoresTriggerResponse contains the response from method Restores.Trigger.
type RestoresTriggerResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SecurityPINsGetResponse contains the response from method SecurityPINs.Get.
type SecurityPINsGetResponse struct {
	SecurityPINsGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SecurityPINsGetResult contains the result from method SecurityPINs.Get.
type SecurityPINsGetResult struct {
	TokenInformation
}
