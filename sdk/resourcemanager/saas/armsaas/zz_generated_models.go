//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsaas

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
)

// AccessTokenResult - the ISV access token result response.
type AccessTokenResult struct {
	// The Publisher Offer Base Uri
	PublisherOfferBaseURI *string `json:"publisherOfferBaseUri,omitempty"`

	// The generated token
	Token *string `json:"token,omitempty"`
}

// ApplicationsListOptions contains the optional parameters for the Applications.List method.
type ApplicationsListOptions struct {
	// placeholder for future optional parameters
}

// DeleteOptions - delete Options
type DeleteOptions struct {
	// the feedback
	Feedback *string `json:"feedback,omitempty"`

	// The reasonCode
	ReasonCode *float32 `json:"reasonCode,omitempty"`

	// whether it is unsubscribeOnly
	UnsubscribeOnly *bool `json:"unsubscribeOnly,omitempty"`
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info map[string]interface{} `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ErrorDetail.
func (e ErrorDetail) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "additionalInfo", e.AdditionalInfo)
	populate(objectMap, "code", e.Code)
	populate(objectMap, "details", e.Details)
	populate(objectMap, "message", e.Message)
	populate(objectMap, "target", e.Target)
	return json.Marshal(objectMap)
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData
// error response format.).
// Implements the error and azcore.HTTPResponse interfaces.
type ErrorResponse struct {
	raw string
	// The error object.
	InnerError *ErrorDetail `json:"error,omitempty"`
}

// Error implements the error interface for type ErrorResponse.
// The contents of the error text are not contractual and subject to change.
func (e ErrorResponse) Error() string {
	return e.raw
}

// MoveResource - Resource Move Options
type MoveResource struct {
	// The resource uris to move
	Resources []*string `json:"resources,omitempty"`

	// The target resource group uri for the move
	TargetResourceGroup *string `json:"targetResourceGroup,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type MoveResource.
func (m MoveResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "resources", m.Resources)
	populate(objectMap, "targetResourceGroup", m.TargetResourceGroup)
	return json.Marshal(objectMap)
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// Result - Sample result definition
type Result struct {
	// Sample property of type string
	SampleProperty *string `json:"sampleProperty,omitempty"`
}

// SaaSBeginCreateResourceOptions contains the optional parameters for the SaaS.BeginCreateResource method.
type SaaSBeginCreateResourceOptions struct {
	// placeholder for future optional parameters
}

// SaaSBeginDeleteOptions contains the optional parameters for the SaaS.BeginDelete method.
type SaaSBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// SaaSBeginUpdateResourceOptions contains the optional parameters for the SaaS.BeginUpdateResource method.
type SaaSBeginUpdateResourceOptions struct {
	// placeholder for future optional parameters
}

// SaaSGetResourceOptions contains the optional parameters for the SaaS.GetResource method.
type SaaSGetResourceOptions struct {
	// placeholder for future optional parameters
}

// SaaSOperationBeginGetOptions contains the optional parameters for the SaaSOperation.BeginGet method.
type SaaSOperationBeginGetOptions struct {
	// placeholder for future optional parameters
}

// SaasApp - the saasApp resource.
type SaasApp struct {
	// the resource location.
	Location *string `json:"location,omitempty"`

	// the resource name.
	Name *string `json:"name,omitempty"`

	// the resource properties.
	Properties *SaasAppProperties `json:"properties,omitempty"`

	// the resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// the resource type.
	Type *string `json:"type,omitempty"`

	// READ-ONLY; the resource Id.
	ID *string `json:"id,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasApp.
func (s SaasApp) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", s.ID)
	populate(objectMap, "location", s.Location)
	populate(objectMap, "name", s.Name)
	populate(objectMap, "properties", s.Properties)
	populate(objectMap, "tags", s.Tags)
	populate(objectMap, "type", s.Type)
	return json.Marshal(objectMap)
}

// SaasAppOperation - saas app operations
type SaasAppOperation struct {
	// the operation display
	Display *SaasAppOperationDisplay `json:"display,omitempty"`

	// whether the operation is a data action or not.
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// the operation name
	Name *string `json:"name,omitempty"`

	// the operation origin
	Origin *string `json:"origin,omitempty"`
}

// SaasAppOperationDisplay - Saas app operation display
type SaasAppOperationDisplay struct {
	// Description of the operation for display purposes
	Description *string `json:"description,omitempty"`

	// Name of the operation for display purposes
	Operation *string `json:"operation,omitempty"`

	// Name of the provider for display purposes
	Provider *string `json:"provider,omitempty"`

	// Name of the resource type for display purposes
	Resource *string `json:"resource,omitempty"`
}

// SaasAppOperationsResponseWithContinuation - saas app operation response with continuation.
type SaasAppOperationsResponseWithContinuation struct {
	// the next link to query to get the remaining results.
	NextLink *string `json:"nextLink,omitempty"`

	// the value of response.
	Value []*SaasAppOperation `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasAppOperationsResponseWithContinuation.
func (s SaasAppOperationsResponseWithContinuation) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", s.NextLink)
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// SaasAppPlan - Saas resource plan.
type SaasAppPlan struct {
	// the plan id.
	Name *string `json:"name,omitempty"`

	// the offer id.
	Product *string `json:"product,omitempty"`

	// the publisher id.
	Publisher *string `json:"publisher,omitempty"`
}

// SaasAppProperties - Saas resource properties.
type SaasAppProperties struct {
	// the resource plan details.
	SaasAppPlan *SaasAppPlan `json:"saasAppPlan,omitempty"`

	// the Saas resource status.
	Status *SaasAppStatus `json:"status,omitempty"`
}

// SaasAppResponseWithContinuation - saas app response with continuation.
type SaasAppResponseWithContinuation struct {
	// the next link to query to get the remaining results.
	NextLink *string `json:"nextLink,omitempty"`

	// the value of response.
	Value []*SaasApp `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasAppResponseWithContinuation.
func (s SaasAppResponseWithContinuation) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", s.NextLink)
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// SaasCreationProperties - properties for creation saas
type SaasCreationProperties struct {
	// Whether the SaaS subscription will auto renew upon term end.
	AutoRenew *bool `json:"autoRenew,omitempty"`

	// The offer id.
	OfferID *string `json:"offerId,omitempty"`

	// The metadata about the SaaS subscription such as the AzureSubscriptionId and ResourceUri.
	PaymentChannelMetadata map[string]*string `json:"paymentChannelMetadata,omitempty"`

	// The Payment channel for the SaasSubscription.
	PaymentChannelType *PaymentChannelType `json:"paymentChannelType,omitempty"`

	// The publisher id.
	PublisherID *string `json:"publisherId,omitempty"`

	// The environment in the publisher side for this resource.
	PublisherTestEnvironment *string `json:"publisherTestEnvironment,omitempty"`

	// The seat count.
	Quantity *float32 `json:"quantity,omitempty"`

	// The plan id.
	SKUID *string `json:"skuId,omitempty"`

	// The SaaS resource name.
	SaasResourceName *string `json:"saasResourceName,omitempty"`

	// The saas session id used for dev service migration request.
	SaasSessionID *string `json:"saasSessionId,omitempty"`

	// The saas subscription id used for tenant to subscription level migration request.
	SaasSubscriptionID *string `json:"saasSubscriptionId,omitempty"`

	// The current Term id.
	TermID *string `json:"termId,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasCreationProperties.
func (s SaasCreationProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	s.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (s SaasCreationProperties) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "autoRenew", s.AutoRenew)
	populate(objectMap, "offerId", s.OfferID)
	populate(objectMap, "paymentChannelMetadata", s.PaymentChannelMetadata)
	populate(objectMap, "paymentChannelType", s.PaymentChannelType)
	populate(objectMap, "publisherId", s.PublisherID)
	populate(objectMap, "publisherTestEnvironment", s.PublisherTestEnvironment)
	populate(objectMap, "quantity", s.Quantity)
	populate(objectMap, "skuId", s.SKUID)
	populate(objectMap, "saasResourceName", s.SaasResourceName)
	populate(objectMap, "saasSessionId", s.SaasSessionID)
	populate(objectMap, "saasSubscriptionId", s.SaasSubscriptionID)
	populate(objectMap, "termId", s.TermID)
}

// SaasProperties - saas resource properties
type SaasProperties struct {
	// Whether the current term is a Free Trial term
	IsFreeTrial *bool `json:"isFreeTrial,omitempty"`

	// The last modifier date if this resource.
	LastModified *string `json:"lastModified,omitempty"`

	// The SaaS Subscription Status.
	Status *SaasResourceStatus `json:"status,omitempty"`

	// The current Term object.
	Term *SaasPropertiesTerm `json:"term,omitempty"`

	// READ-ONLY; The created date of this resource.
	Created *string `json:"created,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasProperties.
func (s SaasProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	s.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (s SaasProperties) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "created", s.Created)
	populate(objectMap, "isFreeTrial", s.IsFreeTrial)
	populate(objectMap, "lastModified", s.LastModified)
	populate(objectMap, "status", s.Status)
	populate(objectMap, "term", s.Term)
}

// SaasPropertiesTerm - The current Term object.
type SaasPropertiesTerm struct {
	// The end date of the current term
	EndDate *string `json:"endDate,omitempty"`

	// The start date of the current term
	StartDate *string `json:"startDate,omitempty"`

	// The unit indicating Monthly / Yearly
	TermUnit *string `json:"termUnit,omitempty"`
}

// SaasResource - SaaS REST API resource definition.
type SaasResource struct {
	// saas properties
	Properties *SaasResourceProperties `json:"properties,omitempty"`

	// the resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The resource uri
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasResource.
func (s SaasResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", s.ID)
	populate(objectMap, "name", s.Name)
	populate(objectMap, "properties", s.Properties)
	populate(objectMap, "tags", s.Tags)
	populate(objectMap, "type", s.Type)
	return json.Marshal(objectMap)
}

// SaasResourceCreation - SaaS REST API resource definition for creation.
type SaasResourceCreation struct {
	// Resource location. Only value allowed for SaaS is 'global'
	Location *string `json:"location,omitempty"`

	// The resource name
	Name *string `json:"name,omitempty"`

	// Properties of the SaaS resource that are relevant for creation.
	Properties *SaasCreationProperties `json:"properties,omitempty"`

	// the resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The resource uri
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasResourceCreation.
func (s SaasResourceCreation) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", s.ID)
	populate(objectMap, "location", s.Location)
	populate(objectMap, "name", s.Name)
	populate(objectMap, "properties", s.Properties)
	populate(objectMap, "tags", s.Tags)
	populate(objectMap, "type", s.Type)
	return json.Marshal(objectMap)
}

// SaasResourceProperties - saas properties
type SaasResourceProperties struct {
	SaasCreationProperties
	SaasProperties
}

// SaasResourceResponseWithContinuation - saas resources response with continuation.
type SaasResourceResponseWithContinuation struct {
	// the next link to query to get the remaining results.
	NextLink *string `json:"nextLink,omitempty"`

	// the value of response.
	Value []*SaasResource `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SaasResourceResponseWithContinuation.
func (s SaasResourceResponseWithContinuation) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", s.NextLink)
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// SaasResourcesListAccessTokenOptions contains the optional parameters for the SaasResources.ListAccessToken method.
type SaasResourcesListAccessTokenOptions struct {
	// placeholder for future optional parameters
}

// SaasResourcesListOptions contains the optional parameters for the SaasResources.List method.
type SaasResourcesListOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelBeginCreateOrUpdateOptions contains the optional parameters for the SaasSubscriptionLevel.BeginCreateOrUpdate method.
type SaasSubscriptionLevelBeginCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelBeginDeleteOptions contains the optional parameters for the SaasSubscriptionLevel.BeginDelete method.
type SaasSubscriptionLevelBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelBeginMoveResourcesOptions contains the optional parameters for the SaasSubscriptionLevel.BeginMoveResources method.
type SaasSubscriptionLevelBeginMoveResourcesOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelBeginUpdateOptions contains the optional parameters for the SaasSubscriptionLevel.BeginUpdate method.
type SaasSubscriptionLevelBeginUpdateOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelBeginUpdateToUnsubscribedOptions contains the optional parameters for the SaasSubscriptionLevel.BeginUpdateToUnsubscribed method.
type SaasSubscriptionLevelBeginUpdateToUnsubscribedOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelGetOptions contains the optional parameters for the SaasSubscriptionLevel.Get method.
type SaasSubscriptionLevelGetOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelListAccessTokenOptions contains the optional parameters for the SaasSubscriptionLevel.ListAccessToken method.
type SaasSubscriptionLevelListAccessTokenOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelListByAzureSubscriptionOptions contains the optional parameters for the SaasSubscriptionLevel.ListByAzureSubscription method.
type SaasSubscriptionLevelListByAzureSubscriptionOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelListByResourceGroupOptions contains the optional parameters for the SaasSubscriptionLevel.ListByResourceGroup method.
type SaasSubscriptionLevelListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// SaasSubscriptionLevelValidateMoveResourcesOptions contains the optional parameters for the SaasSubscriptionLevel.ValidateMoveResources method.
type SaasSubscriptionLevelValidateMoveResourcesOptions struct {
	// placeholder for future optional parameters
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}
