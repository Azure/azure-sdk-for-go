//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armselfhelp

// CheckNameAvailabilityClientPostOptions contains the optional parameters for the CheckNameAvailabilityClient.Post method.
type CheckNameAvailabilityClientPostOptions struct {
	// The required parameters for availability check.
	CheckNameAvailabilityRequest *CheckNameAvailabilityRequest
}

// DiagnosticsClientBeginCreateOptions contains the optional parameters for the DiagnosticsClient.BeginCreate method.
type DiagnosticsClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DiagnosticsClientGetOptions contains the optional parameters for the DiagnosticsClient.Get method.
type DiagnosticsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DiscoverySolutionClientListOptions contains the optional parameters for the DiscoverySolutionClient.NewListPager method.
type DiscoverySolutionClientListOptions struct {
	// 'ProblemClassificationId' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType'
	// filters. The $filter
	// [https://learn.microsoft.com/en-us/odata/webapi/first-odata-api#filter] supports only 'and', 'or' and 'eq' operators. Example:
	// $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'
	Filter *string

	// Skiptoken is only used if a previous operation returned a partial result.
	Skiptoken *string
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// SolutionClientBeginCreateOptions contains the optional parameters for the SolutionClient.BeginCreate method.
type SolutionClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SolutionClientBeginUpdateOptions contains the optional parameters for the SolutionClient.BeginUpdate method.
type SolutionClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SolutionClientGetOptions contains the optional parameters for the SolutionClient.Get method.
type SolutionClientGetOptions struct {
	// placeholder for future optional parameters
}

// TroubleshootersClientContinueOptions contains the optional parameters for the TroubleshootersClient.Continue method.
type TroubleshootersClientContinueOptions struct {
	// The required request body for going to next step in Troubleshooter resource.
	ContinueRequestBody *ContinueRequestBody
}

// TroubleshootersClientCreateOptions contains the optional parameters for the TroubleshootersClient.Create method.
type TroubleshootersClientCreateOptions struct {
	// placeholder for future optional parameters
}

// TroubleshootersClientEndOptions contains the optional parameters for the TroubleshootersClient.End method.
type TroubleshootersClientEndOptions struct {
	// placeholder for future optional parameters
}

// TroubleshootersClientGetOptions contains the optional parameters for the TroubleshootersClient.Get method.
type TroubleshootersClientGetOptions struct {
	// placeholder for future optional parameters
}

// TroubleshootersClientRestartOptions contains the optional parameters for the TroubleshootersClient.Restart method.
type TroubleshootersClientRestartOptions struct {
	// placeholder for future optional parameters
}
