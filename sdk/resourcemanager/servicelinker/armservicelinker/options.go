//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armservicelinker

// ConfigurationNamesClientListOptions contains the optional parameters for the ConfigurationNamesClient.NewListPager method.
type ConfigurationNamesClientListOptions struct {
	// OData filter options.
	Filter *string

	// OData skipToken option for pagination.
	SkipToken *string
}

// ConnectorClientBeginCreateDryrunOptions contains the optional parameters for the ConnectorClient.BeginCreateDryrun method.
type ConnectorClientBeginCreateDryrunOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectorClientBeginCreateOrUpdateOptions contains the optional parameters for the ConnectorClient.BeginCreateOrUpdate
// method.
type ConnectorClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectorClientBeginDeleteOptions contains the optional parameters for the ConnectorClient.BeginDelete method.
type ConnectorClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectorClientBeginUpdateDryrunOptions contains the optional parameters for the ConnectorClient.BeginUpdateDryrun method.
type ConnectorClientBeginUpdateDryrunOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectorClientBeginUpdateOptions contains the optional parameters for the ConnectorClient.BeginUpdate method.
type ConnectorClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectorClientBeginValidateOptions contains the optional parameters for the ConnectorClient.BeginValidate method.
type ConnectorClientBeginValidateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectorClientDeleteDryrunOptions contains the optional parameters for the ConnectorClient.DeleteDryrun method.
type ConnectorClientDeleteDryrunOptions struct {
	// placeholder for future optional parameters
}

// ConnectorClientGenerateConfigurationsOptions contains the optional parameters for the ConnectorClient.GenerateConfigurations
// method.
type ConnectorClientGenerateConfigurationsOptions struct {
	// Connection Info, including format, secret store, etc
	Parameters *ConfigurationInfo
}

// ConnectorClientGetDryrunOptions contains the optional parameters for the ConnectorClient.GetDryrun method.
type ConnectorClientGetDryrunOptions struct {
	// placeholder for future optional parameters
}

// ConnectorClientGetOptions contains the optional parameters for the ConnectorClient.Get method.
type ConnectorClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConnectorClientListDryrunOptions contains the optional parameters for the ConnectorClient.NewListDryrunPager method.
type ConnectorClientListDryrunOptions struct {
	// placeholder for future optional parameters
}

// ConnectorClientListOptions contains the optional parameters for the ConnectorClient.NewListPager method.
type ConnectorClientListOptions struct {
	// placeholder for future optional parameters
}

// LinkerClientBeginCreateOrUpdateOptions contains the optional parameters for the LinkerClient.BeginCreateOrUpdate method.
type LinkerClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LinkerClientBeginDeleteOptions contains the optional parameters for the LinkerClient.BeginDelete method.
type LinkerClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LinkerClientBeginUpdateOptions contains the optional parameters for the LinkerClient.BeginUpdate method.
type LinkerClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LinkerClientBeginValidateOptions contains the optional parameters for the LinkerClient.BeginValidate method.
type LinkerClientBeginValidateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LinkerClientGetOptions contains the optional parameters for the LinkerClient.Get method.
type LinkerClientGetOptions struct {
	// placeholder for future optional parameters
}

// LinkerClientListConfigurationsOptions contains the optional parameters for the LinkerClient.ListConfigurations method.
type LinkerClientListConfigurationsOptions struct {
	// placeholder for future optional parameters
}

// LinkerClientListOptions contains the optional parameters for the LinkerClient.NewListPager method.
type LinkerClientListOptions struct {
	// placeholder for future optional parameters
}

// LinkersClientBeginCreateDryrunOptions contains the optional parameters for the LinkersClient.BeginCreateDryrun method.
type LinkersClientBeginCreateDryrunOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LinkersClientBeginUpdateDryrunOptions contains the optional parameters for the LinkersClient.BeginUpdateDryrun method.
type LinkersClientBeginUpdateDryrunOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LinkersClientDeleteDryrunOptions contains the optional parameters for the LinkersClient.DeleteDryrun method.
type LinkersClientDeleteDryrunOptions struct {
	// placeholder for future optional parameters
}

// LinkersClientGenerateConfigurationsOptions contains the optional parameters for the LinkersClient.GenerateConfigurations
// method.
type LinkersClientGenerateConfigurationsOptions struct {
	// Connection Info, including format, secret store, etc
	Parameters *ConfigurationInfo
}

// LinkersClientGetDryrunOptions contains the optional parameters for the LinkersClient.GetDryrun method.
type LinkersClientGetDryrunOptions struct {
	// placeholder for future optional parameters
}

// LinkersClientListDaprConfigurationsOptions contains the optional parameters for the LinkersClient.NewListDaprConfigurationsPager
// method.
type LinkersClientListDaprConfigurationsOptions struct {
	// placeholder for future optional parameters
}

// LinkersClientListDryrunOptions contains the optional parameters for the LinkersClient.NewListDryrunPager method.
type LinkersClientListDryrunOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}
