//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsql

import "time"

// AgentClientCreateOrUpdateOptions contains the optional parameters for the AgentClient.CreateOrUpdate method.
type AgentClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AgentClientGetOptions contains the optional parameters for the AgentClient.Get method.
type AgentClientGetOptions struct {
	// placeholder for future optional parameters
}

// BackupShortTermRetentionPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the BackupShortTermRetentionPoliciesClient.BeginCreateOrUpdate
// method.
type BackupShortTermRetentionPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// BackupShortTermRetentionPoliciesClientBeginUpdateOptions contains the optional parameters for the BackupShortTermRetentionPoliciesClient.BeginUpdate
// method.
type BackupShortTermRetentionPoliciesClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// BackupShortTermRetentionPoliciesClientGetOptions contains the optional parameters for the BackupShortTermRetentionPoliciesClient.Get
// method.
type BackupShortTermRetentionPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// BackupShortTermRetentionPoliciesClientListByDatabaseOptions contains the optional parameters for the BackupShortTermRetentionPoliciesClient.NewListByDatabasePager
// method.
type BackupShortTermRetentionPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// CapabilitiesClientListByLocationOptions contains the optional parameters for the CapabilitiesClient.ListByLocation method.
type CapabilitiesClientListByLocationOptions struct {
	// If specified, restricts the response to only include the selected item.
	Include *CapabilityGroup
}

// DataMaskingPoliciesClientCreateOrUpdateOptions contains the optional parameters for the DataMaskingPoliciesClient.CreateOrUpdate
// method.
type DataMaskingPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DataMaskingPoliciesClientGetOptions contains the optional parameters for the DataMaskingPoliciesClient.Get method.
type DataMaskingPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DataMaskingRulesClientCreateOrUpdateOptions contains the optional parameters for the DataMaskingRulesClient.CreateOrUpdate
// method.
type DataMaskingRulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DataMaskingRulesClientListByDatabaseOptions contains the optional parameters for the DataMaskingRulesClient.NewListByDatabasePager
// method.
type DataMaskingRulesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DataWarehouseUserActivitiesClientGetOptions contains the optional parameters for the DataWarehouseUserActivitiesClient.Get
// method.
type DataWarehouseUserActivitiesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DataWarehouseUserActivitiesClientListByDatabaseOptions contains the optional parameters for the DataWarehouseUserActivitiesClient.NewListByDatabasePager
// method.
type DataWarehouseUserActivitiesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAdvancedThreatProtectionSettingsClientCreateOrUpdateOptions contains the optional parameters for the DatabaseAdvancedThreatProtectionSettingsClient.CreateOrUpdate
// method.
type DatabaseAdvancedThreatProtectionSettingsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAdvancedThreatProtectionSettingsClientGetOptions contains the optional parameters for the DatabaseAdvancedThreatProtectionSettingsClient.Get
// method.
type DatabaseAdvancedThreatProtectionSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAdvancedThreatProtectionSettingsClientListByDatabaseOptions contains the optional parameters for the DatabaseAdvancedThreatProtectionSettingsClient.NewListByDatabasePager
// method.
type DatabaseAdvancedThreatProtectionSettingsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAdvisorsClientGetOptions contains the optional parameters for the DatabaseAdvisorsClient.Get method.
type DatabaseAdvisorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAdvisorsClientListByDatabaseOptions contains the optional parameters for the DatabaseAdvisorsClient.ListByDatabase
// method.
type DatabaseAdvisorsClientListByDatabaseOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// DatabaseAdvisorsClientUpdateOptions contains the optional parameters for the DatabaseAdvisorsClient.Update method.
type DatabaseAdvisorsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAutomaticTuningClientGetOptions contains the optional parameters for the DatabaseAutomaticTuningClient.Get method.
type DatabaseAutomaticTuningClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseAutomaticTuningClientUpdateOptions contains the optional parameters for the DatabaseAutomaticTuningClient.Update
// method.
type DatabaseAutomaticTuningClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseBlobAuditingPoliciesClientCreateOrUpdateOptions contains the optional parameters for the DatabaseBlobAuditingPoliciesClient.CreateOrUpdate
// method.
type DatabaseBlobAuditingPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseBlobAuditingPoliciesClientGetOptions contains the optional parameters for the DatabaseBlobAuditingPoliciesClient.Get
// method.
type DatabaseBlobAuditingPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseBlobAuditingPoliciesClientListByDatabaseOptions contains the optional parameters for the DatabaseBlobAuditingPoliciesClient.NewListByDatabasePager
// method.
type DatabaseBlobAuditingPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseColumnsClientGetOptions contains the optional parameters for the DatabaseColumnsClient.Get method.
type DatabaseColumnsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseColumnsClientListByDatabaseOptions contains the optional parameters for the DatabaseColumnsClient.NewListByDatabasePager
// method.
type DatabaseColumnsClientListByDatabaseOptions struct {
	Column  []string
	OrderBy []string
	Schema  []string

	// An opaque token that identifies a starting point in the collection.
	Skiptoken *string
	Table     []string
}

// DatabaseColumnsClientListByTableOptions contains the optional parameters for the DatabaseColumnsClient.NewListByTablePager
// method.
type DatabaseColumnsClientListByTableOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// DatabaseEncryptionProtectorsClientBeginRevalidateOptions contains the optional parameters for the DatabaseEncryptionProtectorsClient.BeginRevalidate
// method.
type DatabaseEncryptionProtectorsClientBeginRevalidateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseEncryptionProtectorsClientBeginRevertOptions contains the optional parameters for the DatabaseEncryptionProtectorsClient.BeginRevert
// method.
type DatabaseEncryptionProtectorsClientBeginRevertOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseExtensionsClientBeginCreateOrUpdateOptions contains the optional parameters for the DatabaseExtensionsClient.BeginCreateOrUpdate
// method.
type DatabaseExtensionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseExtensionsClientGetOptions contains the optional parameters for the DatabaseExtensionsClient.Get method.
type DatabaseExtensionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseExtensionsClientListByDatabaseOptions contains the optional parameters for the DatabaseExtensionsClient.NewListByDatabasePager
// method.
type DatabaseExtensionsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseOperationsClientCancelOptions contains the optional parameters for the DatabaseOperationsClient.Cancel method.
type DatabaseOperationsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// DatabaseOperationsClientListByDatabaseOptions contains the optional parameters for the DatabaseOperationsClient.NewListByDatabasePager
// method.
type DatabaseOperationsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseRecommendedActionsClientGetOptions contains the optional parameters for the DatabaseRecommendedActionsClient.Get
// method.
type DatabaseRecommendedActionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseRecommendedActionsClientListByDatabaseAdvisorOptions contains the optional parameters for the DatabaseRecommendedActionsClient.ListByDatabaseAdvisor
// method.
type DatabaseRecommendedActionsClientListByDatabaseAdvisorOptions struct {
	// placeholder for future optional parameters
}

// DatabaseRecommendedActionsClientUpdateOptions contains the optional parameters for the DatabaseRecommendedActionsClient.Update
// method.
type DatabaseRecommendedActionsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentBaselinesClientCreateOrUpdateOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentBaselinesClient.CreateOrUpdate
// method.
type DatabaseSQLVulnerabilityAssessmentBaselinesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentBaselinesClientGetOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentBaselinesClient.Get
// method.
type DatabaseSQLVulnerabilityAssessmentBaselinesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentBaselinesClientListBySQLVulnerabilityAssessmentOptions contains the optional parameters
// for the DatabaseSQLVulnerabilityAssessmentBaselinesClient.NewListBySQLVulnerabilityAssessmentPager method.
type DatabaseSQLVulnerabilityAssessmentBaselinesClientListBySQLVulnerabilityAssessmentOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentExecuteScanClientBeginExecuteOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentExecuteScanClient.BeginExecute
// method.
type DatabaseSQLVulnerabilityAssessmentExecuteScanClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientCreateOrUpdateOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentRuleBaselinesClient.CreateOrUpdate
// method.
type DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientDeleteOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentRuleBaselinesClient.Delete
// method.
type DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientGetOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentRuleBaselinesClient.Get
// method.
type DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientListByBaselineOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentRuleBaselinesClient.NewListByBaselinePager
// method.
type DatabaseSQLVulnerabilityAssessmentRuleBaselinesClientListByBaselineOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentScanResultClientGetOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentScanResultClient.Get
// method.
type DatabaseSQLVulnerabilityAssessmentScanResultClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentScanResultClientListByScanOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentScanResultClient.NewListByScanPager
// method.
type DatabaseSQLVulnerabilityAssessmentScanResultClientListByScanOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentScansClientGetOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentScansClient.Get
// method.
type DatabaseSQLVulnerabilityAssessmentScansClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentScansClientListBySQLVulnerabilityAssessmentsOptions contains the optional parameters
// for the DatabaseSQLVulnerabilityAssessmentScansClient.NewListBySQLVulnerabilityAssessmentsPager method.
type DatabaseSQLVulnerabilityAssessmentScansClientListBySQLVulnerabilityAssessmentsOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentsSettingsClientGetOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentsSettingsClient.Get
// method.
type DatabaseSQLVulnerabilityAssessmentsSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSQLVulnerabilityAssessmentsSettingsClientListByDatabaseOptions contains the optional parameters for the DatabaseSQLVulnerabilityAssessmentsSettingsClient.NewListByDatabasePager
// method.
type DatabaseSQLVulnerabilityAssessmentsSettingsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSchemasClientGetOptions contains the optional parameters for the DatabaseSchemasClient.Get method.
type DatabaseSchemasClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSchemasClientListByDatabaseOptions contains the optional parameters for the DatabaseSchemasClient.NewListByDatabasePager
// method.
type DatabaseSchemasClientListByDatabaseOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// DatabaseSecurityAlertPoliciesClientCreateOrUpdateOptions contains the optional parameters for the DatabaseSecurityAlertPoliciesClient.CreateOrUpdate
// method.
type DatabaseSecurityAlertPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSecurityAlertPoliciesClientGetOptions contains the optional parameters for the DatabaseSecurityAlertPoliciesClient.Get
// method.
type DatabaseSecurityAlertPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseSecurityAlertPoliciesClientListByDatabaseOptions contains the optional parameters for the DatabaseSecurityAlertPoliciesClient.NewListByDatabasePager
// method.
type DatabaseSecurityAlertPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseTablesClientGetOptions contains the optional parameters for the DatabaseTablesClient.Get method.
type DatabaseTablesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseTablesClientListBySchemaOptions contains the optional parameters for the DatabaseTablesClient.NewListBySchemaPager
// method.
type DatabaseTablesClientListBySchemaOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// DatabaseUsagesClientListByDatabaseOptions contains the optional parameters for the DatabaseUsagesClient.NewListByDatabasePager
// method.
type DatabaseUsagesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentRuleBaselinesClientCreateOrUpdateOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentRuleBaselinesClient.CreateOrUpdate
// method.
type DatabaseVulnerabilityAssessmentRuleBaselinesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentRuleBaselinesClientDeleteOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentRuleBaselinesClient.Delete
// method.
type DatabaseVulnerabilityAssessmentRuleBaselinesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentRuleBaselinesClientGetOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentRuleBaselinesClient.Get
// method.
type DatabaseVulnerabilityAssessmentRuleBaselinesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentScansClientBeginInitiateScanOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentScansClient.BeginInitiateScan
// method.
type DatabaseVulnerabilityAssessmentScansClientBeginInitiateScanOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabaseVulnerabilityAssessmentScansClientExportOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentScansClient.Export
// method.
type DatabaseVulnerabilityAssessmentScansClientExportOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentScansClientGetOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentScansClient.Get
// method.
type DatabaseVulnerabilityAssessmentScansClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentScansClientListByDatabaseOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentScansClient.NewListByDatabasePager
// method.
type DatabaseVulnerabilityAssessmentScansClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentsClientCreateOrUpdateOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentsClient.CreateOrUpdate
// method.
type DatabaseVulnerabilityAssessmentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentsClientDeleteOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentsClient.Delete
// method.
type DatabaseVulnerabilityAssessmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentsClientGetOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentsClient.Get
// method.
type DatabaseVulnerabilityAssessmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DatabaseVulnerabilityAssessmentsClientListByDatabaseOptions contains the optional parameters for the DatabaseVulnerabilityAssessmentsClient.NewListByDatabasePager
// method.
type DatabaseVulnerabilityAssessmentsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// DatabasesClientBeginCreateOrUpdateOptions contains the optional parameters for the DatabasesClient.BeginCreateOrUpdate
// method.
type DatabasesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginDeleteOptions contains the optional parameters for the DatabasesClient.BeginDelete method.
type DatabasesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginExportOptions contains the optional parameters for the DatabasesClient.BeginExport method.
type DatabasesClientBeginExportOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginFailoverOptions contains the optional parameters for the DatabasesClient.BeginFailover method.
type DatabasesClientBeginFailoverOptions struct {
	// The type of replica to be failed over.
	ReplicaType *ReplicaType

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginImportOptions contains the optional parameters for the DatabasesClient.BeginImport method.
type DatabasesClientBeginImportOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginPauseOptions contains the optional parameters for the DatabasesClient.BeginPause method.
type DatabasesClientBeginPauseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginResumeOptions contains the optional parameters for the DatabasesClient.BeginResume method.
type DatabasesClientBeginResumeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginUpdateOptions contains the optional parameters for the DatabasesClient.BeginUpdate method.
type DatabasesClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientBeginUpgradeDataWarehouseOptions contains the optional parameters for the DatabasesClient.BeginUpgradeDataWarehouse
// method.
type DatabasesClientBeginUpgradeDataWarehouseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DatabasesClientGetOptions contains the optional parameters for the DatabasesClient.Get method.
type DatabasesClientGetOptions struct {
	// The child resources to include in the response.
	Expand *string

	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// DatabasesClientListByElasticPoolOptions contains the optional parameters for the DatabasesClient.NewListByElasticPoolPager
// method.
type DatabasesClientListByElasticPoolOptions struct {
	// placeholder for future optional parameters
}

// DatabasesClientListByServerOptions contains the optional parameters for the DatabasesClient.NewListByServerPager method.
type DatabasesClientListByServerOptions struct {
	SkipToken *string
}

// DatabasesClientListInaccessibleByServerOptions contains the optional parameters for the DatabasesClient.NewListInaccessibleByServerPager
// method.
type DatabasesClientListInaccessibleByServerOptions struct {
	// placeholder for future optional parameters
}

// DatabasesClientListMetricDefinitionsOptions contains the optional parameters for the DatabasesClient.NewListMetricDefinitionsPager
// method.
type DatabasesClientListMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// DatabasesClientListMetricsOptions contains the optional parameters for the DatabasesClient.NewListMetricsPager method.
type DatabasesClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// DatabasesClientRenameOptions contains the optional parameters for the DatabasesClient.Rename method.
type DatabasesClientRenameOptions struct {
	// placeholder for future optional parameters
}

// DeletedServersClientBeginRecoverOptions contains the optional parameters for the DeletedServersClient.BeginRecover method.
type DeletedServersClientBeginRecoverOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeletedServersClientGetOptions contains the optional parameters for the DeletedServersClient.Get method.
type DeletedServersClientGetOptions struct {
	// placeholder for future optional parameters
}

// DeletedServersClientListByLocationOptions contains the optional parameters for the DeletedServersClient.NewListByLocationPager
// method.
type DeletedServersClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// DeletedServersClientListOptions contains the optional parameters for the DeletedServersClient.NewListPager method.
type DeletedServersClientListOptions struct {
	// placeholder for future optional parameters
}

// DistributedAvailabilityGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the DistributedAvailabilityGroupsClient.BeginCreateOrUpdate
// method.
type DistributedAvailabilityGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DistributedAvailabilityGroupsClientBeginDeleteOptions contains the optional parameters for the DistributedAvailabilityGroupsClient.BeginDelete
// method.
type DistributedAvailabilityGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DistributedAvailabilityGroupsClientBeginUpdateOptions contains the optional parameters for the DistributedAvailabilityGroupsClient.BeginUpdate
// method.
type DistributedAvailabilityGroupsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DistributedAvailabilityGroupsClientGetOptions contains the optional parameters for the DistributedAvailabilityGroupsClient.Get
// method.
type DistributedAvailabilityGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DistributedAvailabilityGroupsClientListByInstanceOptions contains the optional parameters for the DistributedAvailabilityGroupsClient.NewListByInstancePager
// method.
type DistributedAvailabilityGroupsClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ElasticPoolActivitiesClientListByElasticPoolOptions contains the optional parameters for the ElasticPoolActivitiesClient.NewListByElasticPoolPager
// method.
type ElasticPoolActivitiesClientListByElasticPoolOptions struct {
	// placeholder for future optional parameters
}

// ElasticPoolDatabaseActivitiesClientListByElasticPoolOptions contains the optional parameters for the ElasticPoolDatabaseActivitiesClient.NewListByElasticPoolPager
// method.
type ElasticPoolDatabaseActivitiesClientListByElasticPoolOptions struct {
	// placeholder for future optional parameters
}

// ElasticPoolOperationsClientCancelOptions contains the optional parameters for the ElasticPoolOperationsClient.Cancel method.
type ElasticPoolOperationsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// ElasticPoolOperationsClientListByElasticPoolOptions contains the optional parameters for the ElasticPoolOperationsClient.NewListByElasticPoolPager
// method.
type ElasticPoolOperationsClientListByElasticPoolOptions struct {
	// placeholder for future optional parameters
}

// ElasticPoolsClientBeginCreateOrUpdateOptions contains the optional parameters for the ElasticPoolsClient.BeginCreateOrUpdate
// method.
type ElasticPoolsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ElasticPoolsClientBeginDeleteOptions contains the optional parameters for the ElasticPoolsClient.BeginDelete method.
type ElasticPoolsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ElasticPoolsClientBeginFailoverOptions contains the optional parameters for the ElasticPoolsClient.BeginFailover method.
type ElasticPoolsClientBeginFailoverOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ElasticPoolsClientBeginUpdateOptions contains the optional parameters for the ElasticPoolsClient.BeginUpdate method.
type ElasticPoolsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ElasticPoolsClientGetOptions contains the optional parameters for the ElasticPoolsClient.Get method.
type ElasticPoolsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ElasticPoolsClientListByServerOptions contains the optional parameters for the ElasticPoolsClient.NewListByServerPager
// method.
type ElasticPoolsClientListByServerOptions struct {
	// The number of elements in the collection to skip.
	Skip *int64
}

// ElasticPoolsClientListMetricDefinitionsOptions contains the optional parameters for the ElasticPoolsClient.NewListMetricDefinitionsPager
// method.
type ElasticPoolsClientListMetricDefinitionsOptions struct {
	// placeholder for future optional parameters
}

// ElasticPoolsClientListMetricsOptions contains the optional parameters for the ElasticPoolsClient.NewListMetricsPager method.
type ElasticPoolsClientListMetricsOptions struct {
	// placeholder for future optional parameters
}

// EncryptionProtectorsClientBeginCreateOrUpdateOptions contains the optional parameters for the EncryptionProtectorsClient.BeginCreateOrUpdate
// method.
type EncryptionProtectorsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EncryptionProtectorsClientBeginRevalidateOptions contains the optional parameters for the EncryptionProtectorsClient.BeginRevalidate
// method.
type EncryptionProtectorsClientBeginRevalidateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// EncryptionProtectorsClientGetOptions contains the optional parameters for the EncryptionProtectorsClient.Get method.
type EncryptionProtectorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// EncryptionProtectorsClientListByServerOptions contains the optional parameters for the EncryptionProtectorsClient.NewListByServerPager
// method.
type EncryptionProtectorsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// EndpointCertificatesClientGetOptions contains the optional parameters for the EndpointCertificatesClient.Get method.
type EndpointCertificatesClientGetOptions struct {
	// placeholder for future optional parameters
}

// EndpointCertificatesClientListByInstanceOptions contains the optional parameters for the EndpointCertificatesClient.NewListByInstancePager
// method.
type EndpointCertificatesClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ExtendedDatabaseBlobAuditingPoliciesClientCreateOrUpdateOptions contains the optional parameters for the ExtendedDatabaseBlobAuditingPoliciesClient.CreateOrUpdate
// method.
type ExtendedDatabaseBlobAuditingPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ExtendedDatabaseBlobAuditingPoliciesClientGetOptions contains the optional parameters for the ExtendedDatabaseBlobAuditingPoliciesClient.Get
// method.
type ExtendedDatabaseBlobAuditingPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExtendedDatabaseBlobAuditingPoliciesClientListByDatabaseOptions contains the optional parameters for the ExtendedDatabaseBlobAuditingPoliciesClient.NewListByDatabasePager
// method.
type ExtendedDatabaseBlobAuditingPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ExtendedServerBlobAuditingPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ExtendedServerBlobAuditingPoliciesClient.BeginCreateOrUpdate
// method.
type ExtendedServerBlobAuditingPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExtendedServerBlobAuditingPoliciesClientGetOptions contains the optional parameters for the ExtendedServerBlobAuditingPoliciesClient.Get
// method.
type ExtendedServerBlobAuditingPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExtendedServerBlobAuditingPoliciesClientListByServerOptions contains the optional parameters for the ExtendedServerBlobAuditingPoliciesClient.NewListByServerPager
// method.
type ExtendedServerBlobAuditingPoliciesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// FailoverGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the FailoverGroupsClient.BeginCreateOrUpdate
// method.
type FailoverGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FailoverGroupsClientBeginDeleteOptions contains the optional parameters for the FailoverGroupsClient.BeginDelete method.
type FailoverGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FailoverGroupsClientBeginFailoverOptions contains the optional parameters for the FailoverGroupsClient.BeginFailover method.
type FailoverGroupsClientBeginFailoverOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FailoverGroupsClientBeginForceFailoverAllowDataLossOptions contains the optional parameters for the FailoverGroupsClient.BeginForceFailoverAllowDataLoss
// method.
type FailoverGroupsClientBeginForceFailoverAllowDataLossOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FailoverGroupsClientBeginTryPlannedBeforeForcedFailoverOptions contains the optional parameters for the FailoverGroupsClient.BeginTryPlannedBeforeForcedFailover
// method.
type FailoverGroupsClientBeginTryPlannedBeforeForcedFailoverOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FailoverGroupsClientBeginUpdateOptions contains the optional parameters for the FailoverGroupsClient.BeginUpdate method.
type FailoverGroupsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FailoverGroupsClientGetOptions contains the optional parameters for the FailoverGroupsClient.Get method.
type FailoverGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// FailoverGroupsClientListByServerOptions contains the optional parameters for the FailoverGroupsClient.NewListByServerPager
// method.
type FailoverGroupsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientCreateOrUpdateOptions contains the optional parameters for the FirewallRulesClient.CreateOrUpdate method.
type FirewallRulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientDeleteOptions contains the optional parameters for the FirewallRulesClient.Delete method.
type FirewallRulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientGetOptions contains the optional parameters for the FirewallRulesClient.Get method.
type FirewallRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientListByServerOptions contains the optional parameters for the FirewallRulesClient.NewListByServerPager
// method.
type FirewallRulesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// FirewallRulesClientReplaceOptions contains the optional parameters for the FirewallRulesClient.Replace method.
type FirewallRulesClientReplaceOptions struct {
	// placeholder for future optional parameters
}

// GeoBackupPoliciesClientCreateOrUpdateOptions contains the optional parameters for the GeoBackupPoliciesClient.CreateOrUpdate
// method.
type GeoBackupPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// GeoBackupPoliciesClientGetOptions contains the optional parameters for the GeoBackupPoliciesClient.Get method.
type GeoBackupPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// GeoBackupPoliciesClientListByDatabaseOptions contains the optional parameters for the GeoBackupPoliciesClient.NewListByDatabasePager
// method.
type GeoBackupPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// IPv6FirewallRulesClientCreateOrUpdateOptions contains the optional parameters for the IPv6FirewallRulesClient.CreateOrUpdate
// method.
type IPv6FirewallRulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// IPv6FirewallRulesClientDeleteOptions contains the optional parameters for the IPv6FirewallRulesClient.Delete method.
type IPv6FirewallRulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// IPv6FirewallRulesClientGetOptions contains the optional parameters for the IPv6FirewallRulesClient.Get method.
type IPv6FirewallRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// IPv6FirewallRulesClientListByServerOptions contains the optional parameters for the IPv6FirewallRulesClient.NewListByServerPager
// method.
type IPv6FirewallRulesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// InstanceFailoverGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the InstanceFailoverGroupsClient.BeginCreateOrUpdate
// method.
type InstanceFailoverGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InstanceFailoverGroupsClientBeginDeleteOptions contains the optional parameters for the InstanceFailoverGroupsClient.BeginDelete
// method.
type InstanceFailoverGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InstanceFailoverGroupsClientBeginFailoverOptions contains the optional parameters for the InstanceFailoverGroupsClient.BeginFailover
// method.
type InstanceFailoverGroupsClientBeginFailoverOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InstanceFailoverGroupsClientBeginForceFailoverAllowDataLossOptions contains the optional parameters for the InstanceFailoverGroupsClient.BeginForceFailoverAllowDataLoss
// method.
type InstanceFailoverGroupsClientBeginForceFailoverAllowDataLossOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InstanceFailoverGroupsClientGetOptions contains the optional parameters for the InstanceFailoverGroupsClient.Get method.
type InstanceFailoverGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// InstanceFailoverGroupsClientListByLocationOptions contains the optional parameters for the InstanceFailoverGroupsClient.NewListByLocationPager
// method.
type InstanceFailoverGroupsClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// InstancePoolsClientBeginCreateOrUpdateOptions contains the optional parameters for the InstancePoolsClient.BeginCreateOrUpdate
// method.
type InstancePoolsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InstancePoolsClientBeginDeleteOptions contains the optional parameters for the InstancePoolsClient.BeginDelete method.
type InstancePoolsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InstancePoolsClientBeginUpdateOptions contains the optional parameters for the InstancePoolsClient.BeginUpdate method.
type InstancePoolsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InstancePoolsClientGetOptions contains the optional parameters for the InstancePoolsClient.Get method.
type InstancePoolsClientGetOptions struct {
	// placeholder for future optional parameters
}

// InstancePoolsClientListByResourceGroupOptions contains the optional parameters for the InstancePoolsClient.NewListByResourceGroupPager
// method.
type InstancePoolsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// InstancePoolsClientListOptions contains the optional parameters for the InstancePoolsClient.NewListPager method.
type InstancePoolsClientListOptions struct {
	// placeholder for future optional parameters
}

// JobAgentsClientBeginCreateOrUpdateOptions contains the optional parameters for the JobAgentsClient.BeginCreateOrUpdate
// method.
type JobAgentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// JobAgentsClientBeginDeleteOptions contains the optional parameters for the JobAgentsClient.BeginDelete method.
type JobAgentsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// JobAgentsClientBeginUpdateOptions contains the optional parameters for the JobAgentsClient.BeginUpdate method.
type JobAgentsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// JobAgentsClientGetOptions contains the optional parameters for the JobAgentsClient.Get method.
type JobAgentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobAgentsClientListByServerOptions contains the optional parameters for the JobAgentsClient.NewListByServerPager method.
type JobAgentsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// JobCredentialsClientCreateOrUpdateOptions contains the optional parameters for the JobCredentialsClient.CreateOrUpdate
// method.
type JobCredentialsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// JobCredentialsClientDeleteOptions contains the optional parameters for the JobCredentialsClient.Delete method.
type JobCredentialsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// JobCredentialsClientGetOptions contains the optional parameters for the JobCredentialsClient.Get method.
type JobCredentialsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobCredentialsClientListByAgentOptions contains the optional parameters for the JobCredentialsClient.NewListByAgentPager
// method.
type JobCredentialsClientListByAgentOptions struct {
	// placeholder for future optional parameters
}

// JobExecutionsClientBeginCreateOptions contains the optional parameters for the JobExecutionsClient.BeginCreate method.
type JobExecutionsClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// JobExecutionsClientBeginCreateOrUpdateOptions contains the optional parameters for the JobExecutionsClient.BeginCreateOrUpdate
// method.
type JobExecutionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// JobExecutionsClientCancelOptions contains the optional parameters for the JobExecutionsClient.Cancel method.
type JobExecutionsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// JobExecutionsClientGetOptions contains the optional parameters for the JobExecutionsClient.Get method.
type JobExecutionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobExecutionsClientListByAgentOptions contains the optional parameters for the JobExecutionsClient.NewListByAgentPager
// method.
type JobExecutionsClientListByAgentOptions struct {
	// If specified, only job executions created before the specified time are included.
	CreateTimeMax *time.Time

	// If specified, only job executions created at or after the specified time are included.
	CreateTimeMin *time.Time

	// If specified, only job executions completed before the specified time are included.
	EndTimeMax *time.Time

	// If specified, only job executions completed at or after the specified time are included.
	EndTimeMin *time.Time

	// If specified, only active or only completed job executions are included.
	IsActive *bool

	// The number of elements in the collection to skip.
	Skip *int32

	// The number of elements to return from the collection.
	Top *int32
}

// JobExecutionsClientListByJobOptions contains the optional parameters for the JobExecutionsClient.NewListByJobPager method.
type JobExecutionsClientListByJobOptions struct {
	// If specified, only job executions created before the specified time are included.
	CreateTimeMax *time.Time

	// If specified, only job executions created at or after the specified time are included.
	CreateTimeMin *time.Time

	// If specified, only job executions completed before the specified time are included.
	EndTimeMax *time.Time

	// If specified, only job executions completed at or after the specified time are included.
	EndTimeMin *time.Time

	// If specified, only active or only completed job executions are included.
	IsActive *bool

	// The number of elements in the collection to skip.
	Skip *int32

	// The number of elements to return from the collection.
	Top *int32
}

// JobPrivateEndpointsClientBeginCreateOrUpdateOptions contains the optional parameters for the JobPrivateEndpointsClient.BeginCreateOrUpdate
// method.
type JobPrivateEndpointsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// JobPrivateEndpointsClientBeginDeleteOptions contains the optional parameters for the JobPrivateEndpointsClient.BeginDelete
// method.
type JobPrivateEndpointsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// JobPrivateEndpointsClientGetOptions contains the optional parameters for the JobPrivateEndpointsClient.Get method.
type JobPrivateEndpointsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobPrivateEndpointsClientListByAgentOptions contains the optional parameters for the JobPrivateEndpointsClient.NewListByAgentPager
// method.
type JobPrivateEndpointsClientListByAgentOptions struct {
	// placeholder for future optional parameters
}

// JobStepExecutionsClientGetOptions contains the optional parameters for the JobStepExecutionsClient.Get method.
type JobStepExecutionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobStepExecutionsClientListByJobExecutionOptions contains the optional parameters for the JobStepExecutionsClient.NewListByJobExecutionPager
// method.
type JobStepExecutionsClientListByJobExecutionOptions struct {
	// If specified, only job executions created before the specified time are included.
	CreateTimeMax *time.Time

	// If specified, only job executions created at or after the specified time are included.
	CreateTimeMin *time.Time

	// If specified, only job executions completed before the specified time are included.
	EndTimeMax *time.Time

	// If specified, only job executions completed at or after the specified time are included.
	EndTimeMin *time.Time

	// If specified, only active or only completed job executions are included.
	IsActive *bool

	// The number of elements in the collection to skip.
	Skip *int32

	// The number of elements to return from the collection.
	Top *int32
}

// JobStepsClientCreateOrUpdateOptions contains the optional parameters for the JobStepsClient.CreateOrUpdate method.
type JobStepsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// JobStepsClientDeleteOptions contains the optional parameters for the JobStepsClient.Delete method.
type JobStepsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// JobStepsClientGetByVersionOptions contains the optional parameters for the JobStepsClient.GetByVersion method.
type JobStepsClientGetByVersionOptions struct {
	// placeholder for future optional parameters
}

// JobStepsClientGetOptions contains the optional parameters for the JobStepsClient.Get method.
type JobStepsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobStepsClientListByJobOptions contains the optional parameters for the JobStepsClient.NewListByJobPager method.
type JobStepsClientListByJobOptions struct {
	// placeholder for future optional parameters
}

// JobStepsClientListByVersionOptions contains the optional parameters for the JobStepsClient.NewListByVersionPager method.
type JobStepsClientListByVersionOptions struct {
	// placeholder for future optional parameters
}

// JobTargetExecutionsClientGetOptions contains the optional parameters for the JobTargetExecutionsClient.Get method.
type JobTargetExecutionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobTargetExecutionsClientListByJobExecutionOptions contains the optional parameters for the JobTargetExecutionsClient.NewListByJobExecutionPager
// method.
type JobTargetExecutionsClientListByJobExecutionOptions struct {
	// If specified, only job executions created before the specified time are included.
	CreateTimeMax *time.Time

	// If specified, only job executions created at or after the specified time are included.
	CreateTimeMin *time.Time

	// If specified, only job executions completed before the specified time are included.
	EndTimeMax *time.Time

	// If specified, only job executions completed at or after the specified time are included.
	EndTimeMin *time.Time

	// If specified, only active or only completed job executions are included.
	IsActive *bool

	// The number of elements in the collection to skip.
	Skip *int32

	// The number of elements to return from the collection.
	Top *int32
}

// JobTargetExecutionsClientListByStepOptions contains the optional parameters for the JobTargetExecutionsClient.NewListByStepPager
// method.
type JobTargetExecutionsClientListByStepOptions struct {
	// If specified, only job executions created before the specified time are included.
	CreateTimeMax *time.Time

	// If specified, only job executions created at or after the specified time are included.
	CreateTimeMin *time.Time

	// If specified, only job executions completed before the specified time are included.
	EndTimeMax *time.Time

	// If specified, only job executions completed at or after the specified time are included.
	EndTimeMin *time.Time

	// If specified, only active or only completed job executions are included.
	IsActive *bool

	// The number of elements in the collection to skip.
	Skip *int32

	// The number of elements to return from the collection.
	Top *int32
}

// JobTargetGroupsClientCreateOrUpdateOptions contains the optional parameters for the JobTargetGroupsClient.CreateOrUpdate
// method.
type JobTargetGroupsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// JobTargetGroupsClientDeleteOptions contains the optional parameters for the JobTargetGroupsClient.Delete method.
type JobTargetGroupsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// JobTargetGroupsClientGetOptions contains the optional parameters for the JobTargetGroupsClient.Get method.
type JobTargetGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobTargetGroupsClientListByAgentOptions contains the optional parameters for the JobTargetGroupsClient.NewListByAgentPager
// method.
type JobTargetGroupsClientListByAgentOptions struct {
	// placeholder for future optional parameters
}

// JobVersionsClientGetOptions contains the optional parameters for the JobVersionsClient.Get method.
type JobVersionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobVersionsClientListByJobOptions contains the optional parameters for the JobVersionsClient.NewListByJobPager method.
type JobVersionsClientListByJobOptions struct {
	// placeholder for future optional parameters
}

// JobsClientCreateOrUpdateOptions contains the optional parameters for the JobsClient.CreateOrUpdate method.
type JobsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// JobsClientDeleteOptions contains the optional parameters for the JobsClient.Delete method.
type JobsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// JobsClientGetOptions contains the optional parameters for the JobsClient.Get method.
type JobsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobsClientListByAgentOptions contains the optional parameters for the JobsClient.NewListByAgentPager method.
type JobsClientListByAgentOptions struct {
	// placeholder for future optional parameters
}

// LedgerDigestUploadsClientBeginCreateOrUpdateOptions contains the optional parameters for the LedgerDigestUploadsClient.BeginCreateOrUpdate
// method.
type LedgerDigestUploadsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LedgerDigestUploadsClientBeginDisableOptions contains the optional parameters for the LedgerDigestUploadsClient.BeginDisable
// method.
type LedgerDigestUploadsClientBeginDisableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LedgerDigestUploadsClientGetOptions contains the optional parameters for the LedgerDigestUploadsClient.Get method.
type LedgerDigestUploadsClientGetOptions struct {
	// placeholder for future optional parameters
}

// LedgerDigestUploadsClientListByDatabaseOptions contains the optional parameters for the LedgerDigestUploadsClient.NewListByDatabasePager
// method.
type LedgerDigestUploadsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// LongTermRetentionBackupsClientBeginChangeAccessTierByResourceGroupOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginChangeAccessTierByResourceGroup
// method.
type LongTermRetentionBackupsClientBeginChangeAccessTierByResourceGroupOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientBeginChangeAccessTierOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginChangeAccessTier
// method.
type LongTermRetentionBackupsClientBeginChangeAccessTierOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientBeginCopyByResourceGroupOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginCopyByResourceGroup
// method.
type LongTermRetentionBackupsClientBeginCopyByResourceGroupOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientBeginCopyOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginCopy
// method.
type LongTermRetentionBackupsClientBeginCopyOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientBeginDeleteByResourceGroupOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginDeleteByResourceGroup
// method.
type LongTermRetentionBackupsClientBeginDeleteByResourceGroupOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientBeginDeleteOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginDelete
// method.
type LongTermRetentionBackupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientBeginUpdateByResourceGroupOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginUpdateByResourceGroup
// method.
type LongTermRetentionBackupsClientBeginUpdateByResourceGroupOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientBeginUpdateOptions contains the optional parameters for the LongTermRetentionBackupsClient.BeginUpdate
// method.
type LongTermRetentionBackupsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionBackupsClientGetByResourceGroupOptions contains the optional parameters for the LongTermRetentionBackupsClient.GetByResourceGroup
// method.
type LongTermRetentionBackupsClientGetByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// LongTermRetentionBackupsClientGetOptions contains the optional parameters for the LongTermRetentionBackupsClient.Get method.
type LongTermRetentionBackupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// LongTermRetentionBackupsClientListByDatabaseOptions contains the optional parameters for the LongTermRetentionBackupsClient.NewListByDatabasePager
// method.
type LongTermRetentionBackupsClientListByDatabaseOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionBackupsClientListByLocationOptions contains the optional parameters for the LongTermRetentionBackupsClient.NewListByLocationPager
// method.
type LongTermRetentionBackupsClientListByLocationOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionBackupsClientListByResourceGroupDatabaseOptions contains the optional parameters for the LongTermRetentionBackupsClient.NewListByResourceGroupDatabasePager
// method.
type LongTermRetentionBackupsClientListByResourceGroupDatabaseOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionBackupsClientListByResourceGroupLocationOptions contains the optional parameters for the LongTermRetentionBackupsClient.NewListByResourceGroupLocationPager
// method.
type LongTermRetentionBackupsClientListByResourceGroupLocationOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionBackupsClientListByResourceGroupServerOptions contains the optional parameters for the LongTermRetentionBackupsClient.NewListByResourceGroupServerPager
// method.
type LongTermRetentionBackupsClientListByResourceGroupServerOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionBackupsClientListByServerOptions contains the optional parameters for the LongTermRetentionBackupsClient.NewListByServerPager
// method.
type LongTermRetentionBackupsClientListByServerOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionManagedInstanceBackupsClientBeginDeleteByResourceGroupOptions contains the optional parameters for the
// LongTermRetentionManagedInstanceBackupsClient.BeginDeleteByResourceGroup method.
type LongTermRetentionManagedInstanceBackupsClientBeginDeleteByResourceGroupOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionManagedInstanceBackupsClientBeginDeleteOptions contains the optional parameters for the LongTermRetentionManagedInstanceBackupsClient.BeginDelete
// method.
type LongTermRetentionManagedInstanceBackupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionManagedInstanceBackupsClientGetByResourceGroupOptions contains the optional parameters for the LongTermRetentionManagedInstanceBackupsClient.GetByResourceGroup
// method.
type LongTermRetentionManagedInstanceBackupsClientGetByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// LongTermRetentionManagedInstanceBackupsClientGetOptions contains the optional parameters for the LongTermRetentionManagedInstanceBackupsClient.Get
// method.
type LongTermRetentionManagedInstanceBackupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// LongTermRetentionManagedInstanceBackupsClientListByDatabaseOptions contains the optional parameters for the LongTermRetentionManagedInstanceBackupsClient.NewListByDatabasePager
// method.
type LongTermRetentionManagedInstanceBackupsClientListByDatabaseOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionManagedInstanceBackupsClientListByInstanceOptions contains the optional parameters for the LongTermRetentionManagedInstanceBackupsClient.NewListByInstancePager
// method.
type LongTermRetentionManagedInstanceBackupsClientListByInstanceOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionManagedInstanceBackupsClientListByLocationOptions contains the optional parameters for the LongTermRetentionManagedInstanceBackupsClient.NewListByLocationPager
// method.
type LongTermRetentionManagedInstanceBackupsClientListByLocationOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionManagedInstanceBackupsClientListByResourceGroupDatabaseOptions contains the optional parameters for the
// LongTermRetentionManagedInstanceBackupsClient.NewListByResourceGroupDatabasePager method.
type LongTermRetentionManagedInstanceBackupsClientListByResourceGroupDatabaseOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionManagedInstanceBackupsClientListByResourceGroupInstanceOptions contains the optional parameters for the
// LongTermRetentionManagedInstanceBackupsClient.NewListByResourceGroupInstancePager method.
type LongTermRetentionManagedInstanceBackupsClientListByResourceGroupInstanceOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionManagedInstanceBackupsClientListByResourceGroupLocationOptions contains the optional parameters for the
// LongTermRetentionManagedInstanceBackupsClient.NewListByResourceGroupLocationPager method.
type LongTermRetentionManagedInstanceBackupsClientListByResourceGroupLocationOptions struct {
	// Whether to query against just live databases, just deleted databases, or all databases.
	DatabaseState *DatabaseState

	// Whether or not to only get the latest backup for each database.
	OnlyLatestPerDatabase *bool
}

// LongTermRetentionPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the LongTermRetentionPoliciesClient.BeginCreateOrUpdate
// method.
type LongTermRetentionPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LongTermRetentionPoliciesClientGetOptions contains the optional parameters for the LongTermRetentionPoliciesClient.Get
// method.
type LongTermRetentionPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// LongTermRetentionPoliciesClientListByDatabaseOptions contains the optional parameters for the LongTermRetentionPoliciesClient.NewListByDatabasePager
// method.
type LongTermRetentionPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// MaintenanceWindowOptionsClientGetOptions contains the optional parameters for the MaintenanceWindowOptionsClient.Get method.
type MaintenanceWindowOptionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// MaintenanceWindowsClientCreateOrUpdateOptions contains the optional parameters for the MaintenanceWindowsClient.CreateOrUpdate
// method.
type MaintenanceWindowsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// MaintenanceWindowsClientGetOptions contains the optional parameters for the MaintenanceWindowsClient.Get method.
type MaintenanceWindowsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedBackupShortTermRetentionPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedBackupShortTermRetentionPoliciesClient.BeginCreateOrUpdate
// method.
type ManagedBackupShortTermRetentionPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedBackupShortTermRetentionPoliciesClientBeginUpdateOptions contains the optional parameters for the ManagedBackupShortTermRetentionPoliciesClient.BeginUpdate
// method.
type ManagedBackupShortTermRetentionPoliciesClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedBackupShortTermRetentionPoliciesClientGetOptions contains the optional parameters for the ManagedBackupShortTermRetentionPoliciesClient.Get
// method.
type ManagedBackupShortTermRetentionPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedBackupShortTermRetentionPoliciesClientListByDatabaseOptions contains the optional parameters for the ManagedBackupShortTermRetentionPoliciesClient.NewListByDatabasePager
// method.
type ManagedBackupShortTermRetentionPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseAdvancedThreatProtectionSettingsClientCreateOrUpdateOptions contains the optional parameters for the ManagedDatabaseAdvancedThreatProtectionSettingsClient.CreateOrUpdate
// method.
type ManagedDatabaseAdvancedThreatProtectionSettingsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseAdvancedThreatProtectionSettingsClientGetOptions contains the optional parameters for the ManagedDatabaseAdvancedThreatProtectionSettingsClient.Get
// method.
type ManagedDatabaseAdvancedThreatProtectionSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseAdvancedThreatProtectionSettingsClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseAdvancedThreatProtectionSettingsClient.NewListByDatabasePager
// method.
type ManagedDatabaseAdvancedThreatProtectionSettingsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseColumnsClientGetOptions contains the optional parameters for the ManagedDatabaseColumnsClient.Get method.
type ManagedDatabaseColumnsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseColumnsClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseColumnsClient.NewListByDatabasePager
// method.
type ManagedDatabaseColumnsClientListByDatabaseOptions struct {
	Column  []string
	OrderBy []string
	Schema  []string

	// An opaque token that identifies a starting point in the collection.
	Skiptoken *string
	Table     []string
}

// ManagedDatabaseColumnsClientListByTableOptions contains the optional parameters for the ManagedDatabaseColumnsClient.NewListByTablePager
// method.
type ManagedDatabaseColumnsClientListByTableOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// ManagedDatabaseMoveOperationsClientGetOptions contains the optional parameters for the ManagedDatabaseMoveOperationsClient.Get
// method.
type ManagedDatabaseMoveOperationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseMoveOperationsClientListByLocationOptions contains the optional parameters for the ManagedDatabaseMoveOperationsClient.NewListByLocationPager
// method.
type ManagedDatabaseMoveOperationsClientListByLocationOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string

	// Whether or not to only get the latest operation for each database. Has higher priority than $filter.
	OnlyLatestPerDatabase *bool
}

// ManagedDatabaseQueriesClientGetOptions contains the optional parameters for the ManagedDatabaseQueriesClient.Get method.
type ManagedDatabaseQueriesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseQueriesClientListByQueryOptions contains the optional parameters for the ManagedDatabaseQueriesClient.NewListByQueryPager
// method.
type ManagedDatabaseQueriesClientListByQueryOptions struct {
	// End time for observed period.
	EndTime *string

	// The time step to be used to summarize the metric values.
	Interval *QueryTimeGrainType

	// Start time for observed period.
	StartTime *string
}

// ManagedDatabaseRecommendedSensitivityLabelsClientUpdateOptions contains the optional parameters for the ManagedDatabaseRecommendedSensitivityLabelsClient.Update
// method.
type ManagedDatabaseRecommendedSensitivityLabelsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseRestoreDetailsClientGetOptions contains the optional parameters for the ManagedDatabaseRestoreDetailsClient.Get
// method.
type ManagedDatabaseRestoreDetailsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSchemasClientGetOptions contains the optional parameters for the ManagedDatabaseSchemasClient.Get method.
type ManagedDatabaseSchemasClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSchemasClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseSchemasClient.NewListByDatabasePager
// method.
type ManagedDatabaseSchemasClientListByDatabaseOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// ManagedDatabaseSecurityAlertPoliciesClientCreateOrUpdateOptions contains the optional parameters for the ManagedDatabaseSecurityAlertPoliciesClient.CreateOrUpdate
// method.
type ManagedDatabaseSecurityAlertPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSecurityAlertPoliciesClientGetOptions contains the optional parameters for the ManagedDatabaseSecurityAlertPoliciesClient.Get
// method.
type ManagedDatabaseSecurityAlertPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSecurityAlertPoliciesClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseSecurityAlertPoliciesClient.NewListByDatabasePager
// method.
type ManagedDatabaseSecurityAlertPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSecurityEventsClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseSecurityEventsClient.NewListByDatabasePager
// method.
type ManagedDatabaseSecurityEventsClientListByDatabaseOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string

	// The number of elements in the collection to skip.
	Skip *int32

	// An opaque token that identifies a starting point in the collection.
	Skiptoken *string

	// The number of elements to return from the collection.
	Top *int32
}

// ManagedDatabaseSensitivityLabelsClientCreateOrUpdateOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.CreateOrUpdate
// method.
type ManagedDatabaseSensitivityLabelsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSensitivityLabelsClientDeleteOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.Delete
// method.
type ManagedDatabaseSensitivityLabelsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSensitivityLabelsClientDisableRecommendationOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.DisableRecommendation
// method.
type ManagedDatabaseSensitivityLabelsClientDisableRecommendationOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSensitivityLabelsClientEnableRecommendationOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.EnableRecommendation
// method.
type ManagedDatabaseSensitivityLabelsClientEnableRecommendationOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSensitivityLabelsClientGetOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.Get
// method.
type ManagedDatabaseSensitivityLabelsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseSensitivityLabelsClientListCurrentByDatabaseOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.NewListCurrentByDatabasePager
// method.
type ManagedDatabaseSensitivityLabelsClientListCurrentByDatabaseOptions struct {
	Count *bool

	// An OData filter expression that filters elements in the collection.
	Filter    *string
	SkipToken *string
}

// ManagedDatabaseSensitivityLabelsClientListRecommendedByDatabaseOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.NewListRecommendedByDatabasePager
// method.
type ManagedDatabaseSensitivityLabelsClientListRecommendedByDatabaseOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string

	// Specifies whether to include disabled recommendations or not.
	IncludeDisabledRecommendations *bool
	SkipToken                      *string
}

// ManagedDatabaseSensitivityLabelsClientUpdateOptions contains the optional parameters for the ManagedDatabaseSensitivityLabelsClient.Update
// method.
type ManagedDatabaseSensitivityLabelsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseTablesClientGetOptions contains the optional parameters for the ManagedDatabaseTablesClient.Get method.
type ManagedDatabaseTablesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseTablesClientListBySchemaOptions contains the optional parameters for the ManagedDatabaseTablesClient.NewListBySchemaPager
// method.
type ManagedDatabaseTablesClientListBySchemaOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// ManagedDatabaseTransparentDataEncryptionClientCreateOrUpdateOptions contains the optional parameters for the ManagedDatabaseTransparentDataEncryptionClient.CreateOrUpdate
// method.
type ManagedDatabaseTransparentDataEncryptionClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseTransparentDataEncryptionClientGetOptions contains the optional parameters for the ManagedDatabaseTransparentDataEncryptionClient.Get
// method.
type ManagedDatabaseTransparentDataEncryptionClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseTransparentDataEncryptionClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseTransparentDataEncryptionClient.NewListByDatabasePager
// method.
type ManagedDatabaseTransparentDataEncryptionClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClientCreateOrUpdateOptions contains the optional parameters for the
// ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClient.CreateOrUpdate method.
type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClientDeleteOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClient.Delete
// method.
type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClientGetOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClient.Get
// method.
type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentScansClientBeginInitiateScanOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentScansClient.BeginInitiateScan
// method.
type ManagedDatabaseVulnerabilityAssessmentScansClientBeginInitiateScanOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabaseVulnerabilityAssessmentScansClientExportOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentScansClient.Export
// method.
type ManagedDatabaseVulnerabilityAssessmentScansClientExportOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentScansClientGetOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentScansClient.Get
// method.
type ManagedDatabaseVulnerabilityAssessmentScansClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentScansClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentScansClient.NewListByDatabasePager
// method.
type ManagedDatabaseVulnerabilityAssessmentScansClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentsClientCreateOrUpdateOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentsClient.CreateOrUpdate
// method.
type ManagedDatabaseVulnerabilityAssessmentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentsClientDeleteOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentsClient.Delete
// method.
type ManagedDatabaseVulnerabilityAssessmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentsClientGetOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentsClient.Get
// method.
type ManagedDatabaseVulnerabilityAssessmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabaseVulnerabilityAssessmentsClientListByDatabaseOptions contains the optional parameters for the ManagedDatabaseVulnerabilityAssessmentsClient.NewListByDatabasePager
// method.
type ManagedDatabaseVulnerabilityAssessmentsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabasesClientBeginCancelMoveOptions contains the optional parameters for the ManagedDatabasesClient.BeginCancelMove
// method.
type ManagedDatabasesClientBeginCancelMoveOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabasesClientBeginCompleteMoveOptions contains the optional parameters for the ManagedDatabasesClient.BeginCompleteMove
// method.
type ManagedDatabasesClientBeginCompleteMoveOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabasesClientBeginCompleteRestoreOptions contains the optional parameters for the ManagedDatabasesClient.BeginCompleteRestore
// method.
type ManagedDatabasesClientBeginCompleteRestoreOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabasesClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedDatabasesClient.BeginCreateOrUpdate
// method.
type ManagedDatabasesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabasesClientBeginDeleteOptions contains the optional parameters for the ManagedDatabasesClient.BeginDelete method.
type ManagedDatabasesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabasesClientBeginStartMoveOptions contains the optional parameters for the ManagedDatabasesClient.BeginStartMove
// method.
type ManagedDatabasesClientBeginStartMoveOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabasesClientBeginUpdateOptions contains the optional parameters for the ManagedDatabasesClient.BeginUpdate method.
type ManagedDatabasesClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedDatabasesClientGetOptions contains the optional parameters for the ManagedDatabasesClient.Get method.
type ManagedDatabasesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabasesClientListByInstanceOptions contains the optional parameters for the ManagedDatabasesClient.NewListByInstancePager
// method.
type ManagedDatabasesClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedDatabasesClientListInaccessibleByInstanceOptions contains the optional parameters for the ManagedDatabasesClient.NewListInaccessibleByInstancePager
// method.
type ManagedDatabasesClientListInaccessibleByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceAdministratorsClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstanceAdministratorsClient.BeginCreateOrUpdate
// method.
type ManagedInstanceAdministratorsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceAdministratorsClientBeginDeleteOptions contains the optional parameters for the ManagedInstanceAdministratorsClient.BeginDelete
// method.
type ManagedInstanceAdministratorsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceAdministratorsClientGetOptions contains the optional parameters for the ManagedInstanceAdministratorsClient.Get
// method.
type ManagedInstanceAdministratorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceAdministratorsClientListByInstanceOptions contains the optional parameters for the ManagedInstanceAdministratorsClient.NewListByInstancePager
// method.
type ManagedInstanceAdministratorsClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceAdvancedThreatProtectionSettingsClientBeginCreateOrUpdateOptions contains the optional parameters for the
// ManagedInstanceAdvancedThreatProtectionSettingsClient.BeginCreateOrUpdate method.
type ManagedInstanceAdvancedThreatProtectionSettingsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceAdvancedThreatProtectionSettingsClientGetOptions contains the optional parameters for the ManagedInstanceAdvancedThreatProtectionSettingsClient.Get
// method.
type ManagedInstanceAdvancedThreatProtectionSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceAdvancedThreatProtectionSettingsClientListByInstanceOptions contains the optional parameters for the ManagedInstanceAdvancedThreatProtectionSettingsClient.NewListByInstancePager
// method.
type ManagedInstanceAdvancedThreatProtectionSettingsClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceAzureADOnlyAuthenticationsClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstanceAzureADOnlyAuthenticationsClient.BeginCreateOrUpdate
// method.
type ManagedInstanceAzureADOnlyAuthenticationsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceAzureADOnlyAuthenticationsClientBeginDeleteOptions contains the optional parameters for the ManagedInstanceAzureADOnlyAuthenticationsClient.BeginDelete
// method.
type ManagedInstanceAzureADOnlyAuthenticationsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceAzureADOnlyAuthenticationsClientGetOptions contains the optional parameters for the ManagedInstanceAzureADOnlyAuthenticationsClient.Get
// method.
type ManagedInstanceAzureADOnlyAuthenticationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceAzureADOnlyAuthenticationsClientListByInstanceOptions contains the optional parameters for the ManagedInstanceAzureADOnlyAuthenticationsClient.NewListByInstancePager
// method.
type ManagedInstanceAzureADOnlyAuthenticationsClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceDtcsClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstanceDtcsClient.BeginCreateOrUpdate
// method.
type ManagedInstanceDtcsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceDtcsClientGetOptions contains the optional parameters for the ManagedInstanceDtcsClient.Get method.
type ManagedInstanceDtcsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceDtcsClientListByManagedInstanceOptions contains the optional parameters for the ManagedInstanceDtcsClient.NewListByManagedInstancePager
// method.
type ManagedInstanceDtcsClientListByManagedInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceEncryptionProtectorsClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstanceEncryptionProtectorsClient.BeginCreateOrUpdate
// method.
type ManagedInstanceEncryptionProtectorsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceEncryptionProtectorsClientBeginRevalidateOptions contains the optional parameters for the ManagedInstanceEncryptionProtectorsClient.BeginRevalidate
// method.
type ManagedInstanceEncryptionProtectorsClientBeginRevalidateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceEncryptionProtectorsClientGetOptions contains the optional parameters for the ManagedInstanceEncryptionProtectorsClient.Get
// method.
type ManagedInstanceEncryptionProtectorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceEncryptionProtectorsClientListByInstanceOptions contains the optional parameters for the ManagedInstanceEncryptionProtectorsClient.NewListByInstancePager
// method.
type ManagedInstanceEncryptionProtectorsClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceKeysClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstanceKeysClient.BeginCreateOrUpdate
// method.
type ManagedInstanceKeysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceKeysClientBeginDeleteOptions contains the optional parameters for the ManagedInstanceKeysClient.BeginDelete
// method.
type ManagedInstanceKeysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceKeysClientGetOptions contains the optional parameters for the ManagedInstanceKeysClient.Get method.
type ManagedInstanceKeysClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceKeysClientListByInstanceOptions contains the optional parameters for the ManagedInstanceKeysClient.NewListByInstancePager
// method.
type ManagedInstanceKeysClientListByInstanceOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// ManagedInstanceLongTermRetentionPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstanceLongTermRetentionPoliciesClient.BeginCreateOrUpdate
// method.
type ManagedInstanceLongTermRetentionPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceLongTermRetentionPoliciesClientGetOptions contains the optional parameters for the ManagedInstanceLongTermRetentionPoliciesClient.Get
// method.
type ManagedInstanceLongTermRetentionPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceLongTermRetentionPoliciesClientListByDatabaseOptions contains the optional parameters for the ManagedInstanceLongTermRetentionPoliciesClient.NewListByDatabasePager
// method.
type ManagedInstanceLongTermRetentionPoliciesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceOperationsClientCancelOptions contains the optional parameters for the ManagedInstanceOperationsClient.Cancel
// method.
type ManagedInstanceOperationsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceOperationsClientGetOptions contains the optional parameters for the ManagedInstanceOperationsClient.Get
// method.
type ManagedInstanceOperationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceOperationsClientListByManagedInstanceOptions contains the optional parameters for the ManagedInstanceOperationsClient.NewListByManagedInstancePager
// method.
type ManagedInstanceOperationsClientListByManagedInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstancePrivateEndpointConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstancePrivateEndpointConnectionsClient.BeginCreateOrUpdate
// method.
type ManagedInstancePrivateEndpointConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancePrivateEndpointConnectionsClientBeginDeleteOptions contains the optional parameters for the ManagedInstancePrivateEndpointConnectionsClient.BeginDelete
// method.
type ManagedInstancePrivateEndpointConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancePrivateEndpointConnectionsClientGetOptions contains the optional parameters for the ManagedInstancePrivateEndpointConnectionsClient.Get
// method.
type ManagedInstancePrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstancePrivateEndpointConnectionsClientListByManagedInstanceOptions contains the optional parameters for the ManagedInstancePrivateEndpointConnectionsClient.NewListByManagedInstancePager
// method.
type ManagedInstancePrivateEndpointConnectionsClientListByManagedInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstancePrivateLinkResourcesClientGetOptions contains the optional parameters for the ManagedInstancePrivateLinkResourcesClient.Get
// method.
type ManagedInstancePrivateLinkResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstancePrivateLinkResourcesClientListByManagedInstanceOptions contains the optional parameters for the ManagedInstancePrivateLinkResourcesClient.NewListByManagedInstancePager
// method.
type ManagedInstancePrivateLinkResourcesClientListByManagedInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceTdeCertificatesClientBeginCreateOptions contains the optional parameters for the ManagedInstanceTdeCertificatesClient.BeginCreate
// method.
type ManagedInstanceTdeCertificatesClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstanceVulnerabilityAssessmentsClientCreateOrUpdateOptions contains the optional parameters for the ManagedInstanceVulnerabilityAssessmentsClient.CreateOrUpdate
// method.
type ManagedInstanceVulnerabilityAssessmentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceVulnerabilityAssessmentsClientDeleteOptions contains the optional parameters for the ManagedInstanceVulnerabilityAssessmentsClient.Delete
// method.
type ManagedInstanceVulnerabilityAssessmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceVulnerabilityAssessmentsClientGetOptions contains the optional parameters for the ManagedInstanceVulnerabilityAssessmentsClient.Get
// method.
type ManagedInstanceVulnerabilityAssessmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstanceVulnerabilityAssessmentsClientListByInstanceOptions contains the optional parameters for the ManagedInstanceVulnerabilityAssessmentsClient.NewListByInstancePager
// method.
type ManagedInstanceVulnerabilityAssessmentsClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedInstancesClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedInstancesClient.BeginCreateOrUpdate
// method.
type ManagedInstancesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancesClientBeginDeleteOptions contains the optional parameters for the ManagedInstancesClient.BeginDelete method.
type ManagedInstancesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancesClientBeginFailoverOptions contains the optional parameters for the ManagedInstancesClient.BeginFailover
// method.
type ManagedInstancesClientBeginFailoverOptions struct {
	// The type of replica to be failed over.
	ReplicaType *ReplicaType

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancesClientBeginStartOptions contains the optional parameters for the ManagedInstancesClient.BeginStart method.
type ManagedInstancesClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancesClientBeginStopOptions contains the optional parameters for the ManagedInstancesClient.BeginStop method.
type ManagedInstancesClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancesClientBeginUpdateOptions contains the optional parameters for the ManagedInstancesClient.BeginUpdate method.
type ManagedInstancesClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedInstancesClientGetOptions contains the optional parameters for the ManagedInstancesClient.Get method.
type ManagedInstancesClientGetOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ManagedInstancesClientListByInstancePoolOptions contains the optional parameters for the ManagedInstancesClient.NewListByInstancePoolPager
// method.
type ManagedInstancesClientListByInstancePoolOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ManagedInstancesClientListByManagedInstanceOptions contains the optional parameters for the ManagedInstancesClient.NewListByManagedInstancePager
// method.
type ManagedInstancesClientListByManagedInstanceOptions struct {
	// Aggregation function to be used, default value is 'sum'
	AggregationFunction *AggregationFunctionType

	// Comma separated list of databases to be included into search. All DB's are included if this parameter is not specified.
	Databases *string

	// End time for observed period.
	EndTime *string

	// The time step to be used to summarize the metric values. Default value is PT1H
	Interval *QueryTimeGrainType

	// How many 'top queries' to return. Default is 5.
	NumberOfQueries *int32

	// Metric to be used for ranking top queries. Default is 'cpu'
	ObservationMetric *MetricType

	// Start time for observed period.
	StartTime *string
}

// ManagedInstancesClientListByResourceGroupOptions contains the optional parameters for the ManagedInstancesClient.NewListByResourceGroupPager
// method.
type ManagedInstancesClientListByResourceGroupOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ManagedInstancesClientListOptions contains the optional parameters for the ManagedInstancesClient.NewListPager method.
type ManagedInstancesClientListOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ManagedInstancesClientListOutboundNetworkDependenciesByManagedInstanceOptions contains the optional parameters for the
// ManagedInstancesClient.NewListOutboundNetworkDependenciesByManagedInstancePager method.
type ManagedInstancesClientListOutboundNetworkDependenciesByManagedInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedLedgerDigestUploadsClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedLedgerDigestUploadsClient.BeginCreateOrUpdate
// method.
type ManagedLedgerDigestUploadsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedLedgerDigestUploadsClientBeginDisableOptions contains the optional parameters for the ManagedLedgerDigestUploadsClient.BeginDisable
// method.
type ManagedLedgerDigestUploadsClientBeginDisableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedLedgerDigestUploadsClientGetOptions contains the optional parameters for the ManagedLedgerDigestUploadsClient.Get
// method.
type ManagedLedgerDigestUploadsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedLedgerDigestUploadsClientListByDatabaseOptions contains the optional parameters for the ManagedLedgerDigestUploadsClient.NewListByDatabasePager
// method.
type ManagedLedgerDigestUploadsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientBeginCreateOrUpdateOptions contains the optional
// parameters for the ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient.BeginCreateOrUpdate method.
type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientBeginUpdateOptions contains the optional parameters
// for the ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient.BeginUpdate method.
type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientGetOptions contains the optional parameters for the
// ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient.Get method.
type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientListByRestorableDroppedDatabaseOptions contains the
// optional parameters for the ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient.NewListByRestorableDroppedDatabasePager
// method.
type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientListByRestorableDroppedDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ManagedServerDNSAliasesClientBeginAcquireOptions contains the optional parameters for the ManagedServerDNSAliasesClient.BeginAcquire
// method.
type ManagedServerDNSAliasesClientBeginAcquireOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedServerDNSAliasesClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedServerDNSAliasesClient.BeginCreateOrUpdate
// method.
type ManagedServerDNSAliasesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedServerDNSAliasesClientBeginDeleteOptions contains the optional parameters for the ManagedServerDNSAliasesClient.BeginDelete
// method.
type ManagedServerDNSAliasesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedServerDNSAliasesClientGetOptions contains the optional parameters for the ManagedServerDNSAliasesClient.Get method.
type ManagedServerDNSAliasesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedServerDNSAliasesClientListByManagedInstanceOptions contains the optional parameters for the ManagedServerDNSAliasesClient.NewListByManagedInstancePager
// method.
type ManagedServerDNSAliasesClientListByManagedInstanceOptions struct {
	// placeholder for future optional parameters
}

// ManagedServerSecurityAlertPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ManagedServerSecurityAlertPoliciesClient.BeginCreateOrUpdate
// method.
type ManagedServerSecurityAlertPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagedServerSecurityAlertPoliciesClientGetOptions contains the optional parameters for the ManagedServerSecurityAlertPoliciesClient.Get
// method.
type ManagedServerSecurityAlertPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagedServerSecurityAlertPoliciesClientListByInstanceOptions contains the optional parameters for the ManagedServerSecurityAlertPoliciesClient.NewListByInstancePager
// method.
type ManagedServerSecurityAlertPoliciesClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// OutboundFirewallRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the OutboundFirewallRulesClient.BeginCreateOrUpdate
// method.
type OutboundFirewallRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// OutboundFirewallRulesClientBeginDeleteOptions contains the optional parameters for the OutboundFirewallRulesClient.BeginDelete
// method.
type OutboundFirewallRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// OutboundFirewallRulesClientGetOptions contains the optional parameters for the OutboundFirewallRulesClient.Get method.
type OutboundFirewallRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// OutboundFirewallRulesClientListByServerOptions contains the optional parameters for the OutboundFirewallRulesClient.NewListByServerPager
// method.
type OutboundFirewallRulesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginCreateOrUpdate
// method.
type PrivateEndpointConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientBeginDeleteOptions contains the optional parameters for the PrivateEndpointConnectionsClient.BeginDelete
// method.
type PrivateEndpointConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointConnectionsClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Get
// method.
type PrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientListByServerOptions contains the optional parameters for the PrivateEndpointConnectionsClient.NewListByServerPager
// method.
type PrivateEndpointConnectionsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientGetOptions contains the optional parameters for the PrivateLinkResourcesClient.Get method.
type PrivateLinkResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientListByServerOptions contains the optional parameters for the PrivateLinkResourcesClient.NewListByServerPager
// method.
type PrivateLinkResourcesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// RecommendedSensitivityLabelsClientUpdateOptions contains the optional parameters for the RecommendedSensitivityLabelsClient.Update
// method.
type RecommendedSensitivityLabelsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// RecoverableDatabasesClientGetOptions contains the optional parameters for the RecoverableDatabasesClient.Get method.
type RecoverableDatabasesClientGetOptions struct {
	// The child resources to include in the response.
	Expand *string

	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// RecoverableDatabasesClientListByServerOptions contains the optional parameters for the RecoverableDatabasesClient.NewListByServerPager
// method.
type RecoverableDatabasesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// RecoverableManagedDatabasesClientGetOptions contains the optional parameters for the RecoverableManagedDatabasesClient.Get
// method.
type RecoverableManagedDatabasesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RecoverableManagedDatabasesClientListByInstanceOptions contains the optional parameters for the RecoverableManagedDatabasesClient.NewListByInstancePager
// method.
type RecoverableManagedDatabasesClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ReplicationLinksClientBeginDeleteOptions contains the optional parameters for the ReplicationLinksClient.BeginDelete method.
type ReplicationLinksClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ReplicationLinksClientBeginFailoverAllowDataLossOptions contains the optional parameters for the ReplicationLinksClient.BeginFailoverAllowDataLoss
// method.
type ReplicationLinksClientBeginFailoverAllowDataLossOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ReplicationLinksClientBeginFailoverOptions contains the optional parameters for the ReplicationLinksClient.BeginFailover
// method.
type ReplicationLinksClientBeginFailoverOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ReplicationLinksClientGetOptions contains the optional parameters for the ReplicationLinksClient.Get method.
type ReplicationLinksClientGetOptions struct {
	// placeholder for future optional parameters
}

// ReplicationLinksClientListByDatabaseOptions contains the optional parameters for the ReplicationLinksClient.NewListByDatabasePager
// method.
type ReplicationLinksClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// ReplicationLinksClientListByServerOptions contains the optional parameters for the ReplicationLinksClient.NewListByServerPager
// method.
type ReplicationLinksClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// RestorableDroppedDatabasesClientGetOptions contains the optional parameters for the RestorableDroppedDatabasesClient.Get
// method.
type RestorableDroppedDatabasesClientGetOptions struct {
	// The child resources to include in the response.
	Expand *string

	// An OData filter expression that filters elements in the collection.
	Filter *string
}

// RestorableDroppedDatabasesClientListByServerOptions contains the optional parameters for the RestorableDroppedDatabasesClient.NewListByServerPager
// method.
type RestorableDroppedDatabasesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// RestorableDroppedManagedDatabasesClientGetOptions contains the optional parameters for the RestorableDroppedManagedDatabasesClient.Get
// method.
type RestorableDroppedManagedDatabasesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RestorableDroppedManagedDatabasesClientListByInstanceOptions contains the optional parameters for the RestorableDroppedManagedDatabasesClient.NewListByInstancePager
// method.
type RestorableDroppedManagedDatabasesClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// RestorePointsClientBeginCreateOptions contains the optional parameters for the RestorePointsClient.BeginCreate method.
type RestorePointsClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RestorePointsClientDeleteOptions contains the optional parameters for the RestorePointsClient.Delete method.
type RestorePointsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// RestorePointsClientGetOptions contains the optional parameters for the RestorePointsClient.Get method.
type RestorePointsClientGetOptions struct {
	// placeholder for future optional parameters
}

// RestorePointsClientListByDatabaseOptions contains the optional parameters for the RestorePointsClient.NewListByDatabasePager
// method.
type RestorePointsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// SensitivityLabelsClientCreateOrUpdateOptions contains the optional parameters for the SensitivityLabelsClient.CreateOrUpdate
// method.
type SensitivityLabelsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SensitivityLabelsClientDeleteOptions contains the optional parameters for the SensitivityLabelsClient.Delete method.
type SensitivityLabelsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SensitivityLabelsClientDisableRecommendationOptions contains the optional parameters for the SensitivityLabelsClient.DisableRecommendation
// method.
type SensitivityLabelsClientDisableRecommendationOptions struct {
	// placeholder for future optional parameters
}

// SensitivityLabelsClientEnableRecommendationOptions contains the optional parameters for the SensitivityLabelsClient.EnableRecommendation
// method.
type SensitivityLabelsClientEnableRecommendationOptions struct {
	// placeholder for future optional parameters
}

// SensitivityLabelsClientGetOptions contains the optional parameters for the SensitivityLabelsClient.Get method.
type SensitivityLabelsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SensitivityLabelsClientListCurrentByDatabaseOptions contains the optional parameters for the SensitivityLabelsClient.NewListCurrentByDatabasePager
// method.
type SensitivityLabelsClientListCurrentByDatabaseOptions struct {
	Count *bool

	// An OData filter expression that filters elements in the collection.
	Filter    *string
	SkipToken *string
}

// SensitivityLabelsClientListRecommendedByDatabaseOptions contains the optional parameters for the SensitivityLabelsClient.NewListRecommendedByDatabasePager
// method.
type SensitivityLabelsClientListRecommendedByDatabaseOptions struct {
	// An OData filter expression that filters elements in the collection.
	Filter *string

	// Specifies whether to include disabled recommendations or not.
	IncludeDisabledRecommendations *bool
	SkipToken                      *string
}

// SensitivityLabelsClientUpdateOptions contains the optional parameters for the SensitivityLabelsClient.Update method.
type SensitivityLabelsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServerAdvancedThreatProtectionSettingsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerAdvancedThreatProtectionSettingsClient.BeginCreateOrUpdate
// method.
type ServerAdvancedThreatProtectionSettingsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerAdvancedThreatProtectionSettingsClientGetOptions contains the optional parameters for the ServerAdvancedThreatProtectionSettingsClient.Get
// method.
type ServerAdvancedThreatProtectionSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerAdvancedThreatProtectionSettingsClientListByServerOptions contains the optional parameters for the ServerAdvancedThreatProtectionSettingsClient.NewListByServerPager
// method.
type ServerAdvancedThreatProtectionSettingsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerAdvisorsClientGetOptions contains the optional parameters for the ServerAdvisorsClient.Get method.
type ServerAdvisorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerAdvisorsClientListByServerOptions contains the optional parameters for the ServerAdvisorsClient.ListByServer method.
type ServerAdvisorsClientListByServerOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ServerAdvisorsClientUpdateOptions contains the optional parameters for the ServerAdvisorsClient.Update method.
type ServerAdvisorsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServerAutomaticTuningClientGetOptions contains the optional parameters for the ServerAutomaticTuningClient.Get method.
type ServerAutomaticTuningClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerAutomaticTuningClientUpdateOptions contains the optional parameters for the ServerAutomaticTuningClient.Update method.
type ServerAutomaticTuningClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServerAzureADAdministratorsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerAzureADAdministratorsClient.BeginCreateOrUpdate
// method.
type ServerAzureADAdministratorsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerAzureADAdministratorsClientBeginDeleteOptions contains the optional parameters for the ServerAzureADAdministratorsClient.BeginDelete
// method.
type ServerAzureADAdministratorsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerAzureADAdministratorsClientGetOptions contains the optional parameters for the ServerAzureADAdministratorsClient.Get
// method.
type ServerAzureADAdministratorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerAzureADAdministratorsClientListByServerOptions contains the optional parameters for the ServerAzureADAdministratorsClient.NewListByServerPager
// method.
type ServerAzureADAdministratorsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerAzureADOnlyAuthenticationsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerAzureADOnlyAuthenticationsClient.BeginCreateOrUpdate
// method.
type ServerAzureADOnlyAuthenticationsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerAzureADOnlyAuthenticationsClientBeginDeleteOptions contains the optional parameters for the ServerAzureADOnlyAuthenticationsClient.BeginDelete
// method.
type ServerAzureADOnlyAuthenticationsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerAzureADOnlyAuthenticationsClientGetOptions contains the optional parameters for the ServerAzureADOnlyAuthenticationsClient.Get
// method.
type ServerAzureADOnlyAuthenticationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerAzureADOnlyAuthenticationsClientListByServerOptions contains the optional parameters for the ServerAzureADOnlyAuthenticationsClient.NewListByServerPager
// method.
type ServerAzureADOnlyAuthenticationsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerBlobAuditingPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerBlobAuditingPoliciesClient.BeginCreateOrUpdate
// method.
type ServerBlobAuditingPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerBlobAuditingPoliciesClientGetOptions contains the optional parameters for the ServerBlobAuditingPoliciesClient.Get
// method.
type ServerBlobAuditingPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerBlobAuditingPoliciesClientListByServerOptions contains the optional parameters for the ServerBlobAuditingPoliciesClient.NewListByServerPager
// method.
type ServerBlobAuditingPoliciesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerCommunicationLinksClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerCommunicationLinksClient.BeginCreateOrUpdate
// method.
type ServerCommunicationLinksClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerCommunicationLinksClientDeleteOptions contains the optional parameters for the ServerCommunicationLinksClient.Delete
// method.
type ServerCommunicationLinksClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServerCommunicationLinksClientGetOptions contains the optional parameters for the ServerCommunicationLinksClient.Get method.
type ServerCommunicationLinksClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerCommunicationLinksClientListByServerOptions contains the optional parameters for the ServerCommunicationLinksClient.NewListByServerPager
// method.
type ServerCommunicationLinksClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerConfigurationOptionsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerConfigurationOptionsClient.BeginCreateOrUpdate
// method.
type ServerConfigurationOptionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerConfigurationOptionsClientGetOptions contains the optional parameters for the ServerConfigurationOptionsClient.Get
// method.
type ServerConfigurationOptionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerConfigurationOptionsClientListByManagedInstanceOptions contains the optional parameters for the ServerConfigurationOptionsClient.NewListByManagedInstancePager
// method.
type ServerConfigurationOptionsClientListByManagedInstanceOptions struct {
	// placeholder for future optional parameters
}

// ServerConnectionPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerConnectionPoliciesClient.BeginCreateOrUpdate
// method.
type ServerConnectionPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerConnectionPoliciesClientGetOptions contains the optional parameters for the ServerConnectionPoliciesClient.Get method.
type ServerConnectionPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerConnectionPoliciesClientListByServerOptions contains the optional parameters for the ServerConnectionPoliciesClient.NewListByServerPager
// method.
type ServerConnectionPoliciesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerDNSAliasesClientBeginAcquireOptions contains the optional parameters for the ServerDNSAliasesClient.BeginAcquire
// method.
type ServerDNSAliasesClientBeginAcquireOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerDNSAliasesClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerDNSAliasesClient.BeginCreateOrUpdate
// method.
type ServerDNSAliasesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerDNSAliasesClientBeginDeleteOptions contains the optional parameters for the ServerDNSAliasesClient.BeginDelete method.
type ServerDNSAliasesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerDNSAliasesClientGetOptions contains the optional parameters for the ServerDNSAliasesClient.Get method.
type ServerDNSAliasesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerDNSAliasesClientListByServerOptions contains the optional parameters for the ServerDNSAliasesClient.NewListByServerPager
// method.
type ServerDNSAliasesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerDevOpsAuditSettingsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerDevOpsAuditSettingsClient.BeginCreateOrUpdate
// method.
type ServerDevOpsAuditSettingsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerDevOpsAuditSettingsClientGetOptions contains the optional parameters for the ServerDevOpsAuditSettingsClient.Get
// method.
type ServerDevOpsAuditSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerDevOpsAuditSettingsClientListByServerOptions contains the optional parameters for the ServerDevOpsAuditSettingsClient.NewListByServerPager
// method.
type ServerDevOpsAuditSettingsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerKeysClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerKeysClient.BeginCreateOrUpdate
// method.
type ServerKeysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerKeysClientBeginDeleteOptions contains the optional parameters for the ServerKeysClient.BeginDelete method.
type ServerKeysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerKeysClientGetOptions contains the optional parameters for the ServerKeysClient.Get method.
type ServerKeysClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerKeysClientListByServerOptions contains the optional parameters for the ServerKeysClient.NewListByServerPager method.
type ServerKeysClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerOperationsClientListByServerOptions contains the optional parameters for the ServerOperationsClient.NewListByServerPager
// method.
type ServerOperationsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerSecurityAlertPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerSecurityAlertPoliciesClient.BeginCreateOrUpdate
// method.
type ServerSecurityAlertPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerSecurityAlertPoliciesClientGetOptions contains the optional parameters for the ServerSecurityAlertPoliciesClient.Get
// method.
type ServerSecurityAlertPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerSecurityAlertPoliciesClientListByServerOptions contains the optional parameters for the ServerSecurityAlertPoliciesClient.NewListByServerPager
// method.
type ServerSecurityAlertPoliciesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerTrustCertificatesClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerTrustCertificatesClient.BeginCreateOrUpdate
// method.
type ServerTrustCertificatesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerTrustCertificatesClientBeginDeleteOptions contains the optional parameters for the ServerTrustCertificatesClient.BeginDelete
// method.
type ServerTrustCertificatesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerTrustCertificatesClientGetOptions contains the optional parameters for the ServerTrustCertificatesClient.Get method.
type ServerTrustCertificatesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerTrustCertificatesClientListByInstanceOptions contains the optional parameters for the ServerTrustCertificatesClient.NewListByInstancePager
// method.
type ServerTrustCertificatesClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ServerTrustGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServerTrustGroupsClient.BeginCreateOrUpdate
// method.
type ServerTrustGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerTrustGroupsClientBeginDeleteOptions contains the optional parameters for the ServerTrustGroupsClient.BeginDelete
// method.
type ServerTrustGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServerTrustGroupsClientGetOptions contains the optional parameters for the ServerTrustGroupsClient.Get method.
type ServerTrustGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerTrustGroupsClientListByInstanceOptions contains the optional parameters for the ServerTrustGroupsClient.NewListByInstancePager
// method.
type ServerTrustGroupsClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// ServerTrustGroupsClientListByLocationOptions contains the optional parameters for the ServerTrustGroupsClient.NewListByLocationPager
// method.
type ServerTrustGroupsClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// ServerUsagesClientListByServerOptions contains the optional parameters for the ServerUsagesClient.NewListByServerPager
// method.
type ServerUsagesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServerVulnerabilityAssessmentsClientCreateOrUpdateOptions contains the optional parameters for the ServerVulnerabilityAssessmentsClient.CreateOrUpdate
// method.
type ServerVulnerabilityAssessmentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServerVulnerabilityAssessmentsClientDeleteOptions contains the optional parameters for the ServerVulnerabilityAssessmentsClient.Delete
// method.
type ServerVulnerabilityAssessmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServerVulnerabilityAssessmentsClientGetOptions contains the optional parameters for the ServerVulnerabilityAssessmentsClient.Get
// method.
type ServerVulnerabilityAssessmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServerVulnerabilityAssessmentsClientListByServerOptions contains the optional parameters for the ServerVulnerabilityAssessmentsClient.NewListByServerPager
// method.
type ServerVulnerabilityAssessmentsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// ServersClientBeginCreateOrUpdateOptions contains the optional parameters for the ServersClient.BeginCreateOrUpdate method.
type ServersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServersClientBeginDeleteOptions contains the optional parameters for the ServersClient.BeginDelete method.
type ServersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServersClientBeginImportDatabaseOptions contains the optional parameters for the ServersClient.BeginImportDatabase method.
type ServersClientBeginImportDatabaseOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServersClientBeginRefreshStatusOptions contains the optional parameters for the ServersClient.BeginRefreshStatus method.
type ServersClientBeginRefreshStatusOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServersClientBeginUpdateOptions contains the optional parameters for the ServersClient.BeginUpdate method.
type ServersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServersClientCheckNameAvailabilityOptions contains the optional parameters for the ServersClient.CheckNameAvailability
// method.
type ServersClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ServersClientGetOptions contains the optional parameters for the ServersClient.Get method.
type ServersClientGetOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ServersClientListByResourceGroupOptions contains the optional parameters for the ServersClient.NewListByResourceGroupPager
// method.
type ServersClientListByResourceGroupOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ServersClientListOptions contains the optional parameters for the ServersClient.NewListPager method.
type ServersClientListOptions struct {
	// The child resources to include in the response.
	Expand *string
}

// ServiceObjectivesClientGetOptions contains the optional parameters for the ServiceObjectivesClient.Get method.
type ServiceObjectivesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServiceObjectivesClientListByServerOptions contains the optional parameters for the ServiceObjectivesClient.NewListByServerPager
// method.
type ServiceObjectivesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// StartStopManagedInstanceSchedulesClientCreateOrUpdateOptions contains the optional parameters for the StartStopManagedInstanceSchedulesClient.CreateOrUpdate
// method.
type StartStopManagedInstanceSchedulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// StartStopManagedInstanceSchedulesClientDeleteOptions contains the optional parameters for the StartStopManagedInstanceSchedulesClient.Delete
// method.
type StartStopManagedInstanceSchedulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// StartStopManagedInstanceSchedulesClientGetOptions contains the optional parameters for the StartStopManagedInstanceSchedulesClient.Get
// method.
type StartStopManagedInstanceSchedulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// StartStopManagedInstanceSchedulesClientListByInstanceOptions contains the optional parameters for the StartStopManagedInstanceSchedulesClient.NewListByInstancePager
// method.
type StartStopManagedInstanceSchedulesClientListByInstanceOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionUsagesClientGetOptions contains the optional parameters for the SubscriptionUsagesClient.Get method.
type SubscriptionUsagesClientGetOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionUsagesClientListByLocationOptions contains the optional parameters for the SubscriptionUsagesClient.NewListByLocationPager
// method.
type SubscriptionUsagesClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// SynapseLinkWorkspacesClientListByDatabaseOptions contains the optional parameters for the SynapseLinkWorkspacesClient.NewListByDatabasePager
// method.
type SynapseLinkWorkspacesClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// SyncAgentsClientBeginCreateOrUpdateOptions contains the optional parameters for the SyncAgentsClient.BeginCreateOrUpdate
// method.
type SyncAgentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncAgentsClientBeginDeleteOptions contains the optional parameters for the SyncAgentsClient.BeginDelete method.
type SyncAgentsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncAgentsClientGenerateKeyOptions contains the optional parameters for the SyncAgentsClient.GenerateKey method.
type SyncAgentsClientGenerateKeyOptions struct {
	// placeholder for future optional parameters
}

// SyncAgentsClientGetOptions contains the optional parameters for the SyncAgentsClient.Get method.
type SyncAgentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SyncAgentsClientListByServerOptions contains the optional parameters for the SyncAgentsClient.NewListByServerPager method.
type SyncAgentsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// SyncAgentsClientListLinkedDatabasesOptions contains the optional parameters for the SyncAgentsClient.NewListLinkedDatabasesPager
// method.
type SyncAgentsClientListLinkedDatabasesOptions struct {
	// placeholder for future optional parameters
}

// SyncGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the SyncGroupsClient.BeginCreateOrUpdate
// method.
type SyncGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncGroupsClientBeginDeleteOptions contains the optional parameters for the SyncGroupsClient.BeginDelete method.
type SyncGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncGroupsClientBeginRefreshHubSchemaOptions contains the optional parameters for the SyncGroupsClient.BeginRefreshHubSchema
// method.
type SyncGroupsClientBeginRefreshHubSchemaOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncGroupsClientBeginUpdateOptions contains the optional parameters for the SyncGroupsClient.BeginUpdate method.
type SyncGroupsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncGroupsClientCancelSyncOptions contains the optional parameters for the SyncGroupsClient.CancelSync method.
type SyncGroupsClientCancelSyncOptions struct {
	// placeholder for future optional parameters
}

// SyncGroupsClientGetOptions contains the optional parameters for the SyncGroupsClient.Get method.
type SyncGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SyncGroupsClientListByDatabaseOptions contains the optional parameters for the SyncGroupsClient.NewListByDatabasePager
// method.
type SyncGroupsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// SyncGroupsClientListHubSchemasOptions contains the optional parameters for the SyncGroupsClient.NewListHubSchemasPager
// method.
type SyncGroupsClientListHubSchemasOptions struct {
	// placeholder for future optional parameters
}

// SyncGroupsClientListLogsOptions contains the optional parameters for the SyncGroupsClient.NewListLogsPager method.
type SyncGroupsClientListLogsOptions struct {
	// The continuation token for this operation.
	ContinuationToken *string
}

// SyncGroupsClientListSyncDatabaseIDsOptions contains the optional parameters for the SyncGroupsClient.NewListSyncDatabaseIDsPager
// method.
type SyncGroupsClientListSyncDatabaseIDsOptions struct {
	// placeholder for future optional parameters
}

// SyncGroupsClientTriggerSyncOptions contains the optional parameters for the SyncGroupsClient.TriggerSync method.
type SyncGroupsClientTriggerSyncOptions struct {
	// placeholder for future optional parameters
}

// SyncMembersClientBeginCreateOrUpdateOptions contains the optional parameters for the SyncMembersClient.BeginCreateOrUpdate
// method.
type SyncMembersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncMembersClientBeginDeleteOptions contains the optional parameters for the SyncMembersClient.BeginDelete method.
type SyncMembersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncMembersClientBeginRefreshMemberSchemaOptions contains the optional parameters for the SyncMembersClient.BeginRefreshMemberSchema
// method.
type SyncMembersClientBeginRefreshMemberSchemaOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncMembersClientBeginUpdateOptions contains the optional parameters for the SyncMembersClient.BeginUpdate method.
type SyncMembersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SyncMembersClientGetOptions contains the optional parameters for the SyncMembersClient.Get method.
type SyncMembersClientGetOptions struct {
	// placeholder for future optional parameters
}

// SyncMembersClientListBySyncGroupOptions contains the optional parameters for the SyncMembersClient.NewListBySyncGroupPager
// method.
type SyncMembersClientListBySyncGroupOptions struct {
	// placeholder for future optional parameters
}

// SyncMembersClientListMemberSchemasOptions contains the optional parameters for the SyncMembersClient.NewListMemberSchemasPager
// method.
type SyncMembersClientListMemberSchemasOptions struct {
	// placeholder for future optional parameters
}

// TdeCertificatesClientBeginCreateOptions contains the optional parameters for the TdeCertificatesClient.BeginCreate method.
type TdeCertificatesClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TimeZonesClientGetOptions contains the optional parameters for the TimeZonesClient.Get method.
type TimeZonesClientGetOptions struct {
	// placeholder for future optional parameters
}

// TimeZonesClientListByLocationOptions contains the optional parameters for the TimeZonesClient.NewListByLocationPager method.
type TimeZonesClientListByLocationOptions struct {
	// placeholder for future optional parameters
}

// TransparentDataEncryptionsClientBeginCreateOrUpdateOptions contains the optional parameters for the TransparentDataEncryptionsClient.BeginCreateOrUpdate
// method.
type TransparentDataEncryptionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TransparentDataEncryptionsClientGetOptions contains the optional parameters for the TransparentDataEncryptionsClient.Get
// method.
type TransparentDataEncryptionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// TransparentDataEncryptionsClientListByDatabaseOptions contains the optional parameters for the TransparentDataEncryptionsClient.NewListByDatabasePager
// method.
type TransparentDataEncryptionsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}

// UsagesClientListByInstancePoolOptions contains the optional parameters for the UsagesClient.NewListByInstancePoolPager
// method.
type UsagesClientListByInstancePoolOptions struct {
	// Optional request parameter to include managed instance usages within the instance pool.
	ExpandChildren *bool
}

// VirtualClustersClientBeginDeleteOptions contains the optional parameters for the VirtualClustersClient.BeginDelete method.
type VirtualClustersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualClustersClientBeginUpdateDNSServersOptions contains the optional parameters for the VirtualClustersClient.BeginUpdateDNSServers
// method.
type VirtualClustersClientBeginUpdateDNSServersOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualClustersClientBeginUpdateOptions contains the optional parameters for the VirtualClustersClient.BeginUpdate method.
type VirtualClustersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualClustersClientGetOptions contains the optional parameters for the VirtualClustersClient.Get method.
type VirtualClustersClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualClustersClientListByResourceGroupOptions contains the optional parameters for the VirtualClustersClient.NewListByResourceGroupPager
// method.
type VirtualClustersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VirtualClustersClientListOptions contains the optional parameters for the VirtualClustersClient.NewListPager method.
type VirtualClustersClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworkRulesClient.BeginCreateOrUpdate
// method.
type VirtualNetworkRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkRulesClientBeginDeleteOptions contains the optional parameters for the VirtualNetworkRulesClient.BeginDelete
// method.
type VirtualNetworkRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkRulesClientGetOptions contains the optional parameters for the VirtualNetworkRulesClient.Get method.
type VirtualNetworkRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkRulesClientListByServerOptions contains the optional parameters for the VirtualNetworkRulesClient.NewListByServerPager
// method.
type VirtualNetworkRulesClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentBaselineClientGetOptions contains the optional parameters for the VulnerabilityAssessmentBaselineClient.Get
// method.
type VulnerabilityAssessmentBaselineClientGetOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentBaselineClientListBySQLVulnerabilityAssessmentOptions contains the optional parameters for the VulnerabilityAssessmentBaselineClient.NewListBySQLVulnerabilityAssessmentPager
// method.
type VulnerabilityAssessmentBaselineClientListBySQLVulnerabilityAssessmentOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentBaselinesClientCreateOrUpdateOptions contains the optional parameters for the VulnerabilityAssessmentBaselinesClient.CreateOrUpdate
// method.
type VulnerabilityAssessmentBaselinesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentExecuteScanClientBeginExecuteOptions contains the optional parameters for the VulnerabilityAssessmentExecuteScanClient.BeginExecute
// method.
type VulnerabilityAssessmentExecuteScanClientBeginExecuteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VulnerabilityAssessmentRuleBaselineClientCreateOrUpdateOptions contains the optional parameters for the VulnerabilityAssessmentRuleBaselineClient.CreateOrUpdate
// method.
type VulnerabilityAssessmentRuleBaselineClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentRuleBaselineClientGetOptions contains the optional parameters for the VulnerabilityAssessmentRuleBaselineClient.Get
// method.
type VulnerabilityAssessmentRuleBaselineClientGetOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentRuleBaselineClientListByBaselineOptions contains the optional parameters for the VulnerabilityAssessmentRuleBaselineClient.NewListByBaselinePager
// method.
type VulnerabilityAssessmentRuleBaselineClientListByBaselineOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentRuleBaselinesClientDeleteOptions contains the optional parameters for the VulnerabilityAssessmentRuleBaselinesClient.Delete
// method.
type VulnerabilityAssessmentRuleBaselinesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentScanResultClientGetOptions contains the optional parameters for the VulnerabilityAssessmentScanResultClient.Get
// method.
type VulnerabilityAssessmentScanResultClientGetOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentScanResultClientListByScanOptions contains the optional parameters for the VulnerabilityAssessmentScanResultClient.NewListByScanPager
// method.
type VulnerabilityAssessmentScanResultClientListByScanOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentScansClientGetOptions contains the optional parameters for the VulnerabilityAssessmentScansClient.Get
// method.
type VulnerabilityAssessmentScansClientGetOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentScansClientListBySQLVulnerabilityAssessmentsOptions contains the optional parameters for the VulnerabilityAssessmentScansClient.NewListBySQLVulnerabilityAssessmentsPager
// method.
type VulnerabilityAssessmentScansClientListBySQLVulnerabilityAssessmentsOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentsClientDeleteOptions contains the optional parameters for the VulnerabilityAssessmentsClient.Delete
// method.
type VulnerabilityAssessmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentsSettingsClientCreateOrUpdateOptions contains the optional parameters for the VulnerabilityAssessmentsSettingsClient.CreateOrUpdate
// method.
type VulnerabilityAssessmentsSettingsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentsSettingsClientGetOptions contains the optional parameters for the VulnerabilityAssessmentsSettingsClient.Get
// method.
type VulnerabilityAssessmentsSettingsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VulnerabilityAssessmentsSettingsClientListByServerOptions contains the optional parameters for the VulnerabilityAssessmentsSettingsClient.NewListByServerPager
// method.
type VulnerabilityAssessmentsSettingsClientListByServerOptions struct {
	// placeholder for future optional parameters
}

// WorkloadClassifiersClientBeginCreateOrUpdateOptions contains the optional parameters for the WorkloadClassifiersClient.BeginCreateOrUpdate
// method.
type WorkloadClassifiersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WorkloadClassifiersClientBeginDeleteOptions contains the optional parameters for the WorkloadClassifiersClient.BeginDelete
// method.
type WorkloadClassifiersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WorkloadClassifiersClientGetOptions contains the optional parameters for the WorkloadClassifiersClient.Get method.
type WorkloadClassifiersClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkloadClassifiersClientListByWorkloadGroupOptions contains the optional parameters for the WorkloadClassifiersClient.NewListByWorkloadGroupPager
// method.
type WorkloadClassifiersClientListByWorkloadGroupOptions struct {
	// placeholder for future optional parameters
}

// WorkloadGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the WorkloadGroupsClient.BeginCreateOrUpdate
// method.
type WorkloadGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WorkloadGroupsClientBeginDeleteOptions contains the optional parameters for the WorkloadGroupsClient.BeginDelete method.
type WorkloadGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WorkloadGroupsClientGetOptions contains the optional parameters for the WorkloadGroupsClient.Get method.
type WorkloadGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkloadGroupsClientListByDatabaseOptions contains the optional parameters for the WorkloadGroupsClient.NewListByDatabasePager
// method.
type WorkloadGroupsClientListByDatabaseOptions struct {
	// placeholder for future optional parameters
}
