//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsql_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
)

// x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ListJobExecutionTargetsByExecution.json
func ExampleJobTargetExecutionsClient_ListByJobExecution() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armsql.NewJobTargetExecutionsClient("<subscription-id>", cred, nil)
	pager := client.ListByJobExecution("<resource-group-name>",
		"<server-name>",
		"<job-agent-name>",
		"<job-name>",
		"<job-execution-id>",
		&armsql.JobTargetExecutionsClientListByJobExecutionOptions{CreateTimeMin: nil,
			CreateTimeMax: nil,
			EndTimeMin:    nil,
			EndTimeMax:    nil,
			IsActive:      nil,
			Skip:          nil,
			Top:           nil,
		})
	for {
		nextResult := pager.NextPage(ctx)
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		if !nextResult {
			break
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("Pager result: %#v\n", v)
		}
	}
}

// x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ListJobExecutionTargetsByStep.json
func ExampleJobTargetExecutionsClient_ListByStep() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armsql.NewJobTargetExecutionsClient("<subscription-id>", cred, nil)
	pager := client.ListByStep("<resource-group-name>",
		"<server-name>",
		"<job-agent-name>",
		"<job-name>",
		"<job-execution-id>",
		"<step-name>",
		&armsql.JobTargetExecutionsClientListByStepOptions{CreateTimeMin: nil,
			CreateTimeMax: nil,
			EndTimeMin:    nil,
			EndTimeMax:    nil,
			IsActive:      nil,
			Skip:          nil,
			Top:           nil,
		})
	for {
		nextResult := pager.NextPage(ctx)
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		if !nextResult {
			break
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("Pager result: %#v\n", v)
		}
	}
}

// x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/GetJobExecutionTarget.json
func ExampleJobTargetExecutionsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armsql.NewJobTargetExecutionsClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<server-name>",
		"<job-agent-name>",
		"<job-name>",
		"<job-execution-id>",
		"<step-name>",
		"<target-id>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("Response result: %#v\n", res.JobTargetExecutionsClientGetResult)
}
