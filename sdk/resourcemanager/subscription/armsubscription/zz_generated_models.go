//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsubscription

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
	"time"
)

// AcceptOwnershipRequest - The parameters required to accept subscription ownership.
type AcceptOwnershipRequest struct {
	// Accept subscription ownership request properties.
	Properties *AcceptOwnershipRequestProperties `json:"properties,omitempty"`
}

// AcceptOwnershipRequestProperties - Accept subscription ownership request properties.
type AcceptOwnershipRequestProperties struct {
	// REQUIRED; The friendly name of the subscription.
	DisplayName *string `json:"displayName,omitempty"`

	// Management group Id for the subscription.
	ManagementGroupID *string `json:"managementGroupId,omitempty"`

	// Tags for the subscription
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AcceptOwnershipRequestProperties.
func (a AcceptOwnershipRequestProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "displayName", a.DisplayName)
	populate(objectMap, "managementGroupId", a.ManagementGroupID)
	populate(objectMap, "tags", a.Tags)
	return json.Marshal(objectMap)
}

// AcceptOwnershipStatusResponse - Subscription Accept Ownership Response
type AcceptOwnershipStatusResponse struct {
	// The display name of the subscription.
	DisplayName *string `json:"displayName,omitempty"`

	// Tenant Id of the subscription
	SubscriptionTenantID *string `json:"subscriptionTenantId,omitempty"`

	// Tags for the subscription
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; The accept ownership state of the resource.
	AcceptOwnershipState *AcceptOwnership `json:"acceptOwnershipState,omitempty" azure:"ro"`

	// READ-ONLY; UPN of the billing owner
	BillingOwner *string `json:"billingOwner,omitempty" azure:"ro"`

	// READ-ONLY; Newly created subscription Id.
	SubscriptionID *string `json:"subscriptionId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AcceptOwnershipStatusResponse.
func (a AcceptOwnershipStatusResponse) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "acceptOwnershipState", a.AcceptOwnershipState)
	populate(objectMap, "billingOwner", a.BillingOwner)
	populate(objectMap, "displayName", a.DisplayName)
	populate(objectMap, "subscriptionId", a.SubscriptionID)
	populate(objectMap, "subscriptionTenantId", a.SubscriptionTenantID)
	populate(objectMap, "tags", a.Tags)
	return json.Marshal(objectMap)
}

// AliasBeginCreateOptions contains the optional parameters for the Alias.BeginCreate method.
type AliasBeginCreateOptions struct {
	// placeholder for future optional parameters
}

// AliasDeleteOptions contains the optional parameters for the Alias.Delete method.
type AliasDeleteOptions struct {
	// placeholder for future optional parameters
}

// AliasGetOptions contains the optional parameters for the Alias.Get method.
type AliasGetOptions struct {
	// placeholder for future optional parameters
}

// AliasListOptions contains the optional parameters for the Alias.List method.
type AliasListOptions struct {
	// placeholder for future optional parameters
}

// BillingAccountGetPolicyOptions contains the optional parameters for the BillingAccount.GetPolicy method.
type BillingAccountGetPolicyOptions struct {
	// placeholder for future optional parameters
}

// BillingAccountPoliciesResponse - Billing account policies information.
type BillingAccountPoliciesResponse struct {
	// Billing account policies response properties.
	Properties *BillingAccountPoliciesResponseProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified ID for the policy.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Policy name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// BillingAccountPoliciesResponseProperties - Put billing account policies response properties.
type BillingAccountPoliciesResponseProperties struct {
	// Determine if the transfers are allowed for the billing account
	AllowTransfers *bool `json:"allowTransfers,omitempty"`

	// Service tenant for the billing account.
	ServiceTenants []*ServiceTenantResponse `json:"serviceTenants,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type BillingAccountPoliciesResponseProperties.
func (b BillingAccountPoliciesResponseProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "allowTransfers", b.AllowTransfers)
	populate(objectMap, "serviceTenants", b.ServiceTenants)
	return json.Marshal(objectMap)
}

// CanceledSubscriptionID - The ID of the canceled subscription
type CanceledSubscriptionID struct {
	// READ-ONLY; The ID of the canceled subscription
	Value *string `json:"value,omitempty" azure:"ro"`
}

// EnabledSubscriptionID - The ID of the subscriptions that is being enabled
type EnabledSubscriptionID struct {
	// READ-ONLY; The ID of the subscriptions that is being enabled
	Value *string `json:"value,omitempty" azure:"ro"`
}

// ErrorResponse - Describes the format of Error response.
type ErrorResponse struct {
	// Error code
	Code *string `json:"code,omitempty"`

	// Error message indicating why the operation failed.
	Message *string `json:"message,omitempty"`
}

// ErrorResponseBody - Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
// Implements the error and azcore.HTTPResponse interfaces.
type ErrorResponseBody struct {
	raw string
	// Error code
	Code *string `json:"code,omitempty"`

	// The details of the error.
	InnerError *ErrorResponse `json:"error,omitempty"`

	// Error message indicating why the operation failed.
	Message *string `json:"message,omitempty"`
}

// Error implements the error interface for type ErrorResponseBody.
// The contents of the error text are not contractual and subject to change.
func (e ErrorResponseBody) Error() string {
	return e.raw
}

// GetTenantPolicyListResponse - Tenant policy information list.
type GetTenantPolicyListResponse struct {
	// READ-ONLY; The link (url) to the next page of results.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; The list of tenant policies.
	Value []*GetTenantPolicyResponse `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type GetTenantPolicyListResponse.
func (g GetTenantPolicyListResponse) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", g.NextLink)
	populate(objectMap, "value", g.Value)
	return json.Marshal(objectMap)
}

// GetTenantPolicyResponse - Tenant policy Information.
type GetTenantPolicyResponse struct {
	// Tenant policy properties.
	Properties *TenantPolicy `json:"properties,omitempty"`

	// READ-ONLY; Policy Id.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Policy name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// Operation - REST API operation
type Operation struct {
	// The object that represents the operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`

	// Operation name: {provider}/{resource}/{operation}
	Name *string `json:"name,omitempty"`
}

// OperationDisplay - The object that represents the operation.
type OperationDisplay struct {
	// Localized friendly description for the operation
	Description *string `json:"description,omitempty"`

	// Operation type: Read, write, delete, etc.
	Operation *string `json:"operation,omitempty"`

	// Service provider: Microsoft.Subscription
	Provider *string `json:"provider,omitempty"`

	// Resource on which the operation is performed: Profile, endpoint, etc.
	Resource *string `json:"resource,omitempty"`
}

// OperationListResult - Result of the request to list operations. It contains a list of operations and a URL link to get the next set of results.
type OperationListResult struct {
	// URL to get the next set of operation list results if there are any.
	NextLink *string `json:"nextLink,omitempty"`

	// List of operations.
	Value []*Operation `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationListResult.
func (o OperationListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", o.NextLink)
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// PutAliasRequest - The parameters required to create a new subscription.
type PutAliasRequest struct {
	// Put alias request properties.
	Properties *PutAliasRequestProperties `json:"properties,omitempty"`
}

// PutAliasRequestAdditionalProperties - Put subscription additional properties.
type PutAliasRequestAdditionalProperties struct {
	// Management group Id for the subscription.
	ManagementGroupID *string `json:"managementGroupId,omitempty"`

	// Owner Id of the subscription
	SubscriptionOwnerID *string `json:"subscriptionOwnerId,omitempty"`

	// Tenant Id of the subscription
	SubscriptionTenantID *string `json:"subscriptionTenantId,omitempty"`

	// Tags for the subscription
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PutAliasRequestAdditionalProperties.
func (p PutAliasRequestAdditionalProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "managementGroupId", p.ManagementGroupID)
	populate(objectMap, "subscriptionOwnerId", p.SubscriptionOwnerID)
	populate(objectMap, "subscriptionTenantId", p.SubscriptionTenantID)
	populate(objectMap, "tags", p.Tags)
	return json.Marshal(objectMap)
}

// PutAliasRequestProperties - Put subscription properties.
type PutAliasRequestProperties struct {
	// Put alias request additional properties.
	AdditionalProperties *PutAliasRequestAdditionalProperties `json:"additionalProperties,omitempty"`

	// Billing scope of the subscription. For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
	// For PartnerLed -
	// /billingAccounts/{billingAccountName}/customers/{customerName} For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
	BillingScope *string `json:"billingScope,omitempty"`

	// The friendly name of the subscription.
	DisplayName *string `json:"displayName,omitempty"`

	// Reseller Id
	ResellerID *string `json:"resellerId,omitempty"`

	// This parameter can be used to create alias for existing subscription Id
	SubscriptionID *string `json:"subscriptionId,omitempty"`

	// The workload type of the subscription. It can be either Production or DevTest.
	Workload *Workload `json:"workload,omitempty"`
}

// PutTenantPolicyRequestProperties - Put tenant policy request properties.
type PutTenantPolicyRequestProperties struct {
	// Blocks the entering of subscriptions into user's tenant.
	BlockSubscriptionsIntoTenant *bool `json:"blockSubscriptionsIntoTenant,omitempty"`

	// Blocks the leaving of subscriptions from user's tenant.
	BlockSubscriptionsLeavingTenant *bool `json:"blockSubscriptionsLeavingTenant,omitempty"`

	// List of user objectIds that are exempted from the set subscription tenant policies for the user's tenant.
	ExemptedPrincipals []*string `json:"exemptedPrincipals,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type PutTenantPolicyRequestProperties.
func (p PutTenantPolicyRequestProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "blockSubscriptionsIntoTenant", p.BlockSubscriptionsIntoTenant)
	populate(objectMap, "blockSubscriptionsLeavingTenant", p.BlockSubscriptionsLeavingTenant)
	populate(objectMap, "exemptedPrincipals", p.ExemptedPrincipals)
	return json.Marshal(objectMap)
}

// RenamedSubscriptionID - The ID of the subscriptions that is being renamed
type RenamedSubscriptionID struct {
	// READ-ONLY; The ID of the subscriptions that is being renamed
	Value *string `json:"value,omitempty" azure:"ro"`
}

// ServiceTenantResponse - Billing account service tenant.
type ServiceTenantResponse struct {
	// Service tenant id.
	TenantID *string `json:"tenantId,omitempty"`

	// Service tenant name.
	TenantName *string `json:"tenantName,omitempty"`
}

// SubscriptionAcceptOwnershipStatusOptions contains the optional parameters for the Subscription.AcceptOwnershipStatus method.
type SubscriptionAcceptOwnershipStatusOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionAliasListResult - The list of aliases.
type SubscriptionAliasListResult struct {
	// READ-ONLY; The link (url) to the next page of results.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; The list of alias.
	Value []*SubscriptionAliasResponse `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SubscriptionAliasListResult.
func (s SubscriptionAliasListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", s.NextLink)
	populate(objectMap, "value", s.Value)
	return json.Marshal(objectMap)
}

// SubscriptionAliasResponse - Subscription Information with the alias.
type SubscriptionAliasResponse struct {
	// Subscription Alias response properties.
	Properties *SubscriptionAliasResponseProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified ID for the alias resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Alias ID.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; Resource type, Microsoft.Subscription/aliases.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SubscriptionAliasResponseProperties - Put subscription creation result properties.
type SubscriptionAliasResponseProperties struct {
	// Billing scope of the subscription. For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
	// For PartnerLed -
	// /billingAccounts/{billingAccountName}/customers/{customerName} For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
	BillingScope *string `json:"billingScope,omitempty"`

	// The display name of the subscription.
	DisplayName *string `json:"displayName,omitempty"`

	// The Management Group Id.
	ManagementGroupID *string `json:"managementGroupId,omitempty"`

	// The provisioning state of the resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty"`

	// Reseller Id
	ResellerID *string `json:"resellerId,omitempty"`

	// Owner Id of the subscription
	SubscriptionOwnerID *string `json:"subscriptionOwnerId,omitempty"`

	// Tags for the subscription
	Tags map[string]*string `json:"tags,omitempty"`

	// The workload type of the subscription. It can be either Production or DevTest.
	Workload *Workload `json:"workload,omitempty"`

	// READ-ONLY; The accept ownership state of the resource.
	AcceptOwnershipState *AcceptOwnership `json:"acceptOwnershipState,omitempty" azure:"ro"`

	// READ-ONLY; Url to accept ownership of the subscription.
	AcceptOwnershipURL *string `json:"acceptOwnershipUrl,omitempty" azure:"ro"`

	// READ-ONLY; Newly created subscription Id.
	SubscriptionID *string `json:"subscriptionId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type SubscriptionAliasResponseProperties.
func (s SubscriptionAliasResponseProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "acceptOwnershipState", s.AcceptOwnershipState)
	populate(objectMap, "acceptOwnershipUrl", s.AcceptOwnershipURL)
	populate(objectMap, "billingScope", s.BillingScope)
	populate(objectMap, "displayName", s.DisplayName)
	populate(objectMap, "managementGroupId", s.ManagementGroupID)
	populate(objectMap, "provisioningState", s.ProvisioningState)
	populate(objectMap, "resellerId", s.ResellerID)
	populate(objectMap, "subscriptionId", s.SubscriptionID)
	populate(objectMap, "subscriptionOwnerId", s.SubscriptionOwnerID)
	populate(objectMap, "tags", s.Tags)
	populate(objectMap, "workload", s.Workload)
	return json.Marshal(objectMap)
}

// SubscriptionBeginAcceptOwnershipOptions contains the optional parameters for the Subscription.BeginAcceptOwnership method.
type SubscriptionBeginAcceptOwnershipOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionCancelOptions contains the optional parameters for the Subscription.Cancel method.
type SubscriptionCancelOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionEnableOptions contains the optional parameters for the Subscription.Enable method.
type SubscriptionEnableOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionName - The new name of the subscription.
type SubscriptionName struct {
	// New subscription name
	SubscriptionName *string `json:"subscriptionName,omitempty"`
}

// SubscriptionPolicyAddUpdatePolicyForTenantOptions contains the optional parameters for the SubscriptionPolicy.AddUpdatePolicyForTenant method.
type SubscriptionPolicyAddUpdatePolicyForTenantOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionPolicyGetPolicyForTenantOptions contains the optional parameters for the SubscriptionPolicy.GetPolicyForTenant method.
type SubscriptionPolicyGetPolicyForTenantOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionPolicyListPolicyForTenantOptions contains the optional parameters for the SubscriptionPolicy.ListPolicyForTenant method.
type SubscriptionPolicyListPolicyForTenantOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionRenameOptions contains the optional parameters for the Subscription.Rename method.
type SubscriptionRenameOptions struct {
	// placeholder for future optional parameters
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populateTimeRFC3339(objectMap, "createdAt", s.CreatedAt)
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populateTimeRFC3339(objectMap, "lastModifiedAt", s.LastModifiedAt)
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &s.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			err = unpopulateTimeRFC3339(val, &s.LastModifiedAt)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// TenantPolicy - Tenant policy.
type TenantPolicy struct {
	// Blocks the entering of subscriptions into user's tenant.
	BlockSubscriptionsIntoTenant *bool `json:"blockSubscriptionsIntoTenant,omitempty"`

	// Blocks the leaving of subscriptions from user's tenant.
	BlockSubscriptionsLeavingTenant *bool `json:"blockSubscriptionsLeavingTenant,omitempty"`

	// List of user objectIds that are exempted from the set subscription tenant policies for the user's tenant.
	ExemptedPrincipals []*string `json:"exemptedPrincipals,omitempty"`

	// READ-ONLY; Policy Id.
	PolicyID *string `json:"policyId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type TenantPolicy.
func (t TenantPolicy) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "blockSubscriptionsIntoTenant", t.BlockSubscriptionsIntoTenant)
	populate(objectMap, "blockSubscriptionsLeavingTenant", t.BlockSubscriptionsLeavingTenant)
	populate(objectMap, "exemptedPrincipals", t.ExemptedPrincipals)
	populate(objectMap, "policyId", t.PolicyID)
	return json.Marshal(objectMap)
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
