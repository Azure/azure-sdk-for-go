//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsupport

// CommunicationsClientBeginCreateOptions contains the optional parameters for the CommunicationsClient.BeginCreate method.
type CommunicationsClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CommunicationsClientCheckNameAvailabilityOptions contains the optional parameters for the CommunicationsClient.CheckNameAvailability
// method.
type CommunicationsClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// CommunicationsClientGetOptions contains the optional parameters for the CommunicationsClient.Get method.
type CommunicationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// CommunicationsClientListOptions contains the optional parameters for the CommunicationsClient.NewListPager method.
type CommunicationsClientListOptions struct {
	// The filter to apply on the operation. You can filter by communicationType and createdDate properties. CommunicationType
// supports Equals ('eq') operator and createdDate supports Greater Than ('gt') and
// Greater Than or Equals ('ge') operators. You may combine the CommunicationType and CreatedDate filters by Logical And ('and')
// operator.
	Filter *string

	// The number of values to return in the collection. Default is 10 and max is 10.
	Top *int32
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ProblemClassificationsClientGetOptions contains the optional parameters for the ProblemClassificationsClient.Get method.
type ProblemClassificationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProblemClassificationsClientListOptions contains the optional parameters for the ProblemClassificationsClient.NewListPager
// method.
type ProblemClassificationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientGetOptions contains the optional parameters for the ServicesClient.Get method.
type ServicesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientListOptions contains the optional parameters for the ServicesClient.NewListPager method.
type ServicesClientListOptions struct {
	// placeholder for future optional parameters
}

// TicketsClientBeginCreateOptions contains the optional parameters for the TicketsClient.BeginCreate method.
type TicketsClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// TicketsClientCheckNameAvailabilityOptions contains the optional parameters for the TicketsClient.CheckNameAvailability
// method.
type TicketsClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// TicketsClientGetOptions contains the optional parameters for the TicketsClient.Get method.
type TicketsClientGetOptions struct {
	// placeholder for future optional parameters
}

// TicketsClientListOptions contains the optional parameters for the TicketsClient.NewListPager method.
type TicketsClientListOptions struct {
	// The filter to apply on the operation. We support 'odata v4.0' filter semantics. Learn more [https://docs.microsoft.com/odata/concepts/queryoptions-overview].
// Status filter can only be used with Equals
// ('eq') operator. For CreatedDate filter, the supported operators are Greater Than ('gt') and Greater Than or Equals ('ge').
// When using both filters, combine them using the logical 'AND'.
	Filter *string

	// The number of values to return in the collection. Default is 25 and max is 100.
	Top *int32
}

// TicketsClientUpdateOptions contains the optional parameters for the TicketsClient.Update method.
type TicketsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

