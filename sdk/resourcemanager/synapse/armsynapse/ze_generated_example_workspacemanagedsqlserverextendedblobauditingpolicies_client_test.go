//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsynapse_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse"
)

// x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/GetWorkspaceManagedSqlExtendedServerBlobAuditingSettings.json
func ExampleWorkspaceManagedSQLServerExtendedBlobAuditingPoliciesClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armsynapse.NewWorkspaceManagedSQLServerExtendedBlobAuditingPoliciesClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		armsynapse.BlobAuditingPolicyNameDefault,
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("ExtendedServerBlobAuditingPolicy.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/CreateWorkspaceManagedSqlServerExtendedBlobAuditingSettingsWithAllParameters.json
func ExampleWorkspaceManagedSQLServerExtendedBlobAuditingPoliciesClient_BeginCreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armsynapse.NewWorkspaceManagedSQLServerExtendedBlobAuditingPoliciesClient("<subscription-id>", cred, nil)
	poller, err := client.BeginCreateOrUpdate(ctx,
		"<resource-group-name>",
		"<workspace-name>",
		armsynapse.BlobAuditingPolicyNameDefault,
		armsynapse.ExtendedServerBlobAuditingPolicy{
			Properties: &armsynapse.ExtendedServerBlobAuditingPolicyProperties{
				AuditActionsAndGroups: []*string{
					to.StringPtr("SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP"),
					to.StringPtr("FAILED_DATABASE_AUTHENTICATION_GROUP"),
					to.StringPtr("BATCH_COMPLETED_GROUP")},
				IsAzureMonitorTargetEnabled:  to.BoolPtr(true),
				IsStorageSecondaryKeyInUse:   to.BoolPtr(false),
				PredicateExpression:          to.StringPtr("<predicate-expression>"),
				RetentionDays:                to.Int32Ptr(6),
				State:                        armsynapse.BlobAuditingPolicyStateEnabled.ToPtr(),
				StorageAccountAccessKey:      to.StringPtr("<storage-account-access-key>"),
				StorageAccountSubscriptionID: to.StringPtr("<storage-account-subscription-id>"),
				StorageEndpoint:              to.StringPtr("<storage-endpoint>"),
			},
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	res, err := poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("ExtendedServerBlobAuditingPolicy.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ListWorkspaceManagedSqlServerExtendedBlobAuditingSettings.json
func ExampleWorkspaceManagedSQLServerExtendedBlobAuditingPoliciesClient_ListByWorkspace() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armsynapse.NewWorkspaceManagedSQLServerExtendedBlobAuditingPoliciesClient("<subscription-id>", cred, nil)
	pager := client.ListByWorkspace("<resource-group-name>",
		"<workspace-name>",
		nil)
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("ExtendedServerBlobAuditingPolicy.ID: %s\n", *v.ID)
		}
	}
}
