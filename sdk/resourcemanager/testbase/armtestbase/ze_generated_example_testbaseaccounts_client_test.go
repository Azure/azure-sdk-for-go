//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armtestbase_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/testbase/armtestbase"
)

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountsListBySubscription.json
func ExampleTestBaseAccountsClient_ListBySubscription() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	pager := client.ListBySubscription(&armtestbase.TestBaseAccountsListBySubscriptionOptions{GetDeleted: nil})
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("TestBaseAccountResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountsList.json
func ExampleTestBaseAccountsClient_ListByResourceGroup() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	pager := client.ListByResourceGroup("<resource-group-name>",
		&armtestbase.TestBaseAccountsListByResourceGroupOptions{GetDeleted: nil})
	for pager.NextPage(ctx) {
		if err := pager.Err(); err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range pager.PageResponse().Value {
			log.Printf("TestBaseAccountResource.ID: %s\n", *v.ID)
		}
	}
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountCreate.json
func ExampleTestBaseAccountsClient_BeginCreate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	poller, err := client.BeginCreate(ctx,
		"<resource-group-name>",
		"<test-base-account-name>",
		armtestbase.TestBaseAccountResource{
			TrackedResource: armtestbase.TrackedResource{
				Location: to.StringPtr("<location>"),
			},
			Properties: &armtestbase.TestBaseAccountResourceProperties{
				SKU: &armtestbase.TestBaseAccountSKU{
					Name: to.StringPtr("<name>"),
					Tier: armtestbase.TierStandard.ToPtr(),
				},
			},
		},
		&armtestbase.TestBaseAccountsBeginCreateOptions{Restore: nil})
	if err != nil {
		log.Fatal(err)
	}
	res, err := poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("TestBaseAccountResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountUpdate.json
func ExampleTestBaseAccountsClient_BeginUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	poller, err := client.BeginUpdate(ctx,
		"<resource-group-name>",
		"<test-base-account-name>",
		armtestbase.TestBaseAccountUpdateParameters{
			Properties: &armtestbase.TestBaseAccountUpdateParameterProperties{
				SKU: &armtestbase.TestBaseAccountSKU{
					Name: to.StringPtr("<name>"),
					Tier: armtestbase.TierStandard.ToPtr(),
				},
			},
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
	res, err := poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("TestBaseAccountResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountDelete.json
func ExampleTestBaseAccountsClient_BeginDelete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	poller, err := client.BeginDelete(ctx,
		"<resource-group-name>",
		"<test-base-account-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	_, err = poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatal(err)
	}
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountGet.json
func ExampleTestBaseAccountsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	res, err := client.Get(ctx,
		"<resource-group-name>",
		"<test-base-account-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	log.Printf("TestBaseAccountResource.ID: %s\n", *res.ID)
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountOffboard.json
func ExampleTestBaseAccountsClient_BeginOffboard() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	poller, err := client.BeginOffboard(ctx,
		"<resource-group-name>",
		"<test-base-account-name>",
		nil)
	if err != nil {
		log.Fatal(err)
	}
	_, err = poller.PollUntilDone(ctx, 30*time.Second)
	if err != nil {
		log.Fatal(err)
	}
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/TestBaseAccountGetFileUploadUrl.json
func ExampleTestBaseAccountsClient_GetFileUploadURL() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	_, err = client.GetFileUploadURL(ctx,
		"<resource-group-name>",
		"<test-base-account-name>",
		&armtestbase.TestBaseAccountsGetFileUploadURLOptions{Parameters: &armtestbase.GetFileUploadURLParameters{
			BlobName: to.StringPtr("<blob-name>"),
		},
		})
	if err != nil {
		log.Fatal(err)
	}
}

// x-ms-original-file: specification/testbase/resource-manager/Microsoft.TestBase/preview/2020-12-16-preview/examples/CheckPackageNameAvailability.json
func ExampleTestBaseAccountsClient_CheckPackageNameAvailability() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	client := armtestbase.NewTestBaseAccountsClient("<subscription-id>", cred, nil)
	_, err = client.CheckPackageNameAvailability(ctx,
		"<resource-group-name>",
		"<test-base-account-name>",
		armtestbase.PackageCheckNameAvailabilityParameters{
			Name:            to.StringPtr("<name>"),
			Type:            to.StringPtr("<type>"),
			ApplicationName: to.StringPtr("<application-name>"),
			Version:         to.StringPtr("<version>"),
		},
		nil)
	if err != nil {
		log.Fatal(err)
	}
}
