//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armvideoanalyzer

// AccessPoliciesClientCreateOrUpdateOptions contains the optional parameters for the AccessPoliciesClient.CreateOrUpdate
// method.
type AccessPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AccessPoliciesClientDeleteOptions contains the optional parameters for the AccessPoliciesClient.Delete method.
type AccessPoliciesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// AccessPoliciesClientGetOptions contains the optional parameters for the AccessPoliciesClient.Get method.
type AccessPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// AccessPoliciesClientListOptions contains the optional parameters for the AccessPoliciesClient.NewListPager method.
type AccessPoliciesClientListOptions struct {
	// Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the
// number of available items up to but not greater than the specified value n.
	Top *int32
}

// AccessPoliciesClientUpdateOptions contains the optional parameters for the AccessPoliciesClient.Update method.
type AccessPoliciesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// EdgeModulesClientCreateOrUpdateOptions contains the optional parameters for the EdgeModulesClient.CreateOrUpdate method.
type EdgeModulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// EdgeModulesClientDeleteOptions contains the optional parameters for the EdgeModulesClient.Delete method.
type EdgeModulesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// EdgeModulesClientGetOptions contains the optional parameters for the EdgeModulesClient.Get method.
type EdgeModulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// EdgeModulesClientListOptions contains the optional parameters for the EdgeModulesClient.NewListPager method.
type EdgeModulesClientListOptions struct {
	// Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the
// number of available items up to but not greater than the specified value n.
	Top *int32
}

// EdgeModulesClientListProvisioningTokenOptions contains the optional parameters for the EdgeModulesClient.ListProvisioningToken
// method.
type EdgeModulesClientListProvisioningTokenOptions struct {
	// placeholder for future optional parameters
}

// LivePipelineOperationStatusesClientGetOptions contains the optional parameters for the LivePipelineOperationStatusesClient.Get
// method.
type LivePipelineOperationStatusesClientGetOptions struct {
	// placeholder for future optional parameters
}

// LivePipelinesClientBeginActivateOptions contains the optional parameters for the LivePipelinesClient.BeginActivate method.
type LivePipelinesClientBeginActivateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LivePipelinesClientBeginDeactivateOptions contains the optional parameters for the LivePipelinesClient.BeginDeactivate
// method.
type LivePipelinesClientBeginDeactivateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LivePipelinesClientCreateOrUpdateOptions contains the optional parameters for the LivePipelinesClient.CreateOrUpdate method.
type LivePipelinesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// LivePipelinesClientDeleteOptions contains the optional parameters for the LivePipelinesClient.Delete method.
type LivePipelinesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// LivePipelinesClientGetOptions contains the optional parameters for the LivePipelinesClient.Get method.
type LivePipelinesClientGetOptions struct {
	// placeholder for future optional parameters
}

// LivePipelinesClientListOptions contains the optional parameters for the LivePipelinesClient.NewListPager method.
type LivePipelinesClientListOptions struct {
	// Restricts the set of items returned.
	Filter *string

	// Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the
// number of available items up to but not greater than the specified value n.
	Top *int32
}

// LivePipelinesClientUpdateOptions contains the optional parameters for the LivePipelinesClient.Update method.
type LivePipelinesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// LocationsClientCheckNameAvailabilityOptions contains the optional parameters for the LocationsClient.CheckNameAvailability
// method.
type LocationsClientCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// OperationResultsClientGetOptions contains the optional parameters for the OperationResultsClient.Get method.
type OperationResultsClientGetOptions struct {
	// placeholder for future optional parameters
}

// OperationStatusesClientGetOptions contains the optional parameters for the OperationStatusesClient.Get method.
type OperationStatusesClientGetOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PipelineJobOperationStatusesClientGetOptions contains the optional parameters for the PipelineJobOperationStatusesClient.Get
// method.
type PipelineJobOperationStatusesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PipelineJobsClientBeginCancelOptions contains the optional parameters for the PipelineJobsClient.BeginCancel method.
type PipelineJobsClientBeginCancelOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PipelineJobsClientCreateOrUpdateOptions contains the optional parameters for the PipelineJobsClient.CreateOrUpdate method.
type PipelineJobsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PipelineJobsClientDeleteOptions contains the optional parameters for the PipelineJobsClient.Delete method.
type PipelineJobsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PipelineJobsClientGetOptions contains the optional parameters for the PipelineJobsClient.Get method.
type PipelineJobsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PipelineJobsClientListOptions contains the optional parameters for the PipelineJobsClient.NewListPager method.
type PipelineJobsClientListOptions struct {
	// Restricts the set of items returned.
	Filter *string

	// Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the
// number of available items up to but not greater than the specified value n.
	Top *int32
}

// PipelineJobsClientUpdateOptions contains the optional parameters for the PipelineJobsClient.Update method.
type PipelineJobsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PipelineTopologiesClientCreateOrUpdateOptions contains the optional parameters for the PipelineTopologiesClient.CreateOrUpdate
// method.
type PipelineTopologiesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PipelineTopologiesClientDeleteOptions contains the optional parameters for the PipelineTopologiesClient.Delete method.
type PipelineTopologiesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PipelineTopologiesClientGetOptions contains the optional parameters for the PipelineTopologiesClient.Get method.
type PipelineTopologiesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PipelineTopologiesClientListOptions contains the optional parameters for the PipelineTopologiesClient.NewListPager method.
type PipelineTopologiesClientListOptions struct {
	// Restricts the set of items returned.
	Filter *string

	// Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the
// number of available items up to but not greater than the specified value n.
	Top *int32
}

// PipelineTopologiesClientUpdateOptions contains the optional parameters for the PipelineTopologiesClient.Update method.
type PipelineTopologiesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointConnectionsClient.CreateOrUpdate
// method.
type PrivateEndpointConnectionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientDeleteOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Delete
// method.
type PrivateEndpointConnectionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsClient.Get
// method.
type PrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsClientListOptions contains the optional parameters for the PrivateEndpointConnectionsClient.List
// method.
type PrivateEndpointConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsOperationResultsClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsOperationResultsClient.Get
// method.
type PrivateEndpointConnectionsOperationResultsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointConnectionsOperationStatusesClientGetOptions contains the optional parameters for the PrivateEndpointConnectionsOperationStatusesClient.Get
// method.
type PrivateEndpointConnectionsOperationStatusesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientGetOptions contains the optional parameters for the PrivateLinkResourcesClient.Get method.
type PrivateLinkResourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkResourcesClientListOptions contains the optional parameters for the PrivateLinkResourcesClient.List method.
type PrivateLinkResourcesClientListOptions struct {
	// placeholder for future optional parameters
}

// VideoAnalyzersClientBeginCreateOrUpdateOptions contains the optional parameters for the VideoAnalyzersClient.BeginCreateOrUpdate
// method.
type VideoAnalyzersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VideoAnalyzersClientBeginUpdateOptions contains the optional parameters for the VideoAnalyzersClient.BeginUpdate method.
type VideoAnalyzersClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VideoAnalyzersClientDeleteOptions contains the optional parameters for the VideoAnalyzersClient.Delete method.
type VideoAnalyzersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// VideoAnalyzersClientGetOptions contains the optional parameters for the VideoAnalyzersClient.Get method.
type VideoAnalyzersClientGetOptions struct {
	// placeholder for future optional parameters
}

// VideoAnalyzersClientListBySubscriptionOptions contains the optional parameters for the VideoAnalyzersClient.ListBySubscription
// method.
type VideoAnalyzersClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// VideoAnalyzersClientListOptions contains the optional parameters for the VideoAnalyzersClient.List method.
type VideoAnalyzersClientListOptions struct {
	// placeholder for future optional parameters
}

// VideosClientCreateOrUpdateOptions contains the optional parameters for the VideosClient.CreateOrUpdate method.
type VideosClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// VideosClientDeleteOptions contains the optional parameters for the VideosClient.Delete method.
type VideosClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// VideosClientGetOptions contains the optional parameters for the VideosClient.Get method.
type VideosClientGetOptions struct {
	// placeholder for future optional parameters
}

// VideosClientListContentTokenOptions contains the optional parameters for the VideosClient.ListContentToken method.
type VideosClientListContentTokenOptions struct {
	// placeholder for future optional parameters
}

// VideosClientListOptions contains the optional parameters for the VideosClient.NewListPager method.
type VideosClientListOptions struct {
	// Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the
// number of available items up to but not greater than the specified value n.
	Top *int32
}

// VideosClientUpdateOptions contains the optional parameters for the VideosClient.Update method.
type VideosClientUpdateOptions struct {
	// placeholder for future optional parameters
}

