//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armvideoanalyzer

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// AccessPoliciesClientCreateOrUpdateResponse contains the response from method AccessPoliciesClient.CreateOrUpdate.
type AccessPoliciesClientCreateOrUpdateResponse struct {
	AccessPoliciesClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesClientCreateOrUpdateResult contains the result from method AccessPoliciesClient.CreateOrUpdate.
type AccessPoliciesClientCreateOrUpdateResult struct {
	AccessPolicyEntity
}

// AccessPoliciesClientDeleteResponse contains the response from method AccessPoliciesClient.Delete.
type AccessPoliciesClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesClientGetResponse contains the response from method AccessPoliciesClient.Get.
type AccessPoliciesClientGetResponse struct {
	AccessPoliciesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesClientGetResult contains the result from method AccessPoliciesClient.Get.
type AccessPoliciesClientGetResult struct {
	AccessPolicyEntity
}

// AccessPoliciesClientListResponse contains the response from method AccessPoliciesClient.List.
type AccessPoliciesClientListResponse struct {
	AccessPoliciesClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesClientListResult contains the result from method AccessPoliciesClient.List.
type AccessPoliciesClientListResult struct {
	AccessPolicyEntityCollection
}

// AccessPoliciesClientUpdateResponse contains the response from method AccessPoliciesClient.Update.
type AccessPoliciesClientUpdateResponse struct {
	AccessPoliciesClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AccessPoliciesClientUpdateResult contains the result from method AccessPoliciesClient.Update.
type AccessPoliciesClientUpdateResult struct {
	AccessPolicyEntity
}

// EdgeModulesClientCreateOrUpdateResponse contains the response from method EdgeModulesClient.CreateOrUpdate.
type EdgeModulesClientCreateOrUpdateResponse struct {
	EdgeModulesClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EdgeModulesClientCreateOrUpdateResult contains the result from method EdgeModulesClient.CreateOrUpdate.
type EdgeModulesClientCreateOrUpdateResult struct {
	EdgeModuleEntity
}

// EdgeModulesClientDeleteResponse contains the response from method EdgeModulesClient.Delete.
type EdgeModulesClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EdgeModulesClientGetResponse contains the response from method EdgeModulesClient.Get.
type EdgeModulesClientGetResponse struct {
	EdgeModulesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EdgeModulesClientGetResult contains the result from method EdgeModulesClient.Get.
type EdgeModulesClientGetResult struct {
	EdgeModuleEntity
}

// EdgeModulesClientListProvisioningTokenResponse contains the response from method EdgeModulesClient.ListProvisioningToken.
type EdgeModulesClientListProvisioningTokenResponse struct {
	EdgeModulesClientListProvisioningTokenResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EdgeModulesClientListProvisioningTokenResult contains the result from method EdgeModulesClient.ListProvisioningToken.
type EdgeModulesClientListProvisioningTokenResult struct {
	EdgeModuleProvisioningToken
}

// EdgeModulesClientListResponse contains the response from method EdgeModulesClient.List.
type EdgeModulesClientListResponse struct {
	EdgeModulesClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// EdgeModulesClientListResult contains the result from method EdgeModulesClient.List.
type EdgeModulesClientListResult struct {
	EdgeModuleEntityCollection
}

// LivePipelineOperationStatusesClientGetResponse contains the response from method LivePipelineOperationStatusesClient.Get.
type LivePipelineOperationStatusesClientGetResponse struct {
	LivePipelineOperationStatusesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelineOperationStatusesClientGetResult contains the result from method LivePipelineOperationStatusesClient.Get.
type LivePipelineOperationStatusesClientGetResult struct {
	LivePipelineOperationStatus
}

// LivePipelinesClientActivatePollerResponse contains the response from method LivePipelinesClient.Activate.
type LivePipelinesClientActivatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *LivePipelinesClientActivatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l LivePipelinesClientActivatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (LivePipelinesClientActivateResponse, error) {
	respType := LivePipelinesClientActivateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a LivePipelinesClientActivatePollerResponse from the provided client and resume token.
func (l *LivePipelinesClientActivatePollerResponse) Resume(ctx context.Context, client *LivePipelinesClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("LivePipelinesClient.Activate", token, client.pl)
	if err != nil {
		return err
	}
	poller := &LivePipelinesClientActivatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// LivePipelinesClientActivateResponse contains the response from method LivePipelinesClient.Activate.
type LivePipelinesClientActivateResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelinesClientCreateOrUpdateResponse contains the response from method LivePipelinesClient.CreateOrUpdate.
type LivePipelinesClientCreateOrUpdateResponse struct {
	LivePipelinesClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelinesClientCreateOrUpdateResult contains the result from method LivePipelinesClient.CreateOrUpdate.
type LivePipelinesClientCreateOrUpdateResult struct {
	LivePipeline
}

// LivePipelinesClientDeactivatePollerResponse contains the response from method LivePipelinesClient.Deactivate.
type LivePipelinesClientDeactivatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *LivePipelinesClientDeactivatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l LivePipelinesClientDeactivatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (LivePipelinesClientDeactivateResponse, error) {
	respType := LivePipelinesClientDeactivateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a LivePipelinesClientDeactivatePollerResponse from the provided client and resume token.
func (l *LivePipelinesClientDeactivatePollerResponse) Resume(ctx context.Context, client *LivePipelinesClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("LivePipelinesClient.Deactivate", token, client.pl)
	if err != nil {
		return err
	}
	poller := &LivePipelinesClientDeactivatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// LivePipelinesClientDeactivateResponse contains the response from method LivePipelinesClient.Deactivate.
type LivePipelinesClientDeactivateResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelinesClientDeleteResponse contains the response from method LivePipelinesClient.Delete.
type LivePipelinesClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelinesClientGetResponse contains the response from method LivePipelinesClient.Get.
type LivePipelinesClientGetResponse struct {
	LivePipelinesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelinesClientGetResult contains the result from method LivePipelinesClient.Get.
type LivePipelinesClientGetResult struct {
	LivePipeline
}

// LivePipelinesClientListResponse contains the response from method LivePipelinesClient.List.
type LivePipelinesClientListResponse struct {
	LivePipelinesClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelinesClientListResult contains the result from method LivePipelinesClient.List.
type LivePipelinesClientListResult struct {
	LivePipelineCollection
}

// LivePipelinesClientUpdateResponse contains the response from method LivePipelinesClient.Update.
type LivePipelinesClientUpdateResponse struct {
	LivePipelinesClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LivePipelinesClientUpdateResult contains the result from method LivePipelinesClient.Update.
type LivePipelinesClientUpdateResult struct {
	LivePipeline
}

// LocationsClientCheckNameAvailabilityResponse contains the response from method LocationsClient.CheckNameAvailability.
type LocationsClientCheckNameAvailabilityResponse struct {
	LocationsClientCheckNameAvailabilityResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LocationsClientCheckNameAvailabilityResult contains the result from method LocationsClient.CheckNameAvailability.
type LocationsClientCheckNameAvailabilityResult struct {
	CheckNameAvailabilityResponse
}

// OperationResultsClientGetResponse contains the response from method OperationResultsClient.Get.
type OperationResultsClientGetResponse struct {
	OperationResultsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationResultsClientGetResult contains the result from method OperationResultsClient.Get.
type OperationResultsClientGetResult struct {
	VideoAnalyzer
}

// OperationStatusesClientGetResponse contains the response from method OperationStatusesClient.Get.
type OperationStatusesClientGetResponse struct {
	OperationStatusesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationStatusesClientGetResult contains the result from method OperationStatusesClient.Get.
type OperationStatusesClientGetResult struct {
	OperationStatus
}

// OperationsClientListResponse contains the response from method OperationsClient.List.
type OperationsClientListResponse struct {
	OperationsClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsClientListResult contains the result from method OperationsClient.List.
type OperationsClientListResult struct {
	OperationCollection
}

// PipelineJobOperationStatusesClientGetResponse contains the response from method PipelineJobOperationStatusesClient.Get.
type PipelineJobOperationStatusesClientGetResponse struct {
	PipelineJobOperationStatusesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineJobOperationStatusesClientGetResult contains the result from method PipelineJobOperationStatusesClient.Get.
type PipelineJobOperationStatusesClientGetResult struct {
	PipelineJobOperationStatus
}

// PipelineJobsClientCancelPollerResponse contains the response from method PipelineJobsClient.Cancel.
type PipelineJobsClientCancelPollerResponse struct {
	// Poller contains an initialized poller.
	Poller *PipelineJobsClientCancelPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l PipelineJobsClientCancelPollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (PipelineJobsClientCancelResponse, error) {
	respType := PipelineJobsClientCancelResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, nil)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a PipelineJobsClientCancelPollerResponse from the provided client and resume token.
func (l *PipelineJobsClientCancelPollerResponse) Resume(ctx context.Context, client *PipelineJobsClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("PipelineJobsClient.Cancel", token, client.pl)
	if err != nil {
		return err
	}
	poller := &PipelineJobsClientCancelPoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// PipelineJobsClientCancelResponse contains the response from method PipelineJobsClient.Cancel.
type PipelineJobsClientCancelResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineJobsClientCreateOrUpdateResponse contains the response from method PipelineJobsClient.CreateOrUpdate.
type PipelineJobsClientCreateOrUpdateResponse struct {
	PipelineJobsClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineJobsClientCreateOrUpdateResult contains the result from method PipelineJobsClient.CreateOrUpdate.
type PipelineJobsClientCreateOrUpdateResult struct {
	PipelineJob
}

// PipelineJobsClientDeleteResponse contains the response from method PipelineJobsClient.Delete.
type PipelineJobsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineJobsClientGetResponse contains the response from method PipelineJobsClient.Get.
type PipelineJobsClientGetResponse struct {
	PipelineJobsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineJobsClientGetResult contains the result from method PipelineJobsClient.Get.
type PipelineJobsClientGetResult struct {
	PipelineJob
}

// PipelineJobsClientListResponse contains the response from method PipelineJobsClient.List.
type PipelineJobsClientListResponse struct {
	PipelineJobsClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineJobsClientListResult contains the result from method PipelineJobsClient.List.
type PipelineJobsClientListResult struct {
	PipelineJobCollection
}

// PipelineJobsClientUpdateResponse contains the response from method PipelineJobsClient.Update.
type PipelineJobsClientUpdateResponse struct {
	PipelineJobsClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineJobsClientUpdateResult contains the result from method PipelineJobsClient.Update.
type PipelineJobsClientUpdateResult struct {
	PipelineJob
}

// PipelineTopologiesClientCreateOrUpdateResponse contains the response from method PipelineTopologiesClient.CreateOrUpdate.
type PipelineTopologiesClientCreateOrUpdateResponse struct {
	PipelineTopologiesClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineTopologiesClientCreateOrUpdateResult contains the result from method PipelineTopologiesClient.CreateOrUpdate.
type PipelineTopologiesClientCreateOrUpdateResult struct {
	PipelineTopology
}

// PipelineTopologiesClientDeleteResponse contains the response from method PipelineTopologiesClient.Delete.
type PipelineTopologiesClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineTopologiesClientGetResponse contains the response from method PipelineTopologiesClient.Get.
type PipelineTopologiesClientGetResponse struct {
	PipelineTopologiesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineTopologiesClientGetResult contains the result from method PipelineTopologiesClient.Get.
type PipelineTopologiesClientGetResult struct {
	PipelineTopology
}

// PipelineTopologiesClientListResponse contains the response from method PipelineTopologiesClient.List.
type PipelineTopologiesClientListResponse struct {
	PipelineTopologiesClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineTopologiesClientListResult contains the result from method PipelineTopologiesClient.List.
type PipelineTopologiesClientListResult struct {
	PipelineTopologyCollection
}

// PipelineTopologiesClientUpdateResponse contains the response from method PipelineTopologiesClient.Update.
type PipelineTopologiesClientUpdateResponse struct {
	PipelineTopologiesClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineTopologiesClientUpdateResult contains the result from method PipelineTopologiesClient.Update.
type PipelineTopologiesClientUpdateResult struct {
	PipelineTopology
}

// PrivateEndpointConnectionsClientCreateOrUpdateResponse contains the response from method PrivateEndpointConnectionsClient.CreateOrUpdate.
type PrivateEndpointConnectionsClientCreateOrUpdateResponse struct {
	PrivateEndpointConnectionsClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsClientCreateOrUpdateResult contains the result from method PrivateEndpointConnectionsClient.CreateOrUpdate.
type PrivateEndpointConnectionsClientCreateOrUpdateResult struct {
	PrivateEndpointConnection
	// AzureAsyncOperation contains the information returned from the Azure-AsyncOperation header response.
	AzureAsyncOperation *string

	// Location contains the information returned from the Location header response.
	Location *string

	// RetryAfter contains the information returned from the Retry-After header response.
	RetryAfter *int32
}

// PrivateEndpointConnectionsClientDeleteResponse contains the response from method PrivateEndpointConnectionsClient.Delete.
type PrivateEndpointConnectionsClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsClientGetResponse contains the response from method PrivateEndpointConnectionsClient.Get.
type PrivateEndpointConnectionsClientGetResponse struct {
	PrivateEndpointConnectionsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsClientGetResult contains the result from method PrivateEndpointConnectionsClient.Get.
type PrivateEndpointConnectionsClientGetResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsClientListResponse contains the response from method PrivateEndpointConnectionsClient.List.
type PrivateEndpointConnectionsClientListResponse struct {
	PrivateEndpointConnectionsClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsClientListResult contains the result from method PrivateEndpointConnectionsClient.List.
type PrivateEndpointConnectionsClientListResult struct {
	PrivateEndpointConnectionListResult
}

// PrivateEndpointConnectionsOperationResultsClientGetResponse contains the response from method PrivateEndpointConnectionsOperationResultsClient.Get.
type PrivateEndpointConnectionsOperationResultsClientGetResponse struct {
	PrivateEndpointConnectionsOperationResultsClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsOperationResultsClientGetResult contains the result from method PrivateEndpointConnectionsOperationResultsClient.Get.
type PrivateEndpointConnectionsOperationResultsClientGetResult struct {
	PrivateEndpointConnection
}

// PrivateEndpointConnectionsOperationStatusesClientGetResponse contains the response from method PrivateEndpointConnectionsOperationStatusesClient.Get.
type PrivateEndpointConnectionsOperationStatusesClientGetResponse struct {
	PrivateEndpointConnectionsOperationStatusesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateEndpointConnectionsOperationStatusesClientGetResult contains the result from method PrivateEndpointConnectionsOperationStatusesClient.Get.
type PrivateEndpointConnectionsOperationStatusesClientGetResult struct {
	PrivateEndpointConnectionOperationStatus
}

// PrivateLinkResourcesClientGetResponse contains the response from method PrivateLinkResourcesClient.Get.
type PrivateLinkResourcesClientGetResponse struct {
	PrivateLinkResourcesClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourcesClientGetResult contains the result from method PrivateLinkResourcesClient.Get.
type PrivateLinkResourcesClientGetResult struct {
	PrivateLinkResource
}

// PrivateLinkResourcesClientListResponse contains the response from method PrivateLinkResourcesClient.List.
type PrivateLinkResourcesClientListResponse struct {
	PrivateLinkResourcesClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PrivateLinkResourcesClientListResult contains the result from method PrivateLinkResourcesClient.List.
type PrivateLinkResourcesClientListResult struct {
	PrivateLinkResourceListResult
}

// VideoAnalyzersClientCreateOrUpdatePollerResponse contains the response from method VideoAnalyzersClient.CreateOrUpdate.
type VideoAnalyzersClientCreateOrUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *VideoAnalyzersClientCreateOrUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l VideoAnalyzersClientCreateOrUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (VideoAnalyzersClientCreateOrUpdateResponse, error) {
	respType := VideoAnalyzersClientCreateOrUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.VideoAnalyzer)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a VideoAnalyzersClientCreateOrUpdatePollerResponse from the provided client and resume token.
func (l *VideoAnalyzersClientCreateOrUpdatePollerResponse) Resume(ctx context.Context, client *VideoAnalyzersClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("VideoAnalyzersClient.CreateOrUpdate", token, client.pl)
	if err != nil {
		return err
	}
	poller := &VideoAnalyzersClientCreateOrUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// VideoAnalyzersClientCreateOrUpdateResponse contains the response from method VideoAnalyzersClient.CreateOrUpdate.
type VideoAnalyzersClientCreateOrUpdateResponse struct {
	VideoAnalyzersClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideoAnalyzersClientCreateOrUpdateResult contains the result from method VideoAnalyzersClient.CreateOrUpdate.
type VideoAnalyzersClientCreateOrUpdateResult struct {
	VideoAnalyzer
}

// VideoAnalyzersClientDeleteResponse contains the response from method VideoAnalyzersClient.Delete.
type VideoAnalyzersClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideoAnalyzersClientGetResponse contains the response from method VideoAnalyzersClient.Get.
type VideoAnalyzersClientGetResponse struct {
	VideoAnalyzersClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideoAnalyzersClientGetResult contains the result from method VideoAnalyzersClient.Get.
type VideoAnalyzersClientGetResult struct {
	VideoAnalyzer
}

// VideoAnalyzersClientListBySubscriptionResponse contains the response from method VideoAnalyzersClient.ListBySubscription.
type VideoAnalyzersClientListBySubscriptionResponse struct {
	VideoAnalyzersClientListBySubscriptionResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideoAnalyzersClientListBySubscriptionResult contains the result from method VideoAnalyzersClient.ListBySubscription.
type VideoAnalyzersClientListBySubscriptionResult struct {
	Collection
}

// VideoAnalyzersClientListResponse contains the response from method VideoAnalyzersClient.List.
type VideoAnalyzersClientListResponse struct {
	VideoAnalyzersClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideoAnalyzersClientListResult contains the result from method VideoAnalyzersClient.List.
type VideoAnalyzersClientListResult struct {
	Collection
}

// VideoAnalyzersClientUpdatePollerResponse contains the response from method VideoAnalyzersClient.Update.
type VideoAnalyzersClientUpdatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *VideoAnalyzersClientUpdatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l VideoAnalyzersClientUpdatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (VideoAnalyzersClientUpdateResponse, error) {
	respType := VideoAnalyzersClientUpdateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.VideoAnalyzer)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a VideoAnalyzersClientUpdatePollerResponse from the provided client and resume token.
func (l *VideoAnalyzersClientUpdatePollerResponse) Resume(ctx context.Context, client *VideoAnalyzersClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("VideoAnalyzersClient.Update", token, client.pl)
	if err != nil {
		return err
	}
	poller := &VideoAnalyzersClientUpdatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// VideoAnalyzersClientUpdateResponse contains the response from method VideoAnalyzersClient.Update.
type VideoAnalyzersClientUpdateResponse struct {
	VideoAnalyzersClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideoAnalyzersClientUpdateResult contains the result from method VideoAnalyzersClient.Update.
type VideoAnalyzersClientUpdateResult struct {
	VideoAnalyzer
}

// VideosClientCreateOrUpdateResponse contains the response from method VideosClient.CreateOrUpdate.
type VideosClientCreateOrUpdateResponse struct {
	VideosClientCreateOrUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideosClientCreateOrUpdateResult contains the result from method VideosClient.CreateOrUpdate.
type VideosClientCreateOrUpdateResult struct {
	VideoEntity
}

// VideosClientDeleteResponse contains the response from method VideosClient.Delete.
type VideosClientDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideosClientGetResponse contains the response from method VideosClient.Get.
type VideosClientGetResponse struct {
	VideosClientGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideosClientGetResult contains the result from method VideosClient.Get.
type VideosClientGetResult struct {
	VideoEntity
}

// VideosClientListContentTokenResponse contains the response from method VideosClient.ListContentToken.
type VideosClientListContentTokenResponse struct {
	VideosClientListContentTokenResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideosClientListContentTokenResult contains the result from method VideosClient.ListContentToken.
type VideosClientListContentTokenResult struct {
	VideoContentToken
}

// VideosClientListResponse contains the response from method VideosClient.List.
type VideosClientListResponse struct {
	VideosClientListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideosClientListResult contains the result from method VideosClient.List.
type VideosClientListResult struct {
	VideoEntityCollection
}

// VideosClientUpdateResponse contains the response from method VideosClient.Update.
type VideosClientUpdateResponse struct {
	VideosClientUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// VideosClientUpdateResult contains the result from method VideosClient.Update.
type VideosClientUpdateResult struct {
	VideoEntity
}
