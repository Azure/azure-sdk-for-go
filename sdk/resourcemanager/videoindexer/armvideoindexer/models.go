//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armvideoindexer

import "time"

// AccessToken - Azure Video Indexer access token.
type AccessToken struct {
	// READ-ONLY; The access token.
	AccessToken *string
}

// Account - An Azure Video Indexer account.
type Account struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Managed service identity (system assigned and/or user assigned identities)
	Identity *ManagedServiceIdentity

	// List of account properties
	Properties *AccountPropertiesForPutRequest

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; The system meta data relating to this resource.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// AccountCheckNameAvailabilityParameters - The parameters used to check the availability of the Video Indexer account name.
type AccountCheckNameAvailabilityParameters struct {
	// REQUIRED; The VideoIndexer account name.
	Name *string

	// REQUIRED; The type of resource, Microsoft.VideoIndexer/accounts
	Type *Type
}

// AccountList - The list operation response, that contains the data pools and their properties.
type AccountList struct {
	// URL to get the next set of operation list results if there are any.
	NextLink *string

	// READ-ONLY; List of accounts and their properties.
	Value []*Account
}

// AccountPatch - Azure Video Indexer account
type AccountPatch struct {
	// Managed service identity (system assigned and/or user assigned identities)
	Identity *ManagedServiceIdentity

	// List of account properties
	Properties *AccountPropertiesForPatchRequest

	// Resource tags
	Tags map[string]*string
}

// AccountPropertiesForPatchRequest - Azure Video Indexer account properties
type AccountPropertiesForPatchRequest struct {
	// The storage services details
	StorageServices *StorageServicesForPatchRequest

	// READ-ONLY; The account's data-plane ID
	AccountID *string

	// READ-ONLY; Gets the status of the account at the time the operation was called.
	ProvisioningState *ProvisioningState

	// READ-ONLY; The account's tenant id
	TenantID *string
}

// AccountPropertiesForPutRequest - Azure Video Indexer account properties
type AccountPropertiesForPutRequest struct {
	// The account's data-plane ID. This can be set only when connecting an existing classic account
	AccountID *string

	// The storage services details
	StorageServices *StorageServicesForPutRequest

	// READ-ONLY; The account's name
	AccountName *string

	// READ-ONLY; Gets the status of the account at the time the operation was called.
	ProvisioningState *ProvisioningState

	// READ-ONLY; The account's tenant id
	TenantID *string

	// READ-ONLY; An integer representing the total seconds that have been indexed on the account
	TotalSecondsIndexed *int32
}

// CheckNameAvailabilityResult - The CheckNameAvailability operation response.
type CheckNameAvailabilityResult struct {
	// READ-ONLY; Gets an error message explaining the Reason value in more detail.
	Message *string

	// READ-ONLY; Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available.
	// If false, the name has already been taken.
	NameAvailable *bool

	// READ-ONLY; Gets the reason that a Video Indexer account name could not be used. The Reason element is only returned if
	// NameAvailable is false.
	Reason *Reason
}

// GenerateAccessTokenParameters - Access token generation request's parameters
type GenerateAccessTokenParameters struct {
	// REQUIRED; The requested permission
	PermissionType *PermissionType

	// REQUIRED; The requested media type
	Scope *Scope

	// The project ID
	ProjectID *string

	// The video ID
	VideoID *string
}

// GenerateRestrictedViewerAccessTokenParameters - Restricted viewer access token generation request's parameters
type GenerateRestrictedViewerAccessTokenParameters struct {
	// REQUIRED; The requested media type
	Scope *Scope

	// The project ID
	ProjectID *string

	// The video ID
	VideoID *string
}

// ManagedServiceIdentity - Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// REQUIRED; Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type *ManagedServiceIdentityType

	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
	// resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
	// The dictionary values can be empty objects ({}) in
	// requests.
	UserAssignedIdentities map[string]*UserAssignedIdentity

	// READ-ONLY; The service principal ID of the system assigned identity. This property will only be provided for a system assigned
	// identity.
	PrincipalID *string

	// READ-ONLY; The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantID *string
}

// Operation detail payload
type Operation struct {
	// READ-ONLY; Indicates the action type.
	ActionType *string

	// READ-ONLY; Display of the operation
	Display *OperationDisplay

	// READ-ONLY; Indicates whether the operation is a data action
	IsDataAction *bool

	// READ-ONLY; Name of the operation
	Name *string

	// READ-ONLY; Origin of the operation
	Origin *string
}

// OperationDisplay - Operation display payload
type OperationDisplay struct {
	// READ-ONLY; Localized friendly description for the operation
	Description *string

	// READ-ONLY; Localized friendly name for the operation
	Operation *string

	// READ-ONLY; Resource provider of the operation
	Provider *string

	// READ-ONLY; Resource of the operation
	Resource *string
}

// OperationListResult - Available operations of the service.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results if there are any.
	NextLink *string

	// READ-ONLY; List of operations supported by the Resource Provider.
	Value []*Operation
}

// StorageServicesForPatchRequest - The storage services details
type StorageServicesForPatchRequest struct {
	// The user assigned identity to be used to grant permissions
	UserAssignedIdentity *string
}

// StorageServicesForPutRequest - The storage services details
type StorageServicesForPutRequest struct {
	// The storage services resource id
	ResourceID *string

	// The user assigned identity to be used to grant permissions
	UserAssignedIdentity *string
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time

	// The identity that created the resource.
	CreatedBy *string

	// The type of identity that created the resource.
	CreatedByType *CreatedByType

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time

	// The identity that last modified the resource.
	LastModifiedBy *string

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType
}

// UserAssignedIdentity - User assigned identity properties
type UserAssignedIdentity struct {
	// READ-ONLY; The client ID of the assigned identity.
	ClientID *string

	// READ-ONLY; The principal ID of the assigned identity.
	PrincipalID *string
}
