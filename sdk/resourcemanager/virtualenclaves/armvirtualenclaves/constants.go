// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armvirtualenclaves

// ActionPerformed - Specifies the action performed by the approver
type ActionPerformed string

const (
	// ActionPerformedApproved - Action was Approved
	ActionPerformedApproved ActionPerformed = "Approved"
	// ActionPerformedRejected - Action was Rejected
	ActionPerformedRejected ActionPerformed = "Rejected"
)

// PossibleActionPerformedValues returns the possible values for the ActionPerformed const type.
func PossibleActionPerformedValues() []ActionPerformed {
	return []ActionPerformed{
		ActionPerformedApproved,
		ActionPerformedRejected,
	}
}

// ActionType - Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	// ActionTypeInternal - Actions are for internal-only APIs.
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

type ApprovalActionRequestApprovalStatus string

const (
	ApprovalActionRequestApprovalStatusApproved ApprovalActionRequestApprovalStatus = "Approved"
	ApprovalActionRequestApprovalStatusRejected ApprovalActionRequestApprovalStatus = "Rejected"
)

// PossibleApprovalActionRequestApprovalStatusValues returns the possible values for the ApprovalActionRequestApprovalStatus const type.
func PossibleApprovalActionRequestApprovalStatusValues() []ApprovalActionRequestApprovalStatus {
	return []ApprovalActionRequestApprovalStatus{
		ApprovalActionRequestApprovalStatusApproved,
		ApprovalActionRequestApprovalStatusRejected,
	}
}

type ApprovalCallbackRequestApprovalStatus string

const (
	ApprovalCallbackRequestApprovalStatusApproved ApprovalCallbackRequestApprovalStatus = "Approved"
	ApprovalCallbackRequestApprovalStatusRejected ApprovalCallbackRequestApprovalStatus = "Rejected"
)

// PossibleApprovalCallbackRequestApprovalStatusValues returns the possible values for the ApprovalCallbackRequestApprovalStatus const type.
func PossibleApprovalCallbackRequestApprovalStatusValues() []ApprovalCallbackRequestApprovalStatus {
	return []ApprovalCallbackRequestApprovalStatus{
		ApprovalCallbackRequestApprovalStatusApproved,
		ApprovalCallbackRequestApprovalStatusRejected,
	}
}

type ApprovalCallbackRequestResourceRequestAction string

const (
	ApprovalCallbackRequestResourceRequestActionCreate ApprovalCallbackRequestResourceRequestAction = "Create"
	ApprovalCallbackRequestResourceRequestActionDelete ApprovalCallbackRequestResourceRequestAction = "Delete"
	ApprovalCallbackRequestResourceRequestActionReset  ApprovalCallbackRequestResourceRequestAction = "Reset"
	ApprovalCallbackRequestResourceRequestActionUpdate ApprovalCallbackRequestResourceRequestAction = "Update"
)

// PossibleApprovalCallbackRequestResourceRequestActionValues returns the possible values for the ApprovalCallbackRequestResourceRequestAction const type.
func PossibleApprovalCallbackRequestResourceRequestActionValues() []ApprovalCallbackRequestResourceRequestAction {
	return []ApprovalCallbackRequestResourceRequestAction{
		ApprovalCallbackRequestResourceRequestActionCreate,
		ApprovalCallbackRequestResourceRequestActionDelete,
		ApprovalCallbackRequestResourceRequestActionReset,
		ApprovalCallbackRequestResourceRequestActionUpdate,
	}
}

type ApprovalDeletionCallbackRequestResourceRequestAction string

const (
	ApprovalDeletionCallbackRequestResourceRequestActionCreate ApprovalDeletionCallbackRequestResourceRequestAction = "Create"
	ApprovalDeletionCallbackRequestResourceRequestActionDelete ApprovalDeletionCallbackRequestResourceRequestAction = "Delete"
	ApprovalDeletionCallbackRequestResourceRequestActionUpdate ApprovalDeletionCallbackRequestResourceRequestAction = "Update"
)

// PossibleApprovalDeletionCallbackRequestResourceRequestActionValues returns the possible values for the ApprovalDeletionCallbackRequestResourceRequestAction const type.
func PossibleApprovalDeletionCallbackRequestResourceRequestActionValues() []ApprovalDeletionCallbackRequestResourceRequestAction {
	return []ApprovalDeletionCallbackRequestResourceRequestAction{
		ApprovalDeletionCallbackRequestResourceRequestActionCreate,
		ApprovalDeletionCallbackRequestResourceRequestActionDelete,
		ApprovalDeletionCallbackRequestResourceRequestActionUpdate,
	}
}

// ApprovalPolicy - Approval Policy.
type ApprovalPolicy string

const (
	// ApprovalPolicyNotRequired - Approval will not be required for the specified action.
	ApprovalPolicyNotRequired ApprovalPolicy = "NotRequired"
	// ApprovalPolicyRequired - Approval will be required for the specified action.
	ApprovalPolicyRequired ApprovalPolicy = "Required"
)

// PossibleApprovalPolicyValues returns the possible values for the ApprovalPolicy const type.
func PossibleApprovalPolicyValues() []ApprovalPolicy {
	return []ApprovalPolicy{
		ApprovalPolicyNotRequired,
		ApprovalPolicyRequired,
	}
}

// ApprovalStatus - Approval Status. It can be Approved, Rejected, Pending, Deleted or Expired.
type ApprovalStatus string

const (
	// ApprovalStatusApproved - ApprovalStatus Type Approved
	ApprovalStatusApproved ApprovalStatus = "Approved"
	// ApprovalStatusDeleted - ApprovalStatus Type Deleted
	ApprovalStatusDeleted ApprovalStatus = "Deleted"
	// ApprovalStatusExpired - ApprovalStatus Type Expired
	ApprovalStatusExpired ApprovalStatus = "Expired"
	// ApprovalStatusPending - ApprovalStatus Type Pending
	ApprovalStatusPending ApprovalStatus = "Pending"
	// ApprovalStatusRejected - ApprovalStatus Type Rejected
	ApprovalStatusRejected ApprovalStatus = "Rejected"
)

// PossibleApprovalStatusValues returns the possible values for the ApprovalStatus const type.
func PossibleApprovalStatusValues() []ApprovalStatus {
	return []ApprovalStatus{
		ApprovalStatusApproved,
		ApprovalStatusDeleted,
		ApprovalStatusExpired,
		ApprovalStatusPending,
		ApprovalStatusRejected,
	}
}

// CommunityEndpointProtocol - Community Endpoint Protocol Enum
type CommunityEndpointProtocol string

const (
	// CommunityEndpointProtocolAH - CommunityEndpointProtocol Type AH
	CommunityEndpointProtocolAH CommunityEndpointProtocol = "AH"
	// CommunityEndpointProtocolANY - CommunityEndpointProtocol Type ANY
	CommunityEndpointProtocolANY CommunityEndpointProtocol = "ANY"
	// CommunityEndpointProtocolESP - CommunityEndpointProtocol Type ESP
	CommunityEndpointProtocolESP CommunityEndpointProtocol = "ESP"
	// CommunityEndpointProtocolHTTP - CommunityEndpointProtocol Type HTTP
	CommunityEndpointProtocolHTTP CommunityEndpointProtocol = "HTTP"
	// CommunityEndpointProtocolHTTPS - CommunityEndpointProtocol Type HTTPS
	CommunityEndpointProtocolHTTPS CommunityEndpointProtocol = "HTTPS"
	// CommunityEndpointProtocolICMP - CommunityEndpointProtocol Type ICMP
	CommunityEndpointProtocolICMP CommunityEndpointProtocol = "ICMP"
	// CommunityEndpointProtocolTCP - CommunityEndpointProtocol Type TCP
	CommunityEndpointProtocolTCP CommunityEndpointProtocol = "TCP"
	// CommunityEndpointProtocolUDP - CommunityEndpointProtocol Type UDP
	CommunityEndpointProtocolUDP CommunityEndpointProtocol = "UDP"
)

// PossibleCommunityEndpointProtocolValues returns the possible values for the CommunityEndpointProtocol const type.
func PossibleCommunityEndpointProtocolValues() []CommunityEndpointProtocol {
	return []CommunityEndpointProtocol{
		CommunityEndpointProtocolAH,
		CommunityEndpointProtocolANY,
		CommunityEndpointProtocolESP,
		CommunityEndpointProtocolHTTP,
		CommunityEndpointProtocolHTTPS,
		CommunityEndpointProtocolICMP,
		CommunityEndpointProtocolTCP,
		CommunityEndpointProtocolUDP,
	}
}

type CommunityPropertiesPolicyOverride string

const (
	CommunityPropertiesPolicyOverrideEnclave CommunityPropertiesPolicyOverride = "Enclave"
	CommunityPropertiesPolicyOverrideNone    CommunityPropertiesPolicyOverride = "None"
)

// PossibleCommunityPropertiesPolicyOverrideValues returns the possible values for the CommunityPropertiesPolicyOverride const type.
func PossibleCommunityPropertiesPolicyOverrideValues() []CommunityPropertiesPolicyOverride {
	return []CommunityPropertiesPolicyOverride{
		CommunityPropertiesPolicyOverrideEnclave,
		CommunityPropertiesPolicyOverrideNone,
	}
}

// CreatedByType - The kind of entity that created the resource.
type CreatedByType string

const (
	// CreatedByTypeApplication - The entity was created by an application.
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey - The entity was created by a key.
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity - The entity was created by a managed identity.
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser - The entity was created by a user.
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// DestinationType - Destination Type Enum
type DestinationType string

const (
	// DestinationTypeFQDN - DestinationType Type FQDN
	DestinationTypeFQDN DestinationType = "FQDN"
	// DestinationTypeFQDNTag - DestinationType Type FQDNTag
	DestinationTypeFQDNTag DestinationType = "FQDNTag"
	// DestinationTypeIPAddress - DestinationType Type IPAddress
	DestinationTypeIPAddress DestinationType = "IPAddress"
	// DestinationTypePrivateNetwork - DestinationType Type PrivateNetwork
	DestinationTypePrivateNetwork DestinationType = "PrivateNetwork"
)

// PossibleDestinationTypeValues returns the possible values for the DestinationType const type.
func PossibleDestinationTypeValues() []DestinationType {
	return []DestinationType{
		DestinationTypeFQDN,
		DestinationTypeFQDNTag,
		DestinationTypeIPAddress,
		DestinationTypePrivateNetwork,
	}
}

// DiagnosticDestination - Specifies the destination of where to store diagnostic logs.
type DiagnosticDestination string

const (
	// DiagnosticDestinationBoth - DiagnosticDestination Type Both
	DiagnosticDestinationBoth DiagnosticDestination = "Both"
	// DiagnosticDestinationCommunityOnly - DiagnosticDestination Type CommunityOnly
	DiagnosticDestinationCommunityOnly DiagnosticDestination = "CommunityOnly"
	// DiagnosticDestinationEnclaveOnly - DiagnosticDestination Type EnclaveOnly
	DiagnosticDestinationEnclaveOnly DiagnosticDestination = "EnclaveOnly"
)

// PossibleDiagnosticDestinationValues returns the possible values for the DiagnosticDestination const type.
func PossibleDiagnosticDestinationValues() []DiagnosticDestination {
	return []DiagnosticDestination{
		DiagnosticDestinationBoth,
		DiagnosticDestinationCommunityOnly,
		DiagnosticDestinationEnclaveOnly,
	}
}

// EnclaveConnectionState - Specifies the state of the enclave connection.
type EnclaveConnectionState string

const (
	// EnclaveConnectionStateActive - EnclaveConnectionState Type Active
	EnclaveConnectionStateActive EnclaveConnectionState = "Active"
	// EnclaveConnectionStateApproved - EnclaveConnectionState Type Approved
	EnclaveConnectionStateApproved EnclaveConnectionState = "Approved"
	// EnclaveConnectionStateConnected - EnclaveConnectionState Type Connected
	EnclaveConnectionStateConnected EnclaveConnectionState = "Connected"
	// EnclaveConnectionStateDisconnected - EnclaveConnectionState Type Disconnected
	EnclaveConnectionStateDisconnected EnclaveConnectionState = "Disconnected"
	// EnclaveConnectionStateFailed - EnclaveConnectionState Type Failed
	EnclaveConnectionStateFailed EnclaveConnectionState = "Failed"
	// EnclaveConnectionStatePendingApproval - EnclaveConnectionState Type Pending Approval
	EnclaveConnectionStatePendingApproval EnclaveConnectionState = "PendingApproval"
	// EnclaveConnectionStatePendingUpdate - EnclaveConnectionState Type Pending Update
	EnclaveConnectionStatePendingUpdate EnclaveConnectionState = "PendingUpdate"
)

// PossibleEnclaveConnectionStateValues returns the possible values for the EnclaveConnectionState const type.
func PossibleEnclaveConnectionStateValues() []EnclaveConnectionState {
	return []EnclaveConnectionState{
		EnclaveConnectionStateActive,
		EnclaveConnectionStateApproved,
		EnclaveConnectionStateConnected,
		EnclaveConnectionStateDisconnected,
		EnclaveConnectionStateFailed,
		EnclaveConnectionStatePendingApproval,
		EnclaveConnectionStatePendingUpdate,
	}
}

// EnclaveEndpointProtocol - Enclave Endpoint Protocol Enum
type EnclaveEndpointProtocol string

const (
	// EnclaveEndpointProtocolAH - EndpointProtocol Type AH
	EnclaveEndpointProtocolAH EnclaveEndpointProtocol = "AH"
	// EnclaveEndpointProtocolANY - EndpointProtocol Type ANY
	EnclaveEndpointProtocolANY EnclaveEndpointProtocol = "ANY"
	// EnclaveEndpointProtocolESP - EndpointProtocol Type ESP
	EnclaveEndpointProtocolESP EnclaveEndpointProtocol = "ESP"
	// EnclaveEndpointProtocolICMP - EndpointProtocol Type ICMP
	EnclaveEndpointProtocolICMP EnclaveEndpointProtocol = "ICMP"
	// EnclaveEndpointProtocolTCP - EndpointProtocol Type TCP
	EnclaveEndpointProtocolTCP EnclaveEndpointProtocol = "TCP"
	// EnclaveEndpointProtocolUDP - EndpointProtocol Type UDP
	EnclaveEndpointProtocolUDP EnclaveEndpointProtocol = "UDP"
)

// PossibleEnclaveEndpointProtocolValues returns the possible values for the EnclaveEndpointProtocol const type.
func PossibleEnclaveEndpointProtocolValues() []EnclaveEndpointProtocol {
	return []EnclaveEndpointProtocol{
		EnclaveEndpointProtocolAH,
		EnclaveEndpointProtocolANY,
		EnclaveEndpointProtocolESP,
		EnclaveEndpointProtocolICMP,
		EnclaveEndpointProtocolTCP,
		EnclaveEndpointProtocolUDP,
	}
}

// FirewallSKU - Azure Firewall SKU
type FirewallSKU string

const (
	// FirewallSKUBasic - FirewallSKU Basic
	FirewallSKUBasic FirewallSKU = "Basic"
	// FirewallSKUPremium - FirewallSKU Premium
	FirewallSKUPremium FirewallSKU = "Premium"
	// FirewallSKUStandard - FirwallSKU Standard
	FirewallSKUStandard FirewallSKU = "Standard"
)

// PossibleFirewallSKUValues returns the possible values for the FirewallSKU const type.
func PossibleFirewallSKUValues() []FirewallSKU {
	return []FirewallSKU{
		FirewallSKUBasic,
		FirewallSKUPremium,
		FirewallSKUStandard,
	}
}

type GovernedServiceItemEnforcement string

const (
	GovernedServiceItemEnforcementDisabled GovernedServiceItemEnforcement = "Disabled"
	GovernedServiceItemEnforcementEnabled  GovernedServiceItemEnforcement = "Enabled"
)

// PossibleGovernedServiceItemEnforcementValues returns the possible values for the GovernedServiceItemEnforcement const type.
func PossibleGovernedServiceItemEnforcementValues() []GovernedServiceItemEnforcement {
	return []GovernedServiceItemEnforcement{
		GovernedServiceItemEnforcementDisabled,
		GovernedServiceItemEnforcementEnabled,
	}
}

type GovernedServiceItemOption string

const (
	GovernedServiceItemOptionAllow         GovernedServiceItemOption = "Allow"
	GovernedServiceItemOptionDeny          GovernedServiceItemOption = "Deny"
	GovernedServiceItemOptionExceptionOnly GovernedServiceItemOption = "ExceptionOnly"
	GovernedServiceItemOptionNotApplicable GovernedServiceItemOption = "NotApplicable"
)

// PossibleGovernedServiceItemOptionValues returns the possible values for the GovernedServiceItemOption const type.
func PossibleGovernedServiceItemOptionValues() []GovernedServiceItemOption {
	return []GovernedServiceItemOption{
		GovernedServiceItemOptionAllow,
		GovernedServiceItemOptionDeny,
		GovernedServiceItemOptionExceptionOnly,
		GovernedServiceItemOptionNotApplicable,
	}
}

type GovernedServiceItemPolicyAction string

const (
	GovernedServiceItemPolicyActionAuditOnly GovernedServiceItemPolicyAction = "AuditOnly"
	GovernedServiceItemPolicyActionEnforce   GovernedServiceItemPolicyAction = "Enforce"
	GovernedServiceItemPolicyActionNone      GovernedServiceItemPolicyAction = "None"
)

// PossibleGovernedServiceItemPolicyActionValues returns the possible values for the GovernedServiceItemPolicyAction const type.
func PossibleGovernedServiceItemPolicyActionValues() []GovernedServiceItemPolicyAction {
	return []GovernedServiceItemPolicyAction{
		GovernedServiceItemPolicyActionAuditOnly,
		GovernedServiceItemPolicyActionEnforce,
		GovernedServiceItemPolicyActionNone,
	}
}

type MaintenanceModeConfigurationModelJustification string

const (
	MaintenanceModeConfigurationModelJustificationGovernance MaintenanceModeConfigurationModelJustification = "Governance"
	MaintenanceModeConfigurationModelJustificationNetworking MaintenanceModeConfigurationModelJustification = "Networking"
	MaintenanceModeConfigurationModelJustificationOff        MaintenanceModeConfigurationModelJustification = "Off"
)

// PossibleMaintenanceModeConfigurationModelJustificationValues returns the possible values for the MaintenanceModeConfigurationModelJustification const type.
func PossibleMaintenanceModeConfigurationModelJustificationValues() []MaintenanceModeConfigurationModelJustification {
	return []MaintenanceModeConfigurationModelJustification{
		MaintenanceModeConfigurationModelJustificationGovernance,
		MaintenanceModeConfigurationModelJustificationNetworking,
		MaintenanceModeConfigurationModelJustificationOff,
	}
}

type MaintenanceModeConfigurationModelMode string

const (
	MaintenanceModeConfigurationModelModeAdvanced     MaintenanceModeConfigurationModelMode = "Advanced"
	MaintenanceModeConfigurationModelModeCanNotDelete MaintenanceModeConfigurationModelMode = "CanNotDelete"
	MaintenanceModeConfigurationModelModeGeneral      MaintenanceModeConfigurationModelMode = "General"
	MaintenanceModeConfigurationModelModeOff          MaintenanceModeConfigurationModelMode = "Off"
	MaintenanceModeConfigurationModelModeOn           MaintenanceModeConfigurationModelMode = "On"
)

// PossibleMaintenanceModeConfigurationModelModeValues returns the possible values for the MaintenanceModeConfigurationModelMode const type.
func PossibleMaintenanceModeConfigurationModelModeValues() []MaintenanceModeConfigurationModelMode {
	return []MaintenanceModeConfigurationModelMode{
		MaintenanceModeConfigurationModelModeAdvanced,
		MaintenanceModeConfigurationModelModeCanNotDelete,
		MaintenanceModeConfigurationModelModeGeneral,
		MaintenanceModeConfigurationModelModeOff,
		MaintenanceModeConfigurationModelModeOn,
	}
}

// ManagedServiceIdentityType - Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	// ManagedServiceIdentityTypeNone - No managed identity.
	ManagedServiceIdentityTypeNone ManagedServiceIdentityType = "None"
	// ManagedServiceIdentityTypeSystemAssigned - System assigned managed identity.
	ManagedServiceIdentityTypeSystemAssigned ManagedServiceIdentityType = "SystemAssigned"
	// ManagedServiceIdentityTypeSystemAssignedUserAssigned - System and user assigned managed identity.
	ManagedServiceIdentityTypeSystemAssignedUserAssigned ManagedServiceIdentityType = "SystemAssigned,UserAssigned"
	// ManagedServiceIdentityTypeUserAssigned - User assigned managed identity.
	ManagedServiceIdentityTypeUserAssigned ManagedServiceIdentityType = "UserAssigned"
)

// PossibleManagedServiceIdentityTypeValues returns the possible values for the ManagedServiceIdentityType const type.
func PossibleManagedServiceIdentityTypeValues() []ManagedServiceIdentityType {
	return []ManagedServiceIdentityType{
		ManagedServiceIdentityTypeNone,
		ManagedServiceIdentityTypeSystemAssigned,
		ManagedServiceIdentityTypeSystemAssignedUserAssigned,
		ManagedServiceIdentityTypeUserAssigned,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	// OriginSystem - Indicates the operation is initiated by a system.
	OriginSystem Origin = "system"
	// OriginUser - Indicates the operation is initiated by a user.
	OriginUser Origin = "user"
	// OriginUserSystem - Indicates the operation is initiated by a user or system.
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

type PrincipalType string

const (
	PrincipalTypeGroup            PrincipalType = "Group"
	PrincipalTypeServicePrincipal PrincipalType = "ServicePrincipal"
	PrincipalTypeUser             PrincipalType = "User"
)

// PossiblePrincipalTypeValues returns the possible values for the PrincipalType const type.
func PossiblePrincipalTypeValues() []PrincipalType {
	return []PrincipalType{
		PrincipalTypeGroup,
		PrincipalTypeServicePrincipal,
		PrincipalTypeUser,
	}
}

// ProvisioningState - The provisioning status of the resource.
type ProvisioningState string

const (
	// ProvisioningStateAccepted - Provisioning State Type Accepted
	ProvisioningStateAccepted ProvisioningState = "Accepted"
	// ProvisioningStateCanceled - Resource creation was canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateCreating - Provisioning State Type Creating
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleting - Provisioning State Type Deleting
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource creation failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateNotSpecified - Provisioning State Type NotSpecified
	ProvisioningStateNotSpecified ProvisioningState = "NotSpecified"
	// ProvisioningStateRunning - Provisioning State Type Running
	ProvisioningStateRunning ProvisioningState = "Running"
	// ProvisioningStateSucceeded - Resource has been created.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - Provisioning State Type Updating
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateAccepted,
		ProvisioningStateCanceled,
		ProvisioningStateCreating,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateNotSpecified,
		ProvisioningStateRunning,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// ServiceIdentifier - Identifier for governed services.
type ServiceIdentifier string

const (
	// ServiceIdentifierAKS - Service identifier for AKS
	ServiceIdentifierAKS ServiceIdentifier = "AKS"
	// ServiceIdentifierAppService - Service identifier for App Service
	ServiceIdentifierAppService ServiceIdentifier = "AppService"
	// ServiceIdentifierAzureFirewalls - Service identifier for Azure Firewalls
	ServiceIdentifierAzureFirewalls ServiceIdentifier = "AzureFirewalls"
	// ServiceIdentifierContainerRegistry - Service identifier for Container Registry
	ServiceIdentifierContainerRegistry ServiceIdentifier = "ContainerRegistry"
	// ServiceIdentifierCosmosDB - Service identifier for CosmosDB
	ServiceIdentifierCosmosDB ServiceIdentifier = "CosmosDB"
	// ServiceIdentifierDataConnectors - Service identifier for Data Connectors
	ServiceIdentifierDataConnectors ServiceIdentifier = "DataConnectors"
	// ServiceIdentifierInsights - Service identifier for Insights
	ServiceIdentifierInsights ServiceIdentifier = "Insights"
	// ServiceIdentifierKeyVault - Service identifier for Key Vault
	ServiceIdentifierKeyVault ServiceIdentifier = "KeyVault"
	// ServiceIdentifierLogic - Service identifier for Logic
	ServiceIdentifierLogic ServiceIdentifier = "Logic"
	// ServiceIdentifierMicrosoftSQL - Service identifier for Microsoft SQL
	ServiceIdentifierMicrosoftSQL ServiceIdentifier = "MicrosoftSQL"
	// ServiceIdentifierMonitoring - Service identifier for Monitoring
	ServiceIdentifierMonitoring ServiceIdentifier = "Monitoring"
	// ServiceIdentifierPostgreSQL - Service identifier for PostgreSQL
	ServiceIdentifierPostgreSQL ServiceIdentifier = "PostgreSQL"
	// ServiceIdentifierPrivateDNSZones - Service identifier for Private DNS Zones
	ServiceIdentifierPrivateDNSZones ServiceIdentifier = "PrivateDNSZones"
	// ServiceIdentifierServiceBus - Service identifier for Service Bus
	ServiceIdentifierServiceBus ServiceIdentifier = "ServiceBus"
	// ServiceIdentifierStorage - Service identifier for Storage
	ServiceIdentifierStorage ServiceIdentifier = "Storage"
)

// PossibleServiceIdentifierValues returns the possible values for the ServiceIdentifier const type.
func PossibleServiceIdentifierValues() []ServiceIdentifier {
	return []ServiceIdentifier{
		ServiceIdentifierAKS,
		ServiceIdentifierAppService,
		ServiceIdentifierAzureFirewalls,
		ServiceIdentifierContainerRegistry,
		ServiceIdentifierCosmosDB,
		ServiceIdentifierDataConnectors,
		ServiceIdentifierInsights,
		ServiceIdentifierKeyVault,
		ServiceIdentifierLogic,
		ServiceIdentifierMicrosoftSQL,
		ServiceIdentifierMonitoring,
		ServiceIdentifierPostgreSQL,
		ServiceIdentifierPrivateDNSZones,
		ServiceIdentifierServiceBus,
		ServiceIdentifierStorage,
	}
}

// TransitHubState - Specifies the state of the transitHub.
type TransitHubState string

const (
	// TransitHubStateActive - TransitHubState Type Active
	TransitHubStateActive TransitHubState = "Active"
	// TransitHubStateApproved - TransitHubState Type Approved
	TransitHubStateApproved TransitHubState = "Approved"
	// TransitHubStateFailed - TransitHubState Type Failed
	TransitHubStateFailed TransitHubState = "Failed"
	// TransitHubStatePendingApproval - TransitHubState Type PendingApproval
	TransitHubStatePendingApproval TransitHubState = "PendingApproval"
	// TransitHubStatePendingUpdate - TransitHubState Type PendingUpdate
	TransitHubStatePendingUpdate TransitHubState = "PendingUpdate"
)

// PossibleTransitHubStateValues returns the possible values for the TransitHubState const type.
func PossibleTransitHubStateValues() []TransitHubState {
	return []TransitHubState{
		TransitHubStateActive,
		TransitHubStateApproved,
		TransitHubStateFailed,
		TransitHubStatePendingApproval,
		TransitHubStatePendingUpdate,
	}
}

// TransitOptionType - Specifies the type of the transitOption.
type TransitOptionType string

const (
	// TransitOptionTypeExpressRoute - TransitOptionType ExpressRoute
	TransitOptionTypeExpressRoute TransitOptionType = "ExpressRoute"
	// TransitOptionTypeGateway - TransitOptionType Gateway
	TransitOptionTypeGateway TransitOptionType = "Gateway"
	// TransitOptionTypePeering - TransitOptionType Peering
	TransitOptionTypePeering TransitOptionType = "Peering"
)

// PossibleTransitOptionTypeValues returns the possible values for the TransitOptionType const type.
func PossibleTransitOptionTypeValues() []TransitOptionType {
	return []TransitOptionType{
		TransitOptionTypeExpressRoute,
		TransitOptionTypeGateway,
		TransitOptionTypePeering,
	}
}
