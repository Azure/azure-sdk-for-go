//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armvisualstudio

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
)

// AccountResource - The response to an account resource GET request.
type AccountResource struct {
	Resource
	// Resource properties.
	Properties map[string]*string `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountResource.
func (a AccountResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	a.Resource.marshalInternal(objectMap)
	populate(objectMap, "properties", a.Properties)
	return json.Marshal(objectMap)
}

// AccountResourceListResult - The response to an account resource list GET request.
type AccountResourceListResult struct {
	// Array of resource details.
	Value []*AccountResource `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountResourceListResult.
func (a AccountResourceListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

// AccountResourceRequest - The body of a PUT request to modify a Visual Studio account resource.
type AccountResourceRequest struct {
	// The account name.
	AccountName *string `json:"accountName,omitempty"`

	// The Azure instance location.
	Location *string `json:"location,omitempty"`

	// The type of the operation.
	OperationType *AccountResourceRequestOperationType `json:"operationType,omitempty"`

	// The custom properties of the resource.
	Properties map[string]*string `json:"properties,omitempty"`

	// The custom tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountResourceRequest.
func (a AccountResourceRequest) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "accountName", a.AccountName)
	populate(objectMap, "location", a.Location)
	populate(objectMap, "operationType", a.OperationType)
	populate(objectMap, "properties", a.Properties)
	populate(objectMap, "tags", a.Tags)
	return json.Marshal(objectMap)
}

// AccountTagRequest - The body of a Patch request to add tags to a Visual Studio account resource.
type AccountTagRequest struct {
	// The custom tags of the resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AccountTagRequest.
func (a AccountTagRequest) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "tags", a.Tags)
	return json.Marshal(objectMap)
}

// AccountsCheckNameAvailabilityOptions contains the optional parameters for the Accounts.CheckNameAvailability method.
type AccountsCheckNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// AccountsCreateOrUpdateOptions contains the optional parameters for the Accounts.CreateOrUpdate method.
type AccountsCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AccountsDeleteOptions contains the optional parameters for the Accounts.Delete method.
type AccountsDeleteOptions struct {
	// placeholder for future optional parameters
}

// AccountsGetOptions contains the optional parameters for the Accounts.Get method.
type AccountsGetOptions struct {
	// placeholder for future optional parameters
}

// AccountsListByResourceGroupOptions contains the optional parameters for the Accounts.ListByResourceGroup method.
type AccountsListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AccountsUpdateOptions contains the optional parameters for the Accounts.Update method.
type AccountsUpdateOptions struct {
	// placeholder for future optional parameters
}

// CheckNameAvailabilityParameter - The body of a POST request to check name availability.
type CheckNameAvailabilityParameter struct {
	// The name of the resource to check availability for.
	ResourceName *string `json:"resourceName,omitempty"`

	// The type of resource to check availability for.
	ResourceType *string `json:"resourceType,omitempty"`
}

// CheckNameAvailabilityResult - The response to a name availability request.
type CheckNameAvailabilityResult struct {
	// The message describing the detailed reason.
	Message *string `json:"message,omitempty"`

	// The value which indicates whether the provided name is available.
	NameAvailable *bool `json:"nameAvailable,omitempty"`
}

// ExtensionResource - The response to an extension resource GET request.
type ExtensionResource struct {
	Resource
	// The extension plan that was purchased.
	Plan *ExtensionResourcePlan `json:"plan,omitempty"`

	// Resource properties.
	Properties map[string]*string `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ExtensionResource.
func (e ExtensionResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	e.Resource.marshalInternal(objectMap)
	populate(objectMap, "plan", e.Plan)
	populate(objectMap, "properties", e.Properties)
	return json.Marshal(objectMap)
}

// ExtensionResourceListResult - The response to an extension resource list GET request.
type ExtensionResourceListResult struct {
	// Array of extension resource details.
	Value []*ExtensionResource `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ExtensionResourceListResult.
func (e ExtensionResourceListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", e.Value)
	return json.Marshal(objectMap)
}

// ExtensionResourcePlan - Plan data for an extension resource.
type ExtensionResourcePlan struct {
	// Name of the plan.
	Name *string `json:"name,omitempty"`

	// Product name.
	Product *string `json:"product,omitempty"`

	// Optional: the promotion code associated with the plan.
	PromotionCode *string `json:"promotionCode,omitempty"`

	// Name of the extension publisher.
	Publisher *string `json:"publisher,omitempty"`

	// A string that uniquely identifies the plan version.
	Version *string `json:"version,omitempty"`
}

// ExtensionResourceRequest - The body of an extension resource PUT request.
type ExtensionResourceRequest struct {
	// The Azure region of the Visual Studio account associated with this request (i.e 'southcentralus'.)
	Location *string `json:"location,omitempty"`

	// Extended information about the plan being purchased for this extension resource.
	Plan *ExtensionResourcePlan `json:"plan,omitempty"`

	// A dictionary of extended properties. This property is currently unused.
	Properties map[string]*string `json:"properties,omitempty"`

	// A dictionary of user-defined tags to be stored with the extension resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ExtensionResourceRequest.
func (e ExtensionResourceRequest) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "location", e.Location)
	populate(objectMap, "plan", e.Plan)
	populate(objectMap, "properties", e.Properties)
	populate(objectMap, "tags", e.Tags)
	return json.Marshal(objectMap)
}

// ExtensionsCreateOptions contains the optional parameters for the Extensions.Create method.
type ExtensionsCreateOptions struct {
	// placeholder for future optional parameters
}

// ExtensionsDeleteOptions contains the optional parameters for the Extensions.Delete method.
type ExtensionsDeleteOptions struct {
	// placeholder for future optional parameters
}

// ExtensionsGetOptions contains the optional parameters for the Extensions.Get method.
type ExtensionsGetOptions struct {
	// placeholder for future optional parameters
}

// ExtensionsListByAccountOptions contains the optional parameters for the Extensions.ListByAccount method.
type ExtensionsListByAccountOptions struct {
	// placeholder for future optional parameters
}

// ExtensionsUpdateOptions contains the optional parameters for the Extensions.Update method.
type ExtensionsUpdateOptions struct {
	// placeholder for future optional parameters
}

// Operation - Properties of an operation supported by the resource provider.
type Operation struct {
	// The properties of the resource operation.
	Display *OperationProperties `json:"display,omitempty"`

	// The name of the resource operation.
	Name *string `json:"name,omitempty"`
}

// OperationListResult - Container for a list of operations supported by a resource provider.
type OperationListResult struct {
	// A list of operations supported by a resource provider.
	Value []*Operation `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationListResult.
func (o OperationListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationProperties - Properties of an operation supported by the resource provider.
type OperationProperties struct {
	// The description of the resource operation.
	Description *string `json:"description,omitempty"`

	// The operation name.
	Operation *string `json:"operation,omitempty"`

	// The provider name.
	Provider *string `json:"provider,omitempty"`

	// The resource name.
	Resource *string `json:"resource,omitempty"`
}

// OperationsListOptions contains the optional parameters for the Operations.List method.
type OperationsListOptions struct {
	// placeholder for future optional parameters
}

// ProjectResource - A Visual Studio Team Services project resource.
type ProjectResource struct {
	Resource
	// Key/value pair of resource properties.
	Properties map[string]*string `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ProjectResource.
func (p ProjectResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	p.Resource.marshalInternal(objectMap)
	populate(objectMap, "properties", p.Properties)
	return json.Marshal(objectMap)
}

// ProjectResourceListResult - The response to a request to list Team Services project resources in a resource group/account.
type ProjectResourceListResult struct {
	// List of project resource details.
	Value []*ProjectResource `json:"value,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ProjectResourceListResult.
func (p ProjectResourceListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// ProjectsBeginCreateOptions contains the optional parameters for the Projects.BeginCreate method.
type ProjectsBeginCreateOptions struct {
	// This parameter is ignored and should be set to an empty string.
	Validating *string
}

// ProjectsGetJobStatusOptions contains the optional parameters for the Projects.GetJobStatus method.
type ProjectsGetJobStatusOptions struct {
	// The job identifier.
	JobID *string
}

// ProjectsGetOptions contains the optional parameters for the Projects.Get method.
type ProjectsGetOptions struct {
	// placeholder for future optional parameters
}

// ProjectsListByResourceGroupOptions contains the optional parameters for the Projects.ListByResourceGroup method.
type ProjectsListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ProjectsUpdateOptions contains the optional parameters for the Projects.Update method.
type ProjectsUpdateOptions struct {
	// placeholder for future optional parameters
}

// Resource - A generic Azure Resource Manager resource.
type Resource struct {
	// Resource location.
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Unique identifier of the resource.
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; Resource name.
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Resource.
func (r Resource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	r.marshalInternal(objectMap)
	return json.Marshal(objectMap)
}

func (r Resource) marshalInternal(objectMap map[string]interface{}) {
	populate(objectMap, "id", r.ID)
	populate(objectMap, "location", r.Location)
	populate(objectMap, "name", r.Name)
	populate(objectMap, "tags", r.Tags)
	populate(objectMap, "type", r.Type)
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}
