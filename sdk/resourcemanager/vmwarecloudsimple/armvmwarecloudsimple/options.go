//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armvmwarecloudsimple

// CustomizationPoliciesClientGetOptions contains the optional parameters for the CustomizationPoliciesClient.Get method.
type CustomizationPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// CustomizationPoliciesClientListOptions contains the optional parameters for the CustomizationPoliciesClient.NewListPager
// method.
type CustomizationPoliciesClientListOptions struct {
	// The filter to apply on the list operation. only type is allowed here as a filter e.g. $filter=type eq 'xxxx'
	Filter *string
}

// DedicatedCloudNodesClientBeginCreateOrUpdateOptions contains the optional parameters for the DedicatedCloudNodesClient.BeginCreateOrUpdate
// method.
type DedicatedCloudNodesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DedicatedCloudNodesClientDeleteOptions contains the optional parameters for the DedicatedCloudNodesClient.Delete method.
type DedicatedCloudNodesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DedicatedCloudNodesClientGetOptions contains the optional parameters for the DedicatedCloudNodesClient.Get method.
type DedicatedCloudNodesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DedicatedCloudNodesClientListByResourceGroupOptions contains the optional parameters for the DedicatedCloudNodesClient.NewListByResourceGroupPager
// method.
type DedicatedCloudNodesClientListByResourceGroupOptions struct {
	// The filter to apply on the list operation
	Filter *string

	// to be used by nextLink implementation
	SkipToken *string

	// The maximum number of record sets to return
	Top *int32
}

// DedicatedCloudNodesClientListBySubscriptionOptions contains the optional parameters for the DedicatedCloudNodesClient.NewListBySubscriptionPager
// method.
type DedicatedCloudNodesClientListBySubscriptionOptions struct {
	// The filter to apply on the list operation
	Filter *string

	// to be used by nextLink implementation
	SkipToken *string

	// The maximum number of record sets to return
	Top *int32
}

// DedicatedCloudNodesClientUpdateOptions contains the optional parameters for the DedicatedCloudNodesClient.Update method.
type DedicatedCloudNodesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// DedicatedCloudServicesClientBeginDeleteOptions contains the optional parameters for the DedicatedCloudServicesClient.BeginDelete
// method.
type DedicatedCloudServicesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DedicatedCloudServicesClientCreateOrUpdateOptions contains the optional parameters for the DedicatedCloudServicesClient.CreateOrUpdate
// method.
type DedicatedCloudServicesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DedicatedCloudServicesClientGetOptions contains the optional parameters for the DedicatedCloudServicesClient.Get method.
type DedicatedCloudServicesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DedicatedCloudServicesClientListByResourceGroupOptions contains the optional parameters for the DedicatedCloudServicesClient.NewListByResourceGroupPager
// method.
type DedicatedCloudServicesClientListByResourceGroupOptions struct {
	// The filter to apply on the list operation
	Filter *string

	// to be used by nextLink implementation
	SkipToken *string

	// The maximum number of record sets to return
	Top *int32
}

// DedicatedCloudServicesClientListBySubscriptionOptions contains the optional parameters for the DedicatedCloudServicesClient.NewListBySubscriptionPager
// method.
type DedicatedCloudServicesClientListBySubscriptionOptions struct {
	// The filter to apply on the list operation
	Filter *string

	// to be used by nextLink implementation
	SkipToken *string

	// The maximum number of record sets to return
	Top *int32
}

// DedicatedCloudServicesClientUpdateOptions contains the optional parameters for the DedicatedCloudServicesClient.Update
// method.
type DedicatedCloudServicesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientGetOptions contains the optional parameters for the OperationsClient.Get method.
type OperationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateCloudsClientGetOptions contains the optional parameters for the PrivateCloudsClient.Get method.
type PrivateCloudsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateCloudsClientListOptions contains the optional parameters for the PrivateCloudsClient.NewListPager method.
type PrivateCloudsClientListOptions struct {
	// placeholder for future optional parameters
}

// ResourcePoolsClientGetOptions contains the optional parameters for the ResourcePoolsClient.Get method.
type ResourcePoolsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ResourcePoolsClientListOptions contains the optional parameters for the ResourcePoolsClient.NewListPager method.
type ResourcePoolsClientListOptions struct {
	// placeholder for future optional parameters
}

// SKUsAvailabilityClientListOptions contains the optional parameters for the SKUsAvailabilityClient.NewListPager method.
type SKUsAvailabilityClientListOptions struct {
	// sku id, if no sku is passed availability for all skus will be returned
	SKUID *string
}

// UsagesClientListOptions contains the optional parameters for the UsagesClient.NewListPager method.
type UsagesClientListOptions struct {
	// The filter to apply on the list operation. only name.value is allowed here as a filter e.g. $filter=name.value eq 'xxxx'
	Filter *string
}

// VirtualMachineTemplatesClientGetOptions contains the optional parameters for the VirtualMachineTemplatesClient.Get method.
type VirtualMachineTemplatesClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachineTemplatesClientListOptions contains the optional parameters for the VirtualMachineTemplatesClient.NewListPager
// method.
type VirtualMachineTemplatesClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualMachinesClient.BeginCreateOrUpdate
// method.
type VirtualMachinesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginDeleteOptions contains the optional parameters for the VirtualMachinesClient.BeginDelete method.
type VirtualMachinesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginStartOptions contains the optional parameters for the VirtualMachinesClient.BeginStart method.
type VirtualMachinesClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginStopOptions contains the optional parameters for the VirtualMachinesClient.BeginStop method.
type VirtualMachinesClientBeginStopOptions struct {
	// body stop mode parameter (reboot, shutdown, etc…)
	M *VirtualMachineStopMode

	// query stop mode parameter (reboot, shutdown, etc…)
	Mode *StopMode

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientBeginUpdateOptions contains the optional parameters for the VirtualMachinesClient.BeginUpdate method.
type VirtualMachinesClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualMachinesClientGetOptions contains the optional parameters for the VirtualMachinesClient.Get method.
type VirtualMachinesClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualMachinesClientListByResourceGroupOptions contains the optional parameters for the VirtualMachinesClient.NewListByResourceGroupPager
// method.
type VirtualMachinesClientListByResourceGroupOptions struct {
	// The filter to apply on the list operation
	Filter *string

	// to be used by nextLink implementation
	SkipToken *string

	// The maximum number of record sets to return
	Top *int32
}

// VirtualMachinesClientListBySubscriptionOptions contains the optional parameters for the VirtualMachinesClient.NewListBySubscriptionPager
// method.
type VirtualMachinesClientListBySubscriptionOptions struct {
	// The filter to apply on the list operation
	Filter *string

	// to be used by nextLink implementation
	SkipToken *string

	// The maximum number of record sets to return
	Top *int32
}

// VirtualNetworksClientGetOptions contains the optional parameters for the VirtualNetworksClient.Get method.
type VirtualNetworksClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworksClientListOptions contains the optional parameters for the VirtualNetworksClient.NewListPager method.
type VirtualNetworksClientListOptions struct {
	// placeholder for future optional parameters
}
