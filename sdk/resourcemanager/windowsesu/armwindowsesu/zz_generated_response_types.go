//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armwindowsesu

import (
	"context"
	armruntime "github.com/Azure/azure-sdk-for-go/sdk/azcore/arm/runtime"
	"net/http"
	"time"
)

// MultipleActivationKeysCreatePollerResponse contains the response from method MultipleActivationKeys.Create.
type MultipleActivationKeysCreatePollerResponse struct {
	// Poller contains an initialized poller.
	Poller *MultipleActivationKeysCreatePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received.
// freq: the time to wait between intervals in absence of a Retry-After header. Allowed minimum is one second.
// A good starting value is 30 seconds. Note that some resources might benefit from a different value.
func (l MultipleActivationKeysCreatePollerResponse) PollUntilDone(ctx context.Context, freq time.Duration) (MultipleActivationKeysCreateResponse, error) {
	respType := MultipleActivationKeysCreateResponse{}
	resp, err := l.Poller.pt.PollUntilDone(ctx, freq, &respType.MultipleActivationKey)
	if err != nil {
		return respType, err
	}
	respType.RawResponse = resp
	return respType, nil
}

// Resume rehydrates a MultipleActivationKeysCreatePollerResponse from the provided client and resume token.
func (l *MultipleActivationKeysCreatePollerResponse) Resume(ctx context.Context, client *MultipleActivationKeysClient, token string) error {
	pt, err := armruntime.NewPollerFromResumeToken("MultipleActivationKeysClient.Create", token, client.pl, client.createHandleError)
	if err != nil {
		return err
	}
	poller := &MultipleActivationKeysCreatePoller{
		pt: pt,
	}
	resp, err := poller.Poll(ctx)
	if err != nil {
		return err
	}
	l.Poller = poller
	l.RawResponse = resp
	return nil
}

// MultipleActivationKeysCreateResponse contains the response from method MultipleActivationKeys.Create.
type MultipleActivationKeysCreateResponse struct {
	MultipleActivationKeysCreateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MultipleActivationKeysCreateResult contains the result from method MultipleActivationKeys.Create.
type MultipleActivationKeysCreateResult struct {
	MultipleActivationKey
}

// MultipleActivationKeysDeleteResponse contains the response from method MultipleActivationKeys.Delete.
type MultipleActivationKeysDeleteResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MultipleActivationKeysGetResponse contains the response from method MultipleActivationKeys.Get.
type MultipleActivationKeysGetResponse struct {
	MultipleActivationKeysGetResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MultipleActivationKeysGetResult contains the result from method MultipleActivationKeys.Get.
type MultipleActivationKeysGetResult struct {
	MultipleActivationKey
}

// MultipleActivationKeysListByResourceGroupResponse contains the response from method MultipleActivationKeys.ListByResourceGroup.
type MultipleActivationKeysListByResourceGroupResponse struct {
	MultipleActivationKeysListByResourceGroupResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MultipleActivationKeysListByResourceGroupResult contains the result from method MultipleActivationKeys.ListByResourceGroup.
type MultipleActivationKeysListByResourceGroupResult struct {
	MultipleActivationKeyList
}

// MultipleActivationKeysListResponse contains the response from method MultipleActivationKeys.List.
type MultipleActivationKeysListResponse struct {
	MultipleActivationKeysListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MultipleActivationKeysListResult contains the result from method MultipleActivationKeys.List.
type MultipleActivationKeysListResult struct {
	MultipleActivationKeyList
}

// MultipleActivationKeysUpdateResponse contains the response from method MultipleActivationKeys.Update.
type MultipleActivationKeysUpdateResponse struct {
	MultipleActivationKeysUpdateResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// MultipleActivationKeysUpdateResult contains the result from method MultipleActivationKeys.Update.
type MultipleActivationKeysUpdateResult struct {
	MultipleActivationKey
}

// OperationsListResponse contains the response from method Operations.List.
type OperationsListResponse struct {
	OperationsListResult
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationsListResult contains the result from method Operations.List.
type OperationsListResult struct {
	OperationList
}
