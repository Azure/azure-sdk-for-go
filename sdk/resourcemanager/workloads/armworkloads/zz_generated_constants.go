//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armworkloads

const (
	moduleName    = "armworkloads"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication     CreatedByType = "Application"
	CreatedByTypeKey             CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser            CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// OperationProperties - Defines the workload operation origin.
type OperationProperties string

const (
	OperationPropertiesNotSpecified OperationProperties = "NotSpecified"
	OperationPropertiesSystem       OperationProperties = "System"
	OperationPropertiesUser         OperationProperties = "User"
)

// PossibleOperationPropertiesValues returns the possible values for the OperationProperties const type.
func PossibleOperationPropertiesValues() []OperationProperties {
	return []OperationProperties{
		OperationPropertiesNotSpecified,
		OperationPropertiesSystem,
		OperationPropertiesUser,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	OriginSystem     Origin = "system"
	OriginUser       Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// RoutingPreference - Sets the routing preference of the monitor. By default only RFC1918 traffic is routed to the customer
// VNET.
type RoutingPreference string

const (
	RoutingPreferenceDefault  RoutingPreference = "Default"
	RoutingPreferenceRouteAll RoutingPreference = "RouteAll"
)

// PossibleRoutingPreferenceValues returns the possible values for the RoutingPreference const type.
func PossibleRoutingPreferenceValues() []RoutingPreference {
	return []RoutingPreference{
		RoutingPreferenceDefault,
		RoutingPreferenceRouteAll,
	}
}

// WorkloadMonitorActionType - Defines the action type of workload operation.
type WorkloadMonitorActionType string

const (
	WorkloadMonitorActionTypeInternal     WorkloadMonitorActionType = "Internal"
	WorkloadMonitorActionTypeNotSpecified WorkloadMonitorActionType = "NotSpecified"
)

// PossibleWorkloadMonitorActionTypeValues returns the possible values for the WorkloadMonitorActionType const type.
func PossibleWorkloadMonitorActionTypeValues() []WorkloadMonitorActionType {
	return []WorkloadMonitorActionType{
		WorkloadMonitorActionTypeInternal,
		WorkloadMonitorActionTypeNotSpecified,
	}
}

// WorkloadMonitorProvisioningState - State of provisioning of the monitor.
type WorkloadMonitorProvisioningState string

const (
	WorkloadMonitorProvisioningStateAccepted  WorkloadMonitorProvisioningState = "Accepted"
	WorkloadMonitorProvisioningStateCreating  WorkloadMonitorProvisioningState = "Creating"
	WorkloadMonitorProvisioningStateDeleting  WorkloadMonitorProvisioningState = "Deleting"
	WorkloadMonitorProvisioningStateFailed    WorkloadMonitorProvisioningState = "Failed"
	WorkloadMonitorProvisioningStateMigrating WorkloadMonitorProvisioningState = "Migrating"
	WorkloadMonitorProvisioningStateSucceeded WorkloadMonitorProvisioningState = "Succeeded"
	WorkloadMonitorProvisioningStateUpdating  WorkloadMonitorProvisioningState = "Updating"
)

// PossibleWorkloadMonitorProvisioningStateValues returns the possible values for the WorkloadMonitorProvisioningState const type.
func PossibleWorkloadMonitorProvisioningStateValues() []WorkloadMonitorProvisioningState {
	return []WorkloadMonitorProvisioningState{
		WorkloadMonitorProvisioningStateAccepted,
		WorkloadMonitorProvisioningStateCreating,
		WorkloadMonitorProvisioningStateDeleting,
		WorkloadMonitorProvisioningStateFailed,
		WorkloadMonitorProvisioningStateMigrating,
		WorkloadMonitorProvisioningStateSucceeded,
		WorkloadMonitorProvisioningStateUpdating,
	}
}
