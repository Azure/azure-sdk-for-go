// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armresources

import (
	"context"
	"net/http"
	"time"
)

// BooleanResponse contains a boolean response.
type BooleanResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Success indicates if the operation succeeded or failed.
	Success bool
}

// DeploymentExportResultResponse is the response envelope for operations that return a DeploymentExportResult type.
type DeploymentExportResultResponse struct {
	// The deployment export result.
	DeploymentExportResult *DeploymentExportResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentExtendedPollerResponse is the response envelope for operations that asynchronously return a DeploymentExtended type.
type DeploymentExtendedPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DeploymentExtendedResponse, error)

	// Poller contains an initialized poller.
	Poller DeploymentExtendedPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentExtendedResponse is the response envelope for operations that return a DeploymentExtended type.
type DeploymentExtendedResponse struct {
	// Deployment information.
	DeploymentExtended *DeploymentExtended

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentListResultResponse is the response envelope for operations that return a DeploymentListResult type.
type DeploymentListResultResponse struct {
	// List of deployments.
	DeploymentListResult *DeploymentListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentOperationResponse is the response envelope for operations that return a DeploymentOperation type.
type DeploymentOperationResponse struct {
	// Deployment operation information.
	DeploymentOperation *DeploymentOperation

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentOperationsListResultResponse is the response envelope for operations that return a DeploymentOperationsListResult type.
type DeploymentOperationsListResultResponse struct {
	// List of deployment operations.
	DeploymentOperationsListResult *DeploymentOperationsListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentValidateResultPollerResponse is the response envelope for operations that asynchronously return a DeploymentValidateResult type.
type DeploymentValidateResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DeploymentValidateResultResponse, error)

	// Poller contains an initialized poller.
	Poller DeploymentValidateResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentValidateResultResponse is the response envelope for operations that return a DeploymentValidateResult type.
type DeploymentValidateResultResponse struct {
	// Information from validate template deployment response.
	DeploymentValidateResult *DeploymentValidateResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GenericResourcePollerResponse is the response envelope for operations that asynchronously return a GenericResource type.
type GenericResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (GenericResourceResponse, error)

	// Poller contains an initialized poller.
	Poller GenericResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GenericResourceResponse is the response envelope for operations that return a GenericResource type.
type GenericResourceResponse struct {
	// Resource information.
	GenericResource *GenericResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationListResultResponse is the response envelope for operations that return a OperationListResult type.
type OperationListResultResponse struct {
	// Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results.
	OperationListResult *OperationListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProviderListResultResponse is the response envelope for operations that return a ProviderListResult type.
type ProviderListResultResponse struct {
	// List of resource providers.
	ProviderListResult *ProviderListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProviderPermissionListResultResponse is the response envelope for operations that return a ProviderPermissionListResult type.
type ProviderPermissionListResultResponse struct {
	// List of provider permissions.
	ProviderPermissionListResult *ProviderPermissionListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProviderResourceTypeListResultResponse is the response envelope for operations that return a ProviderResourceTypeListResult type.
type ProviderResourceTypeListResultResponse struct {
	// List of resource types of a resource provider.
	ProviderResourceTypeListResult *ProviderResourceTypeListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProviderResponse is the response envelope for operations that return a Provider type.
type ProviderResponse struct {
	// Resource provider information.
	Provider *Provider

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGroupExportResultPollerResponse is the response envelope for operations that asynchronously return a ResourceGroupExportResult type.
type ResourceGroupExportResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ResourceGroupExportResultResponse, error)

	// Poller contains an initialized poller.
	Poller ResourceGroupExportResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ResourceGroupExportResultResponse is the response envelope for operations that return a ResourceGroupExportResult type.
type ResourceGroupExportResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Resource group export result.
	ResourceGroupExportResult *ResourceGroupExportResult
}

// ResourceGroupListResultResponse is the response envelope for operations that return a ResourceGroupListResult type.
type ResourceGroupListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// List of resource groups.
	ResourceGroupListResult *ResourceGroupListResult
}

// ResourceGroupResponse is the response envelope for operations that return a ResourceGroup type.
type ResourceGroupResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Resource group information.
	ResourceGroup *ResourceGroup
}

// ResourceListResultResponse is the response envelope for operations that return a ResourceListResult type.
type ResourceListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// List of resource groups.
	ResourceListResult *ResourceListResult
}

// TagDetailsResponse is the response envelope for operations that return a TagDetails type.
type TagDetailsResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Tag details.
	TagDetails *TagDetails
}

// TagValueResponse is the response envelope for operations that return a TagValue type.
type TagValueResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Tag information.
	TagValue *TagValue
}

// TagsListResultResponse is the response envelope for operations that return a TagsListResult type.
type TagsListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// List of subscription tags.
	TagsListResult *TagsListResult
}

// TagsResourceResponse is the response envelope for operations that return a TagsResource type.
type TagsResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Wrapper resource for tags API requests and responses.
	TagsResource *TagsResource
}

// TemplateHashResultResponse is the response envelope for operations that return a TemplateHashResult type.
type TemplateHashResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Result of the request to calculate template hash. It contains a string of minified template and its hash.
	TemplateHashResult *TemplateHashResult
}

// WhatIfOperationResultPollerResponse is the response envelope for operations that asynchronously return a WhatIfOperationResult type.
type WhatIfOperationResultPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (WhatIfOperationResultResponse, error)

	// Poller contains an initialized poller.
	Poller WhatIfOperationResultPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// WhatIfOperationResultResponse is the response envelope for operations that return a WhatIfOperationResult type.
type WhatIfOperationResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results.
	WhatIfOperationResult *WhatIfOperationResult
}
