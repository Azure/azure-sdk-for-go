//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azartifacts

import (
	"context"
	"net/http"
	"time"
)

// ActivityRunsQueryResponseResponse is the response envelope for operations that return a ActivityRunsQueryResponse type.
type ActivityRunsQueryResponseResponse struct {
	// A list activity runs.
	ActivityRunsQueryResponse *ActivityRunsQueryResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// AddDataFlowToDebugSessionResponseResponse is the response envelope for operations that return a AddDataFlowToDebugSessionResponse type.
type AddDataFlowToDebugSessionResponseResponse struct {
	// Response body structure for starting data flow debug session.
	AddDataFlowToDebugSessionResponse *AddDataFlowToDebugSessionResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BigDataPoolResourceInfoListResultResponse is the response envelope for operations that return a BigDataPoolResourceInfoListResult type.
type BigDataPoolResourceInfoListResultResponse struct {
	// Collection of Big Data pool information
	BigDataPoolResourceInfoListResult *BigDataPoolResourceInfoListResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// BigDataPoolResourceInfoResponse is the response envelope for operations that return a BigDataPoolResourceInfo type.
type BigDataPoolResourceInfoResponse struct {
	// A Big Data pool
	BigDataPoolResourceInfo *BigDataPoolResourceInfo

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CreateDataFlowDebugSessionResponsePollerResponse is the response envelope for operations that asynchronously return a CreateDataFlowDebugSessionResponse
// type.
type CreateDataFlowDebugSessionResponsePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (CreateDataFlowDebugSessionResponseResponse, error)

	// Poller contains an initialized poller.
	Poller CreateDataFlowDebugSessionResponsePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CreateDataFlowDebugSessionResponseResponse is the response envelope for operations that return a CreateDataFlowDebugSessionResponse type.
type CreateDataFlowDebugSessionResponseResponse struct {
	// Response body structure for creating data flow debug session.
	CreateDataFlowDebugSessionResponse *CreateDataFlowDebugSessionResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// CreateRunResponseResponse is the response envelope for operations that return a CreateRunResponse type.
type CreateRunResponseResponse struct {
	// Response body with a run identifier.
	CreateRunResponse *CreateRunResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DataFlowDebugCommandResponsePollerResponse is the response envelope for operations that asynchronously return a DataFlowDebugCommandResponse type.
type DataFlowDebugCommandResponsePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DataFlowDebugCommandResponseResponse, error)

	// Poller contains an initialized poller.
	Poller DataFlowDebugCommandResponsePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DataFlowDebugCommandResponseResponse is the response envelope for operations that return a DataFlowDebugCommandResponse type.
type DataFlowDebugCommandResponseResponse struct {
	// Response body structure of data flow result for data preview, statistics or expression preview.
	DataFlowDebugCommandResponse *DataFlowDebugCommandResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DataFlowListResponseResponse is the response envelope for operations that return a DataFlowListResponse type.
type DataFlowListResponseResponse struct {
	// A list of data flow resources.
	DataFlowListResponse *DataFlowListResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DataFlowResourcePollerResponse is the response envelope for operations that asynchronously return a DataFlowResource type.
type DataFlowResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DataFlowResourceResponse, error)

	// Poller contains an initialized poller.
	Poller DataFlowResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DataFlowResourceResponse is the response envelope for operations that return a DataFlowResource type.
type DataFlowResourceResponse struct {
	// Data flow resource type.
	DataFlowResource *DataFlowResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DatasetListResponseResponse is the response envelope for operations that return a DatasetListResponse type.
type DatasetListResponseResponse struct {
	// A list of dataset resources.
	DatasetListResponse *DatasetListResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DatasetResourcePollerResponse is the response envelope for operations that asynchronously return a DatasetResource type.
type DatasetResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DatasetResourceResponse, error)

	// Poller contains an initialized poller.
	Poller DatasetResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DatasetResourceResponse is the response envelope for operations that return a DatasetResource type.
type DatasetResourceResponse struct {
	// Dataset resource type.
	DatasetResource *DatasetResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// GitHubAccessTokenResponseResponse is the response envelope for operations that return a GitHubAccessTokenResponse type.
type GitHubAccessTokenResponseResponse struct {
	GitHubAccessTokenResponse *GitHubAccessTokenResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IntegrationRuntimeListResponseResponse is the response envelope for operations that return a IntegrationRuntimeListResponse type.
type IntegrationRuntimeListResponseResponse struct {
	// A list of integration runtime resources.
	IntegrationRuntimeListResponse *IntegrationRuntimeListResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// IntegrationRuntimeResourceResponse is the response envelope for operations that return a IntegrationRuntimeResource type.
type IntegrationRuntimeResourceResponse struct {
	// Integration runtime resource type.
	IntegrationRuntimeResource *IntegrationRuntimeResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LibraryListResponseResponse is the response envelope for operations that return a LibraryListResponse type.
type LibraryListResponseResponse struct {
	// A list of Library resources.
	LibraryListResponse *LibraryListResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LibraryResourceInfoPollerResponse is the response envelope for operations that asynchronously return a LibraryResourceInfo type.
type LibraryResourceInfoPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (LibraryResourceInfoResponse, error)

	// Poller contains an initialized poller.
	Poller LibraryResourceInfoPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LibraryResourceInfoResponse is the response envelope for operations that return a LibraryResourceInfo type.
type LibraryResourceInfoResponse struct {
	// Library resource info
	LibraryResourceInfo *LibraryResourceInfo

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LibraryResourceResponse is the response envelope for operations that return a LibraryResource type.
type LibraryResourceResponse struct {
	// Library response details
	LibraryResource *LibraryResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LinkedServiceListResponseResponse is the response envelope for operations that return a LinkedServiceListResponse type.
type LinkedServiceListResponseResponse struct {
	// A list of linked service resources.
	LinkedServiceListResponse *LinkedServiceListResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LinkedServiceResourcePollerResponse is the response envelope for operations that asynchronously return a LinkedServiceResource type.
type LinkedServiceResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (LinkedServiceResourceResponse, error)

	// Poller contains an initialized poller.
	Poller LinkedServiceResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LinkedServiceResourceResponse is the response envelope for operations that return a LinkedServiceResource type.
type LinkedServiceResourceResponse struct {
	// Linked service resource type.
	LinkedServiceResource *LinkedServiceResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotebookListResponseResponse is the response envelope for operations that return a NotebookListResponse type.
type NotebookListResponseResponse struct {
	// A list of Notebook resources.
	NotebookListResponse *NotebookListResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotebookResourcePollerResponse is the response envelope for operations that asynchronously return a NotebookResource type.
type NotebookResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (NotebookResourceResponse, error)

	// Poller contains an initialized poller.
	Poller NotebookResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// NotebookResourceResponse is the response envelope for operations that return a NotebookResource type.
type NotebookResourceResponse struct {
	// Notebook resource type.
	NotebookResource *NotebookResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// OperationResultResponse is the response envelope for operations that return a OperationResult type.
type OperationResultResponse struct {
	// Operation status for the operation
	OperationResult *OperationResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineListResponseResponse is the response envelope for operations that return a PipelineListResponse type.
type PipelineListResponseResponse struct {
	// A list of pipeline resources.
	PipelineListResponse *PipelineListResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineResourcePollerResponse is the response envelope for operations that asynchronously return a PipelineResource type.
type PipelineResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (PipelineResourceResponse, error)

	// Poller contains an initialized poller.
	Poller PipelineResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineResourceResponse is the response envelope for operations that return a PipelineResource type.
type PipelineResourceResponse struct {
	// Pipeline resource type.
	PipelineResource *PipelineResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineRunResponse is the response envelope for operations that return a PipelineRun type.
type PipelineRunResponse struct {
	// Information about a pipeline run.
	PipelineRun *PipelineRun

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// PipelineRunsQueryResponseResponse is the response envelope for operations that return a PipelineRunsQueryResponse type.
type PipelineRunsQueryResponseResponse struct {
	// A list pipeline runs.
	PipelineRunsQueryResponse *PipelineRunsQueryResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// QueryDataFlowDebugSessionsResponseResponse is the response envelope for operations that return a QueryDataFlowDebugSessionsResponse type.
type QueryDataFlowDebugSessionsResponseResponse struct {
	// A list of active debug sessions.
	QueryDataFlowDebugSessionsResponse *QueryDataFlowDebugSessionsResponse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SQLPoolInfoListResultResponse is the response envelope for operations that return a SQLPoolInfoListResult type.
type SQLPoolInfoListResultResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// List of SQL pools
	SQLPoolInfoListResult *SQLPoolInfoListResult
}

// SQLPoolResponse is the response envelope for operations that return a SQLPool type.
type SQLPoolResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A SQL Analytics pool
	SQLPool *SQLPool
}

// SQLScriptResourcePollerResponse is the response envelope for operations that asynchronously return a SQLScriptResource type.
type SQLScriptResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SQLScriptResourceResponse, error)

	// Poller contains an initialized poller.
	Poller SQLScriptResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SQLScriptResourceResponse is the response envelope for operations that return a SQLScriptResource type.
type SQLScriptResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Sql Script resource type.
	SQLScriptResource *SQLScriptResource
}

// SQLScriptsListResponseResponse is the response envelope for operations that return a SQLScriptsListResponse type.
type SQLScriptsListResponseResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A list of sql scripts resources.
	SQLScriptsListResponse *SQLScriptsListResponse
}

// SparkBatchJobPollerResponse is the response envelope for operations that asynchronously return a SparkBatchJob type.
type SparkBatchJobPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SparkBatchJobResponse, error)

	// Poller contains an initialized poller.
	Poller SparkBatchJobPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SparkBatchJobResponse is the response envelope for operations that return a SparkBatchJob type.
type SparkBatchJobResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse   *http.Response
	SparkBatchJob *SparkBatchJob
}

// SparkJobDefinitionResourcePollerResponse is the response envelope for operations that asynchronously return a SparkJobDefinitionResource type.
type SparkJobDefinitionResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SparkJobDefinitionResourceResponse, error)

	// Poller contains an initialized poller.
	Poller SparkJobDefinitionResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SparkJobDefinitionResourceResponse is the response envelope for operations that return a SparkJobDefinitionResource type.
type SparkJobDefinitionResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Spark job definition resource type.
	SparkJobDefinitionResource *SparkJobDefinitionResource
}

// SparkJobDefinitionsListResponseResponse is the response envelope for operations that return a SparkJobDefinitionsListResponse type.
type SparkJobDefinitionsListResponseResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A list of spark job definitions resources.
	SparkJobDefinitionsListResponse *SparkJobDefinitionsListResponse
}

// TriggerListResponseResponse is the response envelope for operations that return a TriggerListResponse type.
type TriggerListResponseResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A list of trigger resources.
	TriggerListResponse *TriggerListResponse
}

// TriggerResourcePollerResponse is the response envelope for operations that asynchronously return a TriggerResource type.
type TriggerResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (TriggerResourceResponse, error)

	// Poller contains an initialized poller.
	Poller TriggerResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TriggerResourceResponse is the response envelope for operations that return a TriggerResource type.
type TriggerResourceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Trigger resource type.
	TriggerResource *TriggerResource
}

// TriggerRunsQueryResponseResponse is the response envelope for operations that return a TriggerRunsQueryResponse type.
type TriggerRunsQueryResponseResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A list of trigger runs.
	TriggerRunsQueryResponse *TriggerRunsQueryResponse
}

// TriggerSubscriptionOperationStatusPollerResponse is the response envelope for operations that asynchronously return a TriggerSubscriptionOperationStatus
// type.
type TriggerSubscriptionOperationStatusPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (TriggerSubscriptionOperationStatusResponse, error)

	// Poller contains an initialized poller.
	Poller TriggerSubscriptionOperationStatusPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// TriggerSubscriptionOperationStatusResponse is the response envelope for operations that return a TriggerSubscriptionOperationStatus type.
type TriggerSubscriptionOperationStatusResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// Defines the response of a trigger subscription operation.
	TriggerSubscriptionOperationStatus *TriggerSubscriptionOperationStatus
}

// WorkspaceResponse is the response envelope for operations that return a Workspace type.
type WorkspaceResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response

	// A workspace
	Workspace *Workspace
}
