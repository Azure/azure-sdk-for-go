package insights

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"net/http"
	"time"
)

// Marker represents an opaque value used in paged responses.
type Marker struct {
	val *string
}

// NotDone returns true if the list enumeration should be started or is not yet complete. Specifically, NotDone returns true
// for a just-initialized (zero value) Marker indicating that you should make an initial request to get a result portion from
// the service. NotDone also returns true whenever the service returns an interim result portion. NotDone returns false only
// after the service has returned the final result portion.
func (m Marker) NotDone() bool {
	return m.val == nil || *m.val != ""
}

// UnmarshalXML implements the xml.Unmarshaler interface for Marker.
func (m *Marker) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	var out string
	err := d.DecodeElement(&out, &start)
	m.val = &out
	return err
}

// ApplicationType enumerates the values for application type.
type ApplicationType string

const (
	// ApplicationNone represents an empty ApplicationType.
	ApplicationNone ApplicationType = ""
	// ApplicationOther ...
	ApplicationOther ApplicationType = "other"
	// ApplicationWeb ...
	ApplicationWeb ApplicationType = "web"
)

// FlowType enumerates the values for flow type.
type FlowType string

const (
	// FlowBluefield ...
	FlowBluefield FlowType = "Bluefield"
	// FlowNone represents an empty FlowType.
	FlowNone FlowType = ""
)

// RequestSourceType enumerates the values for request source.
type RequestSourceType string

const (
	// RequestSourceNone represents an empty RequestSourceType.
	RequestSourceNone RequestSourceType = ""
	// RequestSourceRest ...
	RequestSourceRest RequestSourceType = "rest"
)

// WebTestKindType enumerates the values for web test kind.
type WebTestKindType string

const (
	// WebTestKindMultistep ...
	WebTestKindMultistep WebTestKindType = "multistep"
	// WebTestKindNone represents an empty WebTestKindType.
	WebTestKindNone WebTestKindType = ""
	// WebTestKindPing ...
	WebTestKindPing WebTestKindType = "ping"
)

// APIKeyRequest - An Application Insights component API Key createion request definition.
type APIKeyRequest struct {
	// Name - The name of the API Key.
	Name *string `json:"name,omitempty"`
	// LinkedReadProperties - The read access rights of this API Key.
	LinkedReadProperties []string `json:"linkedReadProperties,omitempty"`
	// LinkedWriteProperties - The write access rights of this API Key.
	LinkedWriteProperties []string `json:"linkedWriteProperties,omitempty"`
}

// ApplicationInsightsComponent - An Application Insights component definition.
type ApplicationInsightsComponent struct {
	rawResponse *http.Response
	// ID - Azure resource Id
	ID *string `json:"id,omitempty"`
	// Name - Azure resource name
	Name *string `json:"name,omitempty"`
	// Type - Azure resource type
	Type *string `json:"type,omitempty"`
	// Location - Resource location
	Location string `json:"location,omitempty"`
	// Tags - Resource tags
	Tags map[string]string `json:"tags,omitempty"`
	// Kind - The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.
	Kind string `json:"kind,omitempty"`
	// Properties - Properties that define an Application Insights component resource.
	*ApplicationInsightsComponentProperties `json:"properties,omitempty"`
}

// Response returns the raw HTTP response object.
func (aic ApplicationInsightsComponent) Response() *http.Response {
	return aic.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aic ApplicationInsightsComponent) StatusCode() int {
	return aic.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aic ApplicationInsightsComponent) Status() string {
	return aic.rawResponse.Status
}

// ApplicationInsightsComponentAPIKey - Properties that define an API key of an Application Insights Component.
type ApplicationInsightsComponentAPIKey struct {
	rawResponse *http.Response
	// ID - The unique ID of the API key inside an Applciation Insights component. It is auto generated when the API key is created.
	ID *string `json:"id,omitempty"`
	// APIKey - The API key value. It will be only return once when the API Key was created.
	APIKey *string `json:"apiKey,omitempty"`
	// CreatedDate - The create date of this API key.
	CreatedDate *string `json:"createdDate,omitempty"`
	// Name - The name of the API key.
	Name *string `json:"name,omitempty"`
	// LinkedReadProperties - The read access rights of this API Key.
	LinkedReadProperties []string `json:"linkedReadProperties,omitempty"`
	// LinkedWriteProperties - The write access rights of this API Key.
	LinkedWriteProperties []string `json:"linkedWriteProperties,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicak ApplicationInsightsComponentAPIKey) Response() *http.Response {
	return aicak.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicak ApplicationInsightsComponentAPIKey) StatusCode() int {
	return aicak.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicak ApplicationInsightsComponentAPIKey) Status() string {
	return aicak.rawResponse.Status
}

// ApplicationInsightsComponentAPIKeyListResult - Describes the list of API Keys of an Application Insights Component.
type ApplicationInsightsComponentAPIKeyListResult struct {
	rawResponse *http.Response
	// Value - List of API Key definitions.
	Value []ApplicationInsightsComponentAPIKey `json:"value,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicaklr ApplicationInsightsComponentAPIKeyListResult) Response() *http.Response {
	return aicaklr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicaklr ApplicationInsightsComponentAPIKeyListResult) StatusCode() int {
	return aicaklr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicaklr ApplicationInsightsComponentAPIKeyListResult) Status() string {
	return aicaklr.rawResponse.Status
}

// ApplicationInsightsComponentAvailableFeatures - An Application Insights component available features.
type ApplicationInsightsComponentAvailableFeatures struct {
	rawResponse *http.Response
	// Result - A list of Application Insigths component feature.
	Result []ApplicationInsightsComponentFeature `json:"Result,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicaf ApplicationInsightsComponentAvailableFeatures) Response() *http.Response {
	return aicaf.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicaf ApplicationInsightsComponentAvailableFeatures) StatusCode() int {
	return aicaf.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicaf ApplicationInsightsComponentAvailableFeatures) Status() string {
	return aicaf.rawResponse.Status
}

// ApplicationInsightsComponentBillingFeatures - An Application Insights component billing features
type ApplicationInsightsComponentBillingFeatures struct {
	rawResponse *http.Response
	// DataVolumeCap - An Application Insights component daily data volumne cap
	DataVolumeCap *ApplicationInsightsComponentDataVolumeCap `json:"DataVolumeCap,omitempty"`
	// CurrentBillingFeatures - Current enabled pricing plan. When the component is in the Enterprise plan, this will list both 'Basic' and 'Application Insights Enterprise'.
	CurrentBillingFeatures []string `json:"CurrentBillingFeatures,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicbf ApplicationInsightsComponentBillingFeatures) Response() *http.Response {
	return aicbf.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicbf ApplicationInsightsComponentBillingFeatures) StatusCode() int {
	return aicbf.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicbf ApplicationInsightsComponentBillingFeatures) Status() string {
	return aicbf.rawResponse.Status
}

// ApplicationInsightsComponentDataVolumeCap - An Application Insights component daily data volumne cap
type ApplicationInsightsComponentDataVolumeCap struct {
	// Cap - Daily data volume cap in GB.
	Cap *float64 `json:"Cap,omitempty"`
	// ResetTime - Daily data volume cap UTC reset hour.
	ResetTime *int32 `json:"ResetTime,omitempty"`
	// WarningThreshold - Reserved, not used for now.
	WarningThreshold *int32 `json:"WarningThreshold,omitempty"`
	// StopSendNotificationWhenHitThreshold - Reserved, not used for now.
	StopSendNotificationWhenHitThreshold *bool `json:"StopSendNotificationWhenHitThreshold,omitempty"`
	// StopSendNotificationWhenHitCap - Do not send a notification email when the daily data volume cap is met.
	StopSendNotificationWhenHitCap *bool `json:"StopSendNotificationWhenHitCap,omitempty"`
	// MaxHistoryCap - Maximum daily data volume cap that the user can set for this component.
	MaxHistoryCap *float64 `json:"MaxHistoryCap,omitempty"`
}

// ApplicationInsightsComponentExportConfiguration - Properties that define a Continuous Export configuration.
type ApplicationInsightsComponentExportConfiguration struct {
	rawResponse *http.Response
	// ExportID - The unique ID of the export configuration inside an Applciation Insights component. It is auto generated when the Continuous Export configuration is created.
	ExportID *string `json:"ExportId,omitempty"`
	// InstrumentationKey - The instrumentation key of the Application Insights component.
	InstrumentationKey *string `json:"InstrumentationKey,omitempty"`
	// RecordTypes - This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
	RecordTypes *string `json:"RecordTypes,omitempty"`
	// ApplicationName - The name of the Application Insights component.
	ApplicationName *string `json:"ApplicationName,omitempty"`
	// SubscriptionID - The subscription of the Application Insights component.
	SubscriptionID *string `json:"SubscriptionId,omitempty"`
	// ResourceGroup - The resource group of the Application Insights component.
	ResourceGroup *string `json:"ResourceGroup,omitempty"`
	// DestinationStorageSubscriptionID - The destination storage account subscription ID.
	DestinationStorageSubscriptionID *string `json:"DestinationStorageSubscriptionId,omitempty"`
	// DestinationStorageLocationID - The destination account location ID.
	DestinationStorageLocationID *string `json:"DestinationStorageLocationId,omitempty"`
	// DestinationAccountID - The name of destination account.
	DestinationAccountID *string `json:"DestinationAccountId,omitempty"`
	// DestinationType - The destination type.
	DestinationType *string `json:"DestinationType,omitempty"`
	// IsUserEnabled - This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
	IsUserEnabled *string `json:"IsUserEnabled,omitempty"`
	// LastUserUpdate - Last time the Continuous Export configuration was updated.
	LastUserUpdate *string `json:"LastUserUpdate,omitempty"`
	// NotificationQueueEnabled - Deprecated
	NotificationQueueEnabled *string `json:"NotificationQueueEnabled,omitempty"`
	// ExportStatus - This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
	ExportStatus *string `json:"ExportStatus,omitempty"`
	// LastSuccessTime - The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
	LastSuccessTime *string `json:"LastSuccessTime,omitempty"`
	// LastGapTime - The last time the Continuous Export configuration started failing.
	LastGapTime *string `json:"LastGapTime,omitempty"`
	// PermanentErrorReason - This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
	PermanentErrorReason *string `json:"PermanentErrorReason,omitempty"`
	// StorageName - The name of the destination storage account.
	StorageName *string `json:"StorageName,omitempty"`
	// ContainerName - The name of the destination storage container.
	ContainerName *string `json:"ContainerName,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicec ApplicationInsightsComponentExportConfiguration) Response() *http.Response {
	return aicec.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicec ApplicationInsightsComponentExportConfiguration) StatusCode() int {
	return aicec.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicec ApplicationInsightsComponentExportConfiguration) Status() string {
	return aicec.rawResponse.Status
}

// ApplicationInsightsComponentExportRequest - An Application Insights component Continuous Export configuration
// request definition.
type ApplicationInsightsComponentExportRequest struct {
	// RecordTypes - The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
	RecordTypes *string `json:"RecordTypes,omitempty"`
	// DestinationType - The Continuous Export destination type. This has to be 'Blob'.
	DestinationType *string `json:"DestinationType,omitempty"`
	// DestinationAddress - The SAS URL for the destination storage container. It must grant write permission.
	DestinationAddress *string `json:"DestinationAddress,omitempty"`
	// IsEnabled - Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'.
	IsEnabled *string `json:"IsEnabled,omitempty"`
	// NotificationQueueEnabled - Deprecated
	NotificationQueueEnabled *string `json:"NotificationQueueEnabled,omitempty"`
	// NotificationQueueURI - Deprecated
	NotificationQueueURI *string `json:"NotificationQueueUri,omitempty"`
	// DestinationStorageSubscriptionID - The subscription ID of the destination storage container.
	DestinationStorageSubscriptionID *string `json:"DestinationStorageSubscriptionId,omitempty"`
	// DestinationStorageLocationID - The location ID of the destination storage container.
	DestinationStorageLocationID *string `json:"DestinationStorageLocationId,omitempty"`
	// DestinationAccountID - The name of destination storage account.
	DestinationAccountID *string `json:"DestinationAccountId,omitempty"`
}

// ApplicationInsightsComponentFeature - An Application Insights component daily data volume cap status
type ApplicationInsightsComponentFeature struct {
	// FeatureName - The pricing feature name.
	FeatureName *string `json:"FeatureName,omitempty"`
	// MeterID - The meter id used for the feature.
	MeterID *string `json:"MeterId,omitempty"`
	// MeterRateFrequency - The meter meter rate for the feature's meter.
	MeterRateFrequency *string `json:"MeterRateFrequency,omitempty"`
	// ResouceID - Reserved, not used now.
	ResouceID *string `json:"ResouceId,omitempty"`
	// IsHidden - Reserved, not used now.
	IsHidden *bool `json:"IsHidden,omitempty"`
	// Capabilities - A list of Application Insigths component feature capability.
	Capabilities []ApplicationInsightsComponentFeatureCapability `json:"Capabilities,omitempty"`
	// Title - Desplay name of the feature.
	Title *string `json:"Title,omitempty"`
	// IsMainFeature - Whether can apply addon feature on to it.
	IsMainFeature *bool `json:"IsMainFeature,omitempty"`
	// SupportedAddonFeatures - The add on features on main feature.
	SupportedAddonFeatures *string `json:"SupportedAddonFeatures,omitempty"`
}

// ApplicationInsightsComponentFeatureCapabilities - An Application Insights component feature capabilities
type ApplicationInsightsComponentFeatureCapabilities struct {
	rawResponse *http.Response
	// SupportExportData - Whether allow to use continuous export feature.
	SupportExportData *bool `json:"SupportExportData,omitempty"`
	// BurstThrottlePolicy - Reserved, not used now.
	BurstThrottlePolicy *string `json:"BurstThrottlePolicy,omitempty"`
	// MetadataClass - Reserved, not used now.
	MetadataClass *string `json:"MetadataClass,omitempty"`
	// LiveStreamMetrics - Reserved, not used now.
	LiveStreamMetrics *bool `json:"LiveStreamMetrics,omitempty"`
	// ApplicationMap - Reserved, not used now.
	ApplicationMap *bool `json:"ApplicationMap,omitempty"`
	// WorkItemIntegration - Whether allow to use work item integration feature.
	WorkItemIntegration *bool `json:"WorkItemIntegration,omitempty"`
	// PowerBIIntegration - Reserved, not used now.
	PowerBIIntegration *bool `json:"PowerBIIntegration,omitempty"`
	// OpenSchema - Reserved, not used now.
	OpenSchema *bool `json:"OpenSchema,omitempty"`
	// ProactiveDetection - Reserved, not used now.
	ProactiveDetection *bool `json:"ProactiveDetection,omitempty"`
	// AnalyticsIntegration - Reserved, not used now.
	AnalyticsIntegration *bool `json:"AnalyticsIntegration,omitempty"`
	// MultipleStepWebTest - Whether allow to use multiple steps web test feature.
	MultipleStepWebTest *bool `json:"MultipleStepWebTest,omitempty"`
	// APIAccessLevel - Reserved, not used now.
	APIAccessLevel *string `json:"ApiAccessLevel,omitempty"`
	// TrackingType - The applciation insights component used tracking type.
	TrackingType *string `json:"TrackingType,omitempty"`
	// DailyCap - Daily data volume cap in GB.
	DailyCap *float64 `json:"DailyCap,omitempty"`
	// DailyCapResetTime - Daily data volume cap UTC reset hour.
	DailyCapResetTime *float64 `json:"DailyCapResetTime,omitempty"`
	// ThrottleRate - Reserved, not used now.
	ThrottleRate *float64 `json:"ThrottleRate,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicfc ApplicationInsightsComponentFeatureCapabilities) Response() *http.Response {
	return aicfc.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicfc ApplicationInsightsComponentFeatureCapabilities) StatusCode() int {
	return aicfc.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicfc ApplicationInsightsComponentFeatureCapabilities) Status() string {
	return aicfc.rawResponse.Status
}

// ApplicationInsightsComponentFeatureCapability - An Application Insights component feature capability
type ApplicationInsightsComponentFeatureCapability struct {
	// Name - The name of the capability.
	Name *string `json:"Name,omitempty"`
	// Description - The description of the capability.
	Description *string `json:"Description,omitempty"`
	// Value - The vaule of the capability.
	Value *string `json:"Value,omitempty"`
	// Unit - The unit of the capability.
	Unit *string `json:"Unit,omitempty"`
	// MeterID - The meter used for the capability.
	MeterID *string `json:"MeterId,omitempty"`
	// MeterRateFrequency - The meter rate of the meter.
	MeterRateFrequency *string `json:"MeterRateFrequency,omitempty"`
}

// ApplicationInsightsComponentListResult - Describes the list of Application Insights Resources.
type ApplicationInsightsComponentListResult struct {
	rawResponse *http.Response
	// Value - List of Application Insights component definitions.
	Value []ApplicationInsightsComponent `json:"value,omitempty"`
	// NextLink - The URI to get the next set of Application Insights component defintions if too many components where returned in the result set.
	NextLink Marker `json:"NextLink"`
}

// Response returns the raw HTTP response object.
func (aiclr ApplicationInsightsComponentListResult) Response() *http.Response {
	return aiclr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aiclr ApplicationInsightsComponentListResult) StatusCode() int {
	return aiclr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aiclr ApplicationInsightsComponentListResult) Status() string {
	return aiclr.rawResponse.Status
}

// ApplicationInsightsComponentProactiveDetectionConfiguration - Properties that define a ProactiveDetection
// configuration.
type ApplicationInsightsComponentProactiveDetectionConfiguration struct {
	rawResponse *http.Response
	// Name - The rule name
	Name *string `json:"Name,omitempty"`
	// Enabled - A flag that indicates whether this rule is enabled by the user
	Enabled *bool `json:"Enabled,omitempty"`
	// SendEmailsToSubscriptionOwners - A flag that indicated whether notifications on this rule should be sent to subscription owners
	SendEmailsToSubscriptionOwners *bool `json:"SendEmailsToSubscriptionOwners,omitempty"`
	// CustomEmails - Custom email addresses for this rule notifications
	CustomEmails []string `json:"CustomEmails,omitempty"`
	// LastUpdatedTime - The last time this rule was updated
	LastUpdatedTime *string `json:"LastUpdatedTime,omitempty"`
	// RuleDefinitions - Static definitions of the ProactiveDetection configuration rule (same values for all components).
	RuleDefinitions *ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions `json:"RuleDefinitions,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicpdc ApplicationInsightsComponentProactiveDetectionConfiguration) Response() *http.Response {
	return aicpdc.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicpdc ApplicationInsightsComponentProactiveDetectionConfiguration) StatusCode() int {
	return aicpdc.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicpdc ApplicationInsightsComponentProactiveDetectionConfiguration) Status() string {
	return aicpdc.rawResponse.Status
}

// ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions - Static definitions of the
// ProactiveDetection configuration rule (same values for all components).
type ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions struct {
	// Name - The rule name
	Name *string `json:"Name,omitempty"`
	// DisplayName - The rule name as it is displayed in UI
	DisplayName *string `json:"DisplayName,omitempty"`
	// Description - The rule description
	Description *string `json:"Description,omitempty"`
	// HelpURL - URL which displays aditional info about the proactive detection rule
	HelpURL *string `json:"HelpUrl,omitempty"`
	// IsHidden - A flag indicating whether the rule is hidden (from the UI)
	IsHidden *bool `json:"IsHidden,omitempty"`
	// IsEnabledByDefault - A flag indicating whether the rule is enabled by default
	IsEnabledByDefault *bool `json:"IsEnabledByDefault,omitempty"`
	// IsInPreview - A flag indicating whether the rule is in preview
	IsInPreview *bool `json:"IsInPreview,omitempty"`
	// SupportsEmailNotifications - A flag indicating whether email notifications are supported for detections for this rule
	SupportsEmailNotifications *bool `json:"SupportsEmailNotifications,omitempty"`
}

// ApplicationInsightsComponentProperties - Properties that define an Application Insights component resource.
type ApplicationInsightsComponentProperties struct {
	// ApplicationID - The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
	ApplicationID *string `json:"ApplicationId,omitempty"`
	// AppID - Application Insights Unique ID for your Application.
	AppID *string `json:"AppId,omitempty"`
	// ApplicationType - Type of application being monitored. Possible values include: 'Web', 'Other', 'None'
	ApplicationType ApplicationType `json:"Application_Type,omitempty"`
	// FlowType - Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API. Possible values include: 'Bluefield', 'None'
	FlowType FlowType `json:"Flow_Type,omitempty"`
	// RequestSource - Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'. Possible values include: 'Rest', 'None'
	RequestSource RequestSourceType `json:"Request_Source,omitempty"`
	// InstrumentationKey - Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
	InstrumentationKey *string `json:"InstrumentationKey,omitempty"`
	// CreationDate - Creation Date for the Application Insights component, in ISO 8601 format.
	CreationDate *time.Time `json:"CreationDate,omitempty"`
	// TenantID - Azure Tenant Id.
	TenantID *string `json:"TenantId,omitempty"`
	// HockeyAppID - The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppID *string `json:"HockeyAppId,omitempty"`
	// HockeyAppToken - Token used to authenticate communications with between Application Insights and HockeyApp.
	HockeyAppToken *string `json:"HockeyAppToken,omitempty"`
	// ProvisioningState - Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState *string `json:"provisioningState,omitempty"`
	// SamplingPercentage - Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage *float64 `json:"SamplingPercentage,omitempty"`
}

// ApplicationInsightsComponentQuotaStatus - An Application Insights component daily data volume cap status
type ApplicationInsightsComponentQuotaStatus struct {
	rawResponse *http.Response
	// AppID - The Application ID for the Application Insights component.
	AppID *string `json:"AppId,omitempty"`
	// ShouldBeThrottled - The daily data volume cap is met, and data ingestion will be stopped.
	ShouldBeThrottled *bool `json:"ShouldBeThrottled,omitempty"`
	// ExpirationTime - Date and time when the daily data volume cap will be reset, and data ingestion will resume.
	ExpirationTime *string `json:"ExpirationTime,omitempty"`
}

// Response returns the raw HTTP response object.
func (aicqs ApplicationInsightsComponentQuotaStatus) Response() *http.Response {
	return aicqs.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (aicqs ApplicationInsightsComponentQuotaStatus) StatusCode() int {
	return aicqs.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (aicqs ApplicationInsightsComponentQuotaStatus) Status() string {
	return aicqs.rawResponse.Status
}

// CreateResponse ...
type CreateResponse struct {
	rawResponse *http.Response
	Value       []ApplicationInsightsComponentExportConfiguration `json:"value,omitempty"`
}

// Response returns the raw HTTP response object.
func (cr CreateResponse) Response() *http.Response {
	return cr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (cr CreateResponse) StatusCode() int {
	return cr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (cr CreateResponse) Status() string {
	return cr.rawResponse.Status
}

// ErrorResponse - Error reponse indicates Insights service is not able to process the incoming request. The reason is
// provided in the error message.
type ErrorResponse struct {
	// Code - Error code.
	Code *string `json:"code,omitempty"`
	// Message - Error message indicating why the operation failed.
	Message *string `json:"message,omitempty"`
}

// ListResponse ...
type ListResponse struct {
	rawResponse *http.Response
	Value       []ApplicationInsightsComponentExportConfiguration `json:"value,omitempty"`
}

// Response returns the raw HTTP response object.
func (lr ListResponse) Response() *http.Response {
	return lr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (lr ListResponse) StatusCode() int {
	return lr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (lr ListResponse) Status() string {
	return lr.rawResponse.Status
}

// Operation - CDN REST API operation
type Operation struct {
	// Name - Operation name: {provider}/{resource}/{operation}
	Name *string `json:"name,omitempty"`
	// Display - The object that represents the operation.
	Display *OperationDisplay `json:"display,omitempty"`
}

// OperationDisplay - The object that represents the operation.
type OperationDisplay struct {
	// Provider - Service provider: Microsoft.Cdn
	Provider *string `json:"provider,omitempty"`
	// Resource - Resource on which the operation is performed: Profile, endpoint, etc.
	Resource *string `json:"resource,omitempty"`
	// Operation - Operation type: Read, write, delete, etc.
	Operation *string `json:"operation,omitempty"`
}

// OperationListResult - Result of the request to list CDN operations. It contains a list of operations and a URL link
// to get the next set of results.
type OperationListResult struct {
	rawResponse *http.Response
	// Value - List of CDN operations supported by the CDN resource provider.
	Value []Operation `json:"value,omitempty"`
	// NextLink - URL to get the next set of operation list results if there are any.
	NextLink Marker `json:"NextLink"`
}

// Response returns the raw HTTP response object.
func (olr OperationListResult) Response() *http.Response {
	return olr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (olr OperationListResult) StatusCode() int {
	return olr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (olr OperationListResult) Status() string {
	return olr.rawResponse.Status
}

// Resource - An azure resource object
type Resource struct {
	// ID - Azure resource Id
	ID *string `json:"id,omitempty"`
	// Name - Azure resource name
	Name *string `json:"name,omitempty"`
	// Type - Azure resource type
	Type *string `json:"type,omitempty"`
	// Location - Resource location
	Location string `json:"location,omitempty"`
	// Tags - Resource tags
	Tags map[string]string `json:"tags,omitempty"`
}

// TagsResource - A container holding only the Tags for a resource, allowing the user to update the tags on a WebTest
// instance.
type TagsResource struct {
	// Tags - Resource tags
	Tags map[string]string `json:"tags,omitempty"`
}

// WebTest - An Application Insights web test definition.
type WebTest struct {
	rawResponse *http.Response
	// ID - Azure resource Id
	ID *string `json:"id,omitempty"`
	// Name - Azure resource name
	Name *string `json:"name,omitempty"`
	// Type - Azure resource type
	Type *string `json:"type,omitempty"`
	// Location - Resource location
	Location string `json:"location,omitempty"`
	// Tags - Resource tags
	Tags map[string]string `json:"tags,omitempty"`
	// Kind - The kind of web test that this web test watches. Choices are ping and multistep. Possible values include: 'Ping', 'Multistep', 'None'
	Kind WebTestKindType `json:"kind,omitempty"`
	// Properties - Metadata describing a web test for an Azure resource.
	*WebTestProperties `json:"properties,omitempty"`
}

// Response returns the raw HTTP response object.
func (wt WebTest) Response() *http.Response {
	return wt.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (wt WebTest) StatusCode() int {
	return wt.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (wt WebTest) Status() string {
	return wt.rawResponse.Status
}

// WebTestGeolocation - Geo-physical location to run a web test from. You must specify one or more locations for the
// test to run from.
type WebTestGeolocation struct {
	// Location - Location ID for the webtest to run from.
	Location *string `json:"Id,omitempty"`
}

// WebTestListResult - A list of 0 or more Application Insights web test definitions.
type WebTestListResult struct {
	rawResponse *http.Response
	// Value - Set of Application Insights web test definitions.
	Value []WebTest `json:"value,omitempty"`
	// NextLink - The link to get the next part of the returned list of web tests, should the return set be too large for a single request. May be null.
	NextLink Marker `json:"NextLink"`
}

// Response returns the raw HTTP response object.
func (wtlr WebTestListResult) Response() *http.Response {
	return wtlr.rawResponse
}

// StatusCode returns the HTTP status code of the response, e.g. 200.
func (wtlr WebTestListResult) StatusCode() int {
	return wtlr.rawResponse.StatusCode
}

// Status returns the HTTP status message of the response, e.g. "200 OK".
func (wtlr WebTestListResult) Status() string {
	return wtlr.rawResponse.Status
}

// WebTestProperties - Metadata describing a web test for an Azure resource.
type WebTestProperties struct {
	// SyntheticMonitorID - Unique ID of this WebTest. This is typically the same value as the Name field.
	SyntheticMonitorID string `json:"SyntheticMonitorId,omitempty"`
	// WebTestName - User defined name if this WebTest.
	WebTestName string `json:"Name,omitempty"`
	// Description - Purpose/user defined descriptive test for this WebTest.
	Description *string `json:"Description,omitempty"`
	// Enabled - Is the test actively being monitored.
	Enabled *bool `json:"Enabled,omitempty"`
	// Frequency - Interval in seconds between test runs for this WebTest. Default value is 300.
	Frequency *int32 `json:"Frequency,omitempty"`
	// Timeout - Seconds until this WebTest will timeout and fail. Default value is 30.
	Timeout *int32 `json:"Timeout,omitempty"`
	// WebTestKind - The kind of web test this is, valid choices are ping and multistep. Possible values include: 'Ping', 'Multistep', 'None'
	WebTestKind WebTestKindType `json:"Kind,omitempty"`
	// RetryEnabled - Allow for retries should this WebTest fail.
	RetryEnabled *bool `json:"RetryEnabled,omitempty"`
	// Locations - A list of where to physically run the tests from to give global coverage for accessibility of your application.
	Locations []WebTestGeolocation `json:"Locations,omitempty"`
	// Configuration - An XML configuration specification for a WebTest.
	Configuration *WebTestPropertiesConfiguration `json:"Configuration,omitempty"`
	// ProvisioningState - Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState *string `json:"provisioningState,omitempty"`
}

// WebTestPropertiesConfiguration - An XML configuration specification for a WebTest.
type WebTestPropertiesConfiguration struct {
	// WebTest - The XML specification of a WebTest to run against an application.
	WebTest *string `json:"WebTest,omitempty"`
}
