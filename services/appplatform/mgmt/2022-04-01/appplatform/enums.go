package appplatform

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal}
}

// AppResourceProvisioningState enumerates the values for app resource provisioning state.
type AppResourceProvisioningState string

const (
	// Creating ...
	Creating AppResourceProvisioningState = "Creating"
	// Deleting ...
	Deleting AppResourceProvisioningState = "Deleting"
	// Failed ...
	Failed AppResourceProvisioningState = "Failed"
	// Succeeded ...
	Succeeded AppResourceProvisioningState = "Succeeded"
	// Updating ...
	Updating AppResourceProvisioningState = "Updating"
)

// PossibleAppResourceProvisioningStateValues returns an array of possible values for the AppResourceProvisioningState const type.
func PossibleAppResourceProvisioningStateValues() []AppResourceProvisioningState {
	return []AppResourceProvisioningState{Creating, Deleting, Failed, Succeeded, Updating}
}

// BindingType enumerates the values for binding type.
type BindingType string

const (
	// ApacheSkyWalking ...
	ApacheSkyWalking BindingType = "ApacheSkyWalking"
	// AppDynamics ...
	AppDynamics BindingType = "AppDynamics"
	// ApplicationInsights ...
	ApplicationInsights BindingType = "ApplicationInsights"
	// Dynatrace ...
	Dynatrace BindingType = "Dynatrace"
	// ElasticAPM ...
	ElasticAPM BindingType = "ElasticAPM"
	// NewRelic ...
	NewRelic BindingType = "NewRelic"
)

// PossibleBindingTypeValues returns an array of possible values for the BindingType const type.
func PossibleBindingTypeValues() []BindingType {
	return []BindingType{ApacheSkyWalking, AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM, NewRelic}
}

// BuilderProvisioningState enumerates the values for builder provisioning state.
type BuilderProvisioningState string

const (
	// BuilderProvisioningStateCreating ...
	BuilderProvisioningStateCreating BuilderProvisioningState = "Creating"
	// BuilderProvisioningStateDeleting ...
	BuilderProvisioningStateDeleting BuilderProvisioningState = "Deleting"
	// BuilderProvisioningStateFailed ...
	BuilderProvisioningStateFailed BuilderProvisioningState = "Failed"
	// BuilderProvisioningStateSucceeded ...
	BuilderProvisioningStateSucceeded BuilderProvisioningState = "Succeeded"
	// BuilderProvisioningStateUpdating ...
	BuilderProvisioningStateUpdating BuilderProvisioningState = "Updating"
)

// PossibleBuilderProvisioningStateValues returns an array of possible values for the BuilderProvisioningState const type.
func PossibleBuilderProvisioningStateValues() []BuilderProvisioningState {
	return []BuilderProvisioningState{BuilderProvisioningStateCreating, BuilderProvisioningStateDeleting, BuilderProvisioningStateFailed, BuilderProvisioningStateSucceeded, BuilderProvisioningStateUpdating}
}

// BuildpackBindingProvisioningState enumerates the values for buildpack binding provisioning state.
type BuildpackBindingProvisioningState string

const (
	// BuildpackBindingProvisioningStateCreating ...
	BuildpackBindingProvisioningStateCreating BuildpackBindingProvisioningState = "Creating"
	// BuildpackBindingProvisioningStateDeleting ...
	BuildpackBindingProvisioningStateDeleting BuildpackBindingProvisioningState = "Deleting"
	// BuildpackBindingProvisioningStateFailed ...
	BuildpackBindingProvisioningStateFailed BuildpackBindingProvisioningState = "Failed"
	// BuildpackBindingProvisioningStateSucceeded ...
	BuildpackBindingProvisioningStateSucceeded BuildpackBindingProvisioningState = "Succeeded"
	// BuildpackBindingProvisioningStateUpdating ...
	BuildpackBindingProvisioningStateUpdating BuildpackBindingProvisioningState = "Updating"
)

// PossibleBuildpackBindingProvisioningStateValues returns an array of possible values for the BuildpackBindingProvisioningState const type.
func PossibleBuildpackBindingProvisioningStateValues() []BuildpackBindingProvisioningState {
	return []BuildpackBindingProvisioningState{BuildpackBindingProvisioningStateCreating, BuildpackBindingProvisioningStateDeleting, BuildpackBindingProvisioningStateFailed, BuildpackBindingProvisioningStateSucceeded, BuildpackBindingProvisioningStateUpdating}
}

// BuildProvisioningState enumerates the values for build provisioning state.
type BuildProvisioningState string

const (
	// BuildProvisioningStateCreating ...
	BuildProvisioningStateCreating BuildProvisioningState = "Creating"
	// BuildProvisioningStateDeleting ...
	BuildProvisioningStateDeleting BuildProvisioningState = "Deleting"
	// BuildProvisioningStateFailed ...
	BuildProvisioningStateFailed BuildProvisioningState = "Failed"
	// BuildProvisioningStateSucceeded ...
	BuildProvisioningStateSucceeded BuildProvisioningState = "Succeeded"
	// BuildProvisioningStateUpdating ...
	BuildProvisioningStateUpdating BuildProvisioningState = "Updating"
)

// PossibleBuildProvisioningStateValues returns an array of possible values for the BuildProvisioningState const type.
func PossibleBuildProvisioningStateValues() []BuildProvisioningState {
	return []BuildProvisioningState{BuildProvisioningStateCreating, BuildProvisioningStateDeleting, BuildProvisioningStateFailed, BuildProvisioningStateSucceeded, BuildProvisioningStateUpdating}
}

// BuildResultProvisioningState enumerates the values for build result provisioning state.
type BuildResultProvisioningState string

const (
	// BuildResultProvisioningStateBuilding ...
	BuildResultProvisioningStateBuilding BuildResultProvisioningState = "Building"
	// BuildResultProvisioningStateDeleting ...
	BuildResultProvisioningStateDeleting BuildResultProvisioningState = "Deleting"
	// BuildResultProvisioningStateFailed ...
	BuildResultProvisioningStateFailed BuildResultProvisioningState = "Failed"
	// BuildResultProvisioningStateQueuing ...
	BuildResultProvisioningStateQueuing BuildResultProvisioningState = "Queuing"
	// BuildResultProvisioningStateSucceeded ...
	BuildResultProvisioningStateSucceeded BuildResultProvisioningState = "Succeeded"
)

// PossibleBuildResultProvisioningStateValues returns an array of possible values for the BuildResultProvisioningState const type.
func PossibleBuildResultProvisioningStateValues() []BuildResultProvisioningState {
	return []BuildResultProvisioningState{BuildResultProvisioningStateBuilding, BuildResultProvisioningStateDeleting, BuildResultProvisioningStateFailed, BuildResultProvisioningStateQueuing, BuildResultProvisioningStateSucceeded}
}

// BuildServiceProvisioningState enumerates the values for build service provisioning state.
type BuildServiceProvisioningState string

const (
	// BuildServiceProvisioningStateCreating ...
	BuildServiceProvisioningStateCreating BuildServiceProvisioningState = "Creating"
	// BuildServiceProvisioningStateDeleting ...
	BuildServiceProvisioningStateDeleting BuildServiceProvisioningState = "Deleting"
	// BuildServiceProvisioningStateFailed ...
	BuildServiceProvisioningStateFailed BuildServiceProvisioningState = "Failed"
	// BuildServiceProvisioningStateSucceeded ...
	BuildServiceProvisioningStateSucceeded BuildServiceProvisioningState = "Succeeded"
	// BuildServiceProvisioningStateUpdating ...
	BuildServiceProvisioningStateUpdating BuildServiceProvisioningState = "Updating"
)

// PossibleBuildServiceProvisioningStateValues returns an array of possible values for the BuildServiceProvisioningState const type.
func PossibleBuildServiceProvisioningStateValues() []BuildServiceProvisioningState {
	return []BuildServiceProvisioningState{BuildServiceProvisioningStateCreating, BuildServiceProvisioningStateDeleting, BuildServiceProvisioningStateFailed, BuildServiceProvisioningStateSucceeded, BuildServiceProvisioningStateUpdating}
}

// ConfigServerState enumerates the values for config server state.
type ConfigServerState string

const (
	// ConfigServerStateDeleted ...
	ConfigServerStateDeleted ConfigServerState = "Deleted"
	// ConfigServerStateFailed ...
	ConfigServerStateFailed ConfigServerState = "Failed"
	// ConfigServerStateNotAvailable ...
	ConfigServerStateNotAvailable ConfigServerState = "NotAvailable"
	// ConfigServerStateSucceeded ...
	ConfigServerStateSucceeded ConfigServerState = "Succeeded"
	// ConfigServerStateUpdating ...
	ConfigServerStateUpdating ConfigServerState = "Updating"
)

// PossibleConfigServerStateValues returns an array of possible values for the ConfigServerState const type.
func PossibleConfigServerStateValues() []ConfigServerState {
	return []ConfigServerState{ConfigServerStateDeleted, ConfigServerStateFailed, ConfigServerStateNotAvailable, ConfigServerStateSucceeded, ConfigServerStateUpdating}
}

// ConfigurationServiceProvisioningState enumerates the values for configuration service provisioning state.
type ConfigurationServiceProvisioningState string

const (
	// ConfigurationServiceProvisioningStateCreating ...
	ConfigurationServiceProvisioningStateCreating ConfigurationServiceProvisioningState = "Creating"
	// ConfigurationServiceProvisioningStateDeleting ...
	ConfigurationServiceProvisioningStateDeleting ConfigurationServiceProvisioningState = "Deleting"
	// ConfigurationServiceProvisioningStateFailed ...
	ConfigurationServiceProvisioningStateFailed ConfigurationServiceProvisioningState = "Failed"
	// ConfigurationServiceProvisioningStateSucceeded ...
	ConfigurationServiceProvisioningStateSucceeded ConfigurationServiceProvisioningState = "Succeeded"
	// ConfigurationServiceProvisioningStateUpdating ...
	ConfigurationServiceProvisioningStateUpdating ConfigurationServiceProvisioningState = "Updating"
)

// PossibleConfigurationServiceProvisioningStateValues returns an array of possible values for the ConfigurationServiceProvisioningState const type.
func PossibleConfigurationServiceProvisioningStateValues() []ConfigurationServiceProvisioningState {
	return []ConfigurationServiceProvisioningState{ConfigurationServiceProvisioningStateCreating, ConfigurationServiceProvisioningStateDeleting, ConfigurationServiceProvisioningStateFailed, ConfigurationServiceProvisioningStateSucceeded, ConfigurationServiceProvisioningStateUpdating}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// DeploymentResourceProvisioningState enumerates the values for deployment resource provisioning state.
type DeploymentResourceProvisioningState string

const (
	// DeploymentResourceProvisioningStateCreating ...
	DeploymentResourceProvisioningStateCreating DeploymentResourceProvisioningState = "Creating"
	// DeploymentResourceProvisioningStateFailed ...
	DeploymentResourceProvisioningStateFailed DeploymentResourceProvisioningState = "Failed"
	// DeploymentResourceProvisioningStateSucceeded ...
	DeploymentResourceProvisioningStateSucceeded DeploymentResourceProvisioningState = "Succeeded"
	// DeploymentResourceProvisioningStateUpdating ...
	DeploymentResourceProvisioningStateUpdating DeploymentResourceProvisioningState = "Updating"
)

// PossibleDeploymentResourceProvisioningStateValues returns an array of possible values for the DeploymentResourceProvisioningState const type.
func PossibleDeploymentResourceProvisioningStateValues() []DeploymentResourceProvisioningState {
	return []DeploymentResourceProvisioningState{DeploymentResourceProvisioningStateCreating, DeploymentResourceProvisioningStateFailed, DeploymentResourceProvisioningStateSucceeded, DeploymentResourceProvisioningStateUpdating}
}

// DeploymentResourceStatus enumerates the values for deployment resource status.
type DeploymentResourceStatus string

const (
	// Running ...
	Running DeploymentResourceStatus = "Running"
	// Stopped ...
	Stopped DeploymentResourceStatus = "Stopped"
)

// PossibleDeploymentResourceStatusValues returns an array of possible values for the DeploymentResourceStatus const type.
func PossibleDeploymentResourceStatusValues() []DeploymentResourceStatus {
	return []DeploymentResourceStatus{Running, Stopped}
}

// KPackBuildStageProvisioningState enumerates the values for k pack build stage provisioning state.
type KPackBuildStageProvisioningState string

const (
	// KPackBuildStageProvisioningStateFailed ...
	KPackBuildStageProvisioningStateFailed KPackBuildStageProvisioningState = "Failed"
	// KPackBuildStageProvisioningStateNotStarted ...
	KPackBuildStageProvisioningStateNotStarted KPackBuildStageProvisioningState = "NotStarted"
	// KPackBuildStageProvisioningStateRunning ...
	KPackBuildStageProvisioningStateRunning KPackBuildStageProvisioningState = "Running"
	// KPackBuildStageProvisioningStateSucceeded ...
	KPackBuildStageProvisioningStateSucceeded KPackBuildStageProvisioningState = "Succeeded"
)

// PossibleKPackBuildStageProvisioningStateValues returns an array of possible values for the KPackBuildStageProvisioningState const type.
func PossibleKPackBuildStageProvisioningStateValues() []KPackBuildStageProvisioningState {
	return []KPackBuildStageProvisioningState{KPackBuildStageProvisioningStateFailed, KPackBuildStageProvisioningStateNotStarted, KPackBuildStageProvisioningStateRunning, KPackBuildStageProvisioningStateSucceeded}
}

// LastModifiedByType enumerates the values for last modified by type.
type LastModifiedByType string

const (
	// LastModifiedByTypeApplication ...
	LastModifiedByTypeApplication LastModifiedByType = "Application"
	// LastModifiedByTypeKey ...
	LastModifiedByTypeKey LastModifiedByType = "Key"
	// LastModifiedByTypeManagedIdentity ...
	LastModifiedByTypeManagedIdentity LastModifiedByType = "ManagedIdentity"
	// LastModifiedByTypeUser ...
	LastModifiedByTypeUser LastModifiedByType = "User"
)

// PossibleLastModifiedByTypeValues returns an array of possible values for the LastModifiedByType const type.
func PossibleLastModifiedByTypeValues() []LastModifiedByType {
	return []LastModifiedByType{LastModifiedByTypeApplication, LastModifiedByTypeKey, LastModifiedByTypeManagedIdentity, LastModifiedByTypeUser}
}

// ManagedIdentityType enumerates the values for managed identity type.
type ManagedIdentityType string

const (
	// None ...
	None ManagedIdentityType = "None"
	// SystemAssigned ...
	SystemAssigned ManagedIdentityType = "SystemAssigned"
	// SystemAssignedUserAssigned ...
	SystemAssignedUserAssigned ManagedIdentityType = "SystemAssigned,UserAssigned"
	// UserAssigned ...
	UserAssigned ManagedIdentityType = "UserAssigned"
)

// PossibleManagedIdentityTypeValues returns an array of possible values for the ManagedIdentityType const type.
func PossibleManagedIdentityTypeValues() []ManagedIdentityType {
	return []ManagedIdentityType{None, SystemAssigned, SystemAssignedUserAssigned, UserAssigned}
}

// MonitoringSettingState enumerates the values for monitoring setting state.
type MonitoringSettingState string

const (
	// MonitoringSettingStateFailed ...
	MonitoringSettingStateFailed MonitoringSettingState = "Failed"
	// MonitoringSettingStateNotAvailable ...
	MonitoringSettingStateNotAvailable MonitoringSettingState = "NotAvailable"
	// MonitoringSettingStateSucceeded ...
	MonitoringSettingStateSucceeded MonitoringSettingState = "Succeeded"
	// MonitoringSettingStateUpdating ...
	MonitoringSettingStateUpdating MonitoringSettingState = "Updating"
)

// PossibleMonitoringSettingStateValues returns an array of possible values for the MonitoringSettingState const type.
func PossibleMonitoringSettingStateValues() []MonitoringSettingState {
	return []MonitoringSettingState{MonitoringSettingStateFailed, MonitoringSettingStateNotAvailable, MonitoringSettingStateSucceeded, MonitoringSettingStateUpdating}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// ProvisioningStateCreating ...
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleted ...
	ProvisioningStateDeleted ProvisioningState = "Deleted"
	// ProvisioningStateDeleting ...
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed ...
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateMoved ...
	ProvisioningStateMoved ProvisioningState = "Moved"
	// ProvisioningStateMoveFailed ...
	ProvisioningStateMoveFailed ProvisioningState = "MoveFailed"
	// ProvisioningStateMoving ...
	ProvisioningStateMoving ProvisioningState = "Moving"
	// ProvisioningStateStarting ...
	ProvisioningStateStarting ProvisioningState = "Starting"
	// ProvisioningStateStopping ...
	ProvisioningStateStopping ProvisioningState = "Stopping"
	// ProvisioningStateSucceeded ...
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating ...
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{ProvisioningStateCreating, ProvisioningStateDeleted, ProvisioningStateDeleting, ProvisioningStateFailed, ProvisioningStateMoved, ProvisioningStateMoveFailed, ProvisioningStateMoving, ProvisioningStateStarting, ProvisioningStateStopping, ProvisioningStateSucceeded, ProvisioningStateUpdating}
}

// ResourceSkuRestrictionsReasonCode enumerates the values for resource sku restrictions reason code.
type ResourceSkuRestrictionsReasonCode string

const (
	// NotAvailableForSubscription ...
	NotAvailableForSubscription ResourceSkuRestrictionsReasonCode = "NotAvailableForSubscription"
	// QuotaID ...
	QuotaID ResourceSkuRestrictionsReasonCode = "QuotaId"
)

// PossibleResourceSkuRestrictionsReasonCodeValues returns an array of possible values for the ResourceSkuRestrictionsReasonCode const type.
func PossibleResourceSkuRestrictionsReasonCodeValues() []ResourceSkuRestrictionsReasonCode {
	return []ResourceSkuRestrictionsReasonCode{NotAvailableForSubscription, QuotaID}
}

// ResourceSkuRestrictionsType enumerates the values for resource sku restrictions type.
type ResourceSkuRestrictionsType string

const (
	// Location ...
	Location ResourceSkuRestrictionsType = "Location"
	// Zone ...
	Zone ResourceSkuRestrictionsType = "Zone"
)

// PossibleResourceSkuRestrictionsTypeValues returns an array of possible values for the ResourceSkuRestrictionsType const type.
func PossibleResourceSkuRestrictionsTypeValues() []ResourceSkuRestrictionsType {
	return []ResourceSkuRestrictionsType{Location, Zone}
}

// ServiceRegistryProvisioningState enumerates the values for service registry provisioning state.
type ServiceRegistryProvisioningState string

const (
	// ServiceRegistryProvisioningStateCreating ...
	ServiceRegistryProvisioningStateCreating ServiceRegistryProvisioningState = "Creating"
	// ServiceRegistryProvisioningStateDeleting ...
	ServiceRegistryProvisioningStateDeleting ServiceRegistryProvisioningState = "Deleting"
	// ServiceRegistryProvisioningStateFailed ...
	ServiceRegistryProvisioningStateFailed ServiceRegistryProvisioningState = "Failed"
	// ServiceRegistryProvisioningStateSucceeded ...
	ServiceRegistryProvisioningStateSucceeded ServiceRegistryProvisioningState = "Succeeded"
	// ServiceRegistryProvisioningStateUpdating ...
	ServiceRegistryProvisioningStateUpdating ServiceRegistryProvisioningState = "Updating"
)

// PossibleServiceRegistryProvisioningStateValues returns an array of possible values for the ServiceRegistryProvisioningState const type.
func PossibleServiceRegistryProvisioningStateValues() []ServiceRegistryProvisioningState {
	return []ServiceRegistryProvisioningState{ServiceRegistryProvisioningStateCreating, ServiceRegistryProvisioningStateDeleting, ServiceRegistryProvisioningStateFailed, ServiceRegistryProvisioningStateSucceeded, ServiceRegistryProvisioningStateUpdating}
}

// SkuScaleType enumerates the values for sku scale type.
type SkuScaleType string

const (
	// SkuScaleTypeAutomatic ...
	SkuScaleTypeAutomatic SkuScaleType = "Automatic"
	// SkuScaleTypeManual ...
	SkuScaleTypeManual SkuScaleType = "Manual"
	// SkuScaleTypeNone ...
	SkuScaleTypeNone SkuScaleType = "None"
)

// PossibleSkuScaleTypeValues returns an array of possible values for the SkuScaleType const type.
func PossibleSkuScaleTypeValues() []SkuScaleType {
	return []SkuScaleType{SkuScaleTypeAutomatic, SkuScaleTypeManual, SkuScaleTypeNone}
}

// SupportedRuntimePlatform enumerates the values for supported runtime platform.
type SupportedRuntimePlatform string

const (
	// Java ...
	Java SupportedRuntimePlatform = "Java"
	// NETCore ...
	NETCore SupportedRuntimePlatform = ".NET Core"
)

// PossibleSupportedRuntimePlatformValues returns an array of possible values for the SupportedRuntimePlatform const type.
func PossibleSupportedRuntimePlatformValues() []SupportedRuntimePlatform {
	return []SupportedRuntimePlatform{Java, NETCore}
}

// SupportedRuntimeValue enumerates the values for supported runtime value.
type SupportedRuntimeValue string

const (
	// Java11 ...
	Java11 SupportedRuntimeValue = "Java_11"
	// Java17 ...
	Java17 SupportedRuntimeValue = "Java_17"
	// Java8 ...
	Java8 SupportedRuntimeValue = "Java_8"
	// NetCore31 ...
	NetCore31 SupportedRuntimeValue = "NetCore_31"
)

// PossibleSupportedRuntimeValueValues returns an array of possible values for the SupportedRuntimeValue const type.
func PossibleSupportedRuntimeValueValues() []SupportedRuntimeValue {
	return []SupportedRuntimeValue{Java11, Java17, Java8, NetCore31}
}

// TestKeyType enumerates the values for test key type.
type TestKeyType string

const (
	// Primary ...
	Primary TestKeyType = "Primary"
	// Secondary ...
	Secondary TestKeyType = "Secondary"
)

// PossibleTestKeyTypeValues returns an array of possible values for the TestKeyType const type.
func PossibleTestKeyTypeValues() []TestKeyType {
	return []TestKeyType{Primary, Secondary}
}

// TrafficDirection enumerates the values for traffic direction.
type TrafficDirection string

const (
	// Inbound ...
	Inbound TrafficDirection = "Inbound"
	// Outbound ...
	Outbound TrafficDirection = "Outbound"
)

// PossibleTrafficDirectionValues returns an array of possible values for the TrafficDirection const type.
func PossibleTrafficDirectionValues() []TrafficDirection {
	return []TrafficDirection{Inbound, Outbound}
}

// Type enumerates the values for type.
type Type string

const (
	// TypeCertificateProperties ...
	TypeCertificateProperties Type = "CertificateProperties"
	// TypeContentCertificate ...
	TypeContentCertificate Type = "ContentCertificate"
	// TypeKeyVaultCertificate ...
	TypeKeyVaultCertificate Type = "KeyVaultCertificate"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{TypeCertificateProperties, TypeContentCertificate, TypeKeyVaultCertificate}
}

// TypeBasicUserSourceInfo enumerates the values for type basic user source info.
type TypeBasicUserSourceInfo string

const (
	// TypeBuildResult ...
	TypeBuildResult TypeBasicUserSourceInfo = "BuildResult"
	// TypeJar ...
	TypeJar TypeBasicUserSourceInfo = "Jar"
	// TypeNetCoreZip ...
	TypeNetCoreZip TypeBasicUserSourceInfo = "NetCoreZip"
	// TypeSource ...
	TypeSource TypeBasicUserSourceInfo = "Source"
	// TypeUploadedUserSourceInfo ...
	TypeUploadedUserSourceInfo TypeBasicUserSourceInfo = "UploadedUserSourceInfo"
	// TypeUserSourceInfo ...
	TypeUserSourceInfo TypeBasicUserSourceInfo = "UserSourceInfo"
)

// PossibleTypeBasicUserSourceInfoValues returns an array of possible values for the TypeBasicUserSourceInfo const type.
func PossibleTypeBasicUserSourceInfoValues() []TypeBasicUserSourceInfo {
	return []TypeBasicUserSourceInfo{TypeBuildResult, TypeJar, TypeNetCoreZip, TypeSource, TypeUploadedUserSourceInfo, TypeUserSourceInfo}
}
