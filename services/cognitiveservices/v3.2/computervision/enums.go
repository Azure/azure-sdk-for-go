package computervision

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// DescriptionExclude enumerates the values for description exclude.
type DescriptionExclude string

const (
	// Celebrities ...
	Celebrities DescriptionExclude = "Celebrities"
	// Landmarks ...
	Landmarks DescriptionExclude = "Landmarks"
)

// PossibleDescriptionExcludeValues returns an array of possible values for the DescriptionExclude const type.
func PossibleDescriptionExcludeValues() []DescriptionExclude {
	return []DescriptionExclude{Celebrities, Landmarks}
}

// Details enumerates the values for details.
type Details string

const (
	// DetailsCelebrities ...
	DetailsCelebrities Details = "Celebrities"
	// DetailsLandmarks ...
	DetailsLandmarks Details = "Landmarks"
)

// PossibleDetailsValues returns an array of possible values for the Details const type.
func PossibleDetailsValues() []Details {
	return []Details{DetailsCelebrities, DetailsLandmarks}
}

// ErrorCodes enumerates the values for error codes.
type ErrorCodes string

const (
	// InternalServerError ...
	InternalServerError ErrorCodes = "InternalServerError"
	// InvalidArgument ...
	InvalidArgument ErrorCodes = "InvalidArgument"
	// InvalidRequest ...
	InvalidRequest ErrorCodes = "InvalidRequest"
	// ServiceUnavailable ...
	ServiceUnavailable ErrorCodes = "ServiceUnavailable"
)

// PossibleErrorCodesValues returns an array of possible values for the ErrorCodes const type.
func PossibleErrorCodesValues() []ErrorCodes {
	return []ErrorCodes{InternalServerError, InvalidArgument, InvalidRequest, ServiceUnavailable}
}

// Gender enumerates the values for gender.
type Gender string

const (
	// Female ...
	Female Gender = "Female"
	// Male ...
	Male Gender = "Male"
)

// PossibleGenderValues returns an array of possible values for the Gender const type.
func PossibleGenderValues() []Gender {
	return []Gender{Female, Male}
}

// InnerErrorCodeValue enumerates the values for inner error code value.
type InnerErrorCodeValue string

const (
	// InnerErrorCodeValueBadArgument ...
	InnerErrorCodeValueBadArgument InnerErrorCodeValue = "BadArgument"
	// InnerErrorCodeValueCancelledRequest ...
	InnerErrorCodeValueCancelledRequest InnerErrorCodeValue = "CancelledRequest"
	// InnerErrorCodeValueDetectFaceError ...
	InnerErrorCodeValueDetectFaceError InnerErrorCodeValue = "DetectFaceError"
	// InnerErrorCodeValueFailedToProcess ...
	InnerErrorCodeValueFailedToProcess InnerErrorCodeValue = "FailedToProcess"
	// InnerErrorCodeValueInternalServerError ...
	InnerErrorCodeValueInternalServerError InnerErrorCodeValue = "InternalServerError"
	// InnerErrorCodeValueInvalidDetails ...
	InnerErrorCodeValueInvalidDetails InnerErrorCodeValue = "InvalidDetails"
	// InnerErrorCodeValueInvalidImageFormat ...
	InnerErrorCodeValueInvalidImageFormat InnerErrorCodeValue = "InvalidImageFormat"
	// InnerErrorCodeValueInvalidImageSize ...
	InnerErrorCodeValueInvalidImageSize InnerErrorCodeValue = "InvalidImageSize"
	// InnerErrorCodeValueInvalidImageURL ...
	InnerErrorCodeValueInvalidImageURL InnerErrorCodeValue = "InvalidImageUrl"
	// InnerErrorCodeValueInvalidModel ...
	InnerErrorCodeValueInvalidModel InnerErrorCodeValue = "InvalidModel"
	// InnerErrorCodeValueInvalidThumbnailSize ...
	InnerErrorCodeValueInvalidThumbnailSize InnerErrorCodeValue = "InvalidThumbnailSize"
	// InnerErrorCodeValueNotSupportedFeature ...
	InnerErrorCodeValueNotSupportedFeature InnerErrorCodeValue = "NotSupportedFeature"
	// InnerErrorCodeValueNotSupportedImage ...
	InnerErrorCodeValueNotSupportedImage InnerErrorCodeValue = "NotSupportedImage"
	// InnerErrorCodeValueNotSupportedLanguage ...
	InnerErrorCodeValueNotSupportedLanguage InnerErrorCodeValue = "NotSupportedLanguage"
	// InnerErrorCodeValueNotSupportedVisualFeature ...
	InnerErrorCodeValueNotSupportedVisualFeature InnerErrorCodeValue = "NotSupportedVisualFeature"
	// InnerErrorCodeValueStorageException ...
	InnerErrorCodeValueStorageException InnerErrorCodeValue = "StorageException"
	// InnerErrorCodeValueTimeout ...
	InnerErrorCodeValueTimeout InnerErrorCodeValue = "Timeout"
	// InnerErrorCodeValueUnspecified ...
	InnerErrorCodeValueUnspecified InnerErrorCodeValue = "Unspecified"
	// InnerErrorCodeValueUnsupportedMediaType ...
	InnerErrorCodeValueUnsupportedMediaType InnerErrorCodeValue = "UnsupportedMediaType"
)

// PossibleInnerErrorCodeValueValues returns an array of possible values for the InnerErrorCodeValue const type.
func PossibleInnerErrorCodeValueValues() []InnerErrorCodeValue {
	return []InnerErrorCodeValue{InnerErrorCodeValueBadArgument, InnerErrorCodeValueCancelledRequest, InnerErrorCodeValueDetectFaceError, InnerErrorCodeValueFailedToProcess, InnerErrorCodeValueInternalServerError, InnerErrorCodeValueInvalidDetails, InnerErrorCodeValueInvalidImageFormat, InnerErrorCodeValueInvalidImageSize, InnerErrorCodeValueInvalidImageURL, InnerErrorCodeValueInvalidModel, InnerErrorCodeValueInvalidThumbnailSize, InnerErrorCodeValueNotSupportedFeature, InnerErrorCodeValueNotSupportedImage, InnerErrorCodeValueNotSupportedLanguage, InnerErrorCodeValueNotSupportedVisualFeature, InnerErrorCodeValueStorageException, InnerErrorCodeValueTimeout, InnerErrorCodeValueUnspecified, InnerErrorCodeValueUnsupportedMediaType}
}

// OcrDetectionLanguage enumerates the values for ocr detection language.
type OcrDetectionLanguage string

const (
	// Af ...
	Af OcrDetectionLanguage = "af"
	// Ast ...
	Ast OcrDetectionLanguage = "ast"
	// Bi ...
	Bi OcrDetectionLanguage = "bi"
	// Br ...
	Br OcrDetectionLanguage = "br"
	// Ca ...
	Ca OcrDetectionLanguage = "ca"
	// Ceb ...
	Ceb OcrDetectionLanguage = "ceb"
	// Ch ...
	Ch OcrDetectionLanguage = "ch"
	// Co ...
	Co OcrDetectionLanguage = "co"
	// Crh ...
	Crh OcrDetectionLanguage = "crh"
	// Cs ...
	Cs OcrDetectionLanguage = "cs"
	// Csb ...
	Csb OcrDetectionLanguage = "csb"
	// Da ...
	Da OcrDetectionLanguage = "da"
	// De ...
	De OcrDetectionLanguage = "de"
	// En ...
	En OcrDetectionLanguage = "en"
	// Es ...
	Es OcrDetectionLanguage = "es"
	// Et ...
	Et OcrDetectionLanguage = "et"
	// Eu ...
	Eu OcrDetectionLanguage = "eu"
	// Fi ...
	Fi OcrDetectionLanguage = "fi"
	// Fil ...
	Fil OcrDetectionLanguage = "fil"
	// Fj ...
	Fj OcrDetectionLanguage = "fj"
	// Fr ...
	Fr OcrDetectionLanguage = "fr"
	// Fur ...
	Fur OcrDetectionLanguage = "fur"
	// Fy ...
	Fy OcrDetectionLanguage = "fy"
	// Ga ...
	Ga OcrDetectionLanguage = "ga"
	// Gd ...
	Gd OcrDetectionLanguage = "gd"
	// Gil ...
	Gil OcrDetectionLanguage = "gil"
	// Gl ...
	Gl OcrDetectionLanguage = "gl"
	// Gv ...
	Gv OcrDetectionLanguage = "gv"
	// Hni ...
	Hni OcrDetectionLanguage = "hni"
	// Hsb ...
	Hsb OcrDetectionLanguage = "hsb"
	// Ht ...
	Ht OcrDetectionLanguage = "ht"
	// Hu ...
	Hu OcrDetectionLanguage = "hu"
	// Ia ...
	Ia OcrDetectionLanguage = "ia"
	// ID ...
	ID OcrDetectionLanguage = "id"
	// It ...
	It OcrDetectionLanguage = "it"
	// Iu ...
	Iu OcrDetectionLanguage = "iu"
	// Ja ...
	Ja OcrDetectionLanguage = "ja"
	// Jv ...
	Jv OcrDetectionLanguage = "jv"
	// Kaa ...
	Kaa OcrDetectionLanguage = "kaa"
	// Kac ...
	Kac OcrDetectionLanguage = "kac"
	// Kea ...
	Kea OcrDetectionLanguage = "kea"
	// Kha ...
	Kha OcrDetectionLanguage = "kha"
	// Kl ...
	Kl OcrDetectionLanguage = "kl"
	// Ko ...
	Ko OcrDetectionLanguage = "ko"
	// Ku ...
	Ku OcrDetectionLanguage = "ku"
	// Kw ...
	Kw OcrDetectionLanguage = "kw"
	// Lb ...
	Lb OcrDetectionLanguage = "lb"
	// Ms ...
	Ms OcrDetectionLanguage = "ms"
	// Mww ...
	Mww OcrDetectionLanguage = "mww"
	// Nap ...
	Nap OcrDetectionLanguage = "nap"
	// Nl ...
	Nl OcrDetectionLanguage = "nl"
	// No ...
	No OcrDetectionLanguage = "no"
	// Oc ...
	Oc OcrDetectionLanguage = "oc"
	// Pl ...
	Pl OcrDetectionLanguage = "pl"
	// Pt ...
	Pt OcrDetectionLanguage = "pt"
	// Quc ...
	Quc OcrDetectionLanguage = "quc"
	// Rm ...
	Rm OcrDetectionLanguage = "rm"
	// Sco ...
	Sco OcrDetectionLanguage = "sco"
	// Sl ...
	Sl OcrDetectionLanguage = "sl"
	// Sq ...
	Sq OcrDetectionLanguage = "sq"
	// Sv ...
	Sv OcrDetectionLanguage = "sv"
	// Sw ...
	Sw OcrDetectionLanguage = "sw"
	// Tet ...
	Tet OcrDetectionLanguage = "tet"
	// Tr ...
	Tr OcrDetectionLanguage = "tr"
	// Tt ...
	Tt OcrDetectionLanguage = "tt"
	// Uz ...
	Uz OcrDetectionLanguage = "uz"
	// Vo ...
	Vo OcrDetectionLanguage = "vo"
	// Wae ...
	Wae OcrDetectionLanguage = "wae"
	// Yua ...
	Yua OcrDetectionLanguage = "yua"
	// Za ...
	Za OcrDetectionLanguage = "za"
	// ZhHans ...
	ZhHans OcrDetectionLanguage = "zh-Hans"
	// ZhHant ...
	ZhHant OcrDetectionLanguage = "zh-Hant"
	// Zu ...
	Zu OcrDetectionLanguage = "zu"
)

// PossibleOcrDetectionLanguageValues returns an array of possible values for the OcrDetectionLanguage const type.
func PossibleOcrDetectionLanguageValues() []OcrDetectionLanguage {
	return []OcrDetectionLanguage{Af, Ast, Bi, Br, Ca, Ceb, Ch, Co, Crh, Cs, Csb, Da, De, En, Es, Et, Eu, Fi, Fil, Fj, Fr, Fur, Fy, Ga, Gd, Gil, Gl, Gv, Hni, Hsb, Ht, Hu, Ia, ID, It, Iu, Ja, Jv, Kaa, Kac, Kea, Kha, Kl, Ko, Ku, Kw, Lb, Ms, Mww, Nap, Nl, No, Oc, Pl, Pt, Quc, Rm, Sco, Sl, Sq, Sv, Sw, Tet, Tr, Tt, Uz, Vo, Wae, Yua, Za, ZhHans, ZhHant, Zu}
}

// OcrLanguages enumerates the values for ocr languages.
type OcrLanguages string

const (
	// OcrLanguagesAr ...
	OcrLanguagesAr OcrLanguages = "ar"
	// OcrLanguagesCs ...
	OcrLanguagesCs OcrLanguages = "cs"
	// OcrLanguagesDa ...
	OcrLanguagesDa OcrLanguages = "da"
	// OcrLanguagesDe ...
	OcrLanguagesDe OcrLanguages = "de"
	// OcrLanguagesEl ...
	OcrLanguagesEl OcrLanguages = "el"
	// OcrLanguagesEn ...
	OcrLanguagesEn OcrLanguages = "en"
	// OcrLanguagesEs ...
	OcrLanguagesEs OcrLanguages = "es"
	// OcrLanguagesFi ...
	OcrLanguagesFi OcrLanguages = "fi"
	// OcrLanguagesFr ...
	OcrLanguagesFr OcrLanguages = "fr"
	// OcrLanguagesHu ...
	OcrLanguagesHu OcrLanguages = "hu"
	// OcrLanguagesIt ...
	OcrLanguagesIt OcrLanguages = "it"
	// OcrLanguagesJa ...
	OcrLanguagesJa OcrLanguages = "ja"
	// OcrLanguagesKo ...
	OcrLanguagesKo OcrLanguages = "ko"
	// OcrLanguagesNb ...
	OcrLanguagesNb OcrLanguages = "nb"
	// OcrLanguagesNl ...
	OcrLanguagesNl OcrLanguages = "nl"
	// OcrLanguagesPl ...
	OcrLanguagesPl OcrLanguages = "pl"
	// OcrLanguagesPt ...
	OcrLanguagesPt OcrLanguages = "pt"
	// OcrLanguagesRo ...
	OcrLanguagesRo OcrLanguages = "ro"
	// OcrLanguagesRu ...
	OcrLanguagesRu OcrLanguages = "ru"
	// OcrLanguagesSk ...
	OcrLanguagesSk OcrLanguages = "sk"
	// OcrLanguagesSrCyrl ...
	OcrLanguagesSrCyrl OcrLanguages = "sr-Cyrl"
	// OcrLanguagesSrLatn ...
	OcrLanguagesSrLatn OcrLanguages = "sr-Latn"
	// OcrLanguagesSv ...
	OcrLanguagesSv OcrLanguages = "sv"
	// OcrLanguagesTr ...
	OcrLanguagesTr OcrLanguages = "tr"
	// OcrLanguagesUnk ...
	OcrLanguagesUnk OcrLanguages = "unk"
	// OcrLanguagesZhHans ...
	OcrLanguagesZhHans OcrLanguages = "zh-Hans"
	// OcrLanguagesZhHant ...
	OcrLanguagesZhHant OcrLanguages = "zh-Hant"
)

// PossibleOcrLanguagesValues returns an array of possible values for the OcrLanguages const type.
func PossibleOcrLanguagesValues() []OcrLanguages {
	return []OcrLanguages{OcrLanguagesAr, OcrLanguagesCs, OcrLanguagesDa, OcrLanguagesDe, OcrLanguagesEl, OcrLanguagesEn, OcrLanguagesEs, OcrLanguagesFi, OcrLanguagesFr, OcrLanguagesHu, OcrLanguagesIt, OcrLanguagesJa, OcrLanguagesKo, OcrLanguagesNb, OcrLanguagesNl, OcrLanguagesPl, OcrLanguagesPt, OcrLanguagesRo, OcrLanguagesRu, OcrLanguagesSk, OcrLanguagesSrCyrl, OcrLanguagesSrLatn, OcrLanguagesSv, OcrLanguagesTr, OcrLanguagesUnk, OcrLanguagesZhHans, OcrLanguagesZhHant}
}

// OperationStatusCodes enumerates the values for operation status codes.
type OperationStatusCodes string

const (
	// Failed ...
	Failed OperationStatusCodes = "failed"
	// NotStarted ...
	NotStarted OperationStatusCodes = "notStarted"
	// Running ...
	Running OperationStatusCodes = "running"
	// Succeeded ...
	Succeeded OperationStatusCodes = "succeeded"
)

// PossibleOperationStatusCodesValues returns an array of possible values for the OperationStatusCodes const type.
func PossibleOperationStatusCodesValues() []OperationStatusCodes {
	return []OperationStatusCodes{Failed, NotStarted, Running, Succeeded}
}

// TextRecognitionResultDimensionUnit enumerates the values for text recognition result dimension unit.
type TextRecognitionResultDimensionUnit string

const (
	// Inch ...
	Inch TextRecognitionResultDimensionUnit = "inch"
	// Pixel ...
	Pixel TextRecognitionResultDimensionUnit = "pixel"
)

// PossibleTextRecognitionResultDimensionUnitValues returns an array of possible values for the TextRecognitionResultDimensionUnit const type.
func PossibleTextRecognitionResultDimensionUnitValues() []TextRecognitionResultDimensionUnit {
	return []TextRecognitionResultDimensionUnit{Inch, Pixel}
}

// TextStyle enumerates the values for text style.
type TextStyle string

const (
	// Handwriting ...
	Handwriting TextStyle = "handwriting"
	// Other ...
	Other TextStyle = "other"
)

// PossibleTextStyleValues returns an array of possible values for the TextStyle const type.
func PossibleTextStyleValues() []TextStyle {
	return []TextStyle{Handwriting, Other}
}

// VisualFeatureTypes enumerates the values for visual feature types.
type VisualFeatureTypes string

const (
	// VisualFeatureTypesAdult ...
	VisualFeatureTypesAdult VisualFeatureTypes = "Adult"
	// VisualFeatureTypesBrands ...
	VisualFeatureTypesBrands VisualFeatureTypes = "Brands"
	// VisualFeatureTypesCategories ...
	VisualFeatureTypesCategories VisualFeatureTypes = "Categories"
	// VisualFeatureTypesColor ...
	VisualFeatureTypesColor VisualFeatureTypes = "Color"
	// VisualFeatureTypesDescription ...
	VisualFeatureTypesDescription VisualFeatureTypes = "Description"
	// VisualFeatureTypesFaces ...
	VisualFeatureTypesFaces VisualFeatureTypes = "Faces"
	// VisualFeatureTypesImageType ...
	VisualFeatureTypesImageType VisualFeatureTypes = "ImageType"
	// VisualFeatureTypesObjects ...
	VisualFeatureTypesObjects VisualFeatureTypes = "Objects"
	// VisualFeatureTypesTags ...
	VisualFeatureTypesTags VisualFeatureTypes = "Tags"
)

// PossibleVisualFeatureTypesValues returns an array of possible values for the VisualFeatureTypes const type.
func PossibleVisualFeatureTypesValues() []VisualFeatureTypes {
	return []VisualFeatureTypes{VisualFeatureTypesAdult, VisualFeatureTypesBrands, VisualFeatureTypesCategories, VisualFeatureTypesColor, VisualFeatureTypesDescription, VisualFeatureTypesFaces, VisualFeatureTypesImageType, VisualFeatureTypesObjects, VisualFeatureTypesTags}
}
