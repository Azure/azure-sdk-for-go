package migrate

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// Items enumerates the values for items.
type Items string

const (
	// AppServiceMigrationAssistant ...
	AppServiceMigrationAssistant Items = "AppServiceMigrationAssistant"
	// Carbonite ...
	Carbonite Items = "Carbonite"
	// Cloudamize ...
	Cloudamize Items = "Cloudamize"
	// CloudSphere ...
	CloudSphere Items = "CloudSphere"
	// CorentTech ...
	CorentTech Items = "CorentTech"
	// DatabaseMigrationService ...
	DatabaseMigrationService Items = "DatabaseMigrationService"
	// DataMigrationAssistant ...
	DataMigrationAssistant Items = "DataMigrationAssistant"
	// Device42 ...
	Device42 Items = "Device42"
	// Flexera ...
	Flexera Items = "Flexera"
	// JetStream ...
	JetStream Items = "JetStream"
	// Lakeside ...
	Lakeside Items = "Lakeside"
	// Movere ...
	Movere Items = "Movere"
	// RackWare ...
	RackWare Items = "RackWare"
	// ServerAssessment ...
	ServerAssessment Items = "ServerAssessment"
	// ServerAssessmentV1 ...
	ServerAssessmentV1 Items = "ServerAssessmentV1"
	// ServerDiscovery ...
	ServerDiscovery Items = "ServerDiscovery"
	// ServerDiscoveryImport ...
	ServerDiscoveryImport Items = "ServerDiscovery_Import"
	// ServerMigration ...
	ServerMigration Items = "ServerMigration"
	// ServerMigrationReplication ...
	ServerMigrationReplication Items = "ServerMigration_Replication"
	// Turbonomic ...
	Turbonomic Items = "Turbonomic"
	// UnifyCloud ...
	UnifyCloud Items = "UnifyCloud"
	// Unknown ...
	Unknown Items = "Unknown"
	// Zerto ...
	Zerto Items = "Zerto"
)

// PossibleItemsValues returns an array of possible values for the Items const type.
func PossibleItemsValues() []Items {
	return []Items{AppServiceMigrationAssistant, Carbonite, Cloudamize, CloudSphere, CorentTech, DatabaseMigrationService, DataMigrationAssistant, Device42, Flexera, JetStream, Lakeside, Movere, RackWare, ServerAssessment, ServerAssessmentV1, ServerDiscovery, ServerDiscoveryImport, ServerMigration, ServerMigrationReplication, Turbonomic, UnifyCloud, Unknown, Zerto}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// Accepted ...
	Accepted ProvisioningState = "Accepted"
	// Failed ...
	Failed ProvisioningState = "Failed"
	// InProgress ...
	InProgress ProvisioningState = "InProgress"
	// Succeeded ...
	Succeeded ProvisioningState = "Succeeded"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{Accepted, Failed, InProgress, Succeeded}
}

// PublicNetworkAccess enumerates the values for public network access.
type PublicNetworkAccess string

const (
	// Disabled ...
	Disabled PublicNetworkAccess = "Disabled"
	// Enabled ...
	Enabled PublicNetworkAccess = "Enabled"
	// NotSpecified ...
	NotSpecified PublicNetworkAccess = "NotSpecified"
)

// PossiblePublicNetworkAccessValues returns an array of possible values for the PublicNetworkAccess const type.
func PossiblePublicNetworkAccessValues() []PublicNetworkAccess {
	return []PublicNetworkAccess{Disabled, Enabled, NotSpecified}
}

// RefreshSummaryState enumerates the values for refresh summary state.
type RefreshSummaryState string

const (
	// RefreshSummaryStateCompleted ...
	RefreshSummaryStateCompleted RefreshSummaryState = "Completed"
	// RefreshSummaryStateFailed ...
	RefreshSummaryStateFailed RefreshSummaryState = "Failed"
	// RefreshSummaryStateInProgress ...
	RefreshSummaryStateInProgress RefreshSummaryState = "InProgress"
	// RefreshSummaryStateStarted ...
	RefreshSummaryStateStarted RefreshSummaryState = "Started"
)

// PossibleRefreshSummaryStateValues returns an array of possible values for the RefreshSummaryState const type.
func PossibleRefreshSummaryStateValues() []RefreshSummaryState {
	return []RefreshSummaryState{RefreshSummaryStateCompleted, RefreshSummaryStateFailed, RefreshSummaryStateInProgress, RefreshSummaryStateStarted}
}

// RefreshSummaryState1 enumerates the values for refresh summary state 1.
type RefreshSummaryState1 string

const (
	// RefreshSummaryState1Completed ...
	RefreshSummaryState1Completed RefreshSummaryState1 = "Completed"
	// RefreshSummaryState1Failed ...
	RefreshSummaryState1Failed RefreshSummaryState1 = "Failed"
	// RefreshSummaryState1InProgress ...
	RefreshSummaryState1InProgress RefreshSummaryState1 = "InProgress"
	// RefreshSummaryState1Started ...
	RefreshSummaryState1Started RefreshSummaryState1 = "Started"
)

// PossibleRefreshSummaryState1Values returns an array of possible values for the RefreshSummaryState1 const type.
func PossibleRefreshSummaryState1Values() []RefreshSummaryState1 {
	return []RefreshSummaryState1{RefreshSummaryState1Completed, RefreshSummaryState1Failed, RefreshSummaryState1InProgress, RefreshSummaryState1Started}
}

// Status enumerates the values for status.
type Status string

const (
	// Approved ...
	Approved Status = "Approved"
	// Disconnected ...
	Disconnected Status = "Disconnected"
	// Pending ...
	Pending Status = "Pending"
	// Rejected ...
	Rejected Status = "Rejected"
)

// PossibleStatusValues returns an array of possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{Approved, Disconnected, Pending, Rejected}
}
