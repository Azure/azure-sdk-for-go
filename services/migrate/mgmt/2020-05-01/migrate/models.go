package migrate

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"context"
	"encoding/json"
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/date"
	"github.com/Azure/go-autorest/autorest/to"
	"github.com/Azure/go-autorest/tracing"
	"net/http"
)

// The package's fully qualified name.
const fqdn = "github.com/Azure/azure-sdk-for-go/services/migrate/mgmt/2020-05-01/migrate"

// AvailableOperations available operations of the service
type AvailableOperations struct {
	autorest.Response `json:"-"`
	// Value - Collection of available operation details
	Value *[]OperationDetail `json:"value,omitempty"`
	// NextLink - URL client should use to fetch the next page (per server side paging).
	// It's null for now, added for future use.
	NextLink *string `json:"nextLink,omitempty"`
}

// CloudError an error response from the Azure Migrate service.
type CloudError struct {
	Error *CloudErrorBody `json:"error,omitempty"`
}

// CloudErrorBody an error response from the Azure Migrate service.
type CloudErrorBody struct {
	// Code - An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code *string `json:"code,omitempty"`
	// Message - A message describing the error, intended to be suitable for display in a user interface.
	Message *string `json:"message,omitempty"`
	// Target - The target of the particular error. For example, the name of the property in error.
	Target *string `json:"target,omitempty"`
	// Details - A list of additional details about the error.
	Details *[]CloudErrorBody `json:"details,omitempty"`
}

// ConnectionStateRequestBodyProperties properties of Connection state request.
type ConnectionStateRequestBodyProperties struct {
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `json:"privateLinkServiceConnectionState,omitempty"`
}

// ModifyConnectionStateBody modify connection state body.
type ModifyConnectionStateBody struct {
	// ETag - Gets the tag for optimistic concurrency control.
	ETag       *string                               `json:"eTag,omitempty"`
	Properties *ConnectionStateRequestBodyProperties `json:"properties,omitempty"`
}

// OperationDetail operation detail payload
type OperationDetail struct {
	// Name - Name of the operation
	Name *string `json:"name,omitempty"`
	// IsDataAction - Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`
	// Display - Display of the operation
	Display *OperationDisplay `json:"display,omitempty"`
	// Origin - Origin of the operation
	Origin *string `json:"origin,omitempty"`
}

// OperationDisplay operation display payload
type OperationDisplay struct {
	// Provider - Resource provider of the operation
	Provider *string `json:"provider,omitempty"`
	// Resource - Resource of the operation
	Resource *string `json:"resource,omitempty"`
	// Operation - Localized friendly name for the operation
	Operation *string `json:"operation,omitempty"`
	// Description - Localized friendly description for the operation
	Description *string `json:"description,omitempty"`
}

// PrivateEndpointConnection REST model used to encapsulate the user visible state of a PrivateEndpoint.
type PrivateEndpointConnection struct {
	autorest.Response `json:"-"`
	// ID - READ-ONLY; Relative URL to get this Sites.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; Gets the name of the resource.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; Gets the resource type.
	Type *string `json:"type,omitempty"`
	// ETag - READ-ONLY; Gets the tag for optimistic concurrency control.
	ETag *string `json:"eTag,omitempty"`
	// Properties - READ-ONLY; Gets the properties of the object.
	Properties *PrivateEndpointConnectionProperties `json:"properties,omitempty"`
	// SystemData - READ-ONLY
	SystemData *SystemData `json:"systemData,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateEndpointConnection.
func (pec PrivateEndpointConnection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionCollection collection of PrivateLink resources.
type PrivateEndpointConnectionCollection struct {
	autorest.Response `json:"-"`
	// Value - READ-ONLY; Gets the list of machines.
	Value *[]PrivateEndpointConnection `json:"value,omitempty"`
	// NextLink - READ-ONLY; Gets the value of next link.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateEndpointConnectionCollection.
func (pecc PrivateEndpointConnectionCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionProperties properties of a private endpoint connection.
type PrivateEndpointConnectionProperties struct {
	// ProvisioningState - READ-ONLY; Provisioning state. Possible values include: 'Accepted', 'InProgress', 'Succeeded', 'Failed'
	ProvisioningState ProvisioningState `json:"provisioningState,omitempty"`
	// PrivateEndpoint - READ-ONLY
	PrivateEndpoint *ResourceID `json:"privateEndpoint,omitempty"`
	// PrivateLinkServiceConnectionState - Gets the properties of the object.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `json:"privateLinkServiceConnectionState,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateEndpointConnectionProperties.
func (pecp PrivateEndpointConnectionProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if pecp.PrivateLinkServiceConnectionState != nil {
		objectMap["privateLinkServiceConnectionState"] = pecp.PrivateLinkServiceConnectionState
	}
	return json.Marshal(objectMap)
}

// PrivateLinkResource private link resource.
type PrivateLinkResource struct {
	autorest.Response `json:"-"`
	// ID - READ-ONLY; Relative URL to get this Sites.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; Gets the name of the resource.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; Gets the resource type.
	Type *string `json:"type,omitempty"`
	// Properties - READ-ONLY
	Properties *PrivateLinkResourceProperties `json:"properties,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkResource.
func (plr PrivateLinkResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	return json.Marshal(objectMap)
}

// PrivateLinkResourceCollection collection of private link resources.
type PrivateLinkResourceCollection struct {
	autorest.Response `json:"-"`
	// Value - READ-ONLY; List of private links.
	Value *[]PrivateLinkResource `json:"value,omitempty"`
	// NextLink - READ-ONLY; Value of next link.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkResourceCollection.
func (plrc PrivateLinkResourceCollection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	return json.Marshal(objectMap)
}

// PrivateLinkResourceProperties properties of private link resource.
type PrivateLinkResourceProperties struct {
	// RequiredMembers - Required members.
	RequiredMembers *[]string `json:"requiredMembers,omitempty"`
	// RequiredZoneNames - Required zone names.
	RequiredZoneNames *[]string `json:"requiredZoneNames,omitempty"`
	// GroupID - Group id.
	GroupID *string `json:"groupId,omitempty"`
}

// PrivateLinkServiceConnectionState private endpoint connection state.
type PrivateLinkServiceConnectionState struct {
	// Status - Private link connection state. Possible values include: 'Approved', 'Pending', 'Rejected', 'Disconnected'
	Status Status `json:"status,omitempty"`
	// Description - Description of the object.
	Description *string `json:"description,omitempty"`
	// ActionsRequired - Action required.
	ActionsRequired *string `json:"actionsRequired,omitempty"`
}

// Project migrate project.
type Project struct {
	autorest.Response `json:"-"`
	Properties        *ProjectProperties `json:"properties,omitempty"`
	// ETag - For optimistic concurrency control.
	ETag *string `json:"eTag,omitempty"`
	// Location - Azure location in which project is created.
	Location *string `json:"location,omitempty"`
	// ID - READ-ONLY; Path reference to this project /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; Name of the project.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; Type of the object = [Microsoft.Migrate/migrateProjects].
	Type *string `json:"type,omitempty"`
	// SystemData - READ-ONLY
	SystemData *SystemData `json:"systemData,omitempty"`
}

// MarshalJSON is the custom marshaler for Project.
func (p Project) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if p.Properties != nil {
		objectMap["properties"] = p.Properties
	}
	if p.ETag != nil {
		objectMap["eTag"] = p.ETag
	}
	if p.Location != nil {
		objectMap["location"] = p.Location
	}
	return json.Marshal(objectMap)
}

// ProjectProperties properties of a migrate project.
type ProjectProperties struct {
	// RegisteredTools - READ-ONLY; Register tools inside project.
	RegisteredTools *[]Items `json:"registeredTools,omitempty"`
	// ServiceEndpoint - Service endpoint.
	ServiceEndpoint *string `json:"serviceEndpoint,omitempty"`
	// Summary - READ-ONLY; Project summary.
	Summary map[string]*ProjectSummary `json:"summary"`
	// LastSummaryRefreshedTime - READ-ONLY; Last summary refresh time.
	LastSummaryRefreshedTime *date.Time `json:"lastSummaryRefreshedTime,omitempty"`
	// RefreshSummaryState - READ-ONLY; Refresh summary state. Possible values include: 'RefreshSummaryStateStarted', 'RefreshSummaryStateInProgress', 'RefreshSummaryStateCompleted', 'RefreshSummaryStateFailed'
	RefreshSummaryState RefreshSummaryState `json:"refreshSummaryState,omitempty"`
	// UtilityStorageAccountID - Utility storage account id.
	UtilityStorageAccountID *string `json:"utilityStorageAccountId,omitempty"`
	// PublicNetworkAccess - Gets or sets the state of public network access. Possible values include: 'NotSpecified', 'Enabled', 'Disabled'
	PublicNetworkAccess PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`
	// PrivateEndpointConnections - READ-ONLY; Gets the private endpoint connections.
	PrivateEndpointConnections *[]PrivateEndpointConnection `json:"privateEndpointConnections,omitempty"`
}

// MarshalJSON is the custom marshaler for ProjectProperties.
func (pp ProjectProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if pp.ServiceEndpoint != nil {
		objectMap["serviceEndpoint"] = pp.ServiceEndpoint
	}
	if pp.UtilityStorageAccountID != nil {
		objectMap["utilityStorageAccountId"] = pp.UtilityStorageAccountID
	}
	if pp.PublicNetworkAccess != "" {
		objectMap["publicNetworkAccess"] = pp.PublicNetworkAccess
	}
	return json.Marshal(objectMap)
}

// ProjectResultList list of projects.
type ProjectResultList struct {
	autorest.Response `json:"-"`
	// Value - List of projects.
	Value    *[]Project `json:"value,omitempty"`
	NextLink *string    `json:"nextLink,omitempty"`
}

// ProjectResultListIterator provides access to a complete listing of Project values.
type ProjectResultListIterator struct {
	i    int
	page ProjectResultListPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *ProjectResultListIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/ProjectResultListIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *ProjectResultListIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter ProjectResultListIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter ProjectResultListIterator) Response() ProjectResultList {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter ProjectResultListIterator) Value() Project {
	if !iter.page.NotDone() {
		return Project{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the ProjectResultListIterator type.
func NewProjectResultListIterator(page ProjectResultListPage) ProjectResultListIterator {
	return ProjectResultListIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (prl ProjectResultList) IsEmpty() bool {
	return prl.Value == nil || len(*prl.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (prl ProjectResultList) hasNextLink() bool {
	return prl.NextLink != nil && len(*prl.NextLink) != 0
}

// projectResultListPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (prl ProjectResultList) projectResultListPreparer(ctx context.Context) (*http.Request, error) {
	if !prl.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(prl.NextLink)))
}

// ProjectResultListPage contains a page of Project values.
type ProjectResultListPage struct {
	fn  func(context.Context, ProjectResultList) (ProjectResultList, error)
	prl ProjectResultList
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *ProjectResultListPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/ProjectResultListPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.prl)
		if err != nil {
			return err
		}
		page.prl = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *ProjectResultListPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page ProjectResultListPage) NotDone() bool {
	return !page.prl.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page ProjectResultListPage) Response() ProjectResultList {
	return page.prl
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page ProjectResultListPage) Values() []Project {
	if page.prl.IsEmpty() {
		return nil
	}
	return *page.prl.Value
}

// Creates a new instance of the ProjectResultListPage type.
func NewProjectResultListPage(cur ProjectResultList, getNextPage func(context.Context, ProjectResultList) (ProjectResultList, error)) ProjectResultListPage {
	return ProjectResultListPage{
		fn:  getNextPage,
		prl: cur,
	}
}

// ProjectSummary project summary.
type ProjectSummary struct {
	// InstanceType - READ-ONLY; Instance type.
	InstanceType *string `json:"instanceType,omitempty"`
	// RefreshSummaryState - Refresh summary state. Possible values include: 'RefreshSummaryState1Started', 'RefreshSummaryState1InProgress', 'RefreshSummaryState1Completed', 'RefreshSummaryState1Failed'
	RefreshSummaryState RefreshSummaryState1 `json:"refreshSummaryState,omitempty"`
	// LastSummaryRefreshedTime - Last summary refresh time.
	LastSummaryRefreshedTime *date.Time `json:"lastSummaryRefreshedTime,omitempty"`
	// ExtendedSummary - Extended summary.
	ExtendedSummary map[string]*string `json:"extendedSummary"`
}

// MarshalJSON is the custom marshaler for ProjectSummary.
func (ps ProjectSummary) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if ps.RefreshSummaryState != "" {
		objectMap["refreshSummaryState"] = ps.RefreshSummaryState
	}
	if ps.LastSummaryRefreshedTime != nil {
		objectMap["lastSummaryRefreshedTime"] = ps.LastSummaryRefreshedTime
	}
	if ps.ExtendedSummary != nil {
		objectMap["extendedSummary"] = ps.ExtendedSummary
	}
	return json.Marshal(objectMap)
}

// ResourceID ...
type ResourceID struct {
	// ID - READ-ONLY
	ID *string `json:"id,omitempty"`
}

// MarshalJSON is the custom marshaler for ResourceID.
func (ri ResourceID) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	return json.Marshal(objectMap)
}

// SystemData metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// CreatedBy - The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`
	// CreatedByType - The type of identity that created the resource. Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
	CreatedByType CreatedByType `json:"createdByType,omitempty"`
	// CreatedAt - The timestamp of resource creation (UTC).
	CreatedAt *date.Time `json:"createdAt,omitempty"`
	// LastModifiedBy - The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	// LastModifiedByType - The type of identity that last modified the resource. Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
	LastModifiedByType CreatedByType `json:"lastModifiedByType,omitempty"`
	// LastModifiedAt - The type of identity that last modified the resource.
	LastModifiedAt *date.Time `json:"lastModifiedAt,omitempty"`
}
