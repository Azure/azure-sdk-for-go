package scheduledqueryrules

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ConditionOperator enumerates the values for condition operator.
type ConditionOperator string

const (
	// Equals ...
	Equals ConditionOperator = "Equals"
	// GreaterThan ...
	GreaterThan ConditionOperator = "GreaterThan"
	// GreaterThanOrEqual ...
	GreaterThanOrEqual ConditionOperator = "GreaterThanOrEqual"
	// LessThan ...
	LessThan ConditionOperator = "LessThan"
	// LessThanOrEqual ...
	LessThanOrEqual ConditionOperator = "LessThanOrEqual"
)

// PossibleConditionOperatorValues returns an array of possible values for the ConditionOperator const type.
func PossibleConditionOperatorValues() []ConditionOperator {
	return []ConditionOperator{Equals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// DimensionOperator enumerates the values for dimension operator.
type DimensionOperator string

const (
	// Exclude ...
	Exclude DimensionOperator = "Exclude"
	// Include ...
	Include DimensionOperator = "Include"
)

// PossibleDimensionOperatorValues returns an array of possible values for the DimensionOperator const type.
func PossibleDimensionOperatorValues() []DimensionOperator {
	return []DimensionOperator{Exclude, Include}
}

// Kind enumerates the values for kind.
type Kind string

const (
	// LogAlert ...
	LogAlert Kind = "LogAlert"
	// LogToMetric ...
	LogToMetric Kind = "LogToMetric"
)

// PossibleKindValues returns an array of possible values for the Kind const type.
func PossibleKindValues() []Kind {
	return []Kind{LogAlert, LogToMetric}
}

// TimeAggregation enumerates the values for time aggregation.
type TimeAggregation string

const (
	// Average ...
	Average TimeAggregation = "Average"
	// Count ...
	Count TimeAggregation = "Count"
	// Maximum ...
	Maximum TimeAggregation = "Maximum"
	// Minimum ...
	Minimum TimeAggregation = "Minimum"
	// Total ...
	Total TimeAggregation = "Total"
)

// PossibleTimeAggregationValues returns an array of possible values for the TimeAggregation const type.
func PossibleTimeAggregationValues() []TimeAggregation {
	return []TimeAggregation{Average, Count, Maximum, Minimum, Total}
}
