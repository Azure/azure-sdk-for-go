package powerbidedicated

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// CapacityProvisioningState enumerates the values for capacity provisioning state.
type CapacityProvisioningState string

const (
	// Deleting ...
	Deleting CapacityProvisioningState = "Deleting"
	// Failed ...
	Failed CapacityProvisioningState = "Failed"
	// Paused ...
	Paused CapacityProvisioningState = "Paused"
	// Pausing ...
	Pausing CapacityProvisioningState = "Pausing"
	// Preparing ...
	Preparing CapacityProvisioningState = "Preparing"
	// Provisioning ...
	Provisioning CapacityProvisioningState = "Provisioning"
	// Resuming ...
	Resuming CapacityProvisioningState = "Resuming"
	// Scaling ...
	Scaling CapacityProvisioningState = "Scaling"
	// Succeeded ...
	Succeeded CapacityProvisioningState = "Succeeded"
	// Suspended ...
	Suspended CapacityProvisioningState = "Suspended"
	// Suspending ...
	Suspending CapacityProvisioningState = "Suspending"
	// Updating ...
	Updating CapacityProvisioningState = "Updating"
)

// PossibleCapacityProvisioningStateValues returns an array of possible values for the CapacityProvisioningState const type.
func PossibleCapacityProvisioningStateValues() []CapacityProvisioningState {
	return []CapacityProvisioningState{Deleting, Failed, Paused, Pausing, Preparing, Provisioning, Resuming, Scaling, Succeeded, Suspended, Suspending, Updating}
}

// CapacitySkuTier enumerates the values for capacity sku tier.
type CapacitySkuTier string

const (
	// AutoPremiumHost ...
	AutoPremiumHost CapacitySkuTier = "AutoPremiumHost"
	// PBIEAzure ...
	PBIEAzure CapacitySkuTier = "PBIE_Azure"
	// Premium ...
	Premium CapacitySkuTier = "Premium"
)

// PossibleCapacitySkuTierValues returns an array of possible values for the CapacitySkuTier const type.
func PossibleCapacitySkuTierValues() []CapacitySkuTier {
	return []CapacitySkuTier{AutoPremiumHost, PBIEAzure, Premium}
}

// IdentityType enumerates the values for identity type.
type IdentityType string

const (
	// Application ...
	Application IdentityType = "Application"
	// Key ...
	Key IdentityType = "Key"
	// ManagedIdentity ...
	ManagedIdentity IdentityType = "ManagedIdentity"
	// User ...
	User IdentityType = "User"
)

// PossibleIdentityTypeValues returns an array of possible values for the IdentityType const type.
func PossibleIdentityTypeValues() []IdentityType {
	return []IdentityType{Application, Key, ManagedIdentity, User}
}

// Mode enumerates the values for mode.
type Mode string

const (
	// Gen1 ...
	Gen1 Mode = "Gen1"
	// Gen2 ...
	Gen2 Mode = "Gen2"
)

// PossibleModeValues returns an array of possible values for the Mode const type.
func PossibleModeValues() []Mode {
	return []Mode{Gen1, Gen2}
}

// State enumerates the values for state.
type State string

const (
	// StateDeleting ...
	StateDeleting State = "Deleting"
	// StateFailed ...
	StateFailed State = "Failed"
	// StatePaused ...
	StatePaused State = "Paused"
	// StatePausing ...
	StatePausing State = "Pausing"
	// StatePreparing ...
	StatePreparing State = "Preparing"
	// StateProvisioning ...
	StateProvisioning State = "Provisioning"
	// StateResuming ...
	StateResuming State = "Resuming"
	// StateScaling ...
	StateScaling State = "Scaling"
	// StateSucceeded ...
	StateSucceeded State = "Succeeded"
	// StateSuspended ...
	StateSuspended State = "Suspended"
	// StateSuspending ...
	StateSuspending State = "Suspending"
	// StateUpdating ...
	StateUpdating State = "Updating"
)

// PossibleStateValues returns an array of possible values for the State const type.
func PossibleStateValues() []State {
	return []State{StateDeleting, StateFailed, StatePaused, StatePausing, StatePreparing, StateProvisioning, StateResuming, StateScaling, StateSucceeded, StateSuspended, StateSuspending, StateUpdating}
}

// VCoreProvisioningState enumerates the values for v core provisioning state.
type VCoreProvisioningState string

const (
	// VCoreProvisioningStateSucceeded ...
	VCoreProvisioningStateSucceeded VCoreProvisioningState = "Succeeded"
)

// PossibleVCoreProvisioningStateValues returns an array of possible values for the VCoreProvisioningState const type.
func PossibleVCoreProvisioningStateValues() []VCoreProvisioningState {
	return []VCoreProvisioningState{VCoreProvisioningStateSucceeded}
}

// VCoreSkuTier enumerates the values for v core sku tier.
type VCoreSkuTier string

const (
	// AutoScale ...
	AutoScale VCoreSkuTier = "AutoScale"
)

// PossibleVCoreSkuTierValues returns an array of possible values for the VCoreSkuTier const type.
func PossibleVCoreSkuTierValues() []VCoreSkuTier {
	return []VCoreSkuTier{AutoScale}
}
