package adp

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// CheckNameAvailabilityReason enumerates the values for check name availability reason.
type CheckNameAvailabilityReason string

const (
	// AlreadyExists ...
	AlreadyExists CheckNameAvailabilityReason = "AlreadyExists"
	// Invalid ...
	Invalid CheckNameAvailabilityReason = "Invalid"
)

// PossibleCheckNameAvailabilityReasonValues returns an array of possible values for the CheckNameAvailabilityReason const type.
func PossibleCheckNameAvailabilityReasonValues() []CheckNameAvailabilityReason {
	return []CheckNameAvailabilityReason{AlreadyExists, Invalid}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// Accepted ...
	Accepted ProvisioningState = "Accepted"
	// Canceled ...
	Canceled ProvisioningState = "Canceled"
	// Deleting ...
	Deleting ProvisioningState = "Deleting"
	// Failed ...
	Failed ProvisioningState = "Failed"
	// Provisioning ...
	Provisioning ProvisioningState = "Provisioning"
	// Succeeded ...
	Succeeded ProvisioningState = "Succeeded"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{Accepted, Canceled, Deleting, Failed, Provisioning, Succeeded}
}

// StorageSkuName enumerates the values for storage sku name.
type StorageSkuName string

const (
	// PremiumLRS ...
	PremiumLRS StorageSkuName = "Premium_LRS"
	// PremiumZRS ...
	PremiumZRS StorageSkuName = "Premium_ZRS"
	// StandardGRS ...
	StandardGRS StorageSkuName = "Standard_GRS"
	// StandardGzrs ...
	StandardGzrs StorageSkuName = "Standard_Gzrs"
	// StandardLRS ...
	StandardLRS StorageSkuName = "Standard_LRS"
	// StandardRagrs ...
	StandardRagrs StorageSkuName = "Standard_Ragrs"
	// StandardRagzrs ...
	StandardRagzrs StorageSkuName = "Standard_Ragzrs"
	// StandardZRS ...
	StandardZRS StorageSkuName = "Standard_ZRS"
)

// PossibleStorageSkuNameValues returns an array of possible values for the StorageSkuName const type.
func PossibleStorageSkuNameValues() []StorageSkuName {
	return []StorageSkuName{PremiumLRS, PremiumZRS, StandardGRS, StandardGzrs, StandardLRS, StandardRagrs, StandardRagzrs, StandardZRS}
}
