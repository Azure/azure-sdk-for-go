package agfoodapi

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/services/preview/agfood/mgmt/2020-05-12-preview/agfood"
	"github.com/Azure/go-autorest/autorest"
)

// ExtensionsClientAPI contains the set of methods on the ExtensionsClient type.
type ExtensionsClientAPI interface {
	Create(ctx context.Context, extensionID string, farmBeatsResourceName string, resourceGroupName string) (result agfood.Extension, err error)
	Delete(ctx context.Context, extensionID string, farmBeatsResourceName string, resourceGroupName string) (result autorest.Response, err error)
	Get(ctx context.Context, extensionID string, farmBeatsResourceName string, resourceGroupName string) (result agfood.Extension, err error)
	ListByFarmBeats(ctx context.Context, resourceGroupName string, farmBeatsResourceName string, extensionID string, extensionCategory string, maxPageSize *int32, skipToken string) (result agfood.ExtensionListResponsePage, err error)
	ListByFarmBeatsComplete(ctx context.Context, resourceGroupName string, farmBeatsResourceName string, extensionID string, extensionCategory string, maxPageSize *int32, skipToken string) (result agfood.ExtensionListResponseIterator, err error)
	Update(ctx context.Context, extensionID string, farmBeatsResourceName string, resourceGroupName string) (result agfood.Extension, err error)
}

var _ ExtensionsClientAPI = (*agfood.ExtensionsClient)(nil)

// FarmBeatsModelsClientAPI contains the set of methods on the FarmBeatsModelsClient type.
type FarmBeatsModelsClientAPI interface {
	CreateOrUpdate(ctx context.Context, farmBeatsResourceName string, resourceGroupName string, body agfood.FarmBeats) (result agfood.FarmBeats, err error)
	Delete(ctx context.Context, resourceGroupName string, farmBeatsResourceName string) (result autorest.Response, err error)
	Get(ctx context.Context, resourceGroupName string, farmBeatsResourceName string) (result agfood.FarmBeats, err error)
	ListByResourceGroup(ctx context.Context, resourceGroupName string, maxPageSize *int32, skipToken string) (result agfood.FarmBeatsListResponsePage, err error)
	ListByResourceGroupComplete(ctx context.Context, resourceGroupName string, maxPageSize *int32, skipToken string) (result agfood.FarmBeatsListResponseIterator, err error)
	ListBySubscription(ctx context.Context, maxPageSize *int32, skipToken string) (result agfood.FarmBeatsListResponsePage, err error)
	ListBySubscriptionComplete(ctx context.Context, maxPageSize *int32, skipToken string) (result agfood.FarmBeatsListResponseIterator, err error)
	Update(ctx context.Context, farmBeatsResourceName string, resourceGroupName string, body agfood.FarmBeatsUpdateRequestModel) (result agfood.FarmBeats, err error)
}

var _ FarmBeatsModelsClientAPI = (*agfood.FarmBeatsModelsClient)(nil)

// LocationsClientAPI contains the set of methods on the LocationsClient type.
type LocationsClientAPI interface {
	CheckNameAvailability(ctx context.Context, body agfood.CheckNameAvailabilityRequest) (result agfood.CheckNameAvailabilityResponse, err error)
}

var _ LocationsClientAPI = (*agfood.LocationsClient)(nil)

// OperationsClientAPI contains the set of methods on the OperationsClient type.
type OperationsClientAPI interface {
	List(ctx context.Context) (result agfood.OperationListResultPage, err error)
	ListComplete(ctx context.Context) (result agfood.OperationListResultIterator, err error)
}

var _ OperationsClientAPI = (*agfood.OperationsClient)(nil)
