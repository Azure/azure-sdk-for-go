package authorization

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AccessRecommendationType enumerates the values for access recommendation type.
type AccessRecommendationType string

const (
	// Approve ...
	Approve AccessRecommendationType = "Approve"
	// Deny ...
	Deny AccessRecommendationType = "Deny"
	// NoInfoAvailable ...
	NoInfoAvailable AccessRecommendationType = "NoInfoAvailable"
)

// PossibleAccessRecommendationTypeValues returns an array of possible values for the AccessRecommendationType const type.
func PossibleAccessRecommendationTypeValues() []AccessRecommendationType {
	return []AccessRecommendationType{Approve, Deny, NoInfoAvailable}
}

// AccessReviewActorIdentityType enumerates the values for access review actor identity type.
type AccessReviewActorIdentityType string

const (
	// ServicePrincipal ...
	ServicePrincipal AccessReviewActorIdentityType = "servicePrincipal"
	// User ...
	User AccessReviewActorIdentityType = "user"
)

// PossibleAccessReviewActorIdentityTypeValues returns an array of possible values for the AccessReviewActorIdentityType const type.
func PossibleAccessReviewActorIdentityTypeValues() []AccessReviewActorIdentityType {
	return []AccessReviewActorIdentityType{ServicePrincipal, User}
}

// AccessReviewApplyResult enumerates the values for access review apply result.
type AccessReviewApplyResult string

const (
	// AccessReviewApplyResultAppliedSuccessfully ...
	AccessReviewApplyResultAppliedSuccessfully AccessReviewApplyResult = "AppliedSuccessfully"
	// AccessReviewApplyResultAppliedSuccessfullyButObjectNotFound ...
	AccessReviewApplyResultAppliedSuccessfullyButObjectNotFound AccessReviewApplyResult = "AppliedSuccessfullyButObjectNotFound"
	// AccessReviewApplyResultAppliedWithUnknownFailure ...
	AccessReviewApplyResultAppliedWithUnknownFailure AccessReviewApplyResult = "AppliedWithUnknownFailure"
	// AccessReviewApplyResultApplying ...
	AccessReviewApplyResultApplying AccessReviewApplyResult = "Applying"
	// AccessReviewApplyResultApplyNotSupported ...
	AccessReviewApplyResultApplyNotSupported AccessReviewApplyResult = "ApplyNotSupported"
	// AccessReviewApplyResultNew ...
	AccessReviewApplyResultNew AccessReviewApplyResult = "New"
)

// PossibleAccessReviewApplyResultValues returns an array of possible values for the AccessReviewApplyResult const type.
func PossibleAccessReviewApplyResultValues() []AccessReviewApplyResult {
	return []AccessReviewApplyResult{AccessReviewApplyResultAppliedSuccessfully, AccessReviewApplyResultAppliedSuccessfullyButObjectNotFound, AccessReviewApplyResultAppliedWithUnknownFailure, AccessReviewApplyResultApplying, AccessReviewApplyResultApplyNotSupported, AccessReviewApplyResultNew}
}

// AccessReviewInstanceStatus enumerates the values for access review instance status.
type AccessReviewInstanceStatus string

const (
	// Applied ...
	Applied AccessReviewInstanceStatus = "Applied"
	// Applying ...
	Applying AccessReviewInstanceStatus = "Applying"
	// AutoReviewed ...
	AutoReviewed AccessReviewInstanceStatus = "AutoReviewed"
	// AutoReviewing ...
	AutoReviewing AccessReviewInstanceStatus = "AutoReviewing"
	// Completed ...
	Completed AccessReviewInstanceStatus = "Completed"
	// Completing ...
	Completing AccessReviewInstanceStatus = "Completing"
	// Initializing ...
	Initializing AccessReviewInstanceStatus = "Initializing"
	// InProgress ...
	InProgress AccessReviewInstanceStatus = "InProgress"
	// NotStarted ...
	NotStarted AccessReviewInstanceStatus = "NotStarted"
	// Scheduled ...
	Scheduled AccessReviewInstanceStatus = "Scheduled"
	// Starting ...
	Starting AccessReviewInstanceStatus = "Starting"
)

// PossibleAccessReviewInstanceStatusValues returns an array of possible values for the AccessReviewInstanceStatus const type.
func PossibleAccessReviewInstanceStatusValues() []AccessReviewInstanceStatus {
	return []AccessReviewInstanceStatus{Applied, Applying, AutoReviewed, AutoReviewing, Completed, Completing, Initializing, InProgress, NotStarted, Scheduled, Starting}
}

// AccessReviewRecurrencePatternType enumerates the values for access review recurrence pattern type.
type AccessReviewRecurrencePatternType string

const (
	// AbsoluteMonthly ...
	AbsoluteMonthly AccessReviewRecurrencePatternType = "absoluteMonthly"
	// Weekly ...
	Weekly AccessReviewRecurrencePatternType = "weekly"
)

// PossibleAccessReviewRecurrencePatternTypeValues returns an array of possible values for the AccessReviewRecurrencePatternType const type.
func PossibleAccessReviewRecurrencePatternTypeValues() []AccessReviewRecurrencePatternType {
	return []AccessReviewRecurrencePatternType{AbsoluteMonthly, Weekly}
}

// AccessReviewRecurrenceRangeType enumerates the values for access review recurrence range type.
type AccessReviewRecurrenceRangeType string

const (
	// EndDate ...
	EndDate AccessReviewRecurrenceRangeType = "endDate"
	// NoEnd ...
	NoEnd AccessReviewRecurrenceRangeType = "noEnd"
	// Numbered ...
	Numbered AccessReviewRecurrenceRangeType = "numbered"
)

// PossibleAccessReviewRecurrenceRangeTypeValues returns an array of possible values for the AccessReviewRecurrenceRangeType const type.
func PossibleAccessReviewRecurrenceRangeTypeValues() []AccessReviewRecurrenceRangeType {
	return []AccessReviewRecurrenceRangeType{EndDate, NoEnd, Numbered}
}

// AccessReviewResult enumerates the values for access review result.
type AccessReviewResult string

const (
	// AccessReviewResultApprove ...
	AccessReviewResultApprove AccessReviewResult = "Approve"
	// AccessReviewResultDeny ...
	AccessReviewResultDeny AccessReviewResult = "Deny"
	// AccessReviewResultDontKnow ...
	AccessReviewResultDontKnow AccessReviewResult = "DontKnow"
	// AccessReviewResultNotNotified ...
	AccessReviewResultNotNotified AccessReviewResult = "NotNotified"
	// AccessReviewResultNotReviewed ...
	AccessReviewResultNotReviewed AccessReviewResult = "NotReviewed"
)

// PossibleAccessReviewResultValues returns an array of possible values for the AccessReviewResult const type.
func PossibleAccessReviewResultValues() []AccessReviewResult {
	return []AccessReviewResult{AccessReviewResultApprove, AccessReviewResultDeny, AccessReviewResultDontKnow, AccessReviewResultNotNotified, AccessReviewResultNotReviewed}
}

// AccessReviewReviewerType enumerates the values for access review reviewer type.
type AccessReviewReviewerType string

const (
	// AccessReviewReviewerTypeServicePrincipal ...
	AccessReviewReviewerTypeServicePrincipal AccessReviewReviewerType = "servicePrincipal"
	// AccessReviewReviewerTypeUser ...
	AccessReviewReviewerTypeUser AccessReviewReviewerType = "user"
)

// PossibleAccessReviewReviewerTypeValues returns an array of possible values for the AccessReviewReviewerType const type.
func PossibleAccessReviewReviewerTypeValues() []AccessReviewReviewerType {
	return []AccessReviewReviewerType{AccessReviewReviewerTypeServicePrincipal, AccessReviewReviewerTypeUser}
}

// AccessReviewScheduleDefinitionReviewersType enumerates the values for access review schedule definition
// reviewers type.
type AccessReviewScheduleDefinitionReviewersType string

const (
	// Assigned ...
	Assigned AccessReviewScheduleDefinitionReviewersType = "Assigned"
	// Managers ...
	Managers AccessReviewScheduleDefinitionReviewersType = "Managers"
	// Self ...
	Self AccessReviewScheduleDefinitionReviewersType = "Self"
)

// PossibleAccessReviewScheduleDefinitionReviewersTypeValues returns an array of possible values for the AccessReviewScheduleDefinitionReviewersType const type.
func PossibleAccessReviewScheduleDefinitionReviewersTypeValues() []AccessReviewScheduleDefinitionReviewersType {
	return []AccessReviewScheduleDefinitionReviewersType{Assigned, Managers, Self}
}

// AccessReviewScheduleDefinitionStatus enumerates the values for access review schedule definition status.
type AccessReviewScheduleDefinitionStatus string

const (
	// AccessReviewScheduleDefinitionStatusApplied ...
	AccessReviewScheduleDefinitionStatusApplied AccessReviewScheduleDefinitionStatus = "Applied"
	// AccessReviewScheduleDefinitionStatusApplying ...
	AccessReviewScheduleDefinitionStatusApplying AccessReviewScheduleDefinitionStatus = "Applying"
	// AccessReviewScheduleDefinitionStatusAutoReviewed ...
	AccessReviewScheduleDefinitionStatusAutoReviewed AccessReviewScheduleDefinitionStatus = "AutoReviewed"
	// AccessReviewScheduleDefinitionStatusAutoReviewing ...
	AccessReviewScheduleDefinitionStatusAutoReviewing AccessReviewScheduleDefinitionStatus = "AutoReviewing"
	// AccessReviewScheduleDefinitionStatusCompleted ...
	AccessReviewScheduleDefinitionStatusCompleted AccessReviewScheduleDefinitionStatus = "Completed"
	// AccessReviewScheduleDefinitionStatusCompleting ...
	AccessReviewScheduleDefinitionStatusCompleting AccessReviewScheduleDefinitionStatus = "Completing"
	// AccessReviewScheduleDefinitionStatusInitializing ...
	AccessReviewScheduleDefinitionStatusInitializing AccessReviewScheduleDefinitionStatus = "Initializing"
	// AccessReviewScheduleDefinitionStatusInProgress ...
	AccessReviewScheduleDefinitionStatusInProgress AccessReviewScheduleDefinitionStatus = "InProgress"
	// AccessReviewScheduleDefinitionStatusNotStarted ...
	AccessReviewScheduleDefinitionStatusNotStarted AccessReviewScheduleDefinitionStatus = "NotStarted"
	// AccessReviewScheduleDefinitionStatusScheduled ...
	AccessReviewScheduleDefinitionStatusScheduled AccessReviewScheduleDefinitionStatus = "Scheduled"
	// AccessReviewScheduleDefinitionStatusStarting ...
	AccessReviewScheduleDefinitionStatusStarting AccessReviewScheduleDefinitionStatus = "Starting"
)

// PossibleAccessReviewScheduleDefinitionStatusValues returns an array of possible values for the AccessReviewScheduleDefinitionStatus const type.
func PossibleAccessReviewScheduleDefinitionStatusValues() []AccessReviewScheduleDefinitionStatus {
	return []AccessReviewScheduleDefinitionStatus{AccessReviewScheduleDefinitionStatusApplied, AccessReviewScheduleDefinitionStatusApplying, AccessReviewScheduleDefinitionStatusAutoReviewed, AccessReviewScheduleDefinitionStatusAutoReviewing, AccessReviewScheduleDefinitionStatusCompleted, AccessReviewScheduleDefinitionStatusCompleting, AccessReviewScheduleDefinitionStatusInitializing, AccessReviewScheduleDefinitionStatusInProgress, AccessReviewScheduleDefinitionStatusNotStarted, AccessReviewScheduleDefinitionStatusScheduled, AccessReviewScheduleDefinitionStatusStarting}
}

// AccessReviewScopePrincipalType enumerates the values for access review scope principal type.
type AccessReviewScopePrincipalType string

const (
	// AccessReviewScopePrincipalTypeServicePrincipal ...
	AccessReviewScopePrincipalTypeServicePrincipal AccessReviewScopePrincipalType = "servicePrincipal"
	// AccessReviewScopePrincipalTypeUser ...
	AccessReviewScopePrincipalTypeUser AccessReviewScopePrincipalType = "user"
)

// PossibleAccessReviewScopePrincipalTypeValues returns an array of possible values for the AccessReviewScopePrincipalType const type.
func PossibleAccessReviewScopePrincipalTypeValues() []AccessReviewScopePrincipalType {
	return []AccessReviewScopePrincipalType{AccessReviewScopePrincipalTypeServicePrincipal, AccessReviewScopePrincipalTypeUser}
}

// ApprovalMode enumerates the values for approval mode.
type ApprovalMode string

const (
	// NoApproval ...
	NoApproval ApprovalMode = "NoApproval"
	// Parallel ...
	Parallel ApprovalMode = "Parallel"
	// Serial ...
	Serial ApprovalMode = "Serial"
	// SingleStage ...
	SingleStage ApprovalMode = "SingleStage"
)

// PossibleApprovalModeValues returns an array of possible values for the ApprovalMode const type.
func PossibleApprovalModeValues() []ApprovalMode {
	return []ApprovalMode{NoApproval, Parallel, Serial, SingleStage}
}

// AssignmentType enumerates the values for assignment type.
type AssignmentType string

const (
	// AssignmentTypeActivated ...
	AssignmentTypeActivated AssignmentType = "Activated"
	// AssignmentTypeAssigned ...
	AssignmentTypeAssigned AssignmentType = "Assigned"
)

// PossibleAssignmentTypeValues returns an array of possible values for the AssignmentType const type.
func PossibleAssignmentTypeValues() []AssignmentType {
	return []AssignmentType{AssignmentTypeActivated, AssignmentTypeAssigned}
}

// DefaultDecisionType enumerates the values for default decision type.
type DefaultDecisionType string

const (
	// DefaultDecisionTypeApprove ...
	DefaultDecisionTypeApprove DefaultDecisionType = "Approve"
	// DefaultDecisionTypeDeny ...
	DefaultDecisionTypeDeny DefaultDecisionType = "Deny"
	// DefaultDecisionTypeRecommendation ...
	DefaultDecisionTypeRecommendation DefaultDecisionType = "Recommendation"
)

// PossibleDefaultDecisionTypeValues returns an array of possible values for the DefaultDecisionType const type.
func PossibleDefaultDecisionTypeValues() []DefaultDecisionType {
	return []DefaultDecisionType{DefaultDecisionTypeApprove, DefaultDecisionTypeDeny, DefaultDecisionTypeRecommendation}
}

// EnablementRules enumerates the values for enablement rules.
type EnablementRules string

const (
	// Justification ...
	Justification EnablementRules = "Justification"
	// MultiFactorAuthentication ...
	MultiFactorAuthentication EnablementRules = "MultiFactorAuthentication"
	// Ticketing ...
	Ticketing EnablementRules = "Ticketing"
)

// PossibleEnablementRulesValues returns an array of possible values for the EnablementRules const type.
func PossibleEnablementRulesValues() []EnablementRules {
	return []EnablementRules{Justification, MultiFactorAuthentication, Ticketing}
}

// MemberType enumerates the values for member type.
type MemberType string

const (
	// Direct ...
	Direct MemberType = "Direct"
	// Group ...
	Group MemberType = "Group"
	// Inherited ...
	Inherited MemberType = "Inherited"
)

// PossibleMemberTypeValues returns an array of possible values for the MemberType const type.
func PossibleMemberTypeValues() []MemberType {
	return []MemberType{Direct, Group, Inherited}
}

// NotificationDeliveryMechanism enumerates the values for notification delivery mechanism.
type NotificationDeliveryMechanism string

const (
	// Email ...
	Email NotificationDeliveryMechanism = "Email"
)

// PossibleNotificationDeliveryMechanismValues returns an array of possible values for the NotificationDeliveryMechanism const type.
func PossibleNotificationDeliveryMechanismValues() []NotificationDeliveryMechanism {
	return []NotificationDeliveryMechanism{Email}
}

// NotificationLevel enumerates the values for notification level.
type NotificationLevel string

const (
	// All ...
	All NotificationLevel = "All"
	// Critical ...
	Critical NotificationLevel = "Critical"
	// None ...
	None NotificationLevel = "None"
)

// PossibleNotificationLevelValues returns an array of possible values for the NotificationLevel const type.
func PossibleNotificationLevelValues() []NotificationLevel {
	return []NotificationLevel{All, Critical, None}
}

// PrincipalType enumerates the values for principal type.
type PrincipalType string

const (
	// PrincipalTypeDevice ...
	PrincipalTypeDevice PrincipalType = "Device"
	// PrincipalTypeForeignGroup ...
	PrincipalTypeForeignGroup PrincipalType = "ForeignGroup"
	// PrincipalTypeGroup ...
	PrincipalTypeGroup PrincipalType = "Group"
	// PrincipalTypeServicePrincipal ...
	PrincipalTypeServicePrincipal PrincipalType = "ServicePrincipal"
	// PrincipalTypeUser ...
	PrincipalTypeUser PrincipalType = "User"
)

// PossiblePrincipalTypeValues returns an array of possible values for the PrincipalType const type.
func PossiblePrincipalTypeValues() []PrincipalType {
	return []PrincipalType{PrincipalTypeDevice, PrincipalTypeForeignGroup, PrincipalTypeGroup, PrincipalTypeServicePrincipal, PrincipalTypeUser}
}

// RecipientType enumerates the values for recipient type.
type RecipientType string

const (
	// Admin ...
	Admin RecipientType = "Admin"
	// Approver ...
	Approver RecipientType = "Approver"
	// Requestor ...
	Requestor RecipientType = "Requestor"
)

// PossibleRecipientTypeValues returns an array of possible values for the RecipientType const type.
func PossibleRecipientTypeValues() []RecipientType {
	return []RecipientType{Admin, Approver, Requestor}
}

// RequestType enumerates the values for request type.
type RequestType string

const (
	// AdminAssign ...
	AdminAssign RequestType = "AdminAssign"
	// AdminExtend ...
	AdminExtend RequestType = "AdminExtend"
	// AdminRemove ...
	AdminRemove RequestType = "AdminRemove"
	// AdminRenew ...
	AdminRenew RequestType = "AdminRenew"
	// AdminUpdate ...
	AdminUpdate RequestType = "AdminUpdate"
	// SelfActivate ...
	SelfActivate RequestType = "SelfActivate"
	// SelfDeactivate ...
	SelfDeactivate RequestType = "SelfDeactivate"
	// SelfExtend ...
	SelfExtend RequestType = "SelfExtend"
	// SelfRenew ...
	SelfRenew RequestType = "SelfRenew"
)

// PossibleRequestTypeValues returns an array of possible values for the RequestType const type.
func PossibleRequestTypeValues() []RequestType {
	return []RequestType{AdminAssign, AdminExtend, AdminRemove, AdminRenew, AdminUpdate, SelfActivate, SelfDeactivate, SelfExtend, SelfRenew}
}

// RoleManagementPolicyRuleType enumerates the values for role management policy rule type.
type RoleManagementPolicyRuleType string

const (
	// RoleManagementPolicyRuleTypeRoleManagementPolicyApprovalRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyApprovalRule RoleManagementPolicyRuleType = "RoleManagementPolicyApprovalRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyAuthenticationContextRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyAuthenticationContextRule RoleManagementPolicyRuleType = "RoleManagementPolicyAuthenticationContextRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyEnablementRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyEnablementRule RoleManagementPolicyRuleType = "RoleManagementPolicyEnablementRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyExpirationRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyExpirationRule RoleManagementPolicyRuleType = "RoleManagementPolicyExpirationRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyNotificationRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyNotificationRule RoleManagementPolicyRuleType = "RoleManagementPolicyNotificationRule"
)

// PossibleRoleManagementPolicyRuleTypeValues returns an array of possible values for the RoleManagementPolicyRuleType const type.
func PossibleRoleManagementPolicyRuleTypeValues() []RoleManagementPolicyRuleType {
	return []RoleManagementPolicyRuleType{RoleManagementPolicyRuleTypeRoleManagementPolicyApprovalRule, RoleManagementPolicyRuleTypeRoleManagementPolicyAuthenticationContextRule, RoleManagementPolicyRuleTypeRoleManagementPolicyEnablementRule, RoleManagementPolicyRuleTypeRoleManagementPolicyExpirationRule, RoleManagementPolicyRuleTypeRoleManagementPolicyNotificationRule}
}

// RuleType enumerates the values for rule type.
type RuleType string

const (
	// RuleTypeRoleManagementPolicyApprovalRule ...
	RuleTypeRoleManagementPolicyApprovalRule RuleType = "RoleManagementPolicyApprovalRule"
	// RuleTypeRoleManagementPolicyAuthenticationContextRule ...
	RuleTypeRoleManagementPolicyAuthenticationContextRule RuleType = "RoleManagementPolicyAuthenticationContextRule"
	// RuleTypeRoleManagementPolicyEnablementRule ...
	RuleTypeRoleManagementPolicyEnablementRule RuleType = "RoleManagementPolicyEnablementRule"
	// RuleTypeRoleManagementPolicyExpirationRule ...
	RuleTypeRoleManagementPolicyExpirationRule RuleType = "RoleManagementPolicyExpirationRule"
	// RuleTypeRoleManagementPolicyNotificationRule ...
	RuleTypeRoleManagementPolicyNotificationRule RuleType = "RoleManagementPolicyNotificationRule"
	// RuleTypeRoleManagementPolicyRule ...
	RuleTypeRoleManagementPolicyRule RuleType = "RoleManagementPolicyRule"
)

// PossibleRuleTypeValues returns an array of possible values for the RuleType const type.
func PossibleRuleTypeValues() []RuleType {
	return []RuleType{RuleTypeRoleManagementPolicyApprovalRule, RuleTypeRoleManagementPolicyAuthenticationContextRule, RuleTypeRoleManagementPolicyEnablementRule, RuleTypeRoleManagementPolicyExpirationRule, RuleTypeRoleManagementPolicyNotificationRule, RuleTypeRoleManagementPolicyRule}
}

// Status enumerates the values for status.
type Status string

const (
	// Accepted ...
	Accepted Status = "Accepted"
	// AdminApproved ...
	AdminApproved Status = "AdminApproved"
	// AdminDenied ...
	AdminDenied Status = "AdminDenied"
	// Canceled ...
	Canceled Status = "Canceled"
	// Denied ...
	Denied Status = "Denied"
	// Failed ...
	Failed Status = "Failed"
	// FailedAsResourceIsLocked ...
	FailedAsResourceIsLocked Status = "FailedAsResourceIsLocked"
	// Granted ...
	Granted Status = "Granted"
	// Invalid ...
	Invalid Status = "Invalid"
	// PendingAdminDecision ...
	PendingAdminDecision Status = "PendingAdminDecision"
	// PendingApproval ...
	PendingApproval Status = "PendingApproval"
	// PendingApprovalProvisioning ...
	PendingApprovalProvisioning Status = "PendingApprovalProvisioning"
	// PendingEvaluation ...
	PendingEvaluation Status = "PendingEvaluation"
	// PendingExternalProvisioning ...
	PendingExternalProvisioning Status = "PendingExternalProvisioning"
	// PendingProvisioning ...
	PendingProvisioning Status = "PendingProvisioning"
	// PendingRevocation ...
	PendingRevocation Status = "PendingRevocation"
	// PendingScheduleCreation ...
	PendingScheduleCreation Status = "PendingScheduleCreation"
	// Provisioned ...
	Provisioned Status = "Provisioned"
	// ProvisioningStarted ...
	ProvisioningStarted Status = "ProvisioningStarted"
	// Revoked ...
	Revoked Status = "Revoked"
	// ScheduleCreated ...
	ScheduleCreated Status = "ScheduleCreated"
	// TimedOut ...
	TimedOut Status = "TimedOut"
)

// PossibleStatusValues returns an array of possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{Accepted, AdminApproved, AdminDenied, Canceled, Denied, Failed, FailedAsResourceIsLocked, Granted, Invalid, PendingAdminDecision, PendingApproval, PendingApprovalProvisioning, PendingEvaluation, PendingExternalProvisioning, PendingProvisioning, PendingRevocation, PendingScheduleCreation, Provisioned, ProvisioningStarted, Revoked, ScheduleCreated, TimedOut}
}

// Type enumerates the values for type.
type Type string

const (
	// AfterDateTime ...
	AfterDateTime Type = "AfterDateTime"
	// AfterDuration ...
	AfterDuration Type = "AfterDuration"
	// NoExpiration ...
	NoExpiration Type = "NoExpiration"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{AfterDateTime, AfterDuration, NoExpiration}
}

// TypeBasicAccessReviewDecisionTarget enumerates the values for type basic access review decision target.
type TypeBasicAccessReviewDecisionTarget string

const (
	// TypeAccessReviewDecisionTarget ...
	TypeAccessReviewDecisionTarget TypeBasicAccessReviewDecisionTarget = "AccessReviewDecisionTarget"
	// TypeServicePrincipal ...
	TypeServicePrincipal TypeBasicAccessReviewDecisionTarget = "servicePrincipal"
	// TypeUser ...
	TypeUser TypeBasicAccessReviewDecisionTarget = "user"
)

// PossibleTypeBasicAccessReviewDecisionTargetValues returns an array of possible values for the TypeBasicAccessReviewDecisionTarget const type.
func PossibleTypeBasicAccessReviewDecisionTargetValues() []TypeBasicAccessReviewDecisionTarget {
	return []TypeBasicAccessReviewDecisionTarget{TypeAccessReviewDecisionTarget, TypeServicePrincipal, TypeUser}
}

// UserType enumerates the values for user type.
type UserType string

const (
	// UserTypeGroup ...
	UserTypeGroup UserType = "Group"
	// UserTypeUser ...
	UserTypeUser UserType = "User"
)

// PossibleUserTypeValues returns an array of possible values for the UserType const type.
func PossibleUserTypeValues() []UserType {
	return []UserType{UserTypeGroup, UserTypeUser}
}
