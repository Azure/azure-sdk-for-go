package authorization

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ApprovalMode enumerates the values for approval mode.
type ApprovalMode string

const (
	// NoApproval ...
	NoApproval ApprovalMode = "NoApproval"
	// Parallel ...
	Parallel ApprovalMode = "Parallel"
	// Serial ...
	Serial ApprovalMode = "Serial"
	// SingleStage ...
	SingleStage ApprovalMode = "SingleStage"
)

// PossibleApprovalModeValues returns an array of possible values for the ApprovalMode const type.
func PossibleApprovalModeValues() []ApprovalMode {
	return []ApprovalMode{NoApproval, Parallel, Serial, SingleStage}
}

// AssignmentType enumerates the values for assignment type.
type AssignmentType string

const (
	// Activated ...
	Activated AssignmentType = "Activated"
	// Assigned ...
	Assigned AssignmentType = "Assigned"
)

// PossibleAssignmentTypeValues returns an array of possible values for the AssignmentType const type.
func PossibleAssignmentTypeValues() []AssignmentType {
	return []AssignmentType{Activated, Assigned}
}

// EnablementRules enumerates the values for enablement rules.
type EnablementRules string

const (
	// Justification ...
	Justification EnablementRules = "Justification"
	// MultiFactorAuthentication ...
	MultiFactorAuthentication EnablementRules = "MultiFactorAuthentication"
	// Ticketing ...
	Ticketing EnablementRules = "Ticketing"
)

// PossibleEnablementRulesValues returns an array of possible values for the EnablementRules const type.
func PossibleEnablementRulesValues() []EnablementRules {
	return []EnablementRules{Justification, MultiFactorAuthentication, Ticketing}
}

// MemberType enumerates the values for member type.
type MemberType string

const (
	// Direct ...
	Direct MemberType = "Direct"
	// Group ...
	Group MemberType = "Group"
	// Inherited ...
	Inherited MemberType = "Inherited"
)

// PossibleMemberTypeValues returns an array of possible values for the MemberType const type.
func PossibleMemberTypeValues() []MemberType {
	return []MemberType{Direct, Group, Inherited}
}

// NotificationDeliveryMechanism enumerates the values for notification delivery mechanism.
type NotificationDeliveryMechanism string

const (
	// Email ...
	Email NotificationDeliveryMechanism = "Email"
)

// PossibleNotificationDeliveryMechanismValues returns an array of possible values for the NotificationDeliveryMechanism const type.
func PossibleNotificationDeliveryMechanismValues() []NotificationDeliveryMechanism {
	return []NotificationDeliveryMechanism{Email}
}

// NotificationLevel enumerates the values for notification level.
type NotificationLevel string

const (
	// All ...
	All NotificationLevel = "All"
	// Critical ...
	Critical NotificationLevel = "Critical"
	// None ...
	None NotificationLevel = "None"
)

// PossibleNotificationLevelValues returns an array of possible values for the NotificationLevel const type.
func PossibleNotificationLevelValues() []NotificationLevel {
	return []NotificationLevel{All, Critical, None}
}

// PrincipalType enumerates the values for principal type.
type PrincipalType string

const (
	// PrincipalTypeApplication ...
	PrincipalTypeApplication PrincipalType = "Application"
	// PrincipalTypeDevice ...
	PrincipalTypeDevice PrincipalType = "Device"
	// PrincipalTypeDirectoryObjectOrGroup ...
	PrincipalTypeDirectoryObjectOrGroup PrincipalType = "DirectoryObjectOrGroup"
	// PrincipalTypeDirectoryRoleTemplate ...
	PrincipalTypeDirectoryRoleTemplate PrincipalType = "DirectoryRoleTemplate"
	// PrincipalTypeEveryone ...
	PrincipalTypeEveryone PrincipalType = "Everyone"
	// PrincipalTypeForeignGroup ...
	PrincipalTypeForeignGroup PrincipalType = "ForeignGroup"
	// PrincipalTypeGroup ...
	PrincipalTypeGroup PrincipalType = "Group"
	// PrincipalTypeMSI ...
	PrincipalTypeMSI PrincipalType = "MSI"
	// PrincipalTypeServicePrincipal ...
	PrincipalTypeServicePrincipal PrincipalType = "ServicePrincipal"
	// PrincipalTypeUnknown ...
	PrincipalTypeUnknown PrincipalType = "Unknown"
	// PrincipalTypeUser ...
	PrincipalTypeUser PrincipalType = "User"
)

// PossiblePrincipalTypeValues returns an array of possible values for the PrincipalType const type.
func PossiblePrincipalTypeValues() []PrincipalType {
	return []PrincipalType{PrincipalTypeApplication, PrincipalTypeDevice, PrincipalTypeDirectoryObjectOrGroup, PrincipalTypeDirectoryRoleTemplate, PrincipalTypeEveryone, PrincipalTypeForeignGroup, PrincipalTypeGroup, PrincipalTypeMSI, PrincipalTypeServicePrincipal, PrincipalTypeUnknown, PrincipalTypeUser}
}

// RecipientType enumerates the values for recipient type.
type RecipientType string

const (
	// Admin ...
	Admin RecipientType = "Admin"
	// Approver ...
	Approver RecipientType = "Approver"
	// Requestor ...
	Requestor RecipientType = "Requestor"
)

// PossibleRecipientTypeValues returns an array of possible values for the RecipientType const type.
func PossibleRecipientTypeValues() []RecipientType {
	return []RecipientType{Admin, Approver, Requestor}
}

// RequestType enumerates the values for request type.
type RequestType string

const (
	// AdminAssign ...
	AdminAssign RequestType = "AdminAssign"
	// AdminExtend ...
	AdminExtend RequestType = "AdminExtend"
	// AdminRemove ...
	AdminRemove RequestType = "AdminRemove"
	// AdminRenew ...
	AdminRenew RequestType = "AdminRenew"
	// AdminUpdate ...
	AdminUpdate RequestType = "AdminUpdate"
	// SelfActivate ...
	SelfActivate RequestType = "SelfActivate"
	// SelfDeactivate ...
	SelfDeactivate RequestType = "SelfDeactivate"
	// SelfExtend ...
	SelfExtend RequestType = "SelfExtend"
	// SelfRenew ...
	SelfRenew RequestType = "SelfRenew"
)

// PossibleRequestTypeValues returns an array of possible values for the RequestType const type.
func PossibleRequestTypeValues() []RequestType {
	return []RequestType{AdminAssign, AdminExtend, AdminRemove, AdminRenew, AdminUpdate, SelfActivate, SelfDeactivate, SelfExtend, SelfRenew}
}

// RoleManagementPolicyRuleType enumerates the values for role management policy rule type.
type RoleManagementPolicyRuleType string

const (
	// RoleManagementPolicyRuleTypeRoleManagementPolicyApprovalRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyApprovalRule RoleManagementPolicyRuleType = "RoleManagementPolicyApprovalRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyAuthenticationContextRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyAuthenticationContextRule RoleManagementPolicyRuleType = "RoleManagementPolicyAuthenticationContextRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyEnablementRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyEnablementRule RoleManagementPolicyRuleType = "RoleManagementPolicyEnablementRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyExpirationRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyExpirationRule RoleManagementPolicyRuleType = "RoleManagementPolicyExpirationRule"
	// RoleManagementPolicyRuleTypeRoleManagementPolicyNotificationRule ...
	RoleManagementPolicyRuleTypeRoleManagementPolicyNotificationRule RoleManagementPolicyRuleType = "RoleManagementPolicyNotificationRule"
)

// PossibleRoleManagementPolicyRuleTypeValues returns an array of possible values for the RoleManagementPolicyRuleType const type.
func PossibleRoleManagementPolicyRuleTypeValues() []RoleManagementPolicyRuleType {
	return []RoleManagementPolicyRuleType{RoleManagementPolicyRuleTypeRoleManagementPolicyApprovalRule, RoleManagementPolicyRuleTypeRoleManagementPolicyAuthenticationContextRule, RoleManagementPolicyRuleTypeRoleManagementPolicyEnablementRule, RoleManagementPolicyRuleTypeRoleManagementPolicyExpirationRule, RoleManagementPolicyRuleTypeRoleManagementPolicyNotificationRule}
}

// RuleType enumerates the values for rule type.
type RuleType string

const (
	// RuleTypeRoleManagementPolicyApprovalRule ...
	RuleTypeRoleManagementPolicyApprovalRule RuleType = "RoleManagementPolicyApprovalRule"
	// RuleTypeRoleManagementPolicyAuthenticationContextRule ...
	RuleTypeRoleManagementPolicyAuthenticationContextRule RuleType = "RoleManagementPolicyAuthenticationContextRule"
	// RuleTypeRoleManagementPolicyEnablementRule ...
	RuleTypeRoleManagementPolicyEnablementRule RuleType = "RoleManagementPolicyEnablementRule"
	// RuleTypeRoleManagementPolicyExpirationRule ...
	RuleTypeRoleManagementPolicyExpirationRule RuleType = "RoleManagementPolicyExpirationRule"
	// RuleTypeRoleManagementPolicyNotificationRule ...
	RuleTypeRoleManagementPolicyNotificationRule RuleType = "RoleManagementPolicyNotificationRule"
	// RuleTypeRoleManagementPolicyRule ...
	RuleTypeRoleManagementPolicyRule RuleType = "RoleManagementPolicyRule"
)

// PossibleRuleTypeValues returns an array of possible values for the RuleType const type.
func PossibleRuleTypeValues() []RuleType {
	return []RuleType{RuleTypeRoleManagementPolicyApprovalRule, RuleTypeRoleManagementPolicyAuthenticationContextRule, RuleTypeRoleManagementPolicyEnablementRule, RuleTypeRoleManagementPolicyExpirationRule, RuleTypeRoleManagementPolicyNotificationRule, RuleTypeRoleManagementPolicyRule}
}

// Status enumerates the values for status.
type Status string

const (
	// Accepted ...
	Accepted Status = "Accepted"
	// AdminApproved ...
	AdminApproved Status = "AdminApproved"
	// AdminDenied ...
	AdminDenied Status = "AdminDenied"
	// Canceled ...
	Canceled Status = "Canceled"
	// Denied ...
	Denied Status = "Denied"
	// Failed ...
	Failed Status = "Failed"
	// FailedAsResourceIsLocked ...
	FailedAsResourceIsLocked Status = "FailedAsResourceIsLocked"
	// Granted ...
	Granted Status = "Granted"
	// Invalid ...
	Invalid Status = "Invalid"
	// PendingAdminDecision ...
	PendingAdminDecision Status = "PendingAdminDecision"
	// PendingApproval ...
	PendingApproval Status = "PendingApproval"
	// PendingApprovalProvisioning ...
	PendingApprovalProvisioning Status = "PendingApprovalProvisioning"
	// PendingEvaluation ...
	PendingEvaluation Status = "PendingEvaluation"
	// PendingExternalProvisioning ...
	PendingExternalProvisioning Status = "PendingExternalProvisioning"
	// PendingProvisioning ...
	PendingProvisioning Status = "PendingProvisioning"
	// PendingRevocation ...
	PendingRevocation Status = "PendingRevocation"
	// PendingScheduleCreation ...
	PendingScheduleCreation Status = "PendingScheduleCreation"
	// Provisioned ...
	Provisioned Status = "Provisioned"
	// ProvisioningStarted ...
	ProvisioningStarted Status = "ProvisioningStarted"
	// Revoked ...
	Revoked Status = "Revoked"
	// ScheduleCreated ...
	ScheduleCreated Status = "ScheduleCreated"
	// TimedOut ...
	TimedOut Status = "TimedOut"
)

// PossibleStatusValues returns an array of possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{Accepted, AdminApproved, AdminDenied, Canceled, Denied, Failed, FailedAsResourceIsLocked, Granted, Invalid, PendingAdminDecision, PendingApproval, PendingApprovalProvisioning, PendingEvaluation, PendingExternalProvisioning, PendingProvisioning, PendingRevocation, PendingScheduleCreation, Provisioned, ProvisioningStarted, Revoked, ScheduleCreated, TimedOut}
}

// Type enumerates the values for type.
type Type string

const (
	// AfterDateTime ...
	AfterDateTime Type = "AfterDateTime"
	// AfterDuration ...
	AfterDuration Type = "AfterDuration"
	// NoExpiration ...
	NoExpiration Type = "NoExpiration"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{AfterDateTime, AfterDuration, NoExpiration}
}

// UserType enumerates the values for user type.
type UserType string

const (
	// UserTypeGroup ...
	UserTypeGroup UserType = "Group"
	// UserTypeUser ...
	UserTypeUser UserType = "User"
)

// PossibleUserTypeValues returns an array of possible values for the UserType const type.
func PossibleUserTypeValues() []UserType {
	return []UserType{UserTypeGroup, UserTypeUser}
}
