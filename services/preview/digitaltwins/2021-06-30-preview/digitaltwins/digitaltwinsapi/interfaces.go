package digitaltwinsapi

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/services/preview/digitaltwins/2021-06-30-preview/digitaltwins"
	"github.com/Azure/go-autorest/autorest"
)

// ModelsClientAPI contains the set of methods on the ModelsClient type.
type ModelsClientAPI interface {
	Add(ctx context.Context, models []interface{}, traceparent string, tracestate string) (result digitaltwins.ListModelData, err error)
	Delete(ctx context.Context, ID string, traceparent string, tracestate string) (result autorest.Response, err error)
	GetByID(ctx context.Context, ID string, includeModelDefinition *bool, traceparent string, tracestate string) (result digitaltwins.ModelData, err error)
	List(ctx context.Context, dependenciesFor []string, includeModelDefinition *bool, maxItemsPerPage *int32, traceparent string, tracestate string) (result digitaltwins.PagedDigitalTwinsModelDataCollectionPage, err error)
	ListComplete(ctx context.Context, dependenciesFor []string, includeModelDefinition *bool, maxItemsPerPage *int32, traceparent string, tracestate string) (result digitaltwins.PagedDigitalTwinsModelDataCollectionIterator, err error)
	Update(ctx context.Context, ID string, updateModel []interface{}, traceparent string, tracestate string) (result autorest.Response, err error)
}

var _ ModelsClientAPI = (*digitaltwins.ModelsClient)(nil)

// QueryClientAPI contains the set of methods on the QueryClient type.
type QueryClientAPI interface {
	QueryTwins(ctx context.Context, querySpecification digitaltwins.QuerySpecification, maxItemsPerPage *int32, traceparent string, tracestate string) (result digitaltwins.QueryResult, err error)
}

var _ QueryClientAPI = (*digitaltwins.QueryClient)(nil)

// ClientAPI contains the set of methods on the Client type.
type ClientAPI interface {
	Add(ctx context.Context, ID string, twin interface{}, ifNoneMatch string, traceparent string, tracestate string) (result digitaltwins.SetObject, err error)
	AddRelationship(ctx context.Context, ID string, relationshipID string, relationship interface{}, ifNoneMatch string, traceparent string, tracestate string) (result digitaltwins.SetObject, err error)
	Delete(ctx context.Context, ID string, ifMatch string, traceparent string, tracestate string) (result autorest.Response, err error)
	DeleteRelationship(ctx context.Context, ID string, relationshipID string, ifMatch string, traceparent string, tracestate string) (result autorest.Response, err error)
	GetByID(ctx context.Context, ID string, traceparent string, tracestate string) (result digitaltwins.SetObject, err error)
	GetComponent(ctx context.Context, ID string, componentPath string, traceparent string, tracestate string) (result digitaltwins.SetObject, err error)
	GetRelationshipByID(ctx context.Context, ID string, relationshipID string, traceparent string, tracestate string) (result digitaltwins.SetObject, err error)
	ListIncomingRelationships(ctx context.Context, ID string, traceparent string, tracestate string) (result digitaltwins.IncomingRelationshipCollectionPage, err error)
	ListIncomingRelationshipsComplete(ctx context.Context, ID string, traceparent string, tracestate string) (result digitaltwins.IncomingRelationshipCollectionIterator, err error)
	ListRelationships(ctx context.Context, ID string, relationshipName string, traceparent string, tracestate string) (result digitaltwins.RelationshipCollectionPage, err error)
	ListRelationshipsComplete(ctx context.Context, ID string, relationshipName string, traceparent string, tracestate string) (result digitaltwins.RelationshipCollectionIterator, err error)
	SendComponentTelemetry(ctx context.Context, ID string, componentPath string, telemetry interface{}, messageID string, telemetrySourceTime string, traceparent string, tracestate string) (result autorest.Response, err error)
	SendTelemetry(ctx context.Context, ID string, telemetry interface{}, messageID string, telemetrySourceTime string, traceparent string, tracestate string) (result autorest.Response, err error)
	Update(ctx context.Context, ID string, patchDocument []interface{}, ifMatch string, traceparent string, tracestate string) (result autorest.Response, err error)
	UpdateComponent(ctx context.Context, ID string, componentPath string, patchDocument []interface{}, ifMatch string, traceparent string, tracestate string) (result autorest.Response, err error)
	UpdateRelationship(ctx context.Context, ID string, relationshipID string, patchDocument []interface{}, ifMatch string, traceparent string, tracestate string) (result autorest.Response, err error)
}

var _ ClientAPI = (*digitaltwins.Client)(nil)

// EventRoutesClientAPI contains the set of methods on the EventRoutesClient type.
type EventRoutesClientAPI interface {
	Add(ctx context.Context, ID string, eventRoute *digitaltwins.EventRoute, traceparent string, tracestate string) (result autorest.Response, err error)
	Delete(ctx context.Context, ID string, traceparent string, tracestate string) (result autorest.Response, err error)
	GetByID(ctx context.Context, ID string, traceparent string, tracestate string) (result digitaltwins.EventRoute, err error)
	List(ctx context.Context, maxItemsPerPage *int32, traceparent string, tracestate string) (result digitaltwins.EventRouteCollectionPage, err error)
	ListComplete(ctx context.Context, maxItemsPerPage *int32, traceparent string, tracestate string) (result digitaltwins.EventRouteCollectionIterator, err error)
}

var _ EventRoutesClientAPI = (*digitaltwins.EventRoutesClient)(nil)
