package dynatrace

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal}
}

// AutoUpdateSetting enumerates the values for auto update setting.
type AutoUpdateSetting string

const (
	// DISABLED ...
	DISABLED AutoUpdateSetting = "DISABLED"
	// ENABLED ...
	ENABLED AutoUpdateSetting = "ENABLED"
)

// PossibleAutoUpdateSettingValues returns an array of possible values for the AutoUpdateSetting const type.
func PossibleAutoUpdateSettingValues() []AutoUpdateSetting {
	return []AutoUpdateSetting{DISABLED, ENABLED}
}

// AvailabilityState enumerates the values for availability state.
type AvailabilityState string

const (
	// CRASHED ...
	CRASHED AvailabilityState = "CRASHED"
	// LOST ...
	LOST AvailabilityState = "LOST"
	// MONITORED ...
	MONITORED AvailabilityState = "MONITORED"
	// PREMONITORED ...
	PREMONITORED AvailabilityState = "PRE_MONITORED"
	// SHUTDOWN ...
	SHUTDOWN AvailabilityState = "SHUTDOWN"
	// UNEXPECTEDSHUTDOWN ...
	UNEXPECTEDSHUTDOWN AvailabilityState = "UNEXPECTED_SHUTDOWN"
	// UNKNOWN ...
	UNKNOWN AvailabilityState = "UNKNOWN"
	// UNMONITORED ...
	UNMONITORED AvailabilityState = "UNMONITORED"
)

// PossibleAvailabilityStateValues returns an array of possible values for the AvailabilityState const type.
func PossibleAvailabilityStateValues() []AvailabilityState {
	return []AvailabilityState{CRASHED, LOST, MONITORED, PREMONITORED, SHUTDOWN, UNEXPECTEDSHUTDOWN, UNKNOWN, UNMONITORED}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// LiftrResourceCategories enumerates the values for liftr resource categories.
type LiftrResourceCategories string

const (
	// MonitorLogs ...
	MonitorLogs LiftrResourceCategories = "MonitorLogs"
	// Unknown ...
	Unknown LiftrResourceCategories = "Unknown"
)

// PossibleLiftrResourceCategoriesValues returns an array of possible values for the LiftrResourceCategories const type.
func PossibleLiftrResourceCategoriesValues() []LiftrResourceCategories {
	return []LiftrResourceCategories{MonitorLogs, Unknown}
}

// LogModule enumerates the values for log module.
type LogModule string

const (
	// LogModuleDISABLED ...
	LogModuleDISABLED LogModule = "DISABLED"
	// LogModuleENABLED ...
	LogModuleENABLED LogModule = "ENABLED"
)

// PossibleLogModuleValues returns an array of possible values for the LogModule const type.
func PossibleLogModuleValues() []LogModule {
	return []LogModule{LogModuleDISABLED, LogModuleENABLED}
}

// ManagedIdentityType enumerates the values for managed identity type.
type ManagedIdentityType string

const (
	// SystemAndUserAssigned ...
	SystemAndUserAssigned ManagedIdentityType = "SystemAndUserAssigned"
	// SystemAssigned ...
	SystemAssigned ManagedIdentityType = "SystemAssigned"
	// UserAssigned ...
	UserAssigned ManagedIdentityType = "UserAssigned"
)

// PossibleManagedIdentityTypeValues returns an array of possible values for the ManagedIdentityType const type.
func PossibleManagedIdentityTypeValues() []ManagedIdentityType {
	return []ManagedIdentityType{SystemAndUserAssigned, SystemAssigned, UserAssigned}
}

// MarketplaceSubscriptionStatus enumerates the values for marketplace subscription status.
type MarketplaceSubscriptionStatus string

const (
	// Active ...
	Active MarketplaceSubscriptionStatus = "Active"
	// Suspended ...
	Suspended MarketplaceSubscriptionStatus = "Suspended"
)

// PossibleMarketplaceSubscriptionStatusValues returns an array of possible values for the MarketplaceSubscriptionStatus const type.
func PossibleMarketplaceSubscriptionStatusValues() []MarketplaceSubscriptionStatus {
	return []MarketplaceSubscriptionStatus{Active, Suspended}
}

// MonitoringStatus enumerates the values for monitoring status.
type MonitoringStatus string

const (
	// Disabled ...
	Disabled MonitoringStatus = "Disabled"
	// Enabled ...
	Enabled MonitoringStatus = "Enabled"
)

// PossibleMonitoringStatusValues returns an array of possible values for the MonitoringStatus const type.
func PossibleMonitoringStatusValues() []MonitoringStatus {
	return []MonitoringStatus{Disabled, Enabled}
}

// MonitoringType enumerates the values for monitoring type.
type MonitoringType string

const (
	// CLOUDINFRASTRUCTURE ...
	CLOUDINFRASTRUCTURE MonitoringType = "CLOUD_INFRASTRUCTURE"
	// FULLSTACK ...
	FULLSTACK MonitoringType = "FULL_STACK"
)

// PossibleMonitoringTypeValues returns an array of possible values for the MonitoringType const type.
func PossibleMonitoringTypeValues() []MonitoringType {
	return []MonitoringType{CLOUDINFRASTRUCTURE, FULLSTACK}
}

// Origin enumerates the values for origin.
type Origin string

const (
	// OriginSystem ...
	OriginSystem Origin = "system"
	// OriginUser ...
	OriginUser Origin = "user"
	// OriginUsersystem ...
	OriginUsersystem Origin = "user,system"
)

// PossibleOriginValues returns an array of possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{OriginSystem, OriginUser, OriginUsersystem}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// Accepted ...
	Accepted ProvisioningState = "Accepted"
	// Canceled ...
	Canceled ProvisioningState = "Canceled"
	// Creating ...
	Creating ProvisioningState = "Creating"
	// Deleted ...
	Deleted ProvisioningState = "Deleted"
	// Deleting ...
	Deleting ProvisioningState = "Deleting"
	// Failed ...
	Failed ProvisioningState = "Failed"
	// NotSpecified ...
	NotSpecified ProvisioningState = "NotSpecified"
	// Succeeded ...
	Succeeded ProvisioningState = "Succeeded"
	// Updating ...
	Updating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{Accepted, Canceled, Creating, Deleted, Deleting, Failed, NotSpecified, Succeeded, Updating}
}

// SendAadLogsStatus enumerates the values for send aad logs status.
type SendAadLogsStatus string

const (
	// SendAadLogsStatusDisabled ...
	SendAadLogsStatusDisabled SendAadLogsStatus = "Disabled"
	// SendAadLogsStatusEnabled ...
	SendAadLogsStatusEnabled SendAadLogsStatus = "Enabled"
)

// PossibleSendAadLogsStatusValues returns an array of possible values for the SendAadLogsStatus const type.
func PossibleSendAadLogsStatusValues() []SendAadLogsStatus {
	return []SendAadLogsStatus{SendAadLogsStatusDisabled, SendAadLogsStatusEnabled}
}

// SendActivityLogsStatus enumerates the values for send activity logs status.
type SendActivityLogsStatus string

const (
	// SendActivityLogsStatusDisabled ...
	SendActivityLogsStatusDisabled SendActivityLogsStatus = "Disabled"
	// SendActivityLogsStatusEnabled ...
	SendActivityLogsStatusEnabled SendActivityLogsStatus = "Enabled"
)

// PossibleSendActivityLogsStatusValues returns an array of possible values for the SendActivityLogsStatus const type.
func PossibleSendActivityLogsStatusValues() []SendActivityLogsStatus {
	return []SendActivityLogsStatus{SendActivityLogsStatusDisabled, SendActivityLogsStatusEnabled}
}

// SendingLogsStatus enumerates the values for sending logs status.
type SendingLogsStatus string

const (
	// SendingLogsStatusDisabled ...
	SendingLogsStatusDisabled SendingLogsStatus = "Disabled"
	// SendingLogsStatusEnabled ...
	SendingLogsStatusEnabled SendingLogsStatus = "Enabled"
)

// PossibleSendingLogsStatusValues returns an array of possible values for the SendingLogsStatus const type.
func PossibleSendingLogsStatusValues() []SendingLogsStatus {
	return []SendingLogsStatus{SendingLogsStatusDisabled, SendingLogsStatusEnabled}
}

// SendingMetricsStatus enumerates the values for sending metrics status.
type SendingMetricsStatus string

const (
	// SendingMetricsStatusDisabled ...
	SendingMetricsStatusDisabled SendingMetricsStatus = "Disabled"
	// SendingMetricsStatusEnabled ...
	SendingMetricsStatusEnabled SendingMetricsStatus = "Enabled"
)

// PossibleSendingMetricsStatusValues returns an array of possible values for the SendingMetricsStatus const type.
func PossibleSendingMetricsStatusValues() []SendingMetricsStatus {
	return []SendingMetricsStatus{SendingMetricsStatusDisabled, SendingMetricsStatusEnabled}
}

// SendSubscriptionLogsStatus enumerates the values for send subscription logs status.
type SendSubscriptionLogsStatus string

const (
	// SendSubscriptionLogsStatusDisabled ...
	SendSubscriptionLogsStatusDisabled SendSubscriptionLogsStatus = "Disabled"
	// SendSubscriptionLogsStatusEnabled ...
	SendSubscriptionLogsStatusEnabled SendSubscriptionLogsStatus = "Enabled"
)

// PossibleSendSubscriptionLogsStatusValues returns an array of possible values for the SendSubscriptionLogsStatus const type.
func PossibleSendSubscriptionLogsStatusValues() []SendSubscriptionLogsStatus {
	return []SendSubscriptionLogsStatus{SendSubscriptionLogsStatusDisabled, SendSubscriptionLogsStatusEnabled}
}

// SingleSignOnStates enumerates the values for single sign on states.
type SingleSignOnStates string

const (
	// Disable ...
	Disable SingleSignOnStates = "Disable"
	// Enable ...
	Enable SingleSignOnStates = "Enable"
	// Existing ...
	Existing SingleSignOnStates = "Existing"
	// Initial ...
	Initial SingleSignOnStates = "Initial"
)

// PossibleSingleSignOnStatesValues returns an array of possible values for the SingleSignOnStates const type.
func PossibleSingleSignOnStatesValues() []SingleSignOnStates {
	return []SingleSignOnStates{Disable, Enable, Existing, Initial}
}

// SSOStatus enumerates the values for sso status.
type SSOStatus string

const (
	// SSOStatusDisabled ...
	SSOStatusDisabled SSOStatus = "Disabled"
	// SSOStatusEnabled ...
	SSOStatusEnabled SSOStatus = "Enabled"
)

// PossibleSSOStatusValues returns an array of possible values for the SSOStatus const type.
func PossibleSSOStatusValues() []SSOStatus {
	return []SSOStatus{SSOStatusDisabled, SSOStatusEnabled}
}

// TagAction enumerates the values for tag action.
type TagAction string

const (
	// Exclude ...
	Exclude TagAction = "Exclude"
	// Include ...
	Include TagAction = "Include"
)

// PossibleTagActionValues returns an array of possible values for the TagAction const type.
func PossibleTagActionValues() []TagAction {
	return []TagAction{Exclude, Include}
}

// UpdateStatus enumerates the values for update status.
type UpdateStatus string

const (
	// UpdateStatusINCOMPATIBLE ...
	UpdateStatusINCOMPATIBLE UpdateStatus = "INCOMPATIBLE"
	// UpdateStatusOUTDATED ...
	UpdateStatusOUTDATED UpdateStatus = "OUTDATED"
	// UpdateStatusSCHEDULED ...
	UpdateStatusSCHEDULED UpdateStatus = "SCHEDULED"
	// UpdateStatusSUPPRESSED ...
	UpdateStatusSUPPRESSED UpdateStatus = "SUPPRESSED"
	// UpdateStatusUNKNOWN ...
	UpdateStatusUNKNOWN UpdateStatus = "UNKNOWN"
	// UpdateStatusUP2DATE ...
	UpdateStatusUP2DATE UpdateStatus = "UP2DATE"
	// UpdateStatusUPDATEINPROGRESS ...
	UpdateStatusUPDATEINPROGRESS UpdateStatus = "UPDATE_IN_PROGRESS"
	// UpdateStatusUPDATEPENDING ...
	UpdateStatusUPDATEPENDING UpdateStatus = "UPDATE_PENDING"
	// UpdateStatusUPDATEPROBLEM ...
	UpdateStatusUPDATEPROBLEM UpdateStatus = "UPDATE_PROBLEM"
)

// PossibleUpdateStatusValues returns an array of possible values for the UpdateStatus const type.
func PossibleUpdateStatusValues() []UpdateStatus {
	return []UpdateStatus{UpdateStatusINCOMPATIBLE, UpdateStatusOUTDATED, UpdateStatusSCHEDULED, UpdateStatusSUPPRESSED, UpdateStatusUNKNOWN, UpdateStatusUP2DATE, UpdateStatusUPDATEINPROGRESS, UpdateStatusUPDATEPENDING, UpdateStatusUPDATEPROBLEM}
}
