package compute

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AgentVMSizeTypes enumerates the values for agent vm size types.
type AgentVMSizeTypes string

const (
	// StandardA0 ...
	StandardA0 AgentVMSizeTypes = "Standard_A0"
	// StandardA1 ...
	StandardA1 AgentVMSizeTypes = "Standard_A1"
	// StandardA10 ...
	StandardA10 AgentVMSizeTypes = "Standard_A10"
	// StandardA11 ...
	StandardA11 AgentVMSizeTypes = "Standard_A11"
	// StandardA2 ...
	StandardA2 AgentVMSizeTypes = "Standard_A2"
	// StandardA3 ...
	StandardA3 AgentVMSizeTypes = "Standard_A3"
	// StandardA4 ...
	StandardA4 AgentVMSizeTypes = "Standard_A4"
	// StandardA5 ...
	StandardA5 AgentVMSizeTypes = "Standard_A5"
	// StandardA6 ...
	StandardA6 AgentVMSizeTypes = "Standard_A6"
	// StandardA7 ...
	StandardA7 AgentVMSizeTypes = "Standard_A7"
	// StandardA8 ...
	StandardA8 AgentVMSizeTypes = "Standard_A8"
	// StandardA9 ...
	StandardA9 AgentVMSizeTypes = "Standard_A9"
	// StandardD1 ...
	StandardD1 AgentVMSizeTypes = "Standard_D1"
	// StandardD11 ...
	StandardD11 AgentVMSizeTypes = "Standard_D11"
	// StandardD11V2 ...
	StandardD11V2 AgentVMSizeTypes = "Standard_D11_v2"
	// StandardD12 ...
	StandardD12 AgentVMSizeTypes = "Standard_D12"
	// StandardD12V2 ...
	StandardD12V2 AgentVMSizeTypes = "Standard_D12_v2"
	// StandardD13 ...
	StandardD13 AgentVMSizeTypes = "Standard_D13"
	// StandardD13V2 ...
	StandardD13V2 AgentVMSizeTypes = "Standard_D13_v2"
	// StandardD14 ...
	StandardD14 AgentVMSizeTypes = "Standard_D14"
	// StandardD14V2 ...
	StandardD14V2 AgentVMSizeTypes = "Standard_D14_v2"
	// StandardD1V2 ...
	StandardD1V2 AgentVMSizeTypes = "Standard_D1_v2"
	// StandardD2 ...
	StandardD2 AgentVMSizeTypes = "Standard_D2"
	// StandardD2V2 ...
	StandardD2V2 AgentVMSizeTypes = "Standard_D2_v2"
	// StandardD3 ...
	StandardD3 AgentVMSizeTypes = "Standard_D3"
	// StandardD3V2 ...
	StandardD3V2 AgentVMSizeTypes = "Standard_D3_v2"
	// StandardD4 ...
	StandardD4 AgentVMSizeTypes = "Standard_D4"
	// StandardD4V2 ...
	StandardD4V2 AgentVMSizeTypes = "Standard_D4_v2"
	// StandardD5V2 ...
	StandardD5V2 AgentVMSizeTypes = "Standard_D5_v2"
	// StandardDS1 ...
	StandardDS1 AgentVMSizeTypes = "Standard_DS1"
	// StandardDS11 ...
	StandardDS11 AgentVMSizeTypes = "Standard_DS11"
	// StandardDS12 ...
	StandardDS12 AgentVMSizeTypes = "Standard_DS12"
	// StandardDS13 ...
	StandardDS13 AgentVMSizeTypes = "Standard_DS13"
	// StandardDS14 ...
	StandardDS14 AgentVMSizeTypes = "Standard_DS14"
	// StandardDS2 ...
	StandardDS2 AgentVMSizeTypes = "Standard_DS2"
	// StandardDS3 ...
	StandardDS3 AgentVMSizeTypes = "Standard_DS3"
	// StandardDS4 ...
	StandardDS4 AgentVMSizeTypes = "Standard_DS4"
	// StandardG1 ...
	StandardG1 AgentVMSizeTypes = "Standard_G1"
	// StandardG2 ...
	StandardG2 AgentVMSizeTypes = "Standard_G2"
	// StandardG3 ...
	StandardG3 AgentVMSizeTypes = "Standard_G3"
	// StandardG4 ...
	StandardG4 AgentVMSizeTypes = "Standard_G4"
	// StandardG5 ...
	StandardG5 AgentVMSizeTypes = "Standard_G5"
	// StandardGS1 ...
	StandardGS1 AgentVMSizeTypes = "Standard_GS1"
	// StandardGS2 ...
	StandardGS2 AgentVMSizeTypes = "Standard_GS2"
	// StandardGS3 ...
	StandardGS3 AgentVMSizeTypes = "Standard_GS3"
	// StandardGS4 ...
	StandardGS4 AgentVMSizeTypes = "Standard_GS4"
	// StandardGS5 ...
	StandardGS5 AgentVMSizeTypes = "Standard_GS5"
)

// PossibleAgentVMSizeTypesValues returns an array of possible values for the AgentVMSizeTypes const type.
func PossibleAgentVMSizeTypesValues() []AgentVMSizeTypes {
	return []AgentVMSizeTypes{StandardA0, StandardA1, StandardA10, StandardA11, StandardA2, StandardA3, StandardA4, StandardA5, StandardA6, StandardA7, StandardA8, StandardA9, StandardD1, StandardD11, StandardD11V2, StandardD12, StandardD12V2, StandardD13, StandardD13V2, StandardD14, StandardD14V2, StandardD1V2, StandardD2, StandardD2V2, StandardD3, StandardD3V2, StandardD4, StandardD4V2, StandardD5V2, StandardDS1, StandardDS11, StandardDS12, StandardDS13, StandardDS14, StandardDS2, StandardDS3, StandardDS4, StandardG1, StandardG2, StandardG3, StandardG4, StandardG5, StandardGS1, StandardGS2, StandardGS3, StandardGS4, StandardGS5}
}

// ClusterType enumerates the values for cluster type.
type ClusterType string

const (
	// ACS ...
	ACS ClusterType = "ACS"
	// Local ...
	Local ClusterType = "Local"
)

// PossibleClusterTypeValues returns an array of possible values for the ClusterType const type.
func PossibleClusterTypeValues() []ClusterType {
	return []ClusterType{ACS, Local}
}

// OperationStatus enumerates the values for operation status.
type OperationStatus string

const (
	// Canceled ...
	Canceled OperationStatus = "Canceled"
	// Creating ...
	Creating OperationStatus = "Creating"
	// Deleting ...
	Deleting OperationStatus = "Deleting"
	// Failed ...
	Failed OperationStatus = "Failed"
	// Succeeded ...
	Succeeded OperationStatus = "Succeeded"
	// Unknown ...
	Unknown OperationStatus = "Unknown"
	// Updating ...
	Updating OperationStatus = "Updating"
)

// PossibleOperationStatusValues returns an array of possible values for the OperationStatus const type.
func PossibleOperationStatusValues() []OperationStatus {
	return []OperationStatus{Canceled, Creating, Deleting, Failed, Succeeded, Unknown, Updating}
}

// OrchestratorType enumerates the values for orchestrator type.
type OrchestratorType string

const (
	// Kubernetes ...
	Kubernetes OrchestratorType = "Kubernetes"
	// None ...
	None OrchestratorType = "None"
)

// PossibleOrchestratorTypeValues returns an array of possible values for the OrchestratorType const type.
func PossibleOrchestratorTypeValues() []OrchestratorType {
	return []OrchestratorType{Kubernetes, None}
}

// Status enumerates the values for status.
type Status string

const (
	// Disabled ...
	Disabled Status = "Disabled"
	// Enabled ...
	Enabled Status = "Enabled"
)

// PossibleStatusValues returns an array of possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{Disabled, Enabled}
}

// SystemServiceType enumerates the values for system service type.
type SystemServiceType string

const (
	// SystemServiceTypeBatchFrontEnd ...
	SystemServiceTypeBatchFrontEnd SystemServiceType = "BatchFrontEnd"
	// SystemServiceTypeNone ...
	SystemServiceTypeNone SystemServiceType = "None"
	// SystemServiceTypeScoringFrontEnd ...
	SystemServiceTypeScoringFrontEnd SystemServiceType = "ScoringFrontEnd"
)

// PossibleSystemServiceTypeValues returns an array of possible values for the SystemServiceType const type.
func PossibleSystemServiceTypeValues() []SystemServiceType {
	return []SystemServiceType{SystemServiceTypeBatchFrontEnd, SystemServiceTypeNone, SystemServiceTypeScoringFrontEnd}
}

// UpdatesAvailable enumerates the values for updates available.
type UpdatesAvailable string

const (
	// No ...
	No UpdatesAvailable = "No"
	// Yes ...
	Yes UpdatesAvailable = "Yes"
)

// PossibleUpdatesAvailableValues returns an array of possible values for the UpdatesAvailable const type.
func PossibleUpdatesAvailableValues() []UpdatesAvailable {
	return []UpdatesAvailable{No, Yes}
}
