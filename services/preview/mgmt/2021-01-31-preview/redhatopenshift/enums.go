package redhatopenshift

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// EncryptionAtHost enumerates the values for encryption at host.
type EncryptionAtHost string

const (
	// Disabled ...
	Disabled EncryptionAtHost = "Disabled"
	// Enabled ...
	Enabled EncryptionAtHost = "Enabled"
)

// PossibleEncryptionAtHostValues returns an array of possible values for the EncryptionAtHost const type.
func PossibleEncryptionAtHostValues() []EncryptionAtHost {
	return []EncryptionAtHost{Disabled, Enabled}
}

// EncryptionAtHost1 enumerates the values for encryption at host 1.
type EncryptionAtHost1 string

const (
	// EncryptionAtHost1Disabled ...
	EncryptionAtHost1Disabled EncryptionAtHost1 = "Disabled"
	// EncryptionAtHost1Enabled ...
	EncryptionAtHost1Enabled EncryptionAtHost1 = "Enabled"
)

// PossibleEncryptionAtHost1Values returns an array of possible values for the EncryptionAtHost1 const type.
func PossibleEncryptionAtHost1Values() []EncryptionAtHost1 {
	return []EncryptionAtHost1{EncryptionAtHost1Disabled, EncryptionAtHost1Enabled}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// AdminUpdating ...
	AdminUpdating ProvisioningState = "AdminUpdating"
	// Creating ...
	Creating ProvisioningState = "Creating"
	// Deleting ...
	Deleting ProvisioningState = "Deleting"
	// Failed ...
	Failed ProvisioningState = "Failed"
	// Succeeded ...
	Succeeded ProvisioningState = "Succeeded"
	// Updating ...
	Updating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{AdminUpdating, Creating, Deleting, Failed, Succeeded, Updating}
}

// SDNProvider enumerates the values for sdn provider.
type SDNProvider string

const (
	// OpenShiftSDN ...
	OpenShiftSDN SDNProvider = "OpenShiftSDN"
	// OVNKubernetes ...
	OVNKubernetes SDNProvider = "OVNKubernetes"
)

// PossibleSDNProviderValues returns an array of possible values for the SDNProvider const type.
func PossibleSDNProviderValues() []SDNProvider {
	return []SDNProvider{OpenShiftSDN, OVNKubernetes}
}

// Visibility enumerates the values for visibility.
type Visibility string

const (
	// Private ...
	Private Visibility = "Private"
	// Public ...
	Public Visibility = "Public"
)

// PossibleVisibilityValues returns an array of possible values for the Visibility const type.
func PossibleVisibilityValues() []Visibility {
	return []Visibility{Private, Public}
}

// Visibility1 enumerates the values for visibility 1.
type Visibility1 string

const (
	// Visibility1Private ...
	Visibility1Private Visibility1 = "Private"
	// Visibility1Public ...
	Visibility1Public Visibility1 = "Public"
)

// PossibleVisibility1Values returns an array of possible values for the Visibility1 const type.
func PossibleVisibility1Values() []Visibility1 {
	return []Visibility1{Visibility1Private, Visibility1Public}
}

// VMSize enumerates the values for vm size.
type VMSize string

const (
	// StandardD16asV4 ...
	StandardD16asV4 VMSize = "Standard_D16as_v4"
	// StandardD16sV3 ...
	StandardD16sV3 VMSize = "Standard_D16s_v3"
	// StandardD2sV3 ...
	StandardD2sV3 VMSize = "Standard_D2s_v3"
	// StandardD32asV4 ...
	StandardD32asV4 VMSize = "Standard_D32as_v4"
	// StandardD32sV3 ...
	StandardD32sV3 VMSize = "Standard_D32s_v3"
	// StandardD4asV4 ...
	StandardD4asV4 VMSize = "Standard_D4as_v4"
	// StandardD4sV3 ...
	StandardD4sV3 VMSize = "Standard_D4s_v3"
	// StandardD8asV4 ...
	StandardD8asV4 VMSize = "Standard_D8as_v4"
	// StandardD8sV3 ...
	StandardD8sV3 VMSize = "Standard_D8s_v3"
	// StandardE16sV3 ...
	StandardE16sV3 VMSize = "Standard_E16s_v3"
	// StandardE32sV3 ...
	StandardE32sV3 VMSize = "Standard_E32s_v3"
	// StandardE4sV3 ...
	StandardE4sV3 VMSize = "Standard_E4s_v3"
	// StandardE8sV3 ...
	StandardE8sV3 VMSize = "Standard_E8s_v3"
	// StandardF16sV2 ...
	StandardF16sV2 VMSize = "Standard_F16s_v2"
	// StandardF32sV2 ...
	StandardF32sV2 VMSize = "Standard_F32s_v2"
	// StandardF4sV2 ...
	StandardF4sV2 VMSize = "Standard_F4s_v2"
	// StandardF8sV2 ...
	StandardF8sV2 VMSize = "Standard_F8s_v2"
)

// PossibleVMSizeValues returns an array of possible values for the VMSize const type.
func PossibleVMSizeValues() []VMSize {
	return []VMSize{StandardD16asV4, StandardD16sV3, StandardD2sV3, StandardD32asV4, StandardD32sV3, StandardD4asV4, StandardD4sV3, StandardD8asV4, StandardD8sV3, StandardE16sV3, StandardE32sV3, StandardE4sV3, StandardE8sV3, StandardF16sV2, StandardF32sV2, StandardF4sV2, StandardF8sV2}
}
