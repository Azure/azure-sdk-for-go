package postgresqlhsc

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// CitusVersion enumerates the values for citus version.
type CitusVersion string

const (
	// EightFullStopThree ...
	EightFullStopThree CitusVersion = "8.3"
	// NineFullStopFive ...
	NineFullStopFive CitusVersion = "9.5"
	// NineFullStopFour ...
	NineFullStopFour CitusVersion = "9.4"
	// NineFullStopOne ...
	NineFullStopOne CitusVersion = "9.1"
	// NineFullStopThree ...
	NineFullStopThree CitusVersion = "9.3"
	// NineFullStopTwo ...
	NineFullStopTwo CitusVersion = "9.2"
	// NineFullStopZero ...
	NineFullStopZero CitusVersion = "9.0"
)

// PossibleCitusVersionValues returns an array of possible values for the CitusVersion const type.
func PossibleCitusVersionValues() []CitusVersion {
	return []CitusVersion{EightFullStopThree, NineFullStopFive, NineFullStopFour, NineFullStopOne, NineFullStopThree, NineFullStopTwo, NineFullStopZero}
}

// ConfigurationDataType enumerates the values for configuration data type.
type ConfigurationDataType string

const (
	// Boolean ...
	Boolean ConfigurationDataType = "Boolean"
	// Enumeration ...
	Enumeration ConfigurationDataType = "Enumeration"
	// Integer ...
	Integer ConfigurationDataType = "Integer"
	// Numeric ...
	Numeric ConfigurationDataType = "Numeric"
)

// PossibleConfigurationDataTypeValues returns an array of possible values for the ConfigurationDataType const type.
func PossibleConfigurationDataTypeValues() []ConfigurationDataType {
	return []ConfigurationDataType{Boolean, Enumeration, Integer, Numeric}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// CreateMode enumerates the values for create mode.
type CreateMode string

const (
	// Default ...
	Default CreateMode = "Default"
	// PointInTimeRestore ...
	PointInTimeRestore CreateMode = "PointInTimeRestore"
	// ReadReplica ...
	ReadReplica CreateMode = "ReadReplica"
)

// PossibleCreateModeValues returns an array of possible values for the CreateMode const type.
func PossibleCreateModeValues() []CreateMode {
	return []CreateMode{Default, PointInTimeRestore, ReadReplica}
}

// OperationOrigin enumerates the values for operation origin.
type OperationOrigin string

const (
	// OperationOriginNotSpecified ...
	OperationOriginNotSpecified OperationOrigin = "NotSpecified"
	// OperationOriginSystem ...
	OperationOriginSystem OperationOrigin = "system"
	// OperationOriginUser ...
	OperationOriginUser OperationOrigin = "user"
)

// PossibleOperationOriginValues returns an array of possible values for the OperationOrigin const type.
func PossibleOperationOriginValues() []OperationOrigin {
	return []OperationOrigin{OperationOriginNotSpecified, OperationOriginSystem, OperationOriginUser}
}

// PostgreSQLVersion enumerates the values for postgre sql version.
type PostgreSQLVersion string

const (
	// OneOne ...
	OneOne PostgreSQLVersion = "11"
	// OneTwo ...
	OneTwo PostgreSQLVersion = "12"
)

// PossiblePostgreSQLVersionValues returns an array of possible values for the PostgreSQLVersion const type.
func PossiblePostgreSQLVersionValues() []PostgreSQLVersion {
	return []PostgreSQLVersion{OneOne, OneTwo}
}

// ResourceProviderType enumerates the values for resource provider type.
type ResourceProviderType string

const (
	// Marlin ...
	Marlin ResourceProviderType = "Marlin"
	// Meru ...
	Meru ResourceProviderType = "Meru"
)

// PossibleResourceProviderTypeValues returns an array of possible values for the ResourceProviderType const type.
func PossibleResourceProviderTypeValues() []ResourceProviderType {
	return []ResourceProviderType{Marlin, Meru}
}

// ServerEdition enumerates the values for server edition.
type ServerEdition string

const (
	// GeneralPurpose ...
	GeneralPurpose ServerEdition = "GeneralPurpose"
	// MemoryOptimized ...
	MemoryOptimized ServerEdition = "MemoryOptimized"
)

// PossibleServerEditionValues returns an array of possible values for the ServerEdition const type.
func PossibleServerEditionValues() []ServerEdition {
	return []ServerEdition{GeneralPurpose, MemoryOptimized}
}

// ServerHaState enumerates the values for server ha state.
type ServerHaState string

const (
	// CreatingStandby ...
	CreatingStandby ServerHaState = "CreatingStandby"
	// FailingOver ...
	FailingOver ServerHaState = "FailingOver"
	// Healthy ...
	Healthy ServerHaState = "Healthy"
	// NotEnabled ...
	NotEnabled ServerHaState = "NotEnabled"
	// NotSync ...
	NotSync ServerHaState = "NotSync"
	// RemovingStandby ...
	RemovingStandby ServerHaState = "RemovingStandby"
	// ReplicatingData ...
	ReplicatingData ServerHaState = "ReplicatingData"
)

// PossibleServerHaStateValues returns an array of possible values for the ServerHaState const type.
func PossibleServerHaStateValues() []ServerHaState {
	return []ServerHaState{CreatingStandby, FailingOver, Healthy, NotEnabled, NotSync, RemovingStandby, ReplicatingData}
}

// ServerRole enumerates the values for server role.
type ServerRole string

const (
	// Coordinator ...
	Coordinator ServerRole = "Coordinator"
	// Worker ...
	Worker ServerRole = "Worker"
)

// PossibleServerRoleValues returns an array of possible values for the ServerRole const type.
func PossibleServerRoleValues() []ServerRole {
	return []ServerRole{Coordinator, Worker}
}

// ServerState enumerates the values for server state.
type ServerState string

const (
	// Disabled ...
	Disabled ServerState = "Disabled"
	// Dropping ...
	Dropping ServerState = "Dropping"
	// Provisioning ...
	Provisioning ServerState = "Provisioning"
	// Ready ...
	Ready ServerState = "Ready"
	// Starting ...
	Starting ServerState = "Starting"
	// Stopped ...
	Stopped ServerState = "Stopped"
	// Stopping ...
	Stopping ServerState = "Stopping"
	// Updating ...
	Updating ServerState = "Updating"
)

// PossibleServerStateValues returns an array of possible values for the ServerState const type.
func PossibleServerStateValues() []ServerState {
	return []ServerState{Disabled, Dropping, Provisioning, Ready, Starting, Stopped, Stopping, Updating}
}
