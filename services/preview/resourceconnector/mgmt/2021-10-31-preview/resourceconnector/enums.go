package resourceconnector

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AccessProfileType enumerates the values for access profile type.
type AccessProfileType string

const (
	// ClusterUser ...
	ClusterUser AccessProfileType = "clusterUser"
)

// PossibleAccessProfileTypeValues returns an array of possible values for the AccessProfileType const type.
func PossibleAccessProfileTypeValues() []AccessProfileType {
	return []AccessProfileType{ClusterUser}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// Distro enumerates the values for distro.
type Distro string

const (
	// AKSEdge ...
	AKSEdge Distro = "AKSEdge"
)

// PossibleDistroValues returns an array of possible values for the Distro const type.
func PossibleDistroValues() []Distro {
	return []Distro{AKSEdge}
}

// Provider enumerates the values for provider.
type Provider string

const (
	// HCI ...
	HCI Provider = "HCI"
	// SCVMM ...
	SCVMM Provider = "SCVMM"
	// VMWare ...
	VMWare Provider = "VMWare"
)

// PossibleProviderValues returns an array of possible values for the Provider const type.
func PossibleProviderValues() []Provider {
	return []Provider{HCI, SCVMM, VMWare}
}

// ResourceIdentityType enumerates the values for resource identity type.
type ResourceIdentityType string

const (
	// None ...
	None ResourceIdentityType = "None"
	// SystemAssigned ...
	SystemAssigned ResourceIdentityType = "SystemAssigned"
)

// PossibleResourceIdentityTypeValues returns an array of possible values for the ResourceIdentityType const type.
func PossibleResourceIdentityTypeValues() []ResourceIdentityType {
	return []ResourceIdentityType{None, SystemAssigned}
}

// Status enumerates the values for status.
type Status string

const (
	// Connected ...
	Connected Status = "Connected"
	// Running ...
	Running Status = "Running"
	// Validating ...
	Validating Status = "Validating"
	// WaitingForHeartbeat ...
	WaitingForHeartbeat Status = "WaitingForHeartbeat"
)

// PossibleStatusValues returns an array of possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{Connected, Running, Validating, WaitingForHeartbeat}
}
