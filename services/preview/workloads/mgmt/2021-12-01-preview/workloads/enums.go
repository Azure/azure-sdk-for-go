package workloads

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// OperationProperties enumerates the values for operation properties.
type OperationProperties string

const (
	// OperationPropertiesNotSpecified ...
	OperationPropertiesNotSpecified OperationProperties = "NotSpecified"
	// OperationPropertiesSystem ...
	OperationPropertiesSystem OperationProperties = "System"
	// OperationPropertiesUser ...
	OperationPropertiesUser OperationProperties = "User"
)

// PossibleOperationPropertiesValues returns an array of possible values for the OperationProperties const type.
func PossibleOperationPropertiesValues() []OperationProperties {
	return []OperationProperties{OperationPropertiesNotSpecified, OperationPropertiesSystem, OperationPropertiesUser}
}

// Origin enumerates the values for origin.
type Origin string

const (
	// OriginSystem ...
	OriginSystem Origin = "system"
	// OriginUser ...
	OriginUser Origin = "user"
	// OriginUsersystem ...
	OriginUsersystem Origin = "user,system"
)

// PossibleOriginValues returns an array of possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{OriginSystem, OriginUser, OriginUsersystem}
}

// ProviderType enumerates the values for provider type.
type ProviderType string

const (
	// ProviderTypeDb2 ...
	ProviderTypeDb2 ProviderType = "Db2"
	// ProviderTypeMsSQLServer ...
	ProviderTypeMsSQLServer ProviderType = "MsSqlServer"
	// ProviderTypePrometheusHaCluster ...
	ProviderTypePrometheusHaCluster ProviderType = "PrometheusHaCluster"
	// ProviderTypePrometheusOS ...
	ProviderTypePrometheusOS ProviderType = "PrometheusOS"
	// ProviderTypeProviderSpecificProperties ...
	ProviderTypeProviderSpecificProperties ProviderType = "ProviderSpecificProperties"
	// ProviderTypeSapHana ...
	ProviderTypeSapHana ProviderType = "SapHana"
	// ProviderTypeSapNetWeaver ...
	ProviderTypeSapNetWeaver ProviderType = "SapNetWeaver"
)

// PossibleProviderTypeValues returns an array of possible values for the ProviderType const type.
func PossibleProviderTypeValues() []ProviderType {
	return []ProviderType{ProviderTypeDb2, ProviderTypeMsSQLServer, ProviderTypePrometheusHaCluster, ProviderTypePrometheusOS, ProviderTypeProviderSpecificProperties, ProviderTypeSapHana, ProviderTypeSapNetWeaver}
}

// ResourceIdentityType enumerates the values for resource identity type.
type ResourceIdentityType string

const (
	// SystemAssigned ...
	SystemAssigned ResourceIdentityType = "SystemAssigned"
)

// PossibleResourceIdentityTypeValues returns an array of possible values for the ResourceIdentityType const type.
func PossibleResourceIdentityTypeValues() []ResourceIdentityType {
	return []ResourceIdentityType{SystemAssigned}
}

// RoutingPreference enumerates the values for routing preference.
type RoutingPreference string

const (
	// Default ...
	Default RoutingPreference = "Default"
	// RouteAll ...
	RouteAll RoutingPreference = "RouteAll"
)

// PossibleRoutingPreferenceValues returns an array of possible values for the RoutingPreference const type.
func PossibleRoutingPreferenceValues() []RoutingPreference {
	return []RoutingPreference{Default, RouteAll}
}

// SkuTier enumerates the values for sku tier.
type SkuTier string

const (
	// Basic ...
	Basic SkuTier = "Basic"
	// Free ...
	Free SkuTier = "Free"
	// Premium ...
	Premium SkuTier = "Premium"
	// Standard ...
	Standard SkuTier = "Standard"
)

// PossibleSkuTierValues returns an array of possible values for the SkuTier const type.
func PossibleSkuTierValues() []SkuTier {
	return []SkuTier{Basic, Free, Premium, Standard}
}

// WorkloadMonitorActionType enumerates the values for workload monitor action type.
type WorkloadMonitorActionType string

const (
	// WorkloadMonitorActionTypeInternal ...
	WorkloadMonitorActionTypeInternal WorkloadMonitorActionType = "Internal"
	// WorkloadMonitorActionTypeNotSpecified ...
	WorkloadMonitorActionTypeNotSpecified WorkloadMonitorActionType = "NotSpecified"
)

// PossibleWorkloadMonitorActionTypeValues returns an array of possible values for the WorkloadMonitorActionType const type.
func PossibleWorkloadMonitorActionTypeValues() []WorkloadMonitorActionType {
	return []WorkloadMonitorActionType{WorkloadMonitorActionTypeInternal, WorkloadMonitorActionTypeNotSpecified}
}

// WorkloadMonitorProvisioningState enumerates the values for workload monitor provisioning state.
type WorkloadMonitorProvisioningState string

const (
	// Accepted ...
	Accepted WorkloadMonitorProvisioningState = "Accepted"
	// Creating ...
	Creating WorkloadMonitorProvisioningState = "Creating"
	// Deleting ...
	Deleting WorkloadMonitorProvisioningState = "Deleting"
	// Failed ...
	Failed WorkloadMonitorProvisioningState = "Failed"
	// Migrating ...
	Migrating WorkloadMonitorProvisioningState = "Migrating"
	// Succeeded ...
	Succeeded WorkloadMonitorProvisioningState = "Succeeded"
	// Updating ...
	Updating WorkloadMonitorProvisioningState = "Updating"
)

// PossibleWorkloadMonitorProvisioningStateValues returns an array of possible values for the WorkloadMonitorProvisioningState const type.
func PossibleWorkloadMonitorProvisioningStateValues() []WorkloadMonitorProvisioningState {
	return []WorkloadMonitorProvisioningState{Accepted, Creating, Deleting, Failed, Migrating, Succeeded, Updating}
}
