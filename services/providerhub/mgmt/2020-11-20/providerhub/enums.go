package providerhub

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
	// NotSpecified ...
	NotSpecified ActionType = "NotSpecified"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal, NotSpecified}
}

// ExtensionCategory enumerates the values for extension category.
type ExtensionCategory string

const (
	// ExtensionCategoryNotSpecified ...
	ExtensionCategoryNotSpecified ExtensionCategory = "NotSpecified"
	// ExtensionCategoryResourceCreationBegin ...
	ExtensionCategoryResourceCreationBegin ExtensionCategory = "ResourceCreationBegin"
	// ExtensionCategoryResourceCreationCompleted ...
	ExtensionCategoryResourceCreationCompleted ExtensionCategory = "ResourceCreationCompleted"
	// ExtensionCategoryResourceCreationValidate ...
	ExtensionCategoryResourceCreationValidate ExtensionCategory = "ResourceCreationValidate"
	// ExtensionCategoryResourceDeletionBegin ...
	ExtensionCategoryResourceDeletionBegin ExtensionCategory = "ResourceDeletionBegin"
	// ExtensionCategoryResourceDeletionCompleted ...
	ExtensionCategoryResourceDeletionCompleted ExtensionCategory = "ResourceDeletionCompleted"
	// ExtensionCategoryResourceDeletionValidate ...
	ExtensionCategoryResourceDeletionValidate ExtensionCategory = "ResourceDeletionValidate"
	// ExtensionCategoryResourceMoveBegin ...
	ExtensionCategoryResourceMoveBegin ExtensionCategory = "ResourceMoveBegin"
	// ExtensionCategoryResourceMoveCompleted ...
	ExtensionCategoryResourceMoveCompleted ExtensionCategory = "ResourceMoveCompleted"
	// ExtensionCategoryResourcePatchBegin ...
	ExtensionCategoryResourcePatchBegin ExtensionCategory = "ResourcePatchBegin"
	// ExtensionCategoryResourcePatchCompleted ...
	ExtensionCategoryResourcePatchCompleted ExtensionCategory = "ResourcePatchCompleted"
	// ExtensionCategoryResourcePatchValidate ...
	ExtensionCategoryResourcePatchValidate ExtensionCategory = "ResourcePatchValidate"
	// ExtensionCategoryResourcePostAction ...
	ExtensionCategoryResourcePostAction ExtensionCategory = "ResourcePostAction"
	// ExtensionCategoryResourceReadBegin ...
	ExtensionCategoryResourceReadBegin ExtensionCategory = "ResourceReadBegin"
	// ExtensionCategoryResourceReadValidate ...
	ExtensionCategoryResourceReadValidate ExtensionCategory = "ResourceReadValidate"
	// ExtensionCategorySubscriptionLifecycleNotification ...
	ExtensionCategorySubscriptionLifecycleNotification ExtensionCategory = "SubscriptionLifecycleNotification"
)

// PossibleExtensionCategoryValues returns an array of possible values for the ExtensionCategory const type.
func PossibleExtensionCategoryValues() []ExtensionCategory {
	return []ExtensionCategory{ExtensionCategoryNotSpecified, ExtensionCategoryResourceCreationBegin, ExtensionCategoryResourceCreationCompleted, ExtensionCategoryResourceCreationValidate, ExtensionCategoryResourceDeletionBegin, ExtensionCategoryResourceDeletionCompleted, ExtensionCategoryResourceDeletionValidate, ExtensionCategoryResourceMoveBegin, ExtensionCategoryResourceMoveCompleted, ExtensionCategoryResourcePatchBegin, ExtensionCategoryResourcePatchCompleted, ExtensionCategoryResourcePatchValidate, ExtensionCategoryResourcePostAction, ExtensionCategoryResourceReadBegin, ExtensionCategoryResourceReadValidate, ExtensionCategorySubscriptionLifecycleNotification}
}

// ExtensionOptionType enumerates the values for extension option type.
type ExtensionOptionType string

const (
	// ExtensionOptionTypeDoNotMergeExistingReadOnlyAndSecretProperties ...
	ExtensionOptionTypeDoNotMergeExistingReadOnlyAndSecretProperties ExtensionOptionType = "DoNotMergeExistingReadOnlyAndSecretProperties"
	// ExtensionOptionTypeIncludeInternalMetadata ...
	ExtensionOptionTypeIncludeInternalMetadata ExtensionOptionType = "IncludeInternalMetadata"
	// ExtensionOptionTypeNotSpecified ...
	ExtensionOptionTypeNotSpecified ExtensionOptionType = "NotSpecified"
)

// PossibleExtensionOptionTypeValues returns an array of possible values for the ExtensionOptionType const type.
func PossibleExtensionOptionTypeValues() []ExtensionOptionType {
	return []ExtensionOptionType{ExtensionOptionTypeDoNotMergeExistingReadOnlyAndSecretProperties, ExtensionOptionTypeIncludeInternalMetadata, ExtensionOptionTypeNotSpecified}
}

// FeaturesPolicy enumerates the values for features policy.
type FeaturesPolicy string

const (
	// All ...
	All FeaturesPolicy = "All"
	// Any ...
	Any FeaturesPolicy = "Any"
)

// PossibleFeaturesPolicyValues returns an array of possible values for the FeaturesPolicy const type.
func PossibleFeaturesPolicyValues() []FeaturesPolicy {
	return []FeaturesPolicy{All, Any}
}

// IdentityManagementTypes enumerates the values for identity management types.
type IdentityManagementTypes string

const (
	// IdentityManagementTypesActor ...
	IdentityManagementTypesActor IdentityManagementTypes = "Actor"
	// IdentityManagementTypesDelegatedResourceIdentity ...
	IdentityManagementTypesDelegatedResourceIdentity IdentityManagementTypes = "DelegatedResourceIdentity"
	// IdentityManagementTypesNotSpecified ...
	IdentityManagementTypesNotSpecified IdentityManagementTypes = "NotSpecified"
	// IdentityManagementTypesSystemAssigned ...
	IdentityManagementTypesSystemAssigned IdentityManagementTypes = "SystemAssigned"
	// IdentityManagementTypesUserAssigned ...
	IdentityManagementTypesUserAssigned IdentityManagementTypes = "UserAssigned"
)

// PossibleIdentityManagementTypesValues returns an array of possible values for the IdentityManagementTypes const type.
func PossibleIdentityManagementTypesValues() []IdentityManagementTypes {
	return []IdentityManagementTypes{IdentityManagementTypesActor, IdentityManagementTypesDelegatedResourceIdentity, IdentityManagementTypesNotSpecified, IdentityManagementTypesSystemAssigned, IdentityManagementTypesUserAssigned}
}

// LinkedAction enumerates the values for linked action.
type LinkedAction string

const (
	// LinkedActionBlocked ...
	LinkedActionBlocked LinkedAction = "Blocked"
	// LinkedActionEnabled ...
	LinkedActionEnabled LinkedAction = "Enabled"
	// LinkedActionNotSpecified ...
	LinkedActionNotSpecified LinkedAction = "NotSpecified"
	// LinkedActionValidate ...
	LinkedActionValidate LinkedAction = "Validate"
)

// PossibleLinkedActionValues returns an array of possible values for the LinkedAction const type.
func PossibleLinkedActionValues() []LinkedAction {
	return []LinkedAction{LinkedActionBlocked, LinkedActionEnabled, LinkedActionNotSpecified, LinkedActionValidate}
}

// LinkedOperation enumerates the values for linked operation.
type LinkedOperation string

const (
	// CrossResourceGroupResourceMove ...
	CrossResourceGroupResourceMove LinkedOperation = "CrossResourceGroupResourceMove"
	// CrossSubscriptionResourceMove ...
	CrossSubscriptionResourceMove LinkedOperation = "CrossSubscriptionResourceMove"
	// None ...
	None LinkedOperation = "None"
)

// PossibleLinkedOperationValues returns an array of possible values for the LinkedOperation const type.
func PossibleLinkedOperationValues() []LinkedOperation {
	return []LinkedOperation{CrossResourceGroupResourceMove, CrossSubscriptionResourceMove, None}
}

// LoggingDetails enumerates the values for logging details.
type LoggingDetails string

const (
	// LoggingDetailsBody ...
	LoggingDetailsBody LoggingDetails = "Body"
	// LoggingDetailsNone ...
	LoggingDetailsNone LoggingDetails = "None"
)

// PossibleLoggingDetailsValues returns an array of possible values for the LoggingDetails const type.
func PossibleLoggingDetailsValues() []LoggingDetails {
	return []LoggingDetails{LoggingDetailsBody, LoggingDetailsNone}
}

// LoggingDirections enumerates the values for logging directions.
type LoggingDirections string

const (
	// LoggingDirectionsNone ...
	LoggingDirectionsNone LoggingDirections = "None"
	// LoggingDirectionsRequest ...
	LoggingDirectionsRequest LoggingDirections = "Request"
	// LoggingDirectionsResponse ...
	LoggingDirectionsResponse LoggingDirections = "Response"
)

// PossibleLoggingDirectionsValues returns an array of possible values for the LoggingDirections const type.
func PossibleLoggingDirectionsValues() []LoggingDirections {
	return []LoggingDirections{LoggingDirectionsNone, LoggingDirectionsRequest, LoggingDirectionsResponse}
}

// ManifestResourceDeletionPolicy enumerates the values for manifest resource deletion policy.
type ManifestResourceDeletionPolicy string

const (
	// ManifestResourceDeletionPolicyCascade ...
	ManifestResourceDeletionPolicyCascade ManifestResourceDeletionPolicy = "Cascade"
	// ManifestResourceDeletionPolicyForce ...
	ManifestResourceDeletionPolicyForce ManifestResourceDeletionPolicy = "Force"
	// ManifestResourceDeletionPolicyNotSpecified ...
	ManifestResourceDeletionPolicyNotSpecified ManifestResourceDeletionPolicy = "NotSpecified"
)

// PossibleManifestResourceDeletionPolicyValues returns an array of possible values for the ManifestResourceDeletionPolicy const type.
func PossibleManifestResourceDeletionPolicyValues() []ManifestResourceDeletionPolicy {
	return []ManifestResourceDeletionPolicy{ManifestResourceDeletionPolicyCascade, ManifestResourceDeletionPolicyForce, ManifestResourceDeletionPolicyNotSpecified}
}

// MarketplaceType enumerates the values for marketplace type.
type MarketplaceType string

const (
	// MarketplaceTypeAddOn ...
	MarketplaceTypeAddOn MarketplaceType = "AddOn"
	// MarketplaceTypeBypass ...
	MarketplaceTypeBypass MarketplaceType = "Bypass"
	// MarketplaceTypeNotSpecified ...
	MarketplaceTypeNotSpecified MarketplaceType = "NotSpecified"
	// MarketplaceTypeStore ...
	MarketplaceTypeStore MarketplaceType = "Store"
)

// PossibleMarketplaceTypeValues returns an array of possible values for the MarketplaceType const type.
func PossibleMarketplaceTypeValues() []MarketplaceType {
	return []MarketplaceType{MarketplaceTypeAddOn, MarketplaceTypeBypass, MarketplaceTypeNotSpecified, MarketplaceTypeStore}
}

// MarketplaceType1 enumerates the values for marketplace type 1.
type MarketplaceType1 string

const (
	// MarketplaceType1AddOn ...
	MarketplaceType1AddOn MarketplaceType1 = "AddOn"
	// MarketplaceType1Bypass ...
	MarketplaceType1Bypass MarketplaceType1 = "Bypass"
	// MarketplaceType1NotSpecified ...
	MarketplaceType1NotSpecified MarketplaceType1 = "NotSpecified"
	// MarketplaceType1Store ...
	MarketplaceType1Store MarketplaceType1 = "Store"
)

// PossibleMarketplaceType1Values returns an array of possible values for the MarketplaceType1 const type.
func PossibleMarketplaceType1Values() []MarketplaceType1 {
	return []MarketplaceType1{MarketplaceType1AddOn, MarketplaceType1Bypass, MarketplaceType1NotSpecified, MarketplaceType1Store}
}

// MessageScope enumerates the values for message scope.
type MessageScope string

const (
	// MessageScopeNotSpecified ...
	MessageScopeNotSpecified MessageScope = "NotSpecified"
	// MessageScopeRegisteredSubscriptions ...
	MessageScopeRegisteredSubscriptions MessageScope = "RegisteredSubscriptions"
)

// PossibleMessageScopeValues returns an array of possible values for the MessageScope const type.
func PossibleMessageScopeValues() []MessageScope {
	return []MessageScope{MessageScopeNotSpecified, MessageScopeRegisteredSubscriptions}
}

// NotificationMode enumerates the values for notification mode.
type NotificationMode string

const (
	// NotificationModeEventHub ...
	NotificationModeEventHub NotificationMode = "EventHub"
	// NotificationModeNotSpecified ...
	NotificationModeNotSpecified NotificationMode = "NotSpecified"
	// NotificationModeWebHook ...
	NotificationModeWebHook NotificationMode = "WebHook"
)

// PossibleNotificationModeValues returns an array of possible values for the NotificationMode const type.
func PossibleNotificationModeValues() []NotificationMode {
	return []NotificationMode{NotificationModeEventHub, NotificationModeNotSpecified, NotificationModeWebHook}
}

// OptInHeaderType enumerates the values for opt in header type.
type OptInHeaderType string

const (
	// OptInHeaderTypeClientGroupMembership ...
	OptInHeaderTypeClientGroupMembership OptInHeaderType = "ClientGroupMembership"
	// OptInHeaderTypeNotSpecified ...
	OptInHeaderTypeNotSpecified OptInHeaderType = "NotSpecified"
	// OptInHeaderTypeSignedAuxiliaryTokens ...
	OptInHeaderTypeSignedAuxiliaryTokens OptInHeaderType = "SignedAuxiliaryTokens"
	// OptInHeaderTypeSignedUserToken ...
	OptInHeaderTypeSignedUserToken OptInHeaderType = "SignedUserToken"
	// OptInHeaderTypeUnboundedClientGroupMembership ...
	OptInHeaderTypeUnboundedClientGroupMembership OptInHeaderType = "UnboundedClientGroupMembership"
)

// PossibleOptInHeaderTypeValues returns an array of possible values for the OptInHeaderType const type.
func PossibleOptInHeaderTypeValues() []OptInHeaderType {
	return []OptInHeaderType{OptInHeaderTypeClientGroupMembership, OptInHeaderTypeNotSpecified, OptInHeaderTypeSignedAuxiliaryTokens, OptInHeaderTypeSignedUserToken, OptInHeaderTypeUnboundedClientGroupMembership}
}

// Origin enumerates the values for origin.
type Origin string

const (
	// OriginNotSpecified ...
	OriginNotSpecified Origin = "NotSpecified"
	// OriginSystem ...
	OriginSystem Origin = "System"
	// OriginUser ...
	OriginUser Origin = "User"
)

// PossibleOriginValues returns an array of possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{OriginNotSpecified, OriginSystem, OriginUser}
}

// PreflightOption enumerates the values for preflight option.
type PreflightOption string

const (
	// PreflightOptionContinueDeploymentOnFailure ...
	PreflightOptionContinueDeploymentOnFailure PreflightOption = "ContinueDeploymentOnFailure"
	// PreflightOptionDefaultValidationOnly ...
	PreflightOptionDefaultValidationOnly PreflightOption = "DefaultValidationOnly"
	// PreflightOptionNone ...
	PreflightOptionNone PreflightOption = "None"
)

// PossiblePreflightOptionValues returns an array of possible values for the PreflightOption const type.
func PossiblePreflightOptionValues() []PreflightOption {
	return []PreflightOption{PreflightOptionContinueDeploymentOnFailure, PreflightOptionDefaultValidationOnly, PreflightOptionNone}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// ProvisioningStateAccepted ...
	ProvisioningStateAccepted ProvisioningState = "Accepted"
	// ProvisioningStateCanceled ...
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateCreated ...
	ProvisioningStateCreated ProvisioningState = "Created"
	// ProvisioningStateCreating ...
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleted ...
	ProvisioningStateDeleted ProvisioningState = "Deleted"
	// ProvisioningStateDeleting ...
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed ...
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateMovingResources ...
	ProvisioningStateMovingResources ProvisioningState = "MovingResources"
	// ProvisioningStateNotSpecified ...
	ProvisioningStateNotSpecified ProvisioningState = "NotSpecified"
	// ProvisioningStateRolloutInProgress ...
	ProvisioningStateRolloutInProgress ProvisioningState = "RolloutInProgress"
	// ProvisioningStateRunning ...
	ProvisioningStateRunning ProvisioningState = "Running"
	// ProvisioningStateSucceeded ...
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateTransientFailure ...
	ProvisioningStateTransientFailure ProvisioningState = "TransientFailure"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{ProvisioningStateAccepted, ProvisioningStateCanceled, ProvisioningStateCreated, ProvisioningStateCreating, ProvisioningStateDeleted, ProvisioningStateDeleting, ProvisioningStateFailed, ProvisioningStateMovingResources, ProvisioningStateNotSpecified, ProvisioningStateRolloutInProgress, ProvisioningStateRunning, ProvisioningStateSucceeded, ProvisioningStateTransientFailure}
}

// Regionality enumerates the values for regionality.
type Regionality string

const (
	// RegionalityGlobal ...
	RegionalityGlobal Regionality = "Global"
	// RegionalityNotSpecified ...
	RegionalityNotSpecified Regionality = "NotSpecified"
	// RegionalityRegional ...
	RegionalityRegional Regionality = "Regional"
)

// PossibleRegionalityValues returns an array of possible values for the Regionality const type.
func PossibleRegionalityValues() []Regionality {
	return []Regionality{RegionalityGlobal, RegionalityNotSpecified, RegionalityRegional}
}

// ResourceAccessPolicy enumerates the values for resource access policy.
type ResourceAccessPolicy string

const (
	// ResourceAccessPolicyAcisActionAllowed ...
	ResourceAccessPolicyAcisActionAllowed ResourceAccessPolicy = "AcisActionAllowed"
	// ResourceAccessPolicyAcisReadAllowed ...
	ResourceAccessPolicyAcisReadAllowed ResourceAccessPolicy = "AcisReadAllowed"
	// ResourceAccessPolicyNotSpecified ...
	ResourceAccessPolicyNotSpecified ResourceAccessPolicy = "NotSpecified"
)

// PossibleResourceAccessPolicyValues returns an array of possible values for the ResourceAccessPolicy const type.
func PossibleResourceAccessPolicyValues() []ResourceAccessPolicy {
	return []ResourceAccessPolicy{ResourceAccessPolicyAcisActionAllowed, ResourceAccessPolicyAcisReadAllowed, ResourceAccessPolicyNotSpecified}
}

// ResourceDeletionPolicy enumerates the values for resource deletion policy.
type ResourceDeletionPolicy string

const (
	// ResourceDeletionPolicyCascadeDeleteAll ...
	ResourceDeletionPolicyCascadeDeleteAll ResourceDeletionPolicy = "CascadeDeleteAll"
	// ResourceDeletionPolicyCascadeDeleteProxyOnlyChildren ...
	ResourceDeletionPolicyCascadeDeleteProxyOnlyChildren ResourceDeletionPolicy = "CascadeDeleteProxyOnlyChildren"
	// ResourceDeletionPolicyNotSpecified ...
	ResourceDeletionPolicyNotSpecified ResourceDeletionPolicy = "NotSpecified"
)

// PossibleResourceDeletionPolicyValues returns an array of possible values for the ResourceDeletionPolicy const type.
func PossibleResourceDeletionPolicyValues() []ResourceDeletionPolicy {
	return []ResourceDeletionPolicy{ResourceDeletionPolicyCascadeDeleteAll, ResourceDeletionPolicyCascadeDeleteProxyOnlyChildren, ResourceDeletionPolicyNotSpecified}
}

// ResourceProviderCapabilitiesEffect enumerates the values for resource provider capabilities effect.
type ResourceProviderCapabilitiesEffect string

const (
	// ResourceProviderCapabilitiesEffectAllow ...
	ResourceProviderCapabilitiesEffectAllow ResourceProviderCapabilitiesEffect = "Allow"
	// ResourceProviderCapabilitiesEffectDisallow ...
	ResourceProviderCapabilitiesEffectDisallow ResourceProviderCapabilitiesEffect = "Disallow"
	// ResourceProviderCapabilitiesEffectNotSpecified ...
	ResourceProviderCapabilitiesEffectNotSpecified ResourceProviderCapabilitiesEffect = "NotSpecified"
)

// PossibleResourceProviderCapabilitiesEffectValues returns an array of possible values for the ResourceProviderCapabilitiesEffect const type.
func PossibleResourceProviderCapabilitiesEffectValues() []ResourceProviderCapabilitiesEffect {
	return []ResourceProviderCapabilitiesEffect{ResourceProviderCapabilitiesEffectAllow, ResourceProviderCapabilitiesEffectDisallow, ResourceProviderCapabilitiesEffectNotSpecified}
}

// ResourceProviderType enumerates the values for resource provider type.
type ResourceProviderType string

const (
	// ResourceProviderTypeAuthorizationFree ...
	ResourceProviderTypeAuthorizationFree ResourceProviderType = "AuthorizationFree"
	// ResourceProviderTypeExternal ...
	ResourceProviderTypeExternal ResourceProviderType = "External"
	// ResourceProviderTypeHidden ...
	ResourceProviderTypeHidden ResourceProviderType = "Hidden"
	// ResourceProviderTypeInternal ...
	ResourceProviderTypeInternal ResourceProviderType = "Internal"
	// ResourceProviderTypeLegacyRegistrationRequired ...
	ResourceProviderTypeLegacyRegistrationRequired ResourceProviderType = "LegacyRegistrationRequired"
	// ResourceProviderTypeNotSpecified ...
	ResourceProviderTypeNotSpecified ResourceProviderType = "NotSpecified"
	// ResourceProviderTypeRegistrationFree ...
	ResourceProviderTypeRegistrationFree ResourceProviderType = "RegistrationFree"
	// ResourceProviderTypeTenantOnly ...
	ResourceProviderTypeTenantOnly ResourceProviderType = "TenantOnly"
)

// PossibleResourceProviderTypeValues returns an array of possible values for the ResourceProviderType const type.
func PossibleResourceProviderTypeValues() []ResourceProviderType {
	return []ResourceProviderType{ResourceProviderTypeAuthorizationFree, ResourceProviderTypeExternal, ResourceProviderTypeHidden, ResourceProviderTypeInternal, ResourceProviderTypeLegacyRegistrationRequired, ResourceProviderTypeNotSpecified, ResourceProviderTypeRegistrationFree, ResourceProviderTypeTenantOnly}
}

// ResourceValidation enumerates the values for resource validation.
type ResourceValidation string

const (
	// ResourceValidationNotSpecified ...
	ResourceValidationNotSpecified ResourceValidation = "NotSpecified"
	// ResourceValidationProfaneWords ...
	ResourceValidationProfaneWords ResourceValidation = "ProfaneWords"
	// ResourceValidationReservedWords ...
	ResourceValidationReservedWords ResourceValidation = "ReservedWords"
)

// PossibleResourceValidationValues returns an array of possible values for the ResourceValidation const type.
func PossibleResourceValidationValues() []ResourceValidation {
	return []ResourceValidation{ResourceValidationNotSpecified, ResourceValidationProfaneWords, ResourceValidationReservedWords}
}

// RoutingType enumerates the values for routing type.
type RoutingType string

const (
	// CascadeExtension ...
	CascadeExtension RoutingType = "CascadeExtension"
	// Default ...
	Default RoutingType = "Default"
	// Extension ...
	Extension RoutingType = "Extension"
	// Failover ...
	Failover RoutingType = "Failover"
	// Fanout ...
	Fanout RoutingType = "Fanout"
	// HostBased ...
	HostBased RoutingType = "HostBased"
	// LocationBased ...
	LocationBased RoutingType = "LocationBased"
	// ProxyOnly ...
	ProxyOnly RoutingType = "ProxyOnly"
	// Tenant ...
	Tenant RoutingType = "Tenant"
)

// PossibleRoutingTypeValues returns an array of possible values for the RoutingType const type.
func PossibleRoutingTypeValues() []RoutingType {
	return []RoutingType{CascadeExtension, Default, Extension, Failover, Fanout, HostBased, LocationBased, ProxyOnly, Tenant}
}

// SkuScaleType enumerates the values for sku scale type.
type SkuScaleType string

const (
	// SkuScaleTypeAutomatic ...
	SkuScaleTypeAutomatic SkuScaleType = "Automatic"
	// SkuScaleTypeManual ...
	SkuScaleTypeManual SkuScaleType = "Manual"
	// SkuScaleTypeNone ...
	SkuScaleTypeNone SkuScaleType = "None"
)

// PossibleSkuScaleTypeValues returns an array of possible values for the SkuScaleType const type.
func PossibleSkuScaleTypeValues() []SkuScaleType {
	return []SkuScaleType{SkuScaleTypeAutomatic, SkuScaleTypeManual, SkuScaleTypeNone}
}

// SubscriptionNotificationOperation enumerates the values for subscription notification operation.
type SubscriptionNotificationOperation string

const (
	// BillingCancellation ...
	BillingCancellation SubscriptionNotificationOperation = "BillingCancellation"
	// DeleteAllResources ...
	DeleteAllResources SubscriptionNotificationOperation = "DeleteAllResources"
	// NoOp ...
	NoOp SubscriptionNotificationOperation = "NoOp"
	// NotDefined ...
	NotDefined SubscriptionNotificationOperation = "NotDefined"
	// SoftDeleteAllResources ...
	SoftDeleteAllResources SubscriptionNotificationOperation = "SoftDeleteAllResources"
	// UndoSoftDelete ...
	UndoSoftDelete SubscriptionNotificationOperation = "UndoSoftDelete"
)

// PossibleSubscriptionNotificationOperationValues returns an array of possible values for the SubscriptionNotificationOperation const type.
func PossibleSubscriptionNotificationOperationValues() []SubscriptionNotificationOperation {
	return []SubscriptionNotificationOperation{BillingCancellation, DeleteAllResources, NoOp, NotDefined, SoftDeleteAllResources, UndoSoftDelete}
}

// SubscriptionReregistrationResult enumerates the values for subscription reregistration result.
type SubscriptionReregistrationResult string

const (
	// ConditionalUpdate ...
	ConditionalUpdate SubscriptionReregistrationResult = "ConditionalUpdate"
	// Failed ...
	Failed SubscriptionReregistrationResult = "Failed"
	// ForcedUpdate ...
	ForcedUpdate SubscriptionReregistrationResult = "ForcedUpdate"
	// NotApplicable ...
	NotApplicable SubscriptionReregistrationResult = "NotApplicable"
)

// PossibleSubscriptionReregistrationResultValues returns an array of possible values for the SubscriptionReregistrationResult const type.
func PossibleSubscriptionReregistrationResultValues() []SubscriptionReregistrationResult {
	return []SubscriptionReregistrationResult{ConditionalUpdate, Failed, ForcedUpdate, NotApplicable}
}

// SubscriptionState enumerates the values for subscription state.
type SubscriptionState string

const (
	// SubscriptionStateDeleted ...
	SubscriptionStateDeleted SubscriptionState = "Deleted"
	// SubscriptionStateDisabled ...
	SubscriptionStateDisabled SubscriptionState = "Disabled"
	// SubscriptionStateEnabled ...
	SubscriptionStateEnabled SubscriptionState = "Enabled"
	// SubscriptionStateNotDefined ...
	SubscriptionStateNotDefined SubscriptionState = "NotDefined"
	// SubscriptionStatePastDue ...
	SubscriptionStatePastDue SubscriptionState = "PastDue"
	// SubscriptionStateWarned ...
	SubscriptionStateWarned SubscriptionState = "Warned"
)

// PossibleSubscriptionStateValues returns an array of possible values for the SubscriptionState const type.
func PossibleSubscriptionStateValues() []SubscriptionState {
	return []SubscriptionState{SubscriptionStateDeleted, SubscriptionStateDisabled, SubscriptionStateEnabled, SubscriptionStateNotDefined, SubscriptionStatePastDue, SubscriptionStateWarned}
}

// SubscriptionTransitioningState enumerates the values for subscription transitioning state.
type SubscriptionTransitioningState string

const (
	// Deleted ...
	Deleted SubscriptionTransitioningState = "Deleted"
	// Registered ...
	Registered SubscriptionTransitioningState = "Registered"
	// Suspended ...
	Suspended SubscriptionTransitioningState = "Suspended"
	// SuspendedToDeleted ...
	SuspendedToDeleted SubscriptionTransitioningState = "SuspendedToDeleted"
	// SuspendedToRegistered ...
	SuspendedToRegistered SubscriptionTransitioningState = "SuspendedToRegistered"
	// SuspendedToUnregistered ...
	SuspendedToUnregistered SubscriptionTransitioningState = "SuspendedToUnregistered"
	// SuspendedToWarned ...
	SuspendedToWarned SubscriptionTransitioningState = "SuspendedToWarned"
	// Unregistered ...
	Unregistered SubscriptionTransitioningState = "Unregistered"
	// Warned ...
	Warned SubscriptionTransitioningState = "Warned"
	// WarnedToDeleted ...
	WarnedToDeleted SubscriptionTransitioningState = "WarnedToDeleted"
	// WarnedToRegistered ...
	WarnedToRegistered SubscriptionTransitioningState = "WarnedToRegistered"
	// WarnedToSuspended ...
	WarnedToSuspended SubscriptionTransitioningState = "WarnedToSuspended"
	// WarnedToUnregistered ...
	WarnedToUnregistered SubscriptionTransitioningState = "WarnedToUnregistered"
)

// PossibleSubscriptionTransitioningStateValues returns an array of possible values for the SubscriptionTransitioningState const type.
func PossibleSubscriptionTransitioningStateValues() []SubscriptionTransitioningState {
	return []SubscriptionTransitioningState{Deleted, Registered, Suspended, SuspendedToDeleted, SuspendedToRegistered, SuspendedToUnregistered, SuspendedToWarned, Unregistered, Warned, WarnedToDeleted, WarnedToRegistered, WarnedToSuspended, WarnedToUnregistered}
}

// TemplateDeploymentCapabilities enumerates the values for template deployment capabilities.
type TemplateDeploymentCapabilities string

const (
	// TemplateDeploymentCapabilitiesDefault ...
	TemplateDeploymentCapabilitiesDefault TemplateDeploymentCapabilities = "Default"
	// TemplateDeploymentCapabilitiesPreflight ...
	TemplateDeploymentCapabilitiesPreflight TemplateDeploymentCapabilities = "Preflight"
)

// PossibleTemplateDeploymentCapabilitiesValues returns an array of possible values for the TemplateDeploymentCapabilities const type.
func PossibleTemplateDeploymentCapabilitiesValues() []TemplateDeploymentCapabilities {
	return []TemplateDeploymentCapabilities{TemplateDeploymentCapabilitiesDefault, TemplateDeploymentCapabilitiesPreflight}
}

// TemplateDeploymentPreflightOptions enumerates the values for template deployment preflight options.
type TemplateDeploymentPreflightOptions string

const (
	// TemplateDeploymentPreflightOptionsDeploymentRequests ...
	TemplateDeploymentPreflightOptionsDeploymentRequests TemplateDeploymentPreflightOptions = "DeploymentRequests"
	// TemplateDeploymentPreflightOptionsNone ...
	TemplateDeploymentPreflightOptionsNone TemplateDeploymentPreflightOptions = "None"
	// TemplateDeploymentPreflightOptionsRegisteredOnly ...
	TemplateDeploymentPreflightOptionsRegisteredOnly TemplateDeploymentPreflightOptions = "RegisteredOnly"
	// TemplateDeploymentPreflightOptionsTestOnly ...
	TemplateDeploymentPreflightOptionsTestOnly TemplateDeploymentPreflightOptions = "TestOnly"
	// TemplateDeploymentPreflightOptionsValidationRequests ...
	TemplateDeploymentPreflightOptionsValidationRequests TemplateDeploymentPreflightOptions = "ValidationRequests"
)

// PossibleTemplateDeploymentPreflightOptionsValues returns an array of possible values for the TemplateDeploymentPreflightOptions const type.
func PossibleTemplateDeploymentPreflightOptionsValues() []TemplateDeploymentPreflightOptions {
	return []TemplateDeploymentPreflightOptions{TemplateDeploymentPreflightOptionsDeploymentRequests, TemplateDeploymentPreflightOptionsNone, TemplateDeploymentPreflightOptionsRegisteredOnly, TemplateDeploymentPreflightOptionsTestOnly, TemplateDeploymentPreflightOptionsValidationRequests}
}

// ThrottlingMetricType enumerates the values for throttling metric type.
type ThrottlingMetricType string

const (
	// ThrottlingMetricTypeNotSpecified ...
	ThrottlingMetricTypeNotSpecified ThrottlingMetricType = "NotSpecified"
	// ThrottlingMetricTypeNumberOfRequests ...
	ThrottlingMetricTypeNumberOfRequests ThrottlingMetricType = "NumberOfRequests"
	// ThrottlingMetricTypeNumberOfResources ...
	ThrottlingMetricTypeNumberOfResources ThrottlingMetricType = "NumberOfResources"
)

// PossibleThrottlingMetricTypeValues returns an array of possible values for the ThrottlingMetricType const type.
func PossibleThrottlingMetricTypeValues() []ThrottlingMetricType {
	return []ThrottlingMetricType{ThrottlingMetricTypeNotSpecified, ThrottlingMetricTypeNumberOfRequests, ThrottlingMetricTypeNumberOfResources}
}

// TrafficRegionCategory enumerates the values for traffic region category.
type TrafficRegionCategory string

const (
	// TrafficRegionCategoryCanary ...
	TrafficRegionCategoryCanary TrafficRegionCategory = "Canary"
	// TrafficRegionCategoryHighTraffic ...
	TrafficRegionCategoryHighTraffic TrafficRegionCategory = "HighTraffic"
	// TrafficRegionCategoryLowTraffic ...
	TrafficRegionCategoryLowTraffic TrafficRegionCategory = "LowTraffic"
	// TrafficRegionCategoryMediumTraffic ...
	TrafficRegionCategoryMediumTraffic TrafficRegionCategory = "MediumTraffic"
	// TrafficRegionCategoryNone ...
	TrafficRegionCategoryNone TrafficRegionCategory = "None"
	// TrafficRegionCategoryNotSpecified ...
	TrafficRegionCategoryNotSpecified TrafficRegionCategory = "NotSpecified"
	// TrafficRegionCategoryRestOfTheWorldGroupOne ...
	TrafficRegionCategoryRestOfTheWorldGroupOne TrafficRegionCategory = "RestOfTheWorldGroupOne"
	// TrafficRegionCategoryRestOfTheWorldGroupTwo ...
	TrafficRegionCategoryRestOfTheWorldGroupTwo TrafficRegionCategory = "RestOfTheWorldGroupTwo"
)

// PossibleTrafficRegionCategoryValues returns an array of possible values for the TrafficRegionCategory const type.
func PossibleTrafficRegionCategoryValues() []TrafficRegionCategory {
	return []TrafficRegionCategory{TrafficRegionCategoryCanary, TrafficRegionCategoryHighTraffic, TrafficRegionCategoryLowTraffic, TrafficRegionCategoryMediumTraffic, TrafficRegionCategoryNone, TrafficRegionCategoryNotSpecified, TrafficRegionCategoryRestOfTheWorldGroupOne, TrafficRegionCategoryRestOfTheWorldGroupTwo}
}

// Type enumerates the values for type.
type Type string

const (
	// TypeArcZone ...
	TypeArcZone Type = "ArcZone"
	// TypeEdgeZone ...
	TypeEdgeZone Type = "EdgeZone"
	// TypeNotSpecified ...
	TypeNotSpecified Type = "NotSpecified"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{TypeArcZone, TypeEdgeZone, TypeNotSpecified}
}
