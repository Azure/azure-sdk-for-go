package backup

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"context"
	"encoding/json"
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/date"
	"github.com/Azure/go-autorest/autorest/to"
	"github.com/Azure/go-autorest/tracing"
	"net/http"
)

// The package's fully qualified name.
const fqdn = "github.com/Azure/azure-sdk-for-go/services/recoveryservices/mgmt/2017-07-01/backup"

// AzureBackupGoalFeatureSupportRequest azure backup goal feature specific request.
type AzureBackupGoalFeatureSupportRequest struct {
	// FeatureType - Possible values include: 'FeatureTypeFeatureSupportRequest', 'FeatureTypeAzureBackupGoals', 'FeatureTypeAzureVMResourceBackup'
	FeatureType FeatureType `json:"featureType,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureBackupGoalFeatureSupportRequest.
func (abgfsr AzureBackupGoalFeatureSupportRequest) MarshalJSON() ([]byte, error) {
	abgfsr.FeatureType = FeatureTypeAzureBackupGoals
	objectMap := make(map[string]interface{})
	if abgfsr.FeatureType != "" {
		objectMap["featureType"] = abgfsr.FeatureType
	}
	return json.Marshal(objectMap)
}

// AsAzureBackupGoalFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureBackupGoalFeatureSupportRequest.
func (abgfsr AzureBackupGoalFeatureSupportRequest) AsAzureBackupGoalFeatureSupportRequest() (*AzureBackupGoalFeatureSupportRequest, bool) {
	return &abgfsr, true
}

// AsAzureVMResourceFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureBackupGoalFeatureSupportRequest.
func (abgfsr AzureBackupGoalFeatureSupportRequest) AsAzureVMResourceFeatureSupportRequest() (*AzureVMResourceFeatureSupportRequest, bool) {
	return nil, false
}

// AsFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureBackupGoalFeatureSupportRequest.
func (abgfsr AzureBackupGoalFeatureSupportRequest) AsFeatureSupportRequest() (*FeatureSupportRequest, bool) {
	return nil, false
}

// AsBasicFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureBackupGoalFeatureSupportRequest.
func (abgfsr AzureBackupGoalFeatureSupportRequest) AsBasicFeatureSupportRequest() (BasicFeatureSupportRequest, bool) {
	return &abgfsr, true
}

// AzureIaaSVMErrorInfo azure IaaS VM workload-specific error information.
type AzureIaaSVMErrorInfo struct {
	// ErrorCode - READ-ONLY; Error code.
	ErrorCode *int32 `json:"errorCode,omitempty"`
	// ErrorTitle - READ-ONLY; Title: Typically, the entity that the error pertains to.
	ErrorTitle *string `json:"errorTitle,omitempty"`
	// ErrorString - READ-ONLY; Localized error string.
	ErrorString *string `json:"errorString,omitempty"`
	// Recommendations - READ-ONLY; List of localized recommendations for above error code.
	Recommendations *[]string `json:"recommendations,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureIaaSVMErrorInfo.
func (aisei AzureIaaSVMErrorInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	return json.Marshal(objectMap)
}

// AzureIaaSVMJob azure IaaS VM workload-specific job object.
type AzureIaaSVMJob struct {
	// Duration - Time elapsed during the execution of this job.
	Duration *string `json:"duration,omitempty"`
	// ActionsInfo - Gets or sets the state/actions applicable on this job like cancel/retry.
	ActionsInfo *[]JobSupportedAction `json:"actionsInfo,omitempty"`
	// ErrorDetails - Error details on execution of this job.
	ErrorDetails *[]AzureIaaSVMErrorInfo `json:"errorDetails,omitempty"`
	// VirtualMachineVersion - Specifies whether the backup item is a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `json:"virtualMachineVersion,omitempty"`
	// ExtendedInfo - Additional information for this job.
	ExtendedInfo *AzureIaaSVMJobExtendedInfo `json:"extendedInfo,omitempty"`
	// EntityFriendlyName - Friendly name of the entity on which the current job is executing.
	EntityFriendlyName *string `json:"entityFriendlyName,omitempty"`
	// BackupManagementType - Backup management type to execute the current job. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// Operation - The operation name.
	Operation *string `json:"operation,omitempty"`
	// Status - Job status.
	Status *string `json:"status,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// ActivityID - ActivityId of job.
	ActivityID *string `json:"activityId,omitempty"`
	// JobType - Possible values include: 'JobTypeJob', 'JobTypeAzureIaaSVMJob', 'JobTypeAzureStorageJob', 'JobTypeAzureWorkloadJob', 'JobTypeDpmJob', 'JobTypeMabJob'
	JobType JobType `json:"jobType,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) MarshalJSON() ([]byte, error) {
	aisj.JobType = JobTypeAzureIaaSVMJob
	objectMap := make(map[string]interface{})
	if aisj.Duration != nil {
		objectMap["duration"] = aisj.Duration
	}
	if aisj.ActionsInfo != nil {
		objectMap["actionsInfo"] = aisj.ActionsInfo
	}
	if aisj.ErrorDetails != nil {
		objectMap["errorDetails"] = aisj.ErrorDetails
	}
	if aisj.VirtualMachineVersion != nil {
		objectMap["virtualMachineVersion"] = aisj.VirtualMachineVersion
	}
	if aisj.ExtendedInfo != nil {
		objectMap["extendedInfo"] = aisj.ExtendedInfo
	}
	if aisj.EntityFriendlyName != nil {
		objectMap["entityFriendlyName"] = aisj.EntityFriendlyName
	}
	if aisj.BackupManagementType != "" {
		objectMap["backupManagementType"] = aisj.BackupManagementType
	}
	if aisj.Operation != nil {
		objectMap["operation"] = aisj.Operation
	}
	if aisj.Status != nil {
		objectMap["status"] = aisj.Status
	}
	if aisj.StartTime != nil {
		objectMap["startTime"] = aisj.StartTime
	}
	if aisj.EndTime != nil {
		objectMap["endTime"] = aisj.EndTime
	}
	if aisj.ActivityID != nil {
		objectMap["activityId"] = aisj.ActivityID
	}
	if aisj.JobType != "" {
		objectMap["jobType"] = aisj.JobType
	}
	return json.Marshal(objectMap)
}

// AsAzureIaaSVMJob is the BasicJob implementation for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) AsAzureIaaSVMJob() (*AzureIaaSVMJob, bool) {
	return &aisj, true
}

// AsAzureStorageJob is the BasicJob implementation for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) AsAzureStorageJob() (*AzureStorageJob, bool) {
	return nil, false
}

// AsAzureWorkloadJob is the BasicJob implementation for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) AsAzureWorkloadJob() (*AzureWorkloadJob, bool) {
	return nil, false
}

// AsDpmJob is the BasicJob implementation for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) AsDpmJob() (*DpmJob, bool) {
	return nil, false
}

// AsMabJob is the BasicJob implementation for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) AsMabJob() (*MabJob, bool) {
	return nil, false
}

// AsJob is the BasicJob implementation for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) AsJob() (*Job, bool) {
	return nil, false
}

// AsBasicJob is the BasicJob implementation for AzureIaaSVMJob.
func (aisj AzureIaaSVMJob) AsBasicJob() (BasicJob, bool) {
	return &aisj, true
}

// AzureIaaSVMJobExtendedInfo azure IaaS VM workload-specific additional information for job.
type AzureIaaSVMJobExtendedInfo struct {
	// TasksList - List of tasks associated with this job.
	TasksList *[]AzureIaaSVMJobTaskDetails `json:"tasksList,omitempty"`
	// PropertyBag - Job properties.
	PropertyBag map[string]*string `json:"propertyBag"`
	// InternalPropertyBag - Job internal properties.
	InternalPropertyBag map[string]*string `json:"internalPropertyBag"`
	// ProgressPercentage - Indicates progress of the job. Null if it has not started or completed.
	ProgressPercentage *float64 `json:"progressPercentage,omitempty"`
	// EstimatedRemainingDuration - Time remaining for execution of this job.
	EstimatedRemainingDuration *string `json:"estimatedRemainingDuration,omitempty"`
	// DynamicErrorMessage - Non localized error message on job execution.
	DynamicErrorMessage *string `json:"dynamicErrorMessage,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureIaaSVMJobExtendedInfo.
func (aisjei AzureIaaSVMJobExtendedInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if aisjei.TasksList != nil {
		objectMap["tasksList"] = aisjei.TasksList
	}
	if aisjei.PropertyBag != nil {
		objectMap["propertyBag"] = aisjei.PropertyBag
	}
	if aisjei.InternalPropertyBag != nil {
		objectMap["internalPropertyBag"] = aisjei.InternalPropertyBag
	}
	if aisjei.ProgressPercentage != nil {
		objectMap["progressPercentage"] = aisjei.ProgressPercentage
	}
	if aisjei.EstimatedRemainingDuration != nil {
		objectMap["estimatedRemainingDuration"] = aisjei.EstimatedRemainingDuration
	}
	if aisjei.DynamicErrorMessage != nil {
		objectMap["dynamicErrorMessage"] = aisjei.DynamicErrorMessage
	}
	return json.Marshal(objectMap)
}

// AzureIaaSVMJobTaskDetails azure IaaS VM workload-specific job task details.
type AzureIaaSVMJobTaskDetails struct {
	// TaskID - The task display name.
	TaskID *string `json:"taskId,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// InstanceID - The instanceId.
	InstanceID *string `json:"instanceId,omitempty"`
	// Duration - Time elapsed for task.
	Duration *string `json:"duration,omitempty"`
	// Status - The status.
	Status *string `json:"status,omitempty"`
	// ProgressPercentage - Progress of the task.
	ProgressPercentage *float64 `json:"progressPercentage,omitempty"`
	// TaskExecutionDetails - Details about execution of the task.
	// eg: number of bytes transferred etc
	TaskExecutionDetails *string `json:"taskExecutionDetails,omitempty"`
}

// BasicAzureRecoveryServiceVaultProtectionIntent azure Recovery Services Vault specific protection intent item.
type BasicAzureRecoveryServiceVaultProtectionIntent interface {
	AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool)
	AsBasicAzureWorkloadAutoProtectionIntent() (BasicAzureWorkloadAutoProtectionIntent, bool)
	AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool)
	AsAzureRecoveryServiceVaultProtectionIntent() (*AzureRecoveryServiceVaultProtectionIntent, bool)
}

// AzureRecoveryServiceVaultProtectionIntent azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntent struct {
	// BackupManagementType - Type of backup management for the backed up item. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// SourceResourceID - ARM ID of the resource to be backed up.
	SourceResourceID *string `json:"sourceResourceId,omitempty"`
	// ItemID - ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemID *string `json:"itemId,omitempty"`
	// PolicyID - ID of the backup policy with which this item is backed up.
	PolicyID *string `json:"policyId,omitempty"`
	// ProtectionState - Backup state of this backup item. Possible values include: 'ProtectionStatusInvalid', 'ProtectionStatusNotProtected', 'ProtectionStatusProtecting', 'ProtectionStatusProtected', 'ProtectionStatusProtectionFailed'
	ProtectionState ProtectionStatus `json:"protectionState,omitempty"`
	// ProtectionIntentItemType - Possible values include: 'ProtectionIntentItemTypeProtectionIntent', 'ProtectionIntentItemTypeRecoveryServiceVaultItem', 'ProtectionIntentItemTypeAzureResourceItem', 'ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent', 'ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent'
	ProtectionIntentItemType ProtectionIntentItemType `json:"protectionIntentItemType,omitempty"`
}

func unmarshalBasicAzureRecoveryServiceVaultProtectionIntent(body []byte) (BasicAzureRecoveryServiceVaultProtectionIntent, error) {
	var m map[string]interface{}
	err := json.Unmarshal(body, &m)
	if err != nil {
		return nil, err
	}

	switch m["protectionIntentItemType"] {
	case string(ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent):
		var awapi AzureWorkloadAutoProtectionIntent
		err := json.Unmarshal(body, &awapi)
		return awapi, err
	case string(ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent):
		var awsapi AzureWorkloadSQLAutoProtectionIntent
		err := json.Unmarshal(body, &awsapi)
		return awsapi, err
	default:
		var arsvpi AzureRecoveryServiceVaultProtectionIntent
		err := json.Unmarshal(body, &arsvpi)
		return arsvpi, err
	}
}
func unmarshalBasicAzureRecoveryServiceVaultProtectionIntentArray(body []byte) ([]BasicAzureRecoveryServiceVaultProtectionIntent, error) {
	var rawMessages []*json.RawMessage
	err := json.Unmarshal(body, &rawMessages)
	if err != nil {
		return nil, err
	}

	arsvpiArray := make([]BasicAzureRecoveryServiceVaultProtectionIntent, len(rawMessages))

	for index, rawMessage := range rawMessages {
		arsvpi, err := unmarshalBasicAzureRecoveryServiceVaultProtectionIntent(*rawMessage)
		if err != nil {
			return nil, err
		}
		arsvpiArray[index] = arsvpi
	}
	return arsvpiArray, nil
}

// MarshalJSON is the custom marshaler for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) MarshalJSON() ([]byte, error) {
	arsvpi.ProtectionIntentItemType = ProtectionIntentItemTypeRecoveryServiceVaultItem
	objectMap := make(map[string]interface{})
	if arsvpi.BackupManagementType != "" {
		objectMap["backupManagementType"] = arsvpi.BackupManagementType
	}
	if arsvpi.SourceResourceID != nil {
		objectMap["sourceResourceId"] = arsvpi.SourceResourceID
	}
	if arsvpi.ItemID != nil {
		objectMap["itemId"] = arsvpi.ItemID
	}
	if arsvpi.PolicyID != nil {
		objectMap["policyId"] = arsvpi.PolicyID
	}
	if arsvpi.ProtectionState != "" {
		objectMap["protectionState"] = arsvpi.ProtectionState
	}
	if arsvpi.ProtectionIntentItemType != "" {
		objectMap["protectionIntentItemType"] = arsvpi.ProtectionIntentItemType
	}
	return json.Marshal(objectMap)
}

// AsAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsAzureRecoveryServiceVaultProtectionIntent() (*AzureRecoveryServiceVaultProtectionIntent, bool) {
	return &arsvpi, true
}

// AsBasicAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsBasicAzureRecoveryServiceVaultProtectionIntent() (BasicAzureRecoveryServiceVaultProtectionIntent, bool) {
	return &arsvpi, true
}

// AsAzureResourceProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsAzureResourceProtectionIntent() (*AzureResourceProtectionIntent, bool) {
	return nil, false
}

// AsAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsBasicAzureWorkloadAutoProtectionIntent() (BasicAzureWorkloadAutoProtectionIntent, bool) {
	return nil, false
}

// AsAzureWorkloadSQLAutoProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool) {
	return nil, false
}

// AsProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsProtectionIntent() (*ProtectionIntent, bool) {
	return nil, false
}

// AsBasicProtectionIntent is the BasicProtectionIntent implementation for AzureRecoveryServiceVaultProtectionIntent.
func (arsvpi AzureRecoveryServiceVaultProtectionIntent) AsBasicProtectionIntent() (BasicProtectionIntent, bool) {
	return &arsvpi, true
}

// AzureResourceProtectionIntent iaaS VM specific backup protection intent item.
type AzureResourceProtectionIntent struct {
	// FriendlyName - Friendly name of the VM represented by this backup item.
	FriendlyName *string `json:"friendlyName,omitempty"`
	// BackupManagementType - Type of backup management for the backed up item. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// SourceResourceID - ARM ID of the resource to be backed up.
	SourceResourceID *string `json:"sourceResourceId,omitempty"`
	// ItemID - ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemID *string `json:"itemId,omitempty"`
	// PolicyID - ID of the backup policy with which this item is backed up.
	PolicyID *string `json:"policyId,omitempty"`
	// ProtectionState - Backup state of this backup item. Possible values include: 'ProtectionStatusInvalid', 'ProtectionStatusNotProtected', 'ProtectionStatusProtecting', 'ProtectionStatusProtected', 'ProtectionStatusProtectionFailed'
	ProtectionState ProtectionStatus `json:"protectionState,omitempty"`
	// ProtectionIntentItemType - Possible values include: 'ProtectionIntentItemTypeProtectionIntent', 'ProtectionIntentItemTypeRecoveryServiceVaultItem', 'ProtectionIntentItemTypeAzureResourceItem', 'ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent', 'ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent'
	ProtectionIntentItemType ProtectionIntentItemType `json:"protectionIntentItemType,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) MarshalJSON() ([]byte, error) {
	arpi.ProtectionIntentItemType = ProtectionIntentItemTypeAzureResourceItem
	objectMap := make(map[string]interface{})
	if arpi.FriendlyName != nil {
		objectMap["friendlyName"] = arpi.FriendlyName
	}
	if arpi.BackupManagementType != "" {
		objectMap["backupManagementType"] = arpi.BackupManagementType
	}
	if arpi.SourceResourceID != nil {
		objectMap["sourceResourceId"] = arpi.SourceResourceID
	}
	if arpi.ItemID != nil {
		objectMap["itemId"] = arpi.ItemID
	}
	if arpi.PolicyID != nil {
		objectMap["policyId"] = arpi.PolicyID
	}
	if arpi.ProtectionState != "" {
		objectMap["protectionState"] = arpi.ProtectionState
	}
	if arpi.ProtectionIntentItemType != "" {
		objectMap["protectionIntentItemType"] = arpi.ProtectionIntentItemType
	}
	return json.Marshal(objectMap)
}

// AsAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsAzureRecoveryServiceVaultProtectionIntent() (*AzureRecoveryServiceVaultProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsBasicAzureRecoveryServiceVaultProtectionIntent() (BasicAzureRecoveryServiceVaultProtectionIntent, bool) {
	return nil, false
}

// AsAzureResourceProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsAzureResourceProtectionIntent() (*AzureResourceProtectionIntent, bool) {
	return &arpi, true
}

// AsAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsBasicAzureWorkloadAutoProtectionIntent() (BasicAzureWorkloadAutoProtectionIntent, bool) {
	return nil, false
}

// AsAzureWorkloadSQLAutoProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool) {
	return nil, false
}

// AsProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsProtectionIntent() (*ProtectionIntent, bool) {
	return nil, false
}

// AsBasicProtectionIntent is the BasicProtectionIntent implementation for AzureResourceProtectionIntent.
func (arpi AzureResourceProtectionIntent) AsBasicProtectionIntent() (BasicProtectionIntent, bool) {
	return &arpi, true
}

// AzureStorageErrorInfo azure storage specific error information
type AzureStorageErrorInfo struct {
	// ErrorCode - Error code.
	ErrorCode *int32 `json:"errorCode,omitempty"`
	// ErrorString - Localized error string.
	ErrorString *string `json:"errorString,omitempty"`
	// Recommendations - List of localized recommendations for above error code.
	Recommendations *[]string `json:"recommendations,omitempty"`
}

// AzureStorageJob azure storage specific job.
type AzureStorageJob struct {
	// Duration - Time elapsed during the execution of this job.
	Duration *string `json:"duration,omitempty"`
	// ActionsInfo - Gets or sets the state/actions applicable on this job like cancel/retry.
	ActionsInfo *[]JobSupportedAction `json:"actionsInfo,omitempty"`
	// ErrorDetails - Error details on execution of this job.
	ErrorDetails *[]AzureStorageErrorInfo `json:"errorDetails,omitempty"`
	// StorageAccountName - Specifies friendly name of the storage account.
	StorageAccountName *string `json:"storageAccountName,omitempty"`
	// StorageAccountVersion - Specifies whether the Storage account is a Classic or an Azure Resource Manager Storage account.
	StorageAccountVersion *string `json:"storageAccountVersion,omitempty"`
	// ExtendedInfo - Additional information about the job.
	ExtendedInfo *AzureStorageJobExtendedInfo `json:"extendedInfo,omitempty"`
	// EntityFriendlyName - Friendly name of the entity on which the current job is executing.
	EntityFriendlyName *string `json:"entityFriendlyName,omitempty"`
	// BackupManagementType - Backup management type to execute the current job. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// Operation - The operation name.
	Operation *string `json:"operation,omitempty"`
	// Status - Job status.
	Status *string `json:"status,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// ActivityID - ActivityId of job.
	ActivityID *string `json:"activityId,omitempty"`
	// JobType - Possible values include: 'JobTypeJob', 'JobTypeAzureIaaSVMJob', 'JobTypeAzureStorageJob', 'JobTypeAzureWorkloadJob', 'JobTypeDpmJob', 'JobTypeMabJob'
	JobType JobType `json:"jobType,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureStorageJob.
func (asj AzureStorageJob) MarshalJSON() ([]byte, error) {
	asj.JobType = JobTypeAzureStorageJob
	objectMap := make(map[string]interface{})
	if asj.Duration != nil {
		objectMap["duration"] = asj.Duration
	}
	if asj.ActionsInfo != nil {
		objectMap["actionsInfo"] = asj.ActionsInfo
	}
	if asj.ErrorDetails != nil {
		objectMap["errorDetails"] = asj.ErrorDetails
	}
	if asj.StorageAccountName != nil {
		objectMap["storageAccountName"] = asj.StorageAccountName
	}
	if asj.StorageAccountVersion != nil {
		objectMap["storageAccountVersion"] = asj.StorageAccountVersion
	}
	if asj.ExtendedInfo != nil {
		objectMap["extendedInfo"] = asj.ExtendedInfo
	}
	if asj.EntityFriendlyName != nil {
		objectMap["entityFriendlyName"] = asj.EntityFriendlyName
	}
	if asj.BackupManagementType != "" {
		objectMap["backupManagementType"] = asj.BackupManagementType
	}
	if asj.Operation != nil {
		objectMap["operation"] = asj.Operation
	}
	if asj.Status != nil {
		objectMap["status"] = asj.Status
	}
	if asj.StartTime != nil {
		objectMap["startTime"] = asj.StartTime
	}
	if asj.EndTime != nil {
		objectMap["endTime"] = asj.EndTime
	}
	if asj.ActivityID != nil {
		objectMap["activityId"] = asj.ActivityID
	}
	if asj.JobType != "" {
		objectMap["jobType"] = asj.JobType
	}
	return json.Marshal(objectMap)
}

// AsAzureIaaSVMJob is the BasicJob implementation for AzureStorageJob.
func (asj AzureStorageJob) AsAzureIaaSVMJob() (*AzureIaaSVMJob, bool) {
	return nil, false
}

// AsAzureStorageJob is the BasicJob implementation for AzureStorageJob.
func (asj AzureStorageJob) AsAzureStorageJob() (*AzureStorageJob, bool) {
	return &asj, true
}

// AsAzureWorkloadJob is the BasicJob implementation for AzureStorageJob.
func (asj AzureStorageJob) AsAzureWorkloadJob() (*AzureWorkloadJob, bool) {
	return nil, false
}

// AsDpmJob is the BasicJob implementation for AzureStorageJob.
func (asj AzureStorageJob) AsDpmJob() (*DpmJob, bool) {
	return nil, false
}

// AsMabJob is the BasicJob implementation for AzureStorageJob.
func (asj AzureStorageJob) AsMabJob() (*MabJob, bool) {
	return nil, false
}

// AsJob is the BasicJob implementation for AzureStorageJob.
func (asj AzureStorageJob) AsJob() (*Job, bool) {
	return nil, false
}

// AsBasicJob is the BasicJob implementation for AzureStorageJob.
func (asj AzureStorageJob) AsBasicJob() (BasicJob, bool) {
	return &asj, true
}

// AzureStorageJobExtendedInfo azure Storage workload-specific additional information for job.
type AzureStorageJobExtendedInfo struct {
	// TasksList - List of tasks for this job
	TasksList *[]AzureStorageJobTaskDetails `json:"tasksList,omitempty"`
	// PropertyBag - Job properties.
	PropertyBag map[string]*string `json:"propertyBag"`
	// DynamicErrorMessage - Non localized error message on job execution.
	DynamicErrorMessage *string `json:"dynamicErrorMessage,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureStorageJobExtendedInfo.
func (asjei AzureStorageJobExtendedInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if asjei.TasksList != nil {
		objectMap["tasksList"] = asjei.TasksList
	}
	if asjei.PropertyBag != nil {
		objectMap["propertyBag"] = asjei.PropertyBag
	}
	if asjei.DynamicErrorMessage != nil {
		objectMap["dynamicErrorMessage"] = asjei.DynamicErrorMessage
	}
	return json.Marshal(objectMap)
}

// AzureStorageJobTaskDetails azure storage workload specific job task details.
type AzureStorageJobTaskDetails struct {
	// TaskID - The task display name.
	TaskID *string `json:"taskId,omitempty"`
	// Status - The status.
	Status *string `json:"status,omitempty"`
}

// AzureVMResourceFeatureSupportRequest azureResource(IaaS VM) Specific feature support request
type AzureVMResourceFeatureSupportRequest struct {
	// VMSize - Size of the resource: VM size(A/D series etc) in case of IaasVM
	VMSize *string `json:"vmSize,omitempty"`
	// VMSku - SKUs (Premium/Managed etc) in case of IaasVM
	VMSku *string `json:"vmSku,omitempty"`
	// FeatureType - Possible values include: 'FeatureTypeFeatureSupportRequest', 'FeatureTypeAzureBackupGoals', 'FeatureTypeAzureVMResourceBackup'
	FeatureType FeatureType `json:"featureType,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureVMResourceFeatureSupportRequest.
func (avrfsr AzureVMResourceFeatureSupportRequest) MarshalJSON() ([]byte, error) {
	avrfsr.FeatureType = FeatureTypeAzureVMResourceBackup
	objectMap := make(map[string]interface{})
	if avrfsr.VMSize != nil {
		objectMap["vmSize"] = avrfsr.VMSize
	}
	if avrfsr.VMSku != nil {
		objectMap["vmSku"] = avrfsr.VMSku
	}
	if avrfsr.FeatureType != "" {
		objectMap["featureType"] = avrfsr.FeatureType
	}
	return json.Marshal(objectMap)
}

// AsAzureBackupGoalFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureVMResourceFeatureSupportRequest.
func (avrfsr AzureVMResourceFeatureSupportRequest) AsAzureBackupGoalFeatureSupportRequest() (*AzureBackupGoalFeatureSupportRequest, bool) {
	return nil, false
}

// AsAzureVMResourceFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureVMResourceFeatureSupportRequest.
func (avrfsr AzureVMResourceFeatureSupportRequest) AsAzureVMResourceFeatureSupportRequest() (*AzureVMResourceFeatureSupportRequest, bool) {
	return &avrfsr, true
}

// AsFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureVMResourceFeatureSupportRequest.
func (avrfsr AzureVMResourceFeatureSupportRequest) AsFeatureSupportRequest() (*FeatureSupportRequest, bool) {
	return nil, false
}

// AsBasicFeatureSupportRequest is the BasicFeatureSupportRequest implementation for AzureVMResourceFeatureSupportRequest.
func (avrfsr AzureVMResourceFeatureSupportRequest) AsBasicFeatureSupportRequest() (BasicFeatureSupportRequest, bool) {
	return &avrfsr, true
}

// AzureVMResourceFeatureSupportResponse response for feature support requests for Azure IaasVm
type AzureVMResourceFeatureSupportResponse struct {
	autorest.Response `json:"-"`
	// SupportStatus - Support status of feature. Possible values include: 'SupportStatusInvalid', 'SupportStatusSupported', 'SupportStatusDefaultOFF', 'SupportStatusDefaultON', 'SupportStatusNotSupported'
	SupportStatus SupportStatus `json:"supportStatus,omitempty"`
}

// BasicAzureWorkloadAutoProtectionIntent azure Recovery Services Vault specific protection intent item.
type BasicAzureWorkloadAutoProtectionIntent interface {
	AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool)
	AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool)
}

// AzureWorkloadAutoProtectionIntent azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntent struct {
	// BackupManagementType - Type of backup management for the backed up item. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// SourceResourceID - ARM ID of the resource to be backed up.
	SourceResourceID *string `json:"sourceResourceId,omitempty"`
	// ItemID - ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemID *string `json:"itemId,omitempty"`
	// PolicyID - ID of the backup policy with which this item is backed up.
	PolicyID *string `json:"policyId,omitempty"`
	// ProtectionState - Backup state of this backup item. Possible values include: 'ProtectionStatusInvalid', 'ProtectionStatusNotProtected', 'ProtectionStatusProtecting', 'ProtectionStatusProtected', 'ProtectionStatusProtectionFailed'
	ProtectionState ProtectionStatus `json:"protectionState,omitempty"`
	// ProtectionIntentItemType - Possible values include: 'ProtectionIntentItemTypeProtectionIntent', 'ProtectionIntentItemTypeRecoveryServiceVaultItem', 'ProtectionIntentItemTypeAzureResourceItem', 'ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent', 'ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent'
	ProtectionIntentItemType ProtectionIntentItemType `json:"protectionIntentItemType,omitempty"`
}

func unmarshalBasicAzureWorkloadAutoProtectionIntent(body []byte) (BasicAzureWorkloadAutoProtectionIntent, error) {
	var m map[string]interface{}
	err := json.Unmarshal(body, &m)
	if err != nil {
		return nil, err
	}

	switch m["protectionIntentItemType"] {
	case string(ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent):
		var awsapi AzureWorkloadSQLAutoProtectionIntent
		err := json.Unmarshal(body, &awsapi)
		return awsapi, err
	default:
		var awapi AzureWorkloadAutoProtectionIntent
		err := json.Unmarshal(body, &awapi)
		return awapi, err
	}
}
func unmarshalBasicAzureWorkloadAutoProtectionIntentArray(body []byte) ([]BasicAzureWorkloadAutoProtectionIntent, error) {
	var rawMessages []*json.RawMessage
	err := json.Unmarshal(body, &rawMessages)
	if err != nil {
		return nil, err
	}

	awapiArray := make([]BasicAzureWorkloadAutoProtectionIntent, len(rawMessages))

	for index, rawMessage := range rawMessages {
		awapi, err := unmarshalBasicAzureWorkloadAutoProtectionIntent(*rawMessage)
		if err != nil {
			return nil, err
		}
		awapiArray[index] = awapi
	}
	return awapiArray, nil
}

// MarshalJSON is the custom marshaler for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) MarshalJSON() ([]byte, error) {
	awapi.ProtectionIntentItemType = ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent
	objectMap := make(map[string]interface{})
	if awapi.BackupManagementType != "" {
		objectMap["backupManagementType"] = awapi.BackupManagementType
	}
	if awapi.SourceResourceID != nil {
		objectMap["sourceResourceId"] = awapi.SourceResourceID
	}
	if awapi.ItemID != nil {
		objectMap["itemId"] = awapi.ItemID
	}
	if awapi.PolicyID != nil {
		objectMap["policyId"] = awapi.PolicyID
	}
	if awapi.ProtectionState != "" {
		objectMap["protectionState"] = awapi.ProtectionState
	}
	if awapi.ProtectionIntentItemType != "" {
		objectMap["protectionIntentItemType"] = awapi.ProtectionIntentItemType
	}
	return json.Marshal(objectMap)
}

// AsAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsAzureRecoveryServiceVaultProtectionIntent() (*AzureRecoveryServiceVaultProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsBasicAzureRecoveryServiceVaultProtectionIntent() (BasicAzureRecoveryServiceVaultProtectionIntent, bool) {
	return &awapi, true
}

// AsAzureResourceProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsAzureResourceProtectionIntent() (*AzureResourceProtectionIntent, bool) {
	return nil, false
}

// AsAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool) {
	return &awapi, true
}

// AsBasicAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsBasicAzureWorkloadAutoProtectionIntent() (BasicAzureWorkloadAutoProtectionIntent, bool) {
	return &awapi, true
}

// AsAzureWorkloadSQLAutoProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool) {
	return nil, false
}

// AsProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsProtectionIntent() (*ProtectionIntent, bool) {
	return nil, false
}

// AsBasicProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadAutoProtectionIntent.
func (awapi AzureWorkloadAutoProtectionIntent) AsBasicProtectionIntent() (BasicProtectionIntent, bool) {
	return &awapi, true
}

// AzureWorkloadErrorInfo azure storage specific error information
type AzureWorkloadErrorInfo struct {
	// ErrorCode - Error code.
	ErrorCode *int32 `json:"errorCode,omitempty"`
	// ErrorString - Localized error string.
	ErrorString *string `json:"errorString,omitempty"`
	// ErrorTitle - Title: Typically, the entity that the error pertains to.
	ErrorTitle *string `json:"errorTitle,omitempty"`
	// Recommendations - List of localized recommendations for above error code.
	Recommendations *[]string `json:"recommendations,omitempty"`
	// AdditionalDetails - Additional details for above error code.
	AdditionalDetails *string `json:"additionalDetails,omitempty"`
}

// AzureWorkloadJob azure storage specific job.
type AzureWorkloadJob struct {
	// WorkloadType - Workload type of the job
	WorkloadType *string `json:"workloadType,omitempty"`
	// Duration - Time elapsed during the execution of this job.
	Duration *string `json:"duration,omitempty"`
	// ActionsInfo - Gets or sets the state/actions applicable on this job like cancel/retry.
	ActionsInfo *[]JobSupportedAction `json:"actionsInfo,omitempty"`
	// ErrorDetails - Error details on execution of this job.
	ErrorDetails *[]AzureWorkloadErrorInfo `json:"errorDetails,omitempty"`
	// ExtendedInfo - Additional information about the job.
	ExtendedInfo *AzureWorkloadJobExtendedInfo `json:"extendedInfo,omitempty"`
	// EntityFriendlyName - Friendly name of the entity on which the current job is executing.
	EntityFriendlyName *string `json:"entityFriendlyName,omitempty"`
	// BackupManagementType - Backup management type to execute the current job. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// Operation - The operation name.
	Operation *string `json:"operation,omitempty"`
	// Status - Job status.
	Status *string `json:"status,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// ActivityID - ActivityId of job.
	ActivityID *string `json:"activityId,omitempty"`
	// JobType - Possible values include: 'JobTypeJob', 'JobTypeAzureIaaSVMJob', 'JobTypeAzureStorageJob', 'JobTypeAzureWorkloadJob', 'JobTypeDpmJob', 'JobTypeMabJob'
	JobType JobType `json:"jobType,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureWorkloadJob.
func (awj AzureWorkloadJob) MarshalJSON() ([]byte, error) {
	awj.JobType = JobTypeAzureWorkloadJob
	objectMap := make(map[string]interface{})
	if awj.WorkloadType != nil {
		objectMap["workloadType"] = awj.WorkloadType
	}
	if awj.Duration != nil {
		objectMap["duration"] = awj.Duration
	}
	if awj.ActionsInfo != nil {
		objectMap["actionsInfo"] = awj.ActionsInfo
	}
	if awj.ErrorDetails != nil {
		objectMap["errorDetails"] = awj.ErrorDetails
	}
	if awj.ExtendedInfo != nil {
		objectMap["extendedInfo"] = awj.ExtendedInfo
	}
	if awj.EntityFriendlyName != nil {
		objectMap["entityFriendlyName"] = awj.EntityFriendlyName
	}
	if awj.BackupManagementType != "" {
		objectMap["backupManagementType"] = awj.BackupManagementType
	}
	if awj.Operation != nil {
		objectMap["operation"] = awj.Operation
	}
	if awj.Status != nil {
		objectMap["status"] = awj.Status
	}
	if awj.StartTime != nil {
		objectMap["startTime"] = awj.StartTime
	}
	if awj.EndTime != nil {
		objectMap["endTime"] = awj.EndTime
	}
	if awj.ActivityID != nil {
		objectMap["activityId"] = awj.ActivityID
	}
	if awj.JobType != "" {
		objectMap["jobType"] = awj.JobType
	}
	return json.Marshal(objectMap)
}

// AsAzureIaaSVMJob is the BasicJob implementation for AzureWorkloadJob.
func (awj AzureWorkloadJob) AsAzureIaaSVMJob() (*AzureIaaSVMJob, bool) {
	return nil, false
}

// AsAzureStorageJob is the BasicJob implementation for AzureWorkloadJob.
func (awj AzureWorkloadJob) AsAzureStorageJob() (*AzureStorageJob, bool) {
	return nil, false
}

// AsAzureWorkloadJob is the BasicJob implementation for AzureWorkloadJob.
func (awj AzureWorkloadJob) AsAzureWorkloadJob() (*AzureWorkloadJob, bool) {
	return &awj, true
}

// AsDpmJob is the BasicJob implementation for AzureWorkloadJob.
func (awj AzureWorkloadJob) AsDpmJob() (*DpmJob, bool) {
	return nil, false
}

// AsMabJob is the BasicJob implementation for AzureWorkloadJob.
func (awj AzureWorkloadJob) AsMabJob() (*MabJob, bool) {
	return nil, false
}

// AsJob is the BasicJob implementation for AzureWorkloadJob.
func (awj AzureWorkloadJob) AsJob() (*Job, bool) {
	return nil, false
}

// AsBasicJob is the BasicJob implementation for AzureWorkloadJob.
func (awj AzureWorkloadJob) AsBasicJob() (BasicJob, bool) {
	return &awj, true
}

// AzureWorkloadJobExtendedInfo azure VM workload-specific additional information for job.
type AzureWorkloadJobExtendedInfo struct {
	// TasksList - List of tasks for this job
	TasksList *[]AzureWorkloadJobTaskDetails `json:"tasksList,omitempty"`
	// PropertyBag - Job properties.
	PropertyBag map[string]*string `json:"propertyBag"`
	// DynamicErrorMessage - Non localized error message on job execution.
	DynamicErrorMessage *string `json:"dynamicErrorMessage,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureWorkloadJobExtendedInfo.
func (awjei AzureWorkloadJobExtendedInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if awjei.TasksList != nil {
		objectMap["tasksList"] = awjei.TasksList
	}
	if awjei.PropertyBag != nil {
		objectMap["propertyBag"] = awjei.PropertyBag
	}
	if awjei.DynamicErrorMessage != nil {
		objectMap["dynamicErrorMessage"] = awjei.DynamicErrorMessage
	}
	return json.Marshal(objectMap)
}

// AzureWorkloadJobTaskDetails azure VM workload specific job task details.
type AzureWorkloadJobTaskDetails struct {
	// TaskID - The task display name.
	TaskID *string `json:"taskId,omitempty"`
	// Status - The status.
	Status *string `json:"status,omitempty"`
}

// AzureWorkloadSQLAutoProtectionIntent azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntent struct {
	// WorkloadItemType - Workload item type of the item for which intent is to be set. Possible values include: 'WorkloadItemTypeInvalid', 'WorkloadItemTypeSQLInstance', 'WorkloadItemTypeSQLDataBase', 'WorkloadItemTypeSAPHanaSystem', 'WorkloadItemTypeSAPHanaDatabase', 'WorkloadItemTypeSAPAseSystem', 'WorkloadItemTypeSAPAseDatabase'
	WorkloadItemType WorkloadItemType `json:"workloadItemType,omitempty"`
	// BackupManagementType - Type of backup management for the backed up item. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// SourceResourceID - ARM ID of the resource to be backed up.
	SourceResourceID *string `json:"sourceResourceId,omitempty"`
	// ItemID - ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemID *string `json:"itemId,omitempty"`
	// PolicyID - ID of the backup policy with which this item is backed up.
	PolicyID *string `json:"policyId,omitempty"`
	// ProtectionState - Backup state of this backup item. Possible values include: 'ProtectionStatusInvalid', 'ProtectionStatusNotProtected', 'ProtectionStatusProtecting', 'ProtectionStatusProtected', 'ProtectionStatusProtectionFailed'
	ProtectionState ProtectionStatus `json:"protectionState,omitempty"`
	// ProtectionIntentItemType - Possible values include: 'ProtectionIntentItemTypeProtectionIntent', 'ProtectionIntentItemTypeRecoveryServiceVaultItem', 'ProtectionIntentItemTypeAzureResourceItem', 'ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent', 'ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent'
	ProtectionIntentItemType ProtectionIntentItemType `json:"protectionIntentItemType,omitempty"`
}

// MarshalJSON is the custom marshaler for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) MarshalJSON() ([]byte, error) {
	awsapi.ProtectionIntentItemType = ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent
	objectMap := make(map[string]interface{})
	if awsapi.WorkloadItemType != "" {
		objectMap["workloadItemType"] = awsapi.WorkloadItemType
	}
	if awsapi.BackupManagementType != "" {
		objectMap["backupManagementType"] = awsapi.BackupManagementType
	}
	if awsapi.SourceResourceID != nil {
		objectMap["sourceResourceId"] = awsapi.SourceResourceID
	}
	if awsapi.ItemID != nil {
		objectMap["itemId"] = awsapi.ItemID
	}
	if awsapi.PolicyID != nil {
		objectMap["policyId"] = awsapi.PolicyID
	}
	if awsapi.ProtectionState != "" {
		objectMap["protectionState"] = awsapi.ProtectionState
	}
	if awsapi.ProtectionIntentItemType != "" {
		objectMap["protectionIntentItemType"] = awsapi.ProtectionIntentItemType
	}
	return json.Marshal(objectMap)
}

// AsAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsAzureRecoveryServiceVaultProtectionIntent() (*AzureRecoveryServiceVaultProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsBasicAzureRecoveryServiceVaultProtectionIntent() (BasicAzureRecoveryServiceVaultProtectionIntent, bool) {
	return &awsapi, true
}

// AsAzureResourceProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsAzureResourceProtectionIntent() (*AzureResourceProtectionIntent, bool) {
	return nil, false
}

// AsAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsBasicAzureWorkloadAutoProtectionIntent() (BasicAzureWorkloadAutoProtectionIntent, bool) {
	return &awsapi, true
}

// AsAzureWorkloadSQLAutoProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool) {
	return &awsapi, true
}

// AsProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsProtectionIntent() (*ProtectionIntent, bool) {
	return nil, false
}

// AsBasicProtectionIntent is the BasicProtectionIntent implementation for AzureWorkloadSQLAutoProtectionIntent.
func (awsapi AzureWorkloadSQLAutoProtectionIntent) AsBasicProtectionIntent() (BasicProtectionIntent, bool) {
	return &awsapi, true
}

// BMSBackupSummariesQueryObject query parameters to fetch backup summaries.
type BMSBackupSummariesQueryObject struct {
	// Type - Backup management type for this container. Possible values include: 'TypeInvalid', 'TypeBackupProtectedItemCountSummary', 'TypeBackupProtectionContainerCountSummary'
	Type Type `json:"type,omitempty"`
}

// DpmErrorInfo DPM workload-specific error information.
type DpmErrorInfo struct {
	// ErrorString - Localized error string.
	ErrorString *string `json:"errorString,omitempty"`
	// Recommendations - List of localized recommendations for above error code.
	Recommendations *[]string `json:"recommendations,omitempty"`
}

// DpmJob DPM workload-specific job object.
type DpmJob struct {
	// Duration - Time elapsed for job.
	Duration *string `json:"duration,omitempty"`
	// DpmServerName - DPM server name managing the backup item or backup job.
	DpmServerName *string `json:"dpmServerName,omitempty"`
	// ContainerName - Name of cluster/server protecting current backup item, if any.
	ContainerName *string `json:"containerName,omitempty"`
	// ContainerType - Type of container.
	ContainerType *string `json:"containerType,omitempty"`
	// WorkloadType - Type of backup item.
	WorkloadType *string `json:"workloadType,omitempty"`
	// ActionsInfo - The state/actions applicable on this job like cancel/retry.
	ActionsInfo *[]JobSupportedAction `json:"actionsInfo,omitempty"`
	// ErrorDetails - The errors.
	ErrorDetails *[]DpmErrorInfo `json:"errorDetails,omitempty"`
	// ExtendedInfo - Additional information for this job.
	ExtendedInfo *DpmJobExtendedInfo `json:"extendedInfo,omitempty"`
	// EntityFriendlyName - Friendly name of the entity on which the current job is executing.
	EntityFriendlyName *string `json:"entityFriendlyName,omitempty"`
	// BackupManagementType - Backup management type to execute the current job. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// Operation - The operation name.
	Operation *string `json:"operation,omitempty"`
	// Status - Job status.
	Status *string `json:"status,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// ActivityID - ActivityId of job.
	ActivityID *string `json:"activityId,omitempty"`
	// JobType - Possible values include: 'JobTypeJob', 'JobTypeAzureIaaSVMJob', 'JobTypeAzureStorageJob', 'JobTypeAzureWorkloadJob', 'JobTypeDpmJob', 'JobTypeMabJob'
	JobType JobType `json:"jobType,omitempty"`
}

// MarshalJSON is the custom marshaler for DpmJob.
func (dj DpmJob) MarshalJSON() ([]byte, error) {
	dj.JobType = JobTypeDpmJob
	objectMap := make(map[string]interface{})
	if dj.Duration != nil {
		objectMap["duration"] = dj.Duration
	}
	if dj.DpmServerName != nil {
		objectMap["dpmServerName"] = dj.DpmServerName
	}
	if dj.ContainerName != nil {
		objectMap["containerName"] = dj.ContainerName
	}
	if dj.ContainerType != nil {
		objectMap["containerType"] = dj.ContainerType
	}
	if dj.WorkloadType != nil {
		objectMap["workloadType"] = dj.WorkloadType
	}
	if dj.ActionsInfo != nil {
		objectMap["actionsInfo"] = dj.ActionsInfo
	}
	if dj.ErrorDetails != nil {
		objectMap["errorDetails"] = dj.ErrorDetails
	}
	if dj.ExtendedInfo != nil {
		objectMap["extendedInfo"] = dj.ExtendedInfo
	}
	if dj.EntityFriendlyName != nil {
		objectMap["entityFriendlyName"] = dj.EntityFriendlyName
	}
	if dj.BackupManagementType != "" {
		objectMap["backupManagementType"] = dj.BackupManagementType
	}
	if dj.Operation != nil {
		objectMap["operation"] = dj.Operation
	}
	if dj.Status != nil {
		objectMap["status"] = dj.Status
	}
	if dj.StartTime != nil {
		objectMap["startTime"] = dj.StartTime
	}
	if dj.EndTime != nil {
		objectMap["endTime"] = dj.EndTime
	}
	if dj.ActivityID != nil {
		objectMap["activityId"] = dj.ActivityID
	}
	if dj.JobType != "" {
		objectMap["jobType"] = dj.JobType
	}
	return json.Marshal(objectMap)
}

// AsAzureIaaSVMJob is the BasicJob implementation for DpmJob.
func (dj DpmJob) AsAzureIaaSVMJob() (*AzureIaaSVMJob, bool) {
	return nil, false
}

// AsAzureStorageJob is the BasicJob implementation for DpmJob.
func (dj DpmJob) AsAzureStorageJob() (*AzureStorageJob, bool) {
	return nil, false
}

// AsAzureWorkloadJob is the BasicJob implementation for DpmJob.
func (dj DpmJob) AsAzureWorkloadJob() (*AzureWorkloadJob, bool) {
	return nil, false
}

// AsDpmJob is the BasicJob implementation for DpmJob.
func (dj DpmJob) AsDpmJob() (*DpmJob, bool) {
	return &dj, true
}

// AsMabJob is the BasicJob implementation for DpmJob.
func (dj DpmJob) AsMabJob() (*MabJob, bool) {
	return nil, false
}

// AsJob is the BasicJob implementation for DpmJob.
func (dj DpmJob) AsJob() (*Job, bool) {
	return nil, false
}

// AsBasicJob is the BasicJob implementation for DpmJob.
func (dj DpmJob) AsBasicJob() (BasicJob, bool) {
	return &dj, true
}

// DpmJobExtendedInfo additional information on the DPM workload-specific job.
type DpmJobExtendedInfo struct {
	// TasksList - List of tasks associated with this job.
	TasksList *[]DpmJobTaskDetails `json:"tasksList,omitempty"`
	// PropertyBag - The job properties.
	PropertyBag map[string]*string `json:"propertyBag"`
	// DynamicErrorMessage - Non localized error message on job execution.
	DynamicErrorMessage *string `json:"dynamicErrorMessage,omitempty"`
}

// MarshalJSON is the custom marshaler for DpmJobExtendedInfo.
func (djei DpmJobExtendedInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if djei.TasksList != nil {
		objectMap["tasksList"] = djei.TasksList
	}
	if djei.PropertyBag != nil {
		objectMap["propertyBag"] = djei.PropertyBag
	}
	if djei.DynamicErrorMessage != nil {
		objectMap["dynamicErrorMessage"] = djei.DynamicErrorMessage
	}
	return json.Marshal(objectMap)
}

// DpmJobTaskDetails DPM workload-specific job task details.
type DpmJobTaskDetails struct {
	// TaskID - The task display name.
	TaskID *string `json:"taskId,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// Duration - Time elapsed for task.
	Duration *string `json:"duration,omitempty"`
	// Status - The status.
	Status *string `json:"status,omitempty"`
}

// BasicFeatureSupportRequest base class for feature request
type BasicFeatureSupportRequest interface {
	AsAzureBackupGoalFeatureSupportRequest() (*AzureBackupGoalFeatureSupportRequest, bool)
	AsAzureVMResourceFeatureSupportRequest() (*AzureVMResourceFeatureSupportRequest, bool)
	AsFeatureSupportRequest() (*FeatureSupportRequest, bool)
}

// FeatureSupportRequest base class for feature request
type FeatureSupportRequest struct {
	// FeatureType - Possible values include: 'FeatureTypeFeatureSupportRequest', 'FeatureTypeAzureBackupGoals', 'FeatureTypeAzureVMResourceBackup'
	FeatureType FeatureType `json:"featureType,omitempty"`
}

func unmarshalBasicFeatureSupportRequest(body []byte) (BasicFeatureSupportRequest, error) {
	var m map[string]interface{}
	err := json.Unmarshal(body, &m)
	if err != nil {
		return nil, err
	}

	switch m["featureType"] {
	case string(FeatureTypeAzureBackupGoals):
		var abgfsr AzureBackupGoalFeatureSupportRequest
		err := json.Unmarshal(body, &abgfsr)
		return abgfsr, err
	case string(FeatureTypeAzureVMResourceBackup):
		var avrfsr AzureVMResourceFeatureSupportRequest
		err := json.Unmarshal(body, &avrfsr)
		return avrfsr, err
	default:
		var fsr FeatureSupportRequest
		err := json.Unmarshal(body, &fsr)
		return fsr, err
	}
}
func unmarshalBasicFeatureSupportRequestArray(body []byte) ([]BasicFeatureSupportRequest, error) {
	var rawMessages []*json.RawMessage
	err := json.Unmarshal(body, &rawMessages)
	if err != nil {
		return nil, err
	}

	fsrArray := make([]BasicFeatureSupportRequest, len(rawMessages))

	for index, rawMessage := range rawMessages {
		fsr, err := unmarshalBasicFeatureSupportRequest(*rawMessage)
		if err != nil {
			return nil, err
		}
		fsrArray[index] = fsr
	}
	return fsrArray, nil
}

// MarshalJSON is the custom marshaler for FeatureSupportRequest.
func (fsr FeatureSupportRequest) MarshalJSON() ([]byte, error) {
	fsr.FeatureType = FeatureTypeFeatureSupportRequest
	objectMap := make(map[string]interface{})
	if fsr.FeatureType != "" {
		objectMap["featureType"] = fsr.FeatureType
	}
	return json.Marshal(objectMap)
}

// AsAzureBackupGoalFeatureSupportRequest is the BasicFeatureSupportRequest implementation for FeatureSupportRequest.
func (fsr FeatureSupportRequest) AsAzureBackupGoalFeatureSupportRequest() (*AzureBackupGoalFeatureSupportRequest, bool) {
	return nil, false
}

// AsAzureVMResourceFeatureSupportRequest is the BasicFeatureSupportRequest implementation for FeatureSupportRequest.
func (fsr FeatureSupportRequest) AsAzureVMResourceFeatureSupportRequest() (*AzureVMResourceFeatureSupportRequest, bool) {
	return nil, false
}

// AsFeatureSupportRequest is the BasicFeatureSupportRequest implementation for FeatureSupportRequest.
func (fsr FeatureSupportRequest) AsFeatureSupportRequest() (*FeatureSupportRequest, bool) {
	return &fsr, true
}

// AsBasicFeatureSupportRequest is the BasicFeatureSupportRequest implementation for FeatureSupportRequest.
func (fsr FeatureSupportRequest) AsBasicFeatureSupportRequest() (BasicFeatureSupportRequest, bool) {
	return &fsr, true
}

// InstantRPAdditionalDetails ...
type InstantRPAdditionalDetails struct {
	AzureBackupRGNamePrefix *string `json:"azureBackupRGNamePrefix,omitempty"`
	AzureBackupRGNameSuffix *string `json:"azureBackupRGNameSuffix,omitempty"`
}

// BasicJob defines workload agnostic properties for a job.
type BasicJob interface {
	AsAzureIaaSVMJob() (*AzureIaaSVMJob, bool)
	AsAzureStorageJob() (*AzureStorageJob, bool)
	AsAzureWorkloadJob() (*AzureWorkloadJob, bool)
	AsDpmJob() (*DpmJob, bool)
	AsMabJob() (*MabJob, bool)
	AsJob() (*Job, bool)
}

// Job defines workload agnostic properties for a job.
type Job struct {
	// EntityFriendlyName - Friendly name of the entity on which the current job is executing.
	EntityFriendlyName *string `json:"entityFriendlyName,omitempty"`
	// BackupManagementType - Backup management type to execute the current job. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// Operation - The operation name.
	Operation *string `json:"operation,omitempty"`
	// Status - Job status.
	Status *string `json:"status,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// ActivityID - ActivityId of job.
	ActivityID *string `json:"activityId,omitempty"`
	// JobType - Possible values include: 'JobTypeJob', 'JobTypeAzureIaaSVMJob', 'JobTypeAzureStorageJob', 'JobTypeAzureWorkloadJob', 'JobTypeDpmJob', 'JobTypeMabJob'
	JobType JobType `json:"jobType,omitempty"`
}

func unmarshalBasicJob(body []byte) (BasicJob, error) {
	var m map[string]interface{}
	err := json.Unmarshal(body, &m)
	if err != nil {
		return nil, err
	}

	switch m["jobType"] {
	case string(JobTypeAzureIaaSVMJob):
		var aisj AzureIaaSVMJob
		err := json.Unmarshal(body, &aisj)
		return aisj, err
	case string(JobTypeAzureStorageJob):
		var asj AzureStorageJob
		err := json.Unmarshal(body, &asj)
		return asj, err
	case string(JobTypeAzureWorkloadJob):
		var awj AzureWorkloadJob
		err := json.Unmarshal(body, &awj)
		return awj, err
	case string(JobTypeDpmJob):
		var dj DpmJob
		err := json.Unmarshal(body, &dj)
		return dj, err
	case string(JobTypeMabJob):
		var mj MabJob
		err := json.Unmarshal(body, &mj)
		return mj, err
	default:
		var j Job
		err := json.Unmarshal(body, &j)
		return j, err
	}
}
func unmarshalBasicJobArray(body []byte) ([]BasicJob, error) {
	var rawMessages []*json.RawMessage
	err := json.Unmarshal(body, &rawMessages)
	if err != nil {
		return nil, err
	}

	jArray := make([]BasicJob, len(rawMessages))

	for index, rawMessage := range rawMessages {
		j, err := unmarshalBasicJob(*rawMessage)
		if err != nil {
			return nil, err
		}
		jArray[index] = j
	}
	return jArray, nil
}

// MarshalJSON is the custom marshaler for Job.
func (j Job) MarshalJSON() ([]byte, error) {
	j.JobType = JobTypeJob
	objectMap := make(map[string]interface{})
	if j.EntityFriendlyName != nil {
		objectMap["entityFriendlyName"] = j.EntityFriendlyName
	}
	if j.BackupManagementType != "" {
		objectMap["backupManagementType"] = j.BackupManagementType
	}
	if j.Operation != nil {
		objectMap["operation"] = j.Operation
	}
	if j.Status != nil {
		objectMap["status"] = j.Status
	}
	if j.StartTime != nil {
		objectMap["startTime"] = j.StartTime
	}
	if j.EndTime != nil {
		objectMap["endTime"] = j.EndTime
	}
	if j.ActivityID != nil {
		objectMap["activityId"] = j.ActivityID
	}
	if j.JobType != "" {
		objectMap["jobType"] = j.JobType
	}
	return json.Marshal(objectMap)
}

// AsAzureIaaSVMJob is the BasicJob implementation for Job.
func (j Job) AsAzureIaaSVMJob() (*AzureIaaSVMJob, bool) {
	return nil, false
}

// AsAzureStorageJob is the BasicJob implementation for Job.
func (j Job) AsAzureStorageJob() (*AzureStorageJob, bool) {
	return nil, false
}

// AsAzureWorkloadJob is the BasicJob implementation for Job.
func (j Job) AsAzureWorkloadJob() (*AzureWorkloadJob, bool) {
	return nil, false
}

// AsDpmJob is the BasicJob implementation for Job.
func (j Job) AsDpmJob() (*DpmJob, bool) {
	return nil, false
}

// AsMabJob is the BasicJob implementation for Job.
func (j Job) AsMabJob() (*MabJob, bool) {
	return nil, false
}

// AsJob is the BasicJob implementation for Job.
func (j Job) AsJob() (*Job, bool) {
	return &j, true
}

// AsBasicJob is the BasicJob implementation for Job.
func (j Job) AsBasicJob() (BasicJob, bool) {
	return &j, true
}

// JobResource defines workload agnostic properties for a job.
type JobResource struct {
	// Properties - JobResource properties
	Properties BasicJob `json:"properties,omitempty"`
	// ID - READ-ONLY; Resource Id represents the complete path to the resource.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; Resource name associated with the resource.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type *string `json:"type,omitempty"`
	// Location - Resource location.
	Location *string `json:"location,omitempty"`
	// Tags - Resource tags.
	Tags map[string]*string `json:"tags"`
	// ETag - Optional ETag.
	ETag *string `json:"eTag,omitempty"`
}

// MarshalJSON is the custom marshaler for JobResource.
func (jr JobResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap["properties"] = jr.Properties
	if jr.Location != nil {
		objectMap["location"] = jr.Location
	}
	if jr.Tags != nil {
		objectMap["tags"] = jr.Tags
	}
	if jr.ETag != nil {
		objectMap["eTag"] = jr.ETag
	}
	return json.Marshal(objectMap)
}

// UnmarshalJSON is the custom unmarshaler for JobResource struct.
func (jr *JobResource) UnmarshalJSON(body []byte) error {
	var m map[string]*json.RawMessage
	err := json.Unmarshal(body, &m)
	if err != nil {
		return err
	}
	for k, v := range m {
		switch k {
		case "properties":
			if v != nil {
				properties, err := unmarshalBasicJob(*v)
				if err != nil {
					return err
				}
				jr.Properties = properties
			}
		case "id":
			if v != nil {
				var ID string
				err = json.Unmarshal(*v, &ID)
				if err != nil {
					return err
				}
				jr.ID = &ID
			}
		case "name":
			if v != nil {
				var name string
				err = json.Unmarshal(*v, &name)
				if err != nil {
					return err
				}
				jr.Name = &name
			}
		case "type":
			if v != nil {
				var typeVar string
				err = json.Unmarshal(*v, &typeVar)
				if err != nil {
					return err
				}
				jr.Type = &typeVar
			}
		case "location":
			if v != nil {
				var location string
				err = json.Unmarshal(*v, &location)
				if err != nil {
					return err
				}
				jr.Location = &location
			}
		case "tags":
			if v != nil {
				var tags map[string]*string
				err = json.Unmarshal(*v, &tags)
				if err != nil {
					return err
				}
				jr.Tags = tags
			}
		case "eTag":
			if v != nil {
				var eTag string
				err = json.Unmarshal(*v, &eTag)
				if err != nil {
					return err
				}
				jr.ETag = &eTag
			}
		}
	}

	return nil
}

// MabErrorInfo MAB workload-specific error information.
type MabErrorInfo struct {
	// ErrorString - READ-ONLY; Localized error string.
	ErrorString *string `json:"errorString,omitempty"`
	// Recommendations - READ-ONLY; List of localized recommendations.
	Recommendations *[]string `json:"recommendations,omitempty"`
}

// MarshalJSON is the custom marshaler for MabErrorInfo.
func (mei MabErrorInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	return json.Marshal(objectMap)
}

// MabJob MAB workload-specific job.
type MabJob struct {
	// Duration - Time taken by job to run.
	Duration *string `json:"duration,omitempty"`
	// ActionsInfo - The state/actions applicable on jobs like cancel/retry.
	ActionsInfo *[]JobSupportedAction `json:"actionsInfo,omitempty"`
	// MabServerName - Name of server protecting the DS.
	MabServerName *string `json:"mabServerName,omitempty"`
	// MabServerType - Server type of MAB container. Possible values include: 'MabServerTypeInvalid', 'MabServerTypeUnknown', 'MabServerTypeIaasVMContainer', 'MabServerTypeIaasVMServiceContainer', 'MabServerTypeDPMContainer', 'MabServerTypeAzureBackupServerContainer', 'MabServerTypeMABContainer', 'MabServerTypeCluster', 'MabServerTypeAzureSQLContainer', 'MabServerTypeWindows', 'MabServerTypeVCenter', 'MabServerTypeVMAppContainer', 'MabServerTypeSQLAGWorkLoadContainer', 'MabServerTypeStorageContainer', 'MabServerTypeGenericContainer'
	MabServerType MabServerType `json:"mabServerType,omitempty"`
	// WorkloadType - Workload type of backup item. Possible values include: 'WorkloadTypeInvalid', 'WorkloadTypeVM', 'WorkloadTypeFileFolder', 'WorkloadTypeAzureSQLDb', 'WorkloadTypeSQLDB', 'WorkloadTypeExchange', 'WorkloadTypeSharepoint', 'WorkloadTypeVMwareVM', 'WorkloadTypeSystemState', 'WorkloadTypeClient', 'WorkloadTypeGenericDataSource', 'WorkloadTypeSQLDataBase', 'WorkloadTypeAzureFileShare', 'WorkloadTypeSAPHanaDatabase', 'WorkloadTypeSAPAseDatabase'
	WorkloadType WorkloadType `json:"workloadType,omitempty"`
	// ErrorDetails - The errors.
	ErrorDetails *[]MabErrorInfo `json:"errorDetails,omitempty"`
	// ExtendedInfo - Additional information on the job.
	ExtendedInfo *MabJobExtendedInfo `json:"extendedInfo,omitempty"`
	// EntityFriendlyName - Friendly name of the entity on which the current job is executing.
	EntityFriendlyName *string `json:"entityFriendlyName,omitempty"`
	// BackupManagementType - Backup management type to execute the current job. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// Operation - The operation name.
	Operation *string `json:"operation,omitempty"`
	// Status - Job status.
	Status *string `json:"status,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// ActivityID - ActivityId of job.
	ActivityID *string `json:"activityId,omitempty"`
	// JobType - Possible values include: 'JobTypeJob', 'JobTypeAzureIaaSVMJob', 'JobTypeAzureStorageJob', 'JobTypeAzureWorkloadJob', 'JobTypeDpmJob', 'JobTypeMabJob'
	JobType JobType `json:"jobType,omitempty"`
}

// MarshalJSON is the custom marshaler for MabJob.
func (mj MabJob) MarshalJSON() ([]byte, error) {
	mj.JobType = JobTypeMabJob
	objectMap := make(map[string]interface{})
	if mj.Duration != nil {
		objectMap["duration"] = mj.Duration
	}
	if mj.ActionsInfo != nil {
		objectMap["actionsInfo"] = mj.ActionsInfo
	}
	if mj.MabServerName != nil {
		objectMap["mabServerName"] = mj.MabServerName
	}
	if mj.MabServerType != "" {
		objectMap["mabServerType"] = mj.MabServerType
	}
	if mj.WorkloadType != "" {
		objectMap["workloadType"] = mj.WorkloadType
	}
	if mj.ErrorDetails != nil {
		objectMap["errorDetails"] = mj.ErrorDetails
	}
	if mj.ExtendedInfo != nil {
		objectMap["extendedInfo"] = mj.ExtendedInfo
	}
	if mj.EntityFriendlyName != nil {
		objectMap["entityFriendlyName"] = mj.EntityFriendlyName
	}
	if mj.BackupManagementType != "" {
		objectMap["backupManagementType"] = mj.BackupManagementType
	}
	if mj.Operation != nil {
		objectMap["operation"] = mj.Operation
	}
	if mj.Status != nil {
		objectMap["status"] = mj.Status
	}
	if mj.StartTime != nil {
		objectMap["startTime"] = mj.StartTime
	}
	if mj.EndTime != nil {
		objectMap["endTime"] = mj.EndTime
	}
	if mj.ActivityID != nil {
		objectMap["activityId"] = mj.ActivityID
	}
	if mj.JobType != "" {
		objectMap["jobType"] = mj.JobType
	}
	return json.Marshal(objectMap)
}

// AsAzureIaaSVMJob is the BasicJob implementation for MabJob.
func (mj MabJob) AsAzureIaaSVMJob() (*AzureIaaSVMJob, bool) {
	return nil, false
}

// AsAzureStorageJob is the BasicJob implementation for MabJob.
func (mj MabJob) AsAzureStorageJob() (*AzureStorageJob, bool) {
	return nil, false
}

// AsAzureWorkloadJob is the BasicJob implementation for MabJob.
func (mj MabJob) AsAzureWorkloadJob() (*AzureWorkloadJob, bool) {
	return nil, false
}

// AsDpmJob is the BasicJob implementation for MabJob.
func (mj MabJob) AsDpmJob() (*DpmJob, bool) {
	return nil, false
}

// AsMabJob is the BasicJob implementation for MabJob.
func (mj MabJob) AsMabJob() (*MabJob, bool) {
	return &mj, true
}

// AsJob is the BasicJob implementation for MabJob.
func (mj MabJob) AsJob() (*Job, bool) {
	return nil, false
}

// AsBasicJob is the BasicJob implementation for MabJob.
func (mj MabJob) AsBasicJob() (BasicJob, bool) {
	return &mj, true
}

// MabJobExtendedInfo additional information for the MAB workload-specific job.
type MabJobExtendedInfo struct {
	// TasksList - List of tasks for this job.
	TasksList *[]MabJobTaskDetails `json:"tasksList,omitempty"`
	// PropertyBag - The job properties.
	PropertyBag map[string]*string `json:"propertyBag"`
	// DynamicErrorMessage - Non localized error message specific to this job.
	DynamicErrorMessage *string `json:"dynamicErrorMessage,omitempty"`
}

// MarshalJSON is the custom marshaler for MabJobExtendedInfo.
func (mjei MabJobExtendedInfo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if mjei.TasksList != nil {
		objectMap["tasksList"] = mjei.TasksList
	}
	if mjei.PropertyBag != nil {
		objectMap["propertyBag"] = mjei.PropertyBag
	}
	if mjei.DynamicErrorMessage != nil {
		objectMap["dynamicErrorMessage"] = mjei.DynamicErrorMessage
	}
	return json.Marshal(objectMap)
}

// MabJobTaskDetails MAB workload-specific job task details.
type MabJobTaskDetails struct {
	// TaskID - The task display name.
	TaskID *string `json:"taskId,omitempty"`
	// StartTime - The start time.
	StartTime *date.Time `json:"startTime,omitempty"`
	// EndTime - The end time.
	EndTime *date.Time `json:"endTime,omitempty"`
	// Duration - Time elapsed for task.
	Duration *string `json:"duration,omitempty"`
	// Status - The status.
	Status *string `json:"status,omitempty"`
}

// ManagementUsage backup management usages of a vault.
type ManagementUsage struct {
	// Unit - Unit of the usage. Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond', 'BytesPerSecond'
	Unit UsagesUnit `json:"unit,omitempty"`
	// QuotaPeriod - Quota period of usage.
	QuotaPeriod *string `json:"quotaPeriod,omitempty"`
	// NextResetTime - Next reset time of usage.
	NextResetTime *date.Time `json:"nextResetTime,omitempty"`
	// CurrentValue - Current value of usage.
	CurrentValue *int64 `json:"currentValue,omitempty"`
	// Limit - Limit of usage.
	Limit *int64 `json:"limit,omitempty"`
	// Name - Name of usage.
	Name *NameInfo `json:"name,omitempty"`
}

// ManagementUsageList backup management usage for vault.
type ManagementUsageList struct {
	autorest.Response `json:"-"`
	// Value - The list of backup management usages for the given vault.
	Value *[]ManagementUsage `json:"value,omitempty"`
}

// NameInfo the name of usage.
type NameInfo struct {
	// Value - Value of usage.
	Value *string `json:"value,omitempty"`
	// LocalizedValue - Localized value of usage.
	LocalizedValue *string `json:"localizedValue,omitempty"`
}

// PreValidateEnableBackupRequest contract to validate if backup can be enabled on the given resource in a
// given vault and given configuration.
// It will validate followings
// 1. Vault capacity
// 2. VM is already protected
// 3. Any VM related configuration passed in properties.
type PreValidateEnableBackupRequest struct {
	// ResourceType - ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSQLDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
	ResourceType DataSourceType `json:"resourceType,omitempty"`
	// ResourceID - ARM Virtual Machine Id
	ResourceID *string `json:"resourceId,omitempty"`
	// VaultID - ARM id of the Recovery Services Vault
	VaultID *string `json:"vaultId,omitempty"`
	// Properties - Configuration of VM if any needs to be validated like OS type etc
	Properties *string `json:"properties,omitempty"`
}

// PreValidateEnableBackupResponse response contract for enable backup validation request
type PreValidateEnableBackupResponse struct {
	autorest.Response `json:"-"`
	// Status - Validation Status. Possible values include: 'ValidationStatusInvalid', 'ValidationStatusSucceeded', 'ValidationStatusFailed'
	Status ValidationStatus `json:"status,omitempty"`
	// ErrorCode - Response error code
	ErrorCode *string `json:"errorCode,omitempty"`
	// ErrorMessage - Response error message
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Recommendation - Recommended action for user
	Recommendation *string `json:"recommendation,omitempty"`
	// ContainerName - Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;rgname;vmname. This is required
	// for portal
	ContainerName *string `json:"containerName,omitempty"`
	// ProtectedItemName - Specifies the product specific ds name. E.g. vm;iaasvmcontainer;rgname;vmname. This is required for portal
	ProtectedItemName *string `json:"protectedItemName,omitempty"`
}

// BasicProtectionIntent base class for backup ProtectionIntent.
type BasicProtectionIntent interface {
	AsAzureRecoveryServiceVaultProtectionIntent() (*AzureRecoveryServiceVaultProtectionIntent, bool)
	AsBasicAzureRecoveryServiceVaultProtectionIntent() (BasicAzureRecoveryServiceVaultProtectionIntent, bool)
	AsAzureResourceProtectionIntent() (*AzureResourceProtectionIntent, bool)
	AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool)
	AsBasicAzureWorkloadAutoProtectionIntent() (BasicAzureWorkloadAutoProtectionIntent, bool)
	AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool)
	AsProtectionIntent() (*ProtectionIntent, bool)
}

// ProtectionIntent base class for backup ProtectionIntent.
type ProtectionIntent struct {
	// BackupManagementType - Type of backup management for the backed up item. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// SourceResourceID - ARM ID of the resource to be backed up.
	SourceResourceID *string `json:"sourceResourceId,omitempty"`
	// ItemID - ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemID *string `json:"itemId,omitempty"`
	// PolicyID - ID of the backup policy with which this item is backed up.
	PolicyID *string `json:"policyId,omitempty"`
	// ProtectionState - Backup state of this backup item. Possible values include: 'ProtectionStatusInvalid', 'ProtectionStatusNotProtected', 'ProtectionStatusProtecting', 'ProtectionStatusProtected', 'ProtectionStatusProtectionFailed'
	ProtectionState ProtectionStatus `json:"protectionState,omitempty"`
	// ProtectionIntentItemType - Possible values include: 'ProtectionIntentItemTypeProtectionIntent', 'ProtectionIntentItemTypeRecoveryServiceVaultItem', 'ProtectionIntentItemTypeAzureResourceItem', 'ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent', 'ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent'
	ProtectionIntentItemType ProtectionIntentItemType `json:"protectionIntentItemType,omitempty"`
}

func unmarshalBasicProtectionIntent(body []byte) (BasicProtectionIntent, error) {
	var m map[string]interface{}
	err := json.Unmarshal(body, &m)
	if err != nil {
		return nil, err
	}

	switch m["protectionIntentItemType"] {
	case string(ProtectionIntentItemTypeRecoveryServiceVaultItem):
		var arsvpi AzureRecoveryServiceVaultProtectionIntent
		err := json.Unmarshal(body, &arsvpi)
		return arsvpi, err
	case string(ProtectionIntentItemTypeAzureResourceItem):
		var arpi AzureResourceProtectionIntent
		err := json.Unmarshal(body, &arpi)
		return arpi, err
	case string(ProtectionIntentItemTypeAzureWorkloadAutoProtectionIntent):
		var awapi AzureWorkloadAutoProtectionIntent
		err := json.Unmarshal(body, &awapi)
		return awapi, err
	case string(ProtectionIntentItemTypeAzureWorkloadSQLAutoProtectionIntent):
		var awsapi AzureWorkloadSQLAutoProtectionIntent
		err := json.Unmarshal(body, &awsapi)
		return awsapi, err
	default:
		var pi ProtectionIntent
		err := json.Unmarshal(body, &pi)
		return pi, err
	}
}
func unmarshalBasicProtectionIntentArray(body []byte) ([]BasicProtectionIntent, error) {
	var rawMessages []*json.RawMessage
	err := json.Unmarshal(body, &rawMessages)
	if err != nil {
		return nil, err
	}

	piArray := make([]BasicProtectionIntent, len(rawMessages))

	for index, rawMessage := range rawMessages {
		pi, err := unmarshalBasicProtectionIntent(*rawMessage)
		if err != nil {
			return nil, err
		}
		piArray[index] = pi
	}
	return piArray, nil
}

// MarshalJSON is the custom marshaler for ProtectionIntent.
func (pi ProtectionIntent) MarshalJSON() ([]byte, error) {
	pi.ProtectionIntentItemType = ProtectionIntentItemTypeProtectionIntent
	objectMap := make(map[string]interface{})
	if pi.BackupManagementType != "" {
		objectMap["backupManagementType"] = pi.BackupManagementType
	}
	if pi.SourceResourceID != nil {
		objectMap["sourceResourceId"] = pi.SourceResourceID
	}
	if pi.ItemID != nil {
		objectMap["itemId"] = pi.ItemID
	}
	if pi.PolicyID != nil {
		objectMap["policyId"] = pi.PolicyID
	}
	if pi.ProtectionState != "" {
		objectMap["protectionState"] = pi.ProtectionState
	}
	if pi.ProtectionIntentItemType != "" {
		objectMap["protectionIntentItemType"] = pi.ProtectionIntentItemType
	}
	return json.Marshal(objectMap)
}

// AsAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsAzureRecoveryServiceVaultProtectionIntent() (*AzureRecoveryServiceVaultProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureRecoveryServiceVaultProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsBasicAzureRecoveryServiceVaultProtectionIntent() (BasicAzureRecoveryServiceVaultProtectionIntent, bool) {
	return nil, false
}

// AsAzureResourceProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsAzureResourceProtectionIntent() (*AzureResourceProtectionIntent, bool) {
	return nil, false
}

// AsAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsAzureWorkloadAutoProtectionIntent() (*AzureWorkloadAutoProtectionIntent, bool) {
	return nil, false
}

// AsBasicAzureWorkloadAutoProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsBasicAzureWorkloadAutoProtectionIntent() (BasicAzureWorkloadAutoProtectionIntent, bool) {
	return nil, false
}

// AsAzureWorkloadSQLAutoProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsAzureWorkloadSQLAutoProtectionIntent() (*AzureWorkloadSQLAutoProtectionIntent, bool) {
	return nil, false
}

// AsProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsProtectionIntent() (*ProtectionIntent, bool) {
	return &pi, true
}

// AsBasicProtectionIntent is the BasicProtectionIntent implementation for ProtectionIntent.
func (pi ProtectionIntent) AsBasicProtectionIntent() (BasicProtectionIntent, bool) {
	return &pi, true
}

// ProtectionIntentQueryObject filters to list protection intent.
type ProtectionIntentQueryObject struct {
	// BackupManagementType - Backup management type for the backed up item. Possible values include: 'ManagementTypeInvalid', 'ManagementTypeAzureIaasVM', 'ManagementTypeMAB', 'ManagementTypeDPM', 'ManagementTypeAzureBackupServer', 'ManagementTypeAzureSQL', 'ManagementTypeAzureStorage', 'ManagementTypeAzureWorkload', 'ManagementTypeDefaultBackup'
	BackupManagementType ManagementType `json:"backupManagementType,omitempty"`
	// ItemType - Type of workload this item represents. Possible values include: 'IntentItemTypeInvalid', 'IntentItemTypeSQLInstance', 'IntentItemTypeSQLAvailabilityGroupContainer'
	ItemType IntentItemType `json:"itemType,omitempty"`
	// ParentName - Parent name of the intent
	ParentName *string `json:"parentName,omitempty"`
	// ItemName - Item name of the intent
	ItemName *string `json:"itemName,omitempty"`
}

// ProtectionIntentResource base class for backup ProtectionIntent.
type ProtectionIntentResource struct {
	autorest.Response `json:"-"`
	// Properties - ProtectionIntentResource properties
	Properties BasicProtectionIntent `json:"properties,omitempty"`
	// ID - READ-ONLY; Resource Id represents the complete path to the resource.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; Resource name associated with the resource.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type *string `json:"type,omitempty"`
	// Location - Resource location.
	Location *string `json:"location,omitempty"`
	// Tags - Resource tags.
	Tags map[string]*string `json:"tags"`
	// ETag - Optional ETag.
	ETag *string `json:"eTag,omitempty"`
}

// MarshalJSON is the custom marshaler for ProtectionIntentResource.
func (pir ProtectionIntentResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap["properties"] = pir.Properties
	if pir.Location != nil {
		objectMap["location"] = pir.Location
	}
	if pir.Tags != nil {
		objectMap["tags"] = pir.Tags
	}
	if pir.ETag != nil {
		objectMap["eTag"] = pir.ETag
	}
	return json.Marshal(objectMap)
}

// UnmarshalJSON is the custom unmarshaler for ProtectionIntentResource struct.
func (pir *ProtectionIntentResource) UnmarshalJSON(body []byte) error {
	var m map[string]*json.RawMessage
	err := json.Unmarshal(body, &m)
	if err != nil {
		return err
	}
	for k, v := range m {
		switch k {
		case "properties":
			if v != nil {
				properties, err := unmarshalBasicProtectionIntent(*v)
				if err != nil {
					return err
				}
				pir.Properties = properties
			}
		case "id":
			if v != nil {
				var ID string
				err = json.Unmarshal(*v, &ID)
				if err != nil {
					return err
				}
				pir.ID = &ID
			}
		case "name":
			if v != nil {
				var name string
				err = json.Unmarshal(*v, &name)
				if err != nil {
					return err
				}
				pir.Name = &name
			}
		case "type":
			if v != nil {
				var typeVar string
				err = json.Unmarshal(*v, &typeVar)
				if err != nil {
					return err
				}
				pir.Type = &typeVar
			}
		case "location":
			if v != nil {
				var location string
				err = json.Unmarshal(*v, &location)
				if err != nil {
					return err
				}
				pir.Location = &location
			}
		case "tags":
			if v != nil {
				var tags map[string]*string
				err = json.Unmarshal(*v, &tags)
				if err != nil {
					return err
				}
				pir.Tags = tags
			}
		case "eTag":
			if v != nil {
				var eTag string
				err = json.Unmarshal(*v, &eTag)
				if err != nil {
					return err
				}
				pir.ETag = &eTag
			}
		}
	}

	return nil
}

// ProtectionIntentResourceList list of ProtectionIntent resources
type ProtectionIntentResourceList struct {
	autorest.Response `json:"-"`
	// Value - List of resources.
	Value *[]ProtectionIntentResource `json:"value,omitempty"`
	// NextLink - The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.
	NextLink *string `json:"nextLink,omitempty"`
}

// ProtectionIntentResourceListIterator provides access to a complete listing of ProtectionIntentResource
// values.
type ProtectionIntentResourceListIterator struct {
	i    int
	page ProtectionIntentResourceListPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *ProtectionIntentResourceListIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/ProtectionIntentResourceListIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *ProtectionIntentResourceListIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter ProtectionIntentResourceListIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter ProtectionIntentResourceListIterator) Response() ProtectionIntentResourceList {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter ProtectionIntentResourceListIterator) Value() ProtectionIntentResource {
	if !iter.page.NotDone() {
		return ProtectionIntentResource{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the ProtectionIntentResourceListIterator type.
func NewProtectionIntentResourceListIterator(page ProtectionIntentResourceListPage) ProtectionIntentResourceListIterator {
	return ProtectionIntentResourceListIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (pirl ProtectionIntentResourceList) IsEmpty() bool {
	return pirl.Value == nil || len(*pirl.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (pirl ProtectionIntentResourceList) hasNextLink() bool {
	return pirl.NextLink != nil && len(*pirl.NextLink) != 0
}

// protectionIntentResourceListPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (pirl ProtectionIntentResourceList) protectionIntentResourceListPreparer(ctx context.Context) (*http.Request, error) {
	if !pirl.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(pirl.NextLink)))
}

// ProtectionIntentResourceListPage contains a page of ProtectionIntentResource values.
type ProtectionIntentResourceListPage struct {
	fn   func(context.Context, ProtectionIntentResourceList) (ProtectionIntentResourceList, error)
	pirl ProtectionIntentResourceList
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *ProtectionIntentResourceListPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/ProtectionIntentResourceListPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.pirl)
		if err != nil {
			return err
		}
		page.pirl = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *ProtectionIntentResourceListPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page ProtectionIntentResourceListPage) NotDone() bool {
	return !page.pirl.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page ProtectionIntentResourceListPage) Response() ProtectionIntentResourceList {
	return page.pirl
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page ProtectionIntentResourceListPage) Values() []ProtectionIntentResource {
	if page.pirl.IsEmpty() {
		return nil
	}
	return *page.pirl.Value
}

// Creates a new instance of the ProtectionIntentResourceListPage type.
func NewProtectionIntentResourceListPage(cur ProtectionIntentResourceList, getNextPage func(context.Context, ProtectionIntentResourceList) (ProtectionIntentResourceList, error)) ProtectionIntentResourceListPage {
	return ProtectionIntentResourceListPage{
		fn:   getNextPage,
		pirl: cur,
	}
}

// Resource ARM Resource.
type Resource struct {
	// ID - READ-ONLY; Resource Id represents the complete path to the resource.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; Resource name associated with the resource.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type *string `json:"type,omitempty"`
	// Location - Resource location.
	Location *string `json:"location,omitempty"`
	// Tags - Resource tags.
	Tags map[string]*string `json:"tags"`
	// ETag - Optional ETag.
	ETag *string `json:"eTag,omitempty"`
}

// MarshalJSON is the custom marshaler for Resource.
func (r Resource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if r.Location != nil {
		objectMap["location"] = r.Location
	}
	if r.Tags != nil {
		objectMap["tags"] = r.Tags
	}
	if r.ETag != nil {
		objectMap["eTag"] = r.ETag
	}
	return json.Marshal(objectMap)
}

// ResourceList base for all lists of resources.
type ResourceList struct {
	// NextLink - The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.
	NextLink *string `json:"nextLink,omitempty"`
}

// StatusRequest backupStatus request.
type StatusRequest struct {
	// ResourceType - Container Type - VM, SQLPaaS, DPM, AzureFileShare. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSQLDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
	ResourceType DataSourceType `json:"resourceType,omitempty"`
	// ResourceID - Entire ARM resource id of the resource
	ResourceID *string `json:"resourceId,omitempty"`
	// PoLogicalName - Protectable Item Logical Name
	PoLogicalName *string `json:"poLogicalName,omitempty"`
}

// StatusResponse backupStatus response.
type StatusResponse struct {
	autorest.Response `json:"-"`
	// ProtectionStatus - Specifies whether the container is registered or not. Possible values include: 'ProtectionStatusInvalid', 'ProtectionStatusNotProtected', 'ProtectionStatusProtecting', 'ProtectionStatusProtected', 'ProtectionStatusProtectionFailed'
	ProtectionStatus ProtectionStatus `json:"protectionStatus,omitempty"`
	// VaultID - Specifies the arm resource id of the vault
	VaultID *string `json:"vaultId,omitempty"`
	// FabricName - Specifies the fabric name - Azure or AD. Possible values include: 'FabricNameInvalid', 'FabricNameAzure'
	FabricName FabricName `json:"fabricName,omitempty"`
	// ContainerName - Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;csname;vmname.
	ContainerName *string `json:"containerName,omitempty"`
	// ProtectedItemName - Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname.
	ProtectedItemName *string `json:"protectedItemName,omitempty"`
	// ErrorCode - ErrorCode in case of intent failed
	ErrorCode *string `json:"errorCode,omitempty"`
	// ErrorMessage - ErrorMessage in case of intent failed.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// PolicyName - Specifies the policy name which is used for protection
	PolicyName *string `json:"policyName,omitempty"`
	// RegistrationStatus - Container registration status
	RegistrationStatus *string `json:"registrationStatus,omitempty"`
}
