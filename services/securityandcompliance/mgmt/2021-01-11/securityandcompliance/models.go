package securityandcompliance

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"context"
	"encoding/json"
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/azure"
	"github.com/Azure/go-autorest/autorest/date"
	"github.com/Azure/go-autorest/autorest/to"
	"github.com/Azure/go-autorest/tracing"
	"net/http"
)

// The package's fully qualified name.
const fqdn = "github.com/Azure/azure-sdk-for-go/services/securityandcompliance/mgmt/2021-01-11/securityandcompliance"

// AzureEntityResource the resource model definition for an Azure Resource Manager resource with an etag.
type AzureEntityResource struct {
	// Etag - READ-ONLY; Resource Etag.
	Etag *string `json:"etag,omitempty"`
	// ID - READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

// ErrorDetails error details.
type ErrorDetails struct {
	// Error - Object containing error details.
	Error *ErrorDetailsInternal `json:"error,omitempty"`
}

// ErrorDetailsInternal error details.
type ErrorDetailsInternal struct {
	// Code - READ-ONLY; The error code.
	Code *string `json:"code,omitempty"`
	// Message - READ-ONLY; The error message.
	Message *string `json:"message,omitempty"`
	// Target - READ-ONLY; The target of the particular error.
	Target *string `json:"target,omitempty"`
}

// Operation service REST API operation.
type Operation struct {
	// Name - READ-ONLY; Operation name: {provider}/{resource}/{read | write | action | delete}
	Name *string `json:"name,omitempty"`
	// IsDataAction - READ-ONLY; Indicates whether the operation is a data action
	IsDataAction *bool `json:"isDataAction,omitempty"`
	// Origin - READ-ONLY; Default value is 'user,system'.
	Origin *string `json:"origin,omitempty"`
	// Display - READ-ONLY; The information displayed about the operation.
	Display *OperationDisplay `json:"display,omitempty"`
}

// OperationDisplay the object that represents the operation.
type OperationDisplay struct {
	// Provider - READ-ONLY; Service provider: Microsoft.SecurityAndCompliance
	Provider *string `json:"provider,omitempty"`
	// Resource - READ-ONLY; Resource Type: Services
	Resource *string `json:"resource,omitempty"`
	// Operation - READ-ONLY; Name of the operation
	Operation *string `json:"operation,omitempty"`
	// Description - READ-ONLY; Friendly description for the operation,
	Description *string `json:"description,omitempty"`
}

// OperationListResult a list of service operations. It contains a list of operations and a URL link to get
// the next set of results.
type OperationListResult struct {
	autorest.Response `json:"-"`
	// NextLink - READ-ONLY; The link used to get the next page of service description objects.
	NextLink *string `json:"nextLink,omitempty"`
	// Value - READ-ONLY; A list of service operations supported by the Microsoft.SecurityAndCompliance resource provider.
	Value *[]Operation `json:"value,omitempty"`
}

// OperationListResultIterator provides access to a complete listing of Operation values.
type OperationListResultIterator struct {
	i    int
	page OperationListResultPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *OperationListResultIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/OperationListResultIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *OperationListResultIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter OperationListResultIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter OperationListResultIterator) Response() OperationListResult {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter OperationListResultIterator) Value() Operation {
	if !iter.page.NotDone() {
		return Operation{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the OperationListResultIterator type.
func NewOperationListResultIterator(page OperationListResultPage) OperationListResultIterator {
	return OperationListResultIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (olr OperationListResult) IsEmpty() bool {
	return olr.Value == nil || len(*olr.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (olr OperationListResult) hasNextLink() bool {
	return olr.NextLink != nil && len(*olr.NextLink) != 0
}

// operationListResultPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (olr OperationListResult) operationListResultPreparer(ctx context.Context) (*http.Request, error) {
	if !olr.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(olr.NextLink)))
}

// OperationListResultPage contains a page of Operation values.
type OperationListResultPage struct {
	fn  func(context.Context, OperationListResult) (OperationListResult, error)
	olr OperationListResult
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *OperationListResultPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/OperationListResultPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.olr)
		if err != nil {
			return err
		}
		page.olr = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *OperationListResultPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page OperationListResultPage) NotDone() bool {
	return !page.olr.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page OperationListResultPage) Response() OperationListResult {
	return page.olr
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page OperationListResultPage) Values() []Operation {
	if page.olr.IsEmpty() {
		return nil
	}
	return *page.olr.Value
}

// Creates a new instance of the OperationListResultPage type.
func NewOperationListResultPage(cur OperationListResult, getNextPage func(context.Context, OperationListResult) (OperationListResult, error)) OperationListResultPage {
	return OperationListResultPage{
		fn:  getNextPage,
		olr: cur,
	}
}

// OperationResultsDescription the properties indicating the operation result of an operation on a service.
type OperationResultsDescription struct {
	autorest.Response `json:"-"`
	// ID - READ-ONLY; The ID of the operation returned.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The name of the operation result.
	Name *string `json:"name,omitempty"`
	// Status - READ-ONLY; The status of the operation being performed. Possible values include: 'Canceled', 'Succeeded', 'Failed', 'Requested', 'Running'
	Status OperationResultStatus `json:"status,omitempty"`
	// StartTime - READ-ONLY; The time that the operation was started.
	StartTime *string `json:"startTime,omitempty"`
	// Properties - Additional properties of the operation result.
	Properties interface{} `json:"properties,omitempty"`
}

// MarshalJSON is the custom marshaler for OperationResultsDescription.
func (ord OperationResultsDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if ord.Properties != nil {
		objectMap["properties"] = ord.Properties
	}
	return json.Marshal(objectMap)
}

// PrivateEndpoint the Private Endpoint resource.
type PrivateEndpoint struct {
	// ID - READ-ONLY; The ARM identifier for Private Endpoint
	ID *string `json:"id,omitempty"`
}

// PrivateEndpointConnection the Private Endpoint Connection resource.
type PrivateEndpointConnection struct {
	autorest.Response `json:"-"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// PrivateEndpointConnectionProperties - Resource properties.
	*PrivateEndpointConnectionProperties `json:"properties,omitempty"`
	// ID - READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateEndpointConnection.
func (pec PrivateEndpointConnection) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if pec.SystemData != nil {
		objectMap["systemData"] = pec.SystemData
	}
	if pec.PrivateEndpointConnectionProperties != nil {
		objectMap["properties"] = pec.PrivateEndpointConnectionProperties
	}
	return json.Marshal(objectMap)
}

// UnmarshalJSON is the custom unmarshaler for PrivateEndpointConnection struct.
func (pec *PrivateEndpointConnection) UnmarshalJSON(body []byte) error {
	var m map[string]*json.RawMessage
	err := json.Unmarshal(body, &m)
	if err != nil {
		return err
	}
	for k, v := range m {
		switch k {
		case "systemData":
			if v != nil {
				var systemData SystemData
				err = json.Unmarshal(*v, &systemData)
				if err != nil {
					return err
				}
				pec.SystemData = &systemData
			}
		case "properties":
			if v != nil {
				var privateEndpointConnectionProperties PrivateEndpointConnectionProperties
				err = json.Unmarshal(*v, &privateEndpointConnectionProperties)
				if err != nil {
					return err
				}
				pec.PrivateEndpointConnectionProperties = &privateEndpointConnectionProperties
			}
		case "id":
			if v != nil {
				var ID string
				err = json.Unmarshal(*v, &ID)
				if err != nil {
					return err
				}
				pec.ID = &ID
			}
		case "name":
			if v != nil {
				var name string
				err = json.Unmarshal(*v, &name)
				if err != nil {
					return err
				}
				pec.Name = &name
			}
		case "type":
			if v != nil {
				var typeVar string
				err = json.Unmarshal(*v, &typeVar)
				if err != nil {
					return err
				}
				pec.Type = &typeVar
			}
		}
	}

	return nil
}

// PrivateEndpointConnectionListResult list of private endpoint connection associated with the specified
// storage account
type PrivateEndpointConnectionListResult struct {
	autorest.Response `json:"-"`
	// Value - Array of private endpoint connections
	Value *[]PrivateEndpointConnection `json:"value,omitempty"`
	// NextLink - READ-ONLY; The URL to get the next set of results.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateEndpointConnectionListResult.
func (peclr PrivateEndpointConnectionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if peclr.Value != nil {
		objectMap["value"] = peclr.Value
	}
	return json.Marshal(objectMap)
}

// PrivateEndpointConnectionListResultIterator provides access to a complete listing of
// PrivateEndpointConnection values.
type PrivateEndpointConnectionListResultIterator struct {
	i    int
	page PrivateEndpointConnectionListResultPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *PrivateEndpointConnectionListResultIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateEndpointConnectionListResultIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *PrivateEndpointConnectionListResultIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter PrivateEndpointConnectionListResultIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter PrivateEndpointConnectionListResultIterator) Response() PrivateEndpointConnectionListResult {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter PrivateEndpointConnectionListResultIterator) Value() PrivateEndpointConnection {
	if !iter.page.NotDone() {
		return PrivateEndpointConnection{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the PrivateEndpointConnectionListResultIterator type.
func NewPrivateEndpointConnectionListResultIterator(page PrivateEndpointConnectionListResultPage) PrivateEndpointConnectionListResultIterator {
	return PrivateEndpointConnectionListResultIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (peclr PrivateEndpointConnectionListResult) IsEmpty() bool {
	return peclr.Value == nil || len(*peclr.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (peclr PrivateEndpointConnectionListResult) hasNextLink() bool {
	return peclr.NextLink != nil && len(*peclr.NextLink) != 0
}

// privateEndpointConnectionListResultPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (peclr PrivateEndpointConnectionListResult) privateEndpointConnectionListResultPreparer(ctx context.Context) (*http.Request, error) {
	if !peclr.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(peclr.NextLink)))
}

// PrivateEndpointConnectionListResultPage contains a page of PrivateEndpointConnection values.
type PrivateEndpointConnectionListResultPage struct {
	fn    func(context.Context, PrivateEndpointConnectionListResult) (PrivateEndpointConnectionListResult, error)
	peclr PrivateEndpointConnectionListResult
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *PrivateEndpointConnectionListResultPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateEndpointConnectionListResultPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.peclr)
		if err != nil {
			return err
		}
		page.peclr = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *PrivateEndpointConnectionListResultPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page PrivateEndpointConnectionListResultPage) NotDone() bool {
	return !page.peclr.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page PrivateEndpointConnectionListResultPage) Response() PrivateEndpointConnectionListResult {
	return page.peclr
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page PrivateEndpointConnectionListResultPage) Values() []PrivateEndpointConnection {
	if page.peclr.IsEmpty() {
		return nil
	}
	return *page.peclr.Value
}

// Creates a new instance of the PrivateEndpointConnectionListResultPage type.
func NewPrivateEndpointConnectionListResultPage(cur PrivateEndpointConnectionListResult, getNextPage func(context.Context, PrivateEndpointConnectionListResult) (PrivateEndpointConnectionListResult, error)) PrivateEndpointConnectionListResultPage {
	return PrivateEndpointConnectionListResultPage{
		fn:    getNextPage,
		peclr: cur,
	}
}

// PrivateEndpointConnectionProperties properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionProperties struct {
	// PrivateEndpoint - The resource of private end point.
	PrivateEndpoint *PrivateEndpoint `json:"privateEndpoint,omitempty"`
	// PrivateLinkServiceConnectionState - A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `json:"privateLinkServiceConnectionState,omitempty"`
	// ProvisioningState - The provisioning state of the private endpoint connection resource. Possible values include: 'PrivateEndpointConnectionProvisioningStateSucceeded', 'PrivateEndpointConnectionProvisioningStateCreating', 'PrivateEndpointConnectionProvisioningStateDeleting', 'PrivateEndpointConnectionProvisioningStateFailed'
	ProvisioningState PrivateEndpointConnectionProvisioningState `json:"provisioningState,omitempty"`
}

// PrivateEndpointConnectionsAdtAPICreateOrUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateEndpointConnectionsAdtAPICreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsAdtAPIClient) (PrivateEndpointConnection, error)
}

// PrivateEndpointConnectionsAdtAPIDeleteFuture an abstraction for monitoring and retrieving the results of
// a long-running operation.
type PrivateEndpointConnectionsAdtAPIDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsAdtAPIClient) (autorest.Response, error)
}

// PrivateEndpointConnectionsCompCreateOrUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateEndpointConnectionsCompCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsCompClient) (PrivateEndpointConnection, error)
}

// PrivateEndpointConnectionsCompDeleteFuture an abstraction for monitoring and retrieving the results of a
// long-running operation.
type PrivateEndpointConnectionsCompDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsCompClient) (autorest.Response, error)
}

// PrivateEndpointConnectionsForEDMCreateOrUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateEndpointConnectionsForEDMCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsForEDMClient) (PrivateEndpointConnection, error)
}

// PrivateEndpointConnectionsForEDMDeleteFuture an abstraction for monitoring and retrieving the results of
// a long-running operation.
type PrivateEndpointConnectionsForEDMDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsForEDMClient) (autorest.Response, error)
}

// PrivateEndpointConnectionsForSCCPowershellCreateOrUpdateFuture an abstraction for monitoring and
// retrieving the results of a long-running operation.
type PrivateEndpointConnectionsForSCCPowershellCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsForSCCPowershellClient) (PrivateEndpointConnection, error)
}

// PrivateEndpointConnectionsForSCCPowershellDeleteFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateEndpointConnectionsForSCCPowershellDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsForSCCPowershellClient) (autorest.Response, error)
}

// PrivateEndpointConnectionsSecCreateOrUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateEndpointConnectionsSecCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsSecClient) (PrivateEndpointConnection, error)
}

// PrivateEndpointConnectionsSecDeleteFuture an abstraction for monitoring and retrieving the results of a
// long-running operation.
type PrivateEndpointConnectionsSecDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateEndpointConnectionsSecClient) (autorest.Response, error)
}

// PrivateLinkResource a private link resource
type PrivateLinkResource struct {
	autorest.Response `json:"-"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// PrivateLinkResourceProperties - Resource properties.
	*PrivateLinkResourceProperties `json:"properties,omitempty"`
	// ID - READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkResource.
func (plr PrivateLinkResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plr.SystemData != nil {
		objectMap["systemData"] = plr.SystemData
	}
	if plr.PrivateLinkResourceProperties != nil {
		objectMap["properties"] = plr.PrivateLinkResourceProperties
	}
	return json.Marshal(objectMap)
}

// UnmarshalJSON is the custom unmarshaler for PrivateLinkResource struct.
func (plr *PrivateLinkResource) UnmarshalJSON(body []byte) error {
	var m map[string]*json.RawMessage
	err := json.Unmarshal(body, &m)
	if err != nil {
		return err
	}
	for k, v := range m {
		switch k {
		case "systemData":
			if v != nil {
				var systemData SystemData
				err = json.Unmarshal(*v, &systemData)
				if err != nil {
					return err
				}
				plr.SystemData = &systemData
			}
		case "properties":
			if v != nil {
				var privateLinkResourceProperties PrivateLinkResourceProperties
				err = json.Unmarshal(*v, &privateLinkResourceProperties)
				if err != nil {
					return err
				}
				plr.PrivateLinkResourceProperties = &privateLinkResourceProperties
			}
		case "id":
			if v != nil {
				var ID string
				err = json.Unmarshal(*v, &ID)
				if err != nil {
					return err
				}
				plr.ID = &ID
			}
		case "name":
			if v != nil {
				var name string
				err = json.Unmarshal(*v, &name)
				if err != nil {
					return err
				}
				plr.Name = &name
			}
		case "type":
			if v != nil {
				var typeVar string
				err = json.Unmarshal(*v, &typeVar)
				if err != nil {
					return err
				}
				plr.Type = &typeVar
			}
		}
	}

	return nil
}

// PrivateLinkResourceListResult a list of private link resources
type PrivateLinkResourceListResult struct {
	autorest.Response `json:"-"`
	// Value - Array of private link resources
	Value *[]PrivateLinkResource `json:"value,omitempty"`
	// NextLink - READ-ONLY; The URL to get the next set of results.
	NextLink *string `json:"nextLink,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkResourceListResult.
func (plrlr PrivateLinkResourceListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plrlr.Value != nil {
		objectMap["value"] = plrlr.Value
	}
	return json.Marshal(objectMap)
}

// PrivateLinkResourceProperties properties of a private link resource.
type PrivateLinkResourceProperties struct {
	// GroupID - READ-ONLY; The private link resource group id.
	GroupID *string `json:"groupId,omitempty"`
	// RequiredMembers - READ-ONLY; The private link resource required member names.
	RequiredMembers *[]string `json:"requiredMembers,omitempty"`
	// RequiredZoneNames - The private link resource Private link DNS zone name.
	RequiredZoneNames *[]string `json:"requiredZoneNames,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkResourceProperties.
func (plrp PrivateLinkResourceProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plrp.RequiredZoneNames != nil {
		objectMap["requiredZoneNames"] = plrp.RequiredZoneNames
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServiceConnectionState a collection of information about the state of the connection between
// service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// Status - Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. Possible values include: 'Pending', 'Approved', 'Rejected'
	Status PrivateEndpointServiceConnectionStatus `json:"status,omitempty"`
	// Description - The reason for approval/rejection of the connection.
	Description *string `json:"description,omitempty"`
	// ActionsRequired - A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `json:"actionsRequired,omitempty"`
}

// PrivateLinkServicesForEDMUploadCreateOrUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateLinkServicesForEDMUploadCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForEDMUploadClient) (PrivateLinkServicesForEDMUploadDescription, error)
}

// PrivateLinkServicesForEDMUploadDescription the description of the service.
type PrivateLinkServicesForEDMUploadDescription struct {
	autorest.Response `json:"-"`
	// Properties - The common properties of a service.
	Properties *ServicesProperties `json:"properties,omitempty"`
	// ID - READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The resource name.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The resource type.
	Type *string `json:"type,omitempty"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// Kind - The kind of the service. Possible values include: 'Fhir', 'FhirStu3', 'FhirR4'
	Kind Kind `json:"kind,omitempty"`
	// Location - The resource location.
	Location *string `json:"location,omitempty"`
	// Tags - The resource tags.
	Tags map[string]*string `json:"tags"`
	// Etag - An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`
	// Identity - Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `json:"identity,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForEDMUploadDescription.
func (plsfeud PrivateLinkServicesForEDMUploadDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfeud.Properties != nil {
		objectMap["properties"] = plsfeud.Properties
	}
	if plsfeud.SystemData != nil {
		objectMap["systemData"] = plsfeud.SystemData
	}
	if plsfeud.Kind != "" {
		objectMap["kind"] = plsfeud.Kind
	}
	if plsfeud.Location != nil {
		objectMap["location"] = plsfeud.Location
	}
	if plsfeud.Tags != nil {
		objectMap["tags"] = plsfeud.Tags
	}
	if plsfeud.Etag != nil {
		objectMap["etag"] = plsfeud.Etag
	}
	if plsfeud.Identity != nil {
		objectMap["identity"] = plsfeud.Identity
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForEDMUploadDescriptionListResult a list of service description objects with a next
// link.
type PrivateLinkServicesForEDMUploadDescriptionListResult struct {
	autorest.Response `json:"-"`
	// NextLink - READ-ONLY; The link used to get the next page of service description objects.
	NextLink *string `json:"nextLink,omitempty"`
	// Value - A list of service description objects.
	Value *[]PrivateLinkServicesForEDMUploadDescription `json:"value,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForEDMUploadDescriptionListResult.
func (plsfeudlr PrivateLinkServicesForEDMUploadDescriptionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfeudlr.Value != nil {
		objectMap["value"] = plsfeudlr.Value
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForEDMUploadDescriptionListResultIterator provides access to a complete listing of
// PrivateLinkServicesForEDMUploadDescription values.
type PrivateLinkServicesForEDMUploadDescriptionListResultIterator struct {
	i    int
	page PrivateLinkServicesForEDMUploadDescriptionListResultPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *PrivateLinkServicesForEDMUploadDescriptionListResultIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForEDMUploadDescriptionListResultIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *PrivateLinkServicesForEDMUploadDescriptionListResultIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter PrivateLinkServicesForEDMUploadDescriptionListResultIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter PrivateLinkServicesForEDMUploadDescriptionListResultIterator) Response() PrivateLinkServicesForEDMUploadDescriptionListResult {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter PrivateLinkServicesForEDMUploadDescriptionListResultIterator) Value() PrivateLinkServicesForEDMUploadDescription {
	if !iter.page.NotDone() {
		return PrivateLinkServicesForEDMUploadDescription{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the PrivateLinkServicesForEDMUploadDescriptionListResultIterator type.
func NewPrivateLinkServicesForEDMUploadDescriptionListResultIterator(page PrivateLinkServicesForEDMUploadDescriptionListResultPage) PrivateLinkServicesForEDMUploadDescriptionListResultIterator {
	return PrivateLinkServicesForEDMUploadDescriptionListResultIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (plsfeudlr PrivateLinkServicesForEDMUploadDescriptionListResult) IsEmpty() bool {
	return plsfeudlr.Value == nil || len(*plsfeudlr.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (plsfeudlr PrivateLinkServicesForEDMUploadDescriptionListResult) hasNextLink() bool {
	return plsfeudlr.NextLink != nil && len(*plsfeudlr.NextLink) != 0
}

// privateLinkServicesForEDMUploadDescriptionListResultPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (plsfeudlr PrivateLinkServicesForEDMUploadDescriptionListResult) privateLinkServicesForEDMUploadDescriptionListResultPreparer(ctx context.Context) (*http.Request, error) {
	if !plsfeudlr.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(plsfeudlr.NextLink)))
}

// PrivateLinkServicesForEDMUploadDescriptionListResultPage contains a page of
// PrivateLinkServicesForEDMUploadDescription values.
type PrivateLinkServicesForEDMUploadDescriptionListResultPage struct {
	fn        func(context.Context, PrivateLinkServicesForEDMUploadDescriptionListResult) (PrivateLinkServicesForEDMUploadDescriptionListResult, error)
	plsfeudlr PrivateLinkServicesForEDMUploadDescriptionListResult
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *PrivateLinkServicesForEDMUploadDescriptionListResultPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForEDMUploadDescriptionListResultPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.plsfeudlr)
		if err != nil {
			return err
		}
		page.plsfeudlr = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *PrivateLinkServicesForEDMUploadDescriptionListResultPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page PrivateLinkServicesForEDMUploadDescriptionListResultPage) NotDone() bool {
	return !page.plsfeudlr.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page PrivateLinkServicesForEDMUploadDescriptionListResultPage) Response() PrivateLinkServicesForEDMUploadDescriptionListResult {
	return page.plsfeudlr
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page PrivateLinkServicesForEDMUploadDescriptionListResultPage) Values() []PrivateLinkServicesForEDMUploadDescription {
	if page.plsfeudlr.IsEmpty() {
		return nil
	}
	return *page.plsfeudlr.Value
}

// Creates a new instance of the PrivateLinkServicesForEDMUploadDescriptionListResultPage type.
func NewPrivateLinkServicesForEDMUploadDescriptionListResultPage(cur PrivateLinkServicesForEDMUploadDescriptionListResult, getNextPage func(context.Context, PrivateLinkServicesForEDMUploadDescriptionListResult) (PrivateLinkServicesForEDMUploadDescriptionListResult, error)) PrivateLinkServicesForEDMUploadDescriptionListResultPage {
	return PrivateLinkServicesForEDMUploadDescriptionListResultPage{
		fn:        getNextPage,
		plsfeudlr: cur,
	}
}

// PrivateLinkServicesForEDMUploadUpdateFuture an abstraction for monitoring and retrieving the results of
// a long-running operation.
type PrivateLinkServicesForEDMUploadUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForEDMUploadClient) (PrivateLinkServicesForEDMUploadDescription, error)
}

// PrivateLinkServicesForM365ComplianceCenterCreateOrUpdateFuture an abstraction for monitoring and
// retrieving the results of a long-running operation.
type PrivateLinkServicesForM365ComplianceCenterCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForM365ComplianceCenterClient) (PrivateLinkServicesForM365ComplianceCenterDescription, error)
}

// PrivateLinkServicesForM365ComplianceCenterDeleteFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateLinkServicesForM365ComplianceCenterDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForM365ComplianceCenterClient) (autorest.Response, error)
}

// PrivateLinkServicesForM365ComplianceCenterDescription the description of the service.
type PrivateLinkServicesForM365ComplianceCenterDescription struct {
	autorest.Response `json:"-"`
	// Properties - The common properties of a service.
	Properties *ServicesProperties `json:"properties,omitempty"`
	// ID - READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The resource name.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The resource type.
	Type *string `json:"type,omitempty"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// Kind - The kind of the service. Possible values include: 'Fhir', 'FhirStu3', 'FhirR4'
	Kind Kind `json:"kind,omitempty"`
	// Location - The resource location.
	Location *string `json:"location,omitempty"`
	// Tags - The resource tags.
	Tags map[string]*string `json:"tags"`
	// Etag - An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`
	// Identity - Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `json:"identity,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForM365ComplianceCenterDescription.
func (plsfmccd PrivateLinkServicesForM365ComplianceCenterDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfmccd.Properties != nil {
		objectMap["properties"] = plsfmccd.Properties
	}
	if plsfmccd.SystemData != nil {
		objectMap["systemData"] = plsfmccd.SystemData
	}
	if plsfmccd.Kind != "" {
		objectMap["kind"] = plsfmccd.Kind
	}
	if plsfmccd.Location != nil {
		objectMap["location"] = plsfmccd.Location
	}
	if plsfmccd.Tags != nil {
		objectMap["tags"] = plsfmccd.Tags
	}
	if plsfmccd.Etag != nil {
		objectMap["etag"] = plsfmccd.Etag
	}
	if plsfmccd.Identity != nil {
		objectMap["identity"] = plsfmccd.Identity
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForM365ComplianceCenterDescriptionListResult a list of service description objects
// with a next link.
type PrivateLinkServicesForM365ComplianceCenterDescriptionListResult struct {
	autorest.Response `json:"-"`
	// NextLink - READ-ONLY; The link used to get the next page of service description objects.
	NextLink *string `json:"nextLink,omitempty"`
	// Value - A list of service description objects.
	Value *[]PrivateLinkServicesForM365ComplianceCenterDescription `json:"value,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForM365ComplianceCenterDescriptionListResult.
func (plsfmccdlr PrivateLinkServicesForM365ComplianceCenterDescriptionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfmccdlr.Value != nil {
		objectMap["value"] = plsfmccdlr.Value
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator provides access to a complete
// listing of PrivateLinkServicesForM365ComplianceCenterDescription values.
type PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator struct {
	i    int
	page PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator) Response() PrivateLinkServicesForM365ComplianceCenterDescriptionListResult {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator) Value() PrivateLinkServicesForM365ComplianceCenterDescription {
	if !iter.page.NotDone() {
		return PrivateLinkServicesForM365ComplianceCenterDescription{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator type.
func NewPrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator(page PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage) PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator {
	return PrivateLinkServicesForM365ComplianceCenterDescriptionListResultIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (plsfmccdlr PrivateLinkServicesForM365ComplianceCenterDescriptionListResult) IsEmpty() bool {
	return plsfmccdlr.Value == nil || len(*plsfmccdlr.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (plsfmccdlr PrivateLinkServicesForM365ComplianceCenterDescriptionListResult) hasNextLink() bool {
	return plsfmccdlr.NextLink != nil && len(*plsfmccdlr.NextLink) != 0
}

// privateLinkServicesForM365ComplianceCenterDescriptionListResultPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (plsfmccdlr PrivateLinkServicesForM365ComplianceCenterDescriptionListResult) privateLinkServicesForM365ComplianceCenterDescriptionListResultPreparer(ctx context.Context) (*http.Request, error) {
	if !plsfmccdlr.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(plsfmccdlr.NextLink)))
}

// PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage contains a page of
// PrivateLinkServicesForM365ComplianceCenterDescription values.
type PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage struct {
	fn         func(context.Context, PrivateLinkServicesForM365ComplianceCenterDescriptionListResult) (PrivateLinkServicesForM365ComplianceCenterDescriptionListResult, error)
	plsfmccdlr PrivateLinkServicesForM365ComplianceCenterDescriptionListResult
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.plsfmccdlr)
		if err != nil {
			return err
		}
		page.plsfmccdlr = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage) NotDone() bool {
	return !page.plsfmccdlr.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage) Response() PrivateLinkServicesForM365ComplianceCenterDescriptionListResult {
	return page.plsfmccdlr
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage) Values() []PrivateLinkServicesForM365ComplianceCenterDescription {
	if page.plsfmccdlr.IsEmpty() {
		return nil
	}
	return *page.plsfmccdlr.Value
}

// Creates a new instance of the PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage type.
func NewPrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage(cur PrivateLinkServicesForM365ComplianceCenterDescriptionListResult, getNextPage func(context.Context, PrivateLinkServicesForM365ComplianceCenterDescriptionListResult) (PrivateLinkServicesForM365ComplianceCenterDescriptionListResult, error)) PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage {
	return PrivateLinkServicesForM365ComplianceCenterDescriptionListResultPage{
		fn:         getNextPage,
		plsfmccdlr: cur,
	}
}

// PrivateLinkServicesForM365ComplianceCenterUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateLinkServicesForM365ComplianceCenterUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForM365ComplianceCenterClient) (PrivateLinkServicesForM365ComplianceCenterDescription, error)
}

// PrivateLinkServicesForM365SecurityCenterCreateOrUpdateFuture an abstraction for monitoring and
// retrieving the results of a long-running operation.
type PrivateLinkServicesForM365SecurityCenterCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForM365SecurityCenterClient) (PrivateLinkServicesForM365SecurityCenterDescription, error)
}

// PrivateLinkServicesForM365SecurityCenterDeleteFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateLinkServicesForM365SecurityCenterDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForM365SecurityCenterClient) (autorest.Response, error)
}

// PrivateLinkServicesForM365SecurityCenterDescription the description of the service.
type PrivateLinkServicesForM365SecurityCenterDescription struct {
	autorest.Response `json:"-"`
	// Properties - The common properties of a service.
	Properties *ServicesProperties `json:"properties,omitempty"`
	// ID - READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The resource name.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The resource type.
	Type *string `json:"type,omitempty"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// Kind - The kind of the service. Possible values include: 'Fhir', 'FhirStu3', 'FhirR4'
	Kind Kind `json:"kind,omitempty"`
	// Location - The resource location.
	Location *string `json:"location,omitempty"`
	// Tags - The resource tags.
	Tags map[string]*string `json:"tags"`
	// Etag - An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`
	// Identity - Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `json:"identity,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForM365SecurityCenterDescription.
func (plsfmscd PrivateLinkServicesForM365SecurityCenterDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfmscd.Properties != nil {
		objectMap["properties"] = plsfmscd.Properties
	}
	if plsfmscd.SystemData != nil {
		objectMap["systemData"] = plsfmscd.SystemData
	}
	if plsfmscd.Kind != "" {
		objectMap["kind"] = plsfmscd.Kind
	}
	if plsfmscd.Location != nil {
		objectMap["location"] = plsfmscd.Location
	}
	if plsfmscd.Tags != nil {
		objectMap["tags"] = plsfmscd.Tags
	}
	if plsfmscd.Etag != nil {
		objectMap["etag"] = plsfmscd.Etag
	}
	if plsfmscd.Identity != nil {
		objectMap["identity"] = plsfmscd.Identity
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForM365SecurityCenterDescriptionListResult a list of service description objects with
// a next link.
type PrivateLinkServicesForM365SecurityCenterDescriptionListResult struct {
	autorest.Response `json:"-"`
	// NextLink - READ-ONLY; The link used to get the next page of service description objects.
	NextLink *string `json:"nextLink,omitempty"`
	// Value - A list of service description objects.
	Value *[]PrivateLinkServicesForM365SecurityCenterDescription `json:"value,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForM365SecurityCenterDescriptionListResult.
func (plsfmscdlr PrivateLinkServicesForM365SecurityCenterDescriptionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfmscdlr.Value != nil {
		objectMap["value"] = plsfmscdlr.Value
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator provides access to a complete
// listing of PrivateLinkServicesForM365SecurityCenterDescription values.
type PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator struct {
	i    int
	page PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator) Response() PrivateLinkServicesForM365SecurityCenterDescriptionListResult {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator) Value() PrivateLinkServicesForM365SecurityCenterDescription {
	if !iter.page.NotDone() {
		return PrivateLinkServicesForM365SecurityCenterDescription{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator type.
func NewPrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator(page PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage) PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator {
	return PrivateLinkServicesForM365SecurityCenterDescriptionListResultIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (plsfmscdlr PrivateLinkServicesForM365SecurityCenterDescriptionListResult) IsEmpty() bool {
	return plsfmscdlr.Value == nil || len(*plsfmscdlr.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (plsfmscdlr PrivateLinkServicesForM365SecurityCenterDescriptionListResult) hasNextLink() bool {
	return plsfmscdlr.NextLink != nil && len(*plsfmscdlr.NextLink) != 0
}

// privateLinkServicesForM365SecurityCenterDescriptionListResultPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (plsfmscdlr PrivateLinkServicesForM365SecurityCenterDescriptionListResult) privateLinkServicesForM365SecurityCenterDescriptionListResultPreparer(ctx context.Context) (*http.Request, error) {
	if !plsfmscdlr.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(plsfmscdlr.NextLink)))
}

// PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage contains a page of
// PrivateLinkServicesForM365SecurityCenterDescription values.
type PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage struct {
	fn         func(context.Context, PrivateLinkServicesForM365SecurityCenterDescriptionListResult) (PrivateLinkServicesForM365SecurityCenterDescriptionListResult, error)
	plsfmscdlr PrivateLinkServicesForM365SecurityCenterDescriptionListResult
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.plsfmscdlr)
		if err != nil {
			return err
		}
		page.plsfmscdlr = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage) NotDone() bool {
	return !page.plsfmscdlr.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage) Response() PrivateLinkServicesForM365SecurityCenterDescriptionListResult {
	return page.plsfmscdlr
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage) Values() []PrivateLinkServicesForM365SecurityCenterDescription {
	if page.plsfmscdlr.IsEmpty() {
		return nil
	}
	return *page.plsfmscdlr.Value
}

// Creates a new instance of the PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage type.
func NewPrivateLinkServicesForM365SecurityCenterDescriptionListResultPage(cur PrivateLinkServicesForM365SecurityCenterDescriptionListResult, getNextPage func(context.Context, PrivateLinkServicesForM365SecurityCenterDescriptionListResult) (PrivateLinkServicesForM365SecurityCenterDescriptionListResult, error)) PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage {
	return PrivateLinkServicesForM365SecurityCenterDescriptionListResultPage{
		fn:         getNextPage,
		plsfmscdlr: cur,
	}
}

// PrivateLinkServicesForM365SecurityCenterUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateLinkServicesForM365SecurityCenterUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForM365SecurityCenterClient) (PrivateLinkServicesForM365SecurityCenterDescription, error)
}

// PrivateLinkServicesForO365ManagementActivityAPICreateOrUpdateFuture an abstraction for monitoring and
// retrieving the results of a long-running operation.
type PrivateLinkServicesForO365ManagementActivityAPICreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForO365ManagementActivityAPIClient) (PrivateLinkServicesForO365ManagementActivityAPIDescription, error)
}

// PrivateLinkServicesForO365ManagementActivityAPIDeleteFuture an abstraction for monitoring and retrieving
// the results of a long-running operation.
type PrivateLinkServicesForO365ManagementActivityAPIDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForO365ManagementActivityAPIClient) (autorest.Response, error)
}

// PrivateLinkServicesForO365ManagementActivityAPIDescription the description of the service.
type PrivateLinkServicesForO365ManagementActivityAPIDescription struct {
	autorest.Response `json:"-"`
	// Properties - The common properties of a service.
	Properties *ServicesProperties `json:"properties,omitempty"`
	// ID - READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The resource name.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The resource type.
	Type *string `json:"type,omitempty"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// Kind - The kind of the service. Possible values include: 'Fhir', 'FhirStu3', 'FhirR4'
	Kind Kind `json:"kind,omitempty"`
	// Location - The resource location.
	Location *string `json:"location,omitempty"`
	// Tags - The resource tags.
	Tags map[string]*string `json:"tags"`
	// Etag - An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`
	// Identity - Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `json:"identity,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForO365ManagementActivityAPIDescription.
func (plsfomaad PrivateLinkServicesForO365ManagementActivityAPIDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfomaad.Properties != nil {
		objectMap["properties"] = plsfomaad.Properties
	}
	if plsfomaad.SystemData != nil {
		objectMap["systemData"] = plsfomaad.SystemData
	}
	if plsfomaad.Kind != "" {
		objectMap["kind"] = plsfomaad.Kind
	}
	if plsfomaad.Location != nil {
		objectMap["location"] = plsfomaad.Location
	}
	if plsfomaad.Tags != nil {
		objectMap["tags"] = plsfomaad.Tags
	}
	if plsfomaad.Etag != nil {
		objectMap["etag"] = plsfomaad.Etag
	}
	if plsfomaad.Identity != nil {
		objectMap["identity"] = plsfomaad.Identity
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult a list of service description
// objects with a next link.
type PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult struct {
	autorest.Response `json:"-"`
	// NextLink - READ-ONLY; The link used to get the next page of service description objects.
	NextLink *string `json:"nextLink,omitempty"`
	// Value - A list of service description objects.
	Value *[]PrivateLinkServicesForO365ManagementActivityAPIDescription `json:"value,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult.
func (plsfomaadlr PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfomaadlr.Value != nil {
		objectMap["value"] = plsfomaadlr.Value
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator provides access to a
// complete listing of PrivateLinkServicesForO365ManagementActivityAPIDescription values.
type PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator struct {
	i    int
	page PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator) Response() PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator) Value() PrivateLinkServicesForO365ManagementActivityAPIDescription {
	if !iter.page.NotDone() {
		return PrivateLinkServicesForO365ManagementActivityAPIDescription{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator type.
func NewPrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator(page PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage) PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator {
	return PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (plsfomaadlr PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult) IsEmpty() bool {
	return plsfomaadlr.Value == nil || len(*plsfomaadlr.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (plsfomaadlr PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult) hasNextLink() bool {
	return plsfomaadlr.NextLink != nil && len(*plsfomaadlr.NextLink) != 0
}

// privateLinkServicesForO365ManagementActivityAPIDescriptionListResultPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (plsfomaadlr PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult) privateLinkServicesForO365ManagementActivityAPIDescriptionListResultPreparer(ctx context.Context) (*http.Request, error) {
	if !plsfomaadlr.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(plsfomaadlr.NextLink)))
}

// PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage contains a page of
// PrivateLinkServicesForO365ManagementActivityAPIDescription values.
type PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage struct {
	fn          func(context.Context, PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult) (PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult, error)
	plsfomaadlr PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.plsfomaadlr)
		if err != nil {
			return err
		}
		page.plsfomaadlr = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage) NotDone() bool {
	return !page.plsfomaadlr.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage) Response() PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult {
	return page.plsfomaadlr
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage) Values() []PrivateLinkServicesForO365ManagementActivityAPIDescription {
	if page.plsfomaadlr.IsEmpty() {
		return nil
	}
	return *page.plsfomaadlr.Value
}

// Creates a new instance of the PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage type.
func NewPrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage(cur PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult, getNextPage func(context.Context, PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult) (PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult, error)) PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage {
	return PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResultPage{
		fn:          getNextPage,
		plsfomaadlr: cur,
	}
}

// PrivateLinkServicesForO365ManagementActivityAPIUpdateFuture an abstraction for monitoring and retrieving
// the results of a long-running operation.
type PrivateLinkServicesForO365ManagementActivityAPIUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForO365ManagementActivityAPIClient) (PrivateLinkServicesForO365ManagementActivityAPIDescription, error)
}

// PrivateLinkServicesForSCCPowershellCreateOrUpdateFuture an abstraction for monitoring and retrieving the
// results of a long-running operation.
type PrivateLinkServicesForSCCPowershellCreateOrUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForSCCPowershellClient) (PrivateLinkServicesForSCCPowershellDescription, error)
}

// PrivateLinkServicesForSCCPowershellDeleteFuture an abstraction for monitoring and retrieving the results
// of a long-running operation.
type PrivateLinkServicesForSCCPowershellDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForSCCPowershellClient) (autorest.Response, error)
}

// PrivateLinkServicesForSCCPowershellDescription the description of the service.
type PrivateLinkServicesForSCCPowershellDescription struct {
	autorest.Response `json:"-"`
	// Properties - The common properties of a service.
	Properties *ServicesProperties `json:"properties,omitempty"`
	// ID - READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The resource name.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The resource type.
	Type *string `json:"type,omitempty"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// Kind - The kind of the service. Possible values include: 'Fhir', 'FhirStu3', 'FhirR4'
	Kind Kind `json:"kind,omitempty"`
	// Location - The resource location.
	Location *string `json:"location,omitempty"`
	// Tags - The resource tags.
	Tags map[string]*string `json:"tags"`
	// Etag - An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`
	// Identity - Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `json:"identity,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForSCCPowershellDescription.
func (plsfspd PrivateLinkServicesForSCCPowershellDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfspd.Properties != nil {
		objectMap["properties"] = plsfspd.Properties
	}
	if plsfspd.SystemData != nil {
		objectMap["systemData"] = plsfspd.SystemData
	}
	if plsfspd.Kind != "" {
		objectMap["kind"] = plsfspd.Kind
	}
	if plsfspd.Location != nil {
		objectMap["location"] = plsfspd.Location
	}
	if plsfspd.Tags != nil {
		objectMap["tags"] = plsfspd.Tags
	}
	if plsfspd.Etag != nil {
		objectMap["etag"] = plsfspd.Etag
	}
	if plsfspd.Identity != nil {
		objectMap["identity"] = plsfspd.Identity
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForSCCPowershellDescriptionListResult a list of service description objects with a
// next link.
type PrivateLinkServicesForSCCPowershellDescriptionListResult struct {
	autorest.Response `json:"-"`
	// NextLink - READ-ONLY; The link used to get the next page of service description objects.
	NextLink *string `json:"nextLink,omitempty"`
	// Value - A list of service description objects.
	Value *[]PrivateLinkServicesForSCCPowershellDescription `json:"value,omitempty"`
}

// MarshalJSON is the custom marshaler for PrivateLinkServicesForSCCPowershellDescriptionListResult.
func (plsfspdlr PrivateLinkServicesForSCCPowershellDescriptionListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if plsfspdlr.Value != nil {
		objectMap["value"] = plsfspdlr.Value
	}
	return json.Marshal(objectMap)
}

// PrivateLinkServicesForSCCPowershellDescriptionListResultIterator provides access to a complete listing
// of PrivateLinkServicesForSCCPowershellDescription values.
type PrivateLinkServicesForSCCPowershellDescriptionListResultIterator struct {
	i    int
	page PrivateLinkServicesForSCCPowershellDescriptionListResultPage
}

// NextWithContext advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
func (iter *PrivateLinkServicesForSCCPowershellDescriptionListResultIterator) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForSCCPowershellDescriptionListResultIterator.NextWithContext")
		defer func() {
			sc := -1
			if iter.Response().Response.Response != nil {
				sc = iter.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	iter.i++
	if iter.i < len(iter.page.Values()) {
		return nil
	}
	err = iter.page.NextWithContext(ctx)
	if err != nil {
		iter.i--
		return err
	}
	iter.i = 0
	return nil
}

// Next advances to the next value.  If there was an error making
// the request the iterator does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (iter *PrivateLinkServicesForSCCPowershellDescriptionListResultIterator) Next() error {
	return iter.NextWithContext(context.Background())
}

// NotDone returns true if the enumeration should be started or is not yet complete.
func (iter PrivateLinkServicesForSCCPowershellDescriptionListResultIterator) NotDone() bool {
	return iter.page.NotDone() && iter.i < len(iter.page.Values())
}

// Response returns the raw server response from the last page request.
func (iter PrivateLinkServicesForSCCPowershellDescriptionListResultIterator) Response() PrivateLinkServicesForSCCPowershellDescriptionListResult {
	return iter.page.Response()
}

// Value returns the current value or a zero-initialized value if the
// iterator has advanced beyond the end of the collection.
func (iter PrivateLinkServicesForSCCPowershellDescriptionListResultIterator) Value() PrivateLinkServicesForSCCPowershellDescription {
	if !iter.page.NotDone() {
		return PrivateLinkServicesForSCCPowershellDescription{}
	}
	return iter.page.Values()[iter.i]
}

// Creates a new instance of the PrivateLinkServicesForSCCPowershellDescriptionListResultIterator type.
func NewPrivateLinkServicesForSCCPowershellDescriptionListResultIterator(page PrivateLinkServicesForSCCPowershellDescriptionListResultPage) PrivateLinkServicesForSCCPowershellDescriptionListResultIterator {
	return PrivateLinkServicesForSCCPowershellDescriptionListResultIterator{page: page}
}

// IsEmpty returns true if the ListResult contains no values.
func (plsfspdlr PrivateLinkServicesForSCCPowershellDescriptionListResult) IsEmpty() bool {
	return plsfspdlr.Value == nil || len(*plsfspdlr.Value) == 0
}

// hasNextLink returns true if the NextLink is not empty.
func (plsfspdlr PrivateLinkServicesForSCCPowershellDescriptionListResult) hasNextLink() bool {
	return plsfspdlr.NextLink != nil && len(*plsfspdlr.NextLink) != 0
}

// privateLinkServicesForSCCPowershellDescriptionListResultPreparer prepares a request to retrieve the next set of results.
// It returns nil if no more results exist.
func (plsfspdlr PrivateLinkServicesForSCCPowershellDescriptionListResult) privateLinkServicesForSCCPowershellDescriptionListResultPreparer(ctx context.Context) (*http.Request, error) {
	if !plsfspdlr.hasNextLink() {
		return nil, nil
	}
	return autorest.Prepare((&http.Request{}).WithContext(ctx),
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(plsfspdlr.NextLink)))
}

// PrivateLinkServicesForSCCPowershellDescriptionListResultPage contains a page of
// PrivateLinkServicesForSCCPowershellDescription values.
type PrivateLinkServicesForSCCPowershellDescriptionListResultPage struct {
	fn        func(context.Context, PrivateLinkServicesForSCCPowershellDescriptionListResult) (PrivateLinkServicesForSCCPowershellDescriptionListResult, error)
	plsfspdlr PrivateLinkServicesForSCCPowershellDescriptionListResult
}

// NextWithContext advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
func (page *PrivateLinkServicesForSCCPowershellDescriptionListResultPage) NextWithContext(ctx context.Context) (err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+"/PrivateLinkServicesForSCCPowershellDescriptionListResultPage.NextWithContext")
		defer func() {
			sc := -1
			if page.Response().Response.Response != nil {
				sc = page.Response().Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	for {
		next, err := page.fn(ctx, page.plsfspdlr)
		if err != nil {
			return err
		}
		page.plsfspdlr = next
		if !next.hasNextLink() || !next.IsEmpty() {
			break
		}
	}
	return nil
}

// Next advances to the next page of values.  If there was an error making
// the request the page does not advance and the error is returned.
// Deprecated: Use NextWithContext() instead.
func (page *PrivateLinkServicesForSCCPowershellDescriptionListResultPage) Next() error {
	return page.NextWithContext(context.Background())
}

// NotDone returns true if the page enumeration should be started or is not yet complete.
func (page PrivateLinkServicesForSCCPowershellDescriptionListResultPage) NotDone() bool {
	return !page.plsfspdlr.IsEmpty()
}

// Response returns the raw server response from the last page request.
func (page PrivateLinkServicesForSCCPowershellDescriptionListResultPage) Response() PrivateLinkServicesForSCCPowershellDescriptionListResult {
	return page.plsfspdlr
}

// Values returns the slice of values for the current page or nil if there are no values.
func (page PrivateLinkServicesForSCCPowershellDescriptionListResultPage) Values() []PrivateLinkServicesForSCCPowershellDescription {
	if page.plsfspdlr.IsEmpty() {
		return nil
	}
	return *page.plsfspdlr.Value
}

// Creates a new instance of the PrivateLinkServicesForSCCPowershellDescriptionListResultPage type.
func NewPrivateLinkServicesForSCCPowershellDescriptionListResultPage(cur PrivateLinkServicesForSCCPowershellDescriptionListResult, getNextPage func(context.Context, PrivateLinkServicesForSCCPowershellDescriptionListResult) (PrivateLinkServicesForSCCPowershellDescriptionListResult, error)) PrivateLinkServicesForSCCPowershellDescriptionListResultPage {
	return PrivateLinkServicesForSCCPowershellDescriptionListResultPage{
		fn:        getNextPage,
		plsfspdlr: cur,
	}
}

// PrivateLinkServicesForSCCPowershellUpdateFuture an abstraction for monitoring and retrieving the results
// of a long-running operation.
type PrivateLinkServicesForSCCPowershellUpdateFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(PrivateLinkServicesForSCCPowershellClient) (PrivateLinkServicesForSCCPowershellDescription, error)
}

// ProxyResource the resource model definition for a Azure Resource Manager proxy resource. It will not
// have tags and a location
type ProxyResource struct {
	// ID - READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

// Resource common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// ID - READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

// ServiceAccessPolicyEntry an access policy entry.
type ServiceAccessPolicyEntry struct {
	// ObjectID - An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
	ObjectID *string `json:"objectId,omitempty"`
}

// ServiceAuthenticationConfigurationInfo authentication configuration information
type ServiceAuthenticationConfigurationInfo struct {
	// Authority - The authority url for the service
	Authority *string `json:"authority,omitempty"`
	// Audience - The audience url for the service
	Audience *string `json:"audience,omitempty"`
	// SmartProxyEnabled - If the SMART on FHIR proxy is enabled
	SmartProxyEnabled *bool `json:"smartProxyEnabled,omitempty"`
}

// ServiceCorsConfigurationInfo the settings for the CORS configuration of the service instance.
type ServiceCorsConfigurationInfo struct {
	// Origins - The origins to be allowed via CORS.
	Origins *[]string `json:"origins,omitempty"`
	// Headers - The headers to be allowed via CORS.
	Headers *[]string `json:"headers,omitempty"`
	// Methods - The methods to be allowed via CORS.
	Methods *[]string `json:"methods,omitempty"`
	// MaxAge - The max age to be allowed via CORS.
	MaxAge *int64 `json:"maxAge,omitempty"`
	// AllowCredentials - If credentials are allowed via CORS.
	AllowCredentials *bool `json:"allowCredentials,omitempty"`
}

// ServiceCosmosDbConfigurationInfo the settings for the Cosmos DB database backing the service.
type ServiceCosmosDbConfigurationInfo struct {
	// OfferThroughput - The provisioned throughput for the backing database.
	OfferThroughput *int64 `json:"offerThroughput,omitempty"`
	// KeyVaultKeyURI - The URI of the customer-managed key for the backing database.
	KeyVaultKeyURI *string `json:"keyVaultKeyUri,omitempty"`
}

// ServiceExportConfigurationInfo export operation configuration information
type ServiceExportConfigurationInfo struct {
	// StorageAccountName - The name of the default export storage account.
	StorageAccountName *string `json:"storageAccountName,omitempty"`
}

// ServicesDeleteFuture an abstraction for monitoring and retrieving the results of a long-running
// operation.
type ServicesDeleteFuture struct {
	azure.FutureAPI
	// Result returns the result of the asynchronous operation.
	// If the operation has not completed it will return an error.
	Result func(ServicesClient) (autorest.Response, error)
}

// ServicesPatchDescription the description of the service.
type ServicesPatchDescription struct {
	// Tags - Instance tags
	Tags map[string]*string `json:"tags"`
	// ServicesPropertiesUpdateParameters - The properties for updating a service instance.
	*ServicesPropertiesUpdateParameters `json:"properties,omitempty"`
}

// MarshalJSON is the custom marshaler for ServicesPatchDescription.
func (spd ServicesPatchDescription) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if spd.Tags != nil {
		objectMap["tags"] = spd.Tags
	}
	if spd.ServicesPropertiesUpdateParameters != nil {
		objectMap["properties"] = spd.ServicesPropertiesUpdateParameters
	}
	return json.Marshal(objectMap)
}

// UnmarshalJSON is the custom unmarshaler for ServicesPatchDescription struct.
func (spd *ServicesPatchDescription) UnmarshalJSON(body []byte) error {
	var m map[string]*json.RawMessage
	err := json.Unmarshal(body, &m)
	if err != nil {
		return err
	}
	for k, v := range m {
		switch k {
		case "tags":
			if v != nil {
				var tags map[string]*string
				err = json.Unmarshal(*v, &tags)
				if err != nil {
					return err
				}
				spd.Tags = tags
			}
		case "properties":
			if v != nil {
				var servicesPropertiesUpdateParameters ServicesPropertiesUpdateParameters
				err = json.Unmarshal(*v, &servicesPropertiesUpdateParameters)
				if err != nil {
					return err
				}
				spd.ServicesPropertiesUpdateParameters = &servicesPropertiesUpdateParameters
			}
		}
	}

	return nil
}

// ServicesProperties the properties of a service instance.
type ServicesProperties struct {
	// ProvisioningState - READ-ONLY; The provisioning state. Possible values include: 'ProvisioningStateDeleting', 'ProvisioningStateSucceeded', 'ProvisioningStateCreating', 'ProvisioningStateAccepted', 'ProvisioningStateVerifying', 'ProvisioningStateUpdating', 'ProvisioningStateFailed', 'ProvisioningStateCanceled', 'ProvisioningStateDeprovisioned'
	ProvisioningState ProvisioningState `json:"provisioningState,omitempty"`
	// AccessPolicies - The access policies of the service instance.
	AccessPolicies *[]ServiceAccessPolicyEntry `json:"accessPolicies,omitempty"`
	// CosmosDbConfiguration - The settings for the Cosmos DB database backing the service.
	CosmosDbConfiguration *ServiceCosmosDbConfigurationInfo `json:"cosmosDbConfiguration,omitempty"`
	// AuthenticationConfiguration - The authentication configuration for the service instance.
	AuthenticationConfiguration *ServiceAuthenticationConfigurationInfo `json:"authenticationConfiguration,omitempty"`
	// CorsConfiguration - The settings for the CORS configuration of the service instance.
	CorsConfiguration *ServiceCorsConfigurationInfo `json:"corsConfiguration,omitempty"`
	// ExportConfiguration - The settings for the export operation of the service instance.
	ExportConfiguration *ServiceExportConfigurationInfo `json:"exportConfiguration,omitempty"`
	// PrivateEndpointConnections - The list of private endpoint connections that are set up for this resource.
	PrivateEndpointConnections *[]PrivateEndpointConnection `json:"privateEndpointConnections,omitempty"`
	// PublicNetworkAccess - Control permission for data plane traffic coming from public networks while private endpoint is enabled. Possible values include: 'Enabled', 'Disabled'
	PublicNetworkAccess PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`
}

// MarshalJSON is the custom marshaler for ServicesProperties.
func (sp ServicesProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if sp.AccessPolicies != nil {
		objectMap["accessPolicies"] = sp.AccessPolicies
	}
	if sp.CosmosDbConfiguration != nil {
		objectMap["cosmosDbConfiguration"] = sp.CosmosDbConfiguration
	}
	if sp.AuthenticationConfiguration != nil {
		objectMap["authenticationConfiguration"] = sp.AuthenticationConfiguration
	}
	if sp.CorsConfiguration != nil {
		objectMap["corsConfiguration"] = sp.CorsConfiguration
	}
	if sp.ExportConfiguration != nil {
		objectMap["exportConfiguration"] = sp.ExportConfiguration
	}
	if sp.PrivateEndpointConnections != nil {
		objectMap["privateEndpointConnections"] = sp.PrivateEndpointConnections
	}
	if sp.PublicNetworkAccess != "" {
		objectMap["publicNetworkAccess"] = sp.PublicNetworkAccess
	}
	return json.Marshal(objectMap)
}

// ServicesPropertiesUpdateParameters the properties for updating a service instance.
type ServicesPropertiesUpdateParameters struct {
	// PublicNetworkAccess - Control permission for data plane traffic coming from public networks while private endpoint is enabled. Possible values include: 'Enabled', 'Disabled'
	PublicNetworkAccess PublicNetworkAccess `json:"publicNetworkAccess,omitempty"`
}

// ServicesResource the common properties of a service.
type ServicesResource struct {
	// ID - READ-ONLY; The resource identifier.
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The resource name.
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The resource type.
	Type *string `json:"type,omitempty"`
	// SystemData - Required property for system data
	SystemData *SystemData `json:"systemData,omitempty"`
	// Kind - The kind of the service. Possible values include: 'Fhir', 'FhirStu3', 'FhirR4'
	Kind Kind `json:"kind,omitempty"`
	// Location - The resource location.
	Location *string `json:"location,omitempty"`
	// Tags - The resource tags.
	Tags map[string]*string `json:"tags"`
	// Etag - An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `json:"etag,omitempty"`
	// Identity - Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `json:"identity,omitempty"`
}

// MarshalJSON is the custom marshaler for ServicesResource.
func (sr ServicesResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if sr.SystemData != nil {
		objectMap["systemData"] = sr.SystemData
	}
	if sr.Kind != "" {
		objectMap["kind"] = sr.Kind
	}
	if sr.Location != nil {
		objectMap["location"] = sr.Location
	}
	if sr.Tags != nil {
		objectMap["tags"] = sr.Tags
	}
	if sr.Etag != nil {
		objectMap["etag"] = sr.Etag
	}
	if sr.Identity != nil {
		objectMap["identity"] = sr.Identity
	}
	return json.Marshal(objectMap)
}

// ServicesResourceIdentity setting indicating whether the service has a managed identity associated with
// it.
type ServicesResourceIdentity struct {
	// PrincipalID - READ-ONLY; The principal ID of the resource identity.
	PrincipalID *string `json:"principalId,omitempty"`
	// TenantID - READ-ONLY; The tenant ID of the resource.
	TenantID *string `json:"tenantId,omitempty"`
	// Type - Type of identity being specified, currently SystemAssigned and None are allowed. Possible values include: 'SystemAssigned', 'None'
	Type ManagedServiceIdentityType `json:"type,omitempty"`
}

// MarshalJSON is the custom marshaler for ServicesResourceIdentity.
func (sr ServicesResourceIdentity) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if sr.Type != "" {
		objectMap["type"] = sr.Type
	}
	return json.Marshal(objectMap)
}

// SystemData metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// CreatedBy - The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`
	// CreatedByType - The type of identity that created the resource. Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
	CreatedByType CreatedByType `json:"createdByType,omitempty"`
	// CreatedAt - The timestamp of resource creation (UTC).
	CreatedAt *date.Time `json:"createdAt,omitempty"`
	// LastModifiedBy - The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	// LastModifiedByType - The type of identity that last modified the resource. Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
	LastModifiedByType CreatedByType `json:"lastModifiedByType,omitempty"`
	// LastModifiedAt - The timestamp of resource last modification (UTC)
	LastModifiedAt *date.Time `json:"lastModifiedAt,omitempty"`
}

// TrackedResource the resource model definition for an Azure Resource Manager tracked top level resource
// which has 'tags' and a 'location'
type TrackedResource struct {
	// Tags - Resource tags.
	Tags map[string]*string `json:"tags"`
	// Location - The geo-location where the resource lives
	Location *string `json:"location,omitempty"`
	// ID - READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty"`
	// Name - READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty"`
	// Type - READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty"`
}

// MarshalJSON is the custom marshaler for TrackedResource.
func (tr TrackedResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if tr.Tags != nil {
		objectMap["tags"] = tr.Tags
	}
	if tr.Location != nil {
		objectMap["location"] = tr.Location
	}
	return json.Marshal(objectMap)
}
