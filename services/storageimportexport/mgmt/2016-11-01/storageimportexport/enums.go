package storageimportexport

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// DriveState enumerates the values for drive state.
type DriveState string

const (
	// Completed ...
	Completed DriveState = "Completed"
	// CompletedMoreInfo ...
	CompletedMoreInfo DriveState = "CompletedMoreInfo"
	// NeverReceived ...
	NeverReceived DriveState = "NeverReceived"
	// Received ...
	Received DriveState = "Received"
	// ShippedBack ...
	ShippedBack DriveState = "ShippedBack"
	// Specified ...
	Specified DriveState = "Specified"
	// Transferring ...
	Transferring DriveState = "Transferring"
)

// PossibleDriveStateValues returns an array of possible values for the DriveState const type.
func PossibleDriveStateValues() []DriveState {
	return []DriveState{Completed, CompletedMoreInfo, NeverReceived, Received, ShippedBack, Specified, Transferring}
}

// EncryptionKekType enumerates the values for encryption kek type.
type EncryptionKekType string

const (
	// CustomerManaged ...
	CustomerManaged EncryptionKekType = "CustomerManaged"
	// MicrosoftManaged ...
	MicrosoftManaged EncryptionKekType = "MicrosoftManaged"
)

// PossibleEncryptionKekTypeValues returns an array of possible values for the EncryptionKekType const type.
func PossibleEncryptionKekTypeValues() []EncryptionKekType {
	return []EncryptionKekType{CustomerManaged, MicrosoftManaged}
}

// IdentityType enumerates the values for identity type.
type IdentityType string

const (
	// None ...
	None IdentityType = "None"
	// SystemAssigned ...
	SystemAssigned IdentityType = "SystemAssigned"
	// UserAssigned ...
	UserAssigned IdentityType = "UserAssigned"
)

// PossibleIdentityTypeValues returns an array of possible values for the IdentityType const type.
func PossibleIdentityTypeValues() []IdentityType {
	return []IdentityType{None, SystemAssigned, UserAssigned}
}
